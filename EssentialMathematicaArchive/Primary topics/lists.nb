(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    177766,       5345]*)
(*NotebookOutlinePosition[    211711,       6569]*)
(*  CellTagsIndexPosition[    211667,       6565]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["Lists", "Title",
  TextAlignment->Center,
  TextJustification->0],

Cell[TextData[{
  "from ",
  StyleBox[ButtonBox["Essential Mathematica for Students of Science",
    Active->False,
    ButtonData:>{
      URL[ 
      "http://www.physics.umd.edu/courses/CourseWare/EssentialMathematica/"], 
      None},
    Active->False,
    ButtonStyle->"Hyperlink"],
    Active->False],
  "\n\[Copyright] James J. Kelly, 1998\nLast revised: January, 2006"
}], "Author",
  Active->True,
  TextAlignment->Center,
  TextJustification->0],

Cell[CellGroupData[{

Cell["Initialization", "Section"],

Cell[BoxData[{
    \(\(ClearAll["\<Global`*\>"];\)\), "\n", 
    \(Off[General::spell, \ General::spell1]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Introduction", "Section"],

Cell[CellGroupData[{

Cell["Types of lists", "Subsection"],

Cell[TextData[{
  "Lists are the fundamental data structure in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ".  Lists can represent sets, vectors, matrices, tensors, or storage \
objects containing data of mixed type.  The elements of a list can be \
numerical, symbolic, graphical, other lists, or objects of any other type \
recognized by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ".  Several different types of data can be stored in the same list.  In \
this notebook we introduce functions that create and manipulate lists and \
some programming techniques that exploit the properties of lists."
}], "Text"],

Cell[TextData[{
  "A ",
  StyleBox["List", "InlineInput",
    FontWeight->"Bold"],
  " is an ordered set of objects separated by commas and enclosed in curly \
brackets.  There are no restrictions on the contents or structure of lists.  \
There are several functions which report the structure of lists."
}], "Text"],

Cell[TextData[{
  ButtonBox["Length",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" returns the number of elements in the first level of a list, \
where any sublists are counted just once like any other element would be \
counted.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[TextData[{
  ButtonBox["Dimensions",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" reports the structure of a list.  If the structure is uniform, a \
list of lengths is returned for each sublist, but if the structure is \
irregular the report stops at the deepest regular level.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[TextData[{
  StyleBox[ButtonBox["TensorRank",
    ButtonStyle->"RefGuideLink"],
    FontWeight->"Bold"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["expr", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " returns the tensor rank of an expression, which is interpreted as the \
depth to which an expression is represented by sublists of the same length."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Vectors, matrices, tensors", "Subsection"],

Cell["\<\
The simplest types of lists are vectors, matrices, and tensors.  A vector is \
a simple list of one or more objects.  A matrix is a list of vectors of the \
same length.  A tensor is a list of matrices with the same dimensionality.  \
Note that a matrix is a special case of a tensor of rank 2, a vector is a \
tensor of rank 1, and a scalar is tensor of rank 0.\
\>", "Text"],

Cell[BoxData[{
    \(\(aVector\  = \ {x, y, z};\)\), "\n", 
    \(\(aMatrix\  = \ {{a, b, c, d}, {e, f, g, h}\ };\)\), "\n", 
    \(\(aTensor\  = {{{a, b, c}, \ {d, e, f}}, \ {{g, h, i}, {j, k, 
              l}}\ };\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Length\  /@ \ {aVector, \ aMatrix, \ aTensor}\)], "Input"],

Cell[BoxData[
    \({3, 2, 2}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Dimensions\  /@ \ {aVector, \ aMatrix, \ aTensor}\)], "Input"],

Cell[BoxData[
    \({{3}, {2, 4}, {2, 2, 3}}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(TensorRank\  /@ \ {a, aVector, aMatrix, \ aTensor}\)], "Input"],

Cell[BoxData[
    \({0, 1, 2, 3}\)], "Output"]
}, Closed]],

Cell[TextData[{
  ButtonBox["VectorQ",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[expr]", "InlineInput"],
  StyleBox[" returns ",
    FontWeight->"Plain"],
  StyleBox["True", "InlineInput"],
  StyleBox[" if ",
    FontWeight->"Plain"],
  StyleBox["expr", "InlineInput"],
  StyleBox[" has the structure of a vector, and ",
    FontWeight->"Plain"],
  StyleBox["False", "InlineInput"],
  StyleBox[" otherwise.  Similarly, ",
    FontWeight->"Plain"],
  ButtonBox["MatrixQ",
    ButtonStyle->"RefGuideLink"],
  StyleBox[" and ",
    FontWeight->"Plain"],
  ButtonBox["TensorQ",
    ButtonStyle->"RefGuideLink"],
  StyleBox[" test whether an expression has the structure of either a matrix \
or a tensor.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
    \(VectorQ\  /@ \ {aVector, aMatrix, \ aTensor}\)], "Input"],

Cell[BoxData[
    \({True, False, False}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatrixQ\  /@ \ {aVector, aMatrix, \ aTensor}\)], "Input"],

Cell[BoxData[
    \({False, True, False}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(TensorQ\  /@ \ {aVector, aMatrix, \ aTensor}\)], "Input"],

Cell[BoxData[
    \({True, True, True}\)], "Output"]
}, Closed]],

Cell["A list with nonuniform structure is not a tensor.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(TensorQ[{{{a, b, c}, \ {d, e, f}}, \ {{g, h, i}, {j, k, l}}, 
        m\ }]\)], "Input"],

Cell[BoxData[
    \(False\)], "Output"]
}, Closed]],

Cell[TextData[{
  "A vector can be printed in ",
  StyleBox["ColumnForm", "InlineInput",
    FontWeight->"Bold"],
  " or in ",
  StyleBox["MatrixForm", "InlineInput",
    FontWeight->"Bold"],
  ", but you will need to write your own display function for more general \
tensors."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ColumnForm[aVector]\)], "Input"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {"x"},
          {"y"},
          {"z"}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      ColumnForm[ {x, y, z}],
      Editable->False]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatrixForm[aVector]\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
              {"x"},
              {"y"},
              {"z"}
              },
            RowSpacings->1,
            ColumnAlignments->{Left}],
          Column], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatrixForm[aMatrix]\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"a", "b", "c", "d"},
            {"e", "f", "g", "h"}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Closed]],

Cell[TextData[{
  "Generic arrays can be created using ",
  ButtonBox["Array",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["name,dimensions", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontWeight->"Bold"],
  "where ",
  StyleBox["name", "InlineInput",
    FontWeight->"Bold"],
  " is the label applied to each element and ",
  StyleBox["dimensions", "InlineInput",
    FontWeight->"Bold"],
  " is a list of dimensions for the array."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Array[\[Psi], {3}]\)], "Input"],

Cell[BoxData[
    \({\[Psi][1], \[Psi][2], \[Psi][3]}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Array[\[Zeta], {4, 3}]\  // MatrixForm\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {\(\[Zeta][1, 1]\), \(\[Zeta][1, 2]\), \(\[Zeta][1, 3]\)},
            {\(\[Zeta][2, 1]\), \(\[Zeta][2, 2]\), \(\[Zeta][2, 3]\)},
            {\(\[Zeta][3, 1]\), \(\[Zeta][3, 2]\), \(\[Zeta][3, 3]\)},
            {\(\[Zeta][4, 1]\), \(\[Zeta][4, 2]\), \(\[Zeta][4, 3]\)}
            },
          RowSpacings->1,
          ColumnSpacings->1,
          ColumnAlignments->{Left}], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Closed]],

Cell[TextData[{
  "Define a replacement rule which can be used to print matrix elements in \
subscripted form, ",
  StyleBox["viz",
    FontSlant->"Italic"],
  ". ",
  Cell[BoxData[
      \(TraditionalForm\`\[Zeta]\_\(i, j\)\)]],
  "."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["General lists", "Subsection"],

Cell["\<\
Lists need not have a uniform structure \[LongDash] the sublists may vary in \
length and the type of contents.  \
\>", "Text"],

Cell[BoxData[
    \(\(references\  = \ {{{"\<Author\>", "\<J.J. Kelly\>"}, {"\<Title\>", \
"\<Essential Mathematica for Students of Science\>"}, \ {"\<Date\>", 
              1998}}, \ {{"\<Author\>", \ "\<S. Wolfram\>"}, \ {"\<Title\>", \
\ "\<The Mathematica Book\>"}, \ {\ "\<Publisher\>", \ {"\<Wolfram Media\>", \
"\<Cambridge University Press\>"}}, \ \ {"\<Date\>", 
              1996}}, \ \ {{"\<Author\>", \ "\<P.T. Tam\>"}, \ {"\<Title\>", \
\ "\<A Physicist's Guide to Mathematica\>"}, \ {"\<Publisher\>", \ \
"\<Academic Press\>"}, \ \ {"\<Date\>", 1997}}\ };\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Length[references]\)], "Input"],

Cell[BoxData[
    \(3\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Dimensions[references]\)], "Input"],

Cell[BoxData[
    \({3}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(TensorRank[references]\)], "Input"],

Cell[BoxData[
    \(1\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(TableForm[references\[LeftDoubleBracket]2\[RightDoubleBracket], 
      TableAlignments \[Rule] {Left, Top}]\)], "Input"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {"\<\"Author\"\>", "\<\"S. Wolfram\"\>"},
          {"\<\"Title\"\>", "\<\"The Mathematica Book\"\>"},
          {"\<\"Publisher\"\>", GridBox[{
                {"\<\"Wolfram Media\"\>"},
                {"\<\"Cambridge University Press\"\>"}
                },
              RowSpacings->0.25,
              ColumnSpacings->1,
              RowAlignments->Baseline,
              ColumnAlignments->{Left}]},
          {"\<\"Date\"\>", "1996"}
          },
        RowSpacings->1,
        ColumnSpacings->3,
        RowAlignments->Top,
        ColumnAlignments->{Left}],
      TableForm[ {{"Author", "S. Wolfram"}, {"Title", 
        "The Mathematica Book"}, {"Publisher", {"Wolfram Media", 
        "Cambridge University Press"}}, {"Date", 1996}}, TableAlignments -> {
        Left, Top}]]], "Output"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Manipulating lists", "Section"],

Cell[CellGroupData[{

Cell["Adding, removing, or moving elements", "Subsection"],

Cell[TextData[{
  ButtonBox["Append",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list,element", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" adds an element to the end of a list while ",
    FontWeight->"Plain"],
  ButtonBox["Prepend",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list,element", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" inserts an element at the beginning.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Append[{a, b, c, d}, e]\)], "Input"],

Cell[BoxData[
    \({a, b, c, d, e}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Prepend[{a, b, c, d}, e]\)], "Input"],

Cell[BoxData[
    \({e, a, b, c, d}\)], "Output"]
}, Closed]],

Cell["\<\
Note that if the element to be inserted is itself a list, its list structure \
is retained.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Append[{a, b, c, d}, {e, f}]\)], "Input"],

Cell[BoxData[
    \({a, b, c, d, {e, f}}\)], "Output"]
}, Closed]],

Cell[TextData[{
  ButtonBox["Insert",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list,element,position", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" inserts a new element into a specified position of a list.  \
Negative positions count from the end.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Insert[{a, b, c, d}, \[Xi], 3]\)], "Input"],

Cell[BoxData[
    \({a, b, \[Xi], c, d}\)], "Output"]
}, Closed]],

Cell[TextData[{
  ButtonBox["ReplacePart",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list,element,n", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" replaces the element at position ",
    FontWeight->"Plain"],
  StyleBox["n", "InlineInput"],
  StyleBox[" with new ",
    FontWeight->"Plain"],
  StyleBox["element", "InlineInput"],
  StyleBox[".",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ReplacePart[{a, b, c, d}, \[Xi], 3]\)], "Input"],

Cell[BoxData[
    \({a, b, \[Xi], d}\)], "Output"]
}, Closed]],

Cell[TextData[{
  ButtonBox["Join",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list1,list2,", "InlineInput"],
  StyleBox["\[CenterEllipsis]", "InlineInput",
    FontSlant->"Italic"],
  StyleBox["]", "InlineInput"],
  StyleBox[" combines two or more lists into a single list.  Note that to \
include a scalar, it must be given in the form a list containing a single \
element.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Join[{a, b, c}, {d, e, f, g}, {h}]\)], "Input"],

Cell[BoxData[
    \({a, b, c, d, e, f, g, h}\)], "Output"]
}, Closed]],

Cell[TextData[{
  ButtonBox["Union",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list1,list2,", "InlineInput"],
  StyleBox["\[CenterEllipsis]", "InlineInput",
    FontSlant->"Italic"],
  StyleBox["]", "InlineInput"],
  StyleBox[" combines two or more lists into a single list, eliminating \
duplicates.  If only one argument is given, duplicated elements in it are \
dropped.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Union[{a, b, c, d}, {b, c, d}, {e, f}, {g}, {a}]\)], "Input"],

Cell[BoxData[
    \({a, b, c, d, e, f, g}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Union[{a, b, a, b, c}]\)], "Input"],

Cell[BoxData[
    \({a, b, c}\)], "Output"]
}, Closed]],

Cell[TextData[{
  StyleBox[ButtonBox["Reverse",
    ButtonStyle->"RefGuideLink"],
    FontWeight->"Bold"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["list", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " reverses the order of a list."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Reverse[{a, b, c, d}]\)], "Input"],

Cell[BoxData[
    \({d, c, b, a}\)], "Output"]
}, Closed]],

Cell[TextData[{
  StyleBox[ButtonBox["RotateLeft",
    ButtonStyle->"RefGuideLink"],
    FontWeight->"Bold"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["list,n", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " rotates ",
  StyleBox["n", "InlineInput",
    FontWeight->"Bold"],
  " elements toward the left, while ",
  StyleBox[ButtonBox["RotateRight",
    ButtonStyle->"RefGuideLink"],
    FontWeight->"Bold"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["list,n", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " rotates toward the right where the list is visualized as written upon a \
circular band.  If ",
  StyleBox["n", "InlineInput",
    FontWeight->"Bold"],
  " is omitted, it is assumed to be 1."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(RotateLeft[{a, b, c, d, e}]\)], "Input"],

Cell[BoxData[
    \({b, c, d, e, a}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(RotateLeft[{a, b, c, d, e}, 2]\)], "Input"],

Cell[BoxData[
    \({c, d, e, a, b}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(RotateRight[{a, b, c, d, e}]\)], "Input"],

Cell[BoxData[
    \({e, a, b, c, d}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(RotateRight[{a, b, c, d, e}, 2]\)], "Input"],

Cell[BoxData[
    \({d, e, a, b, c}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example: numerical second derivative using list rotation", \
"Subsubsection"],

Cell[TextData[{
  "It is usually more efficient to employ list operations to perform \
numerical or symbolic calculations by treating lists as entire objects rather \
than breaking them apart and putting them back together again like one might \
with loop calculations in Fortran or C.  For example, if one has an array of \
equally-spaced function values ",
  Cell[BoxData[
      \(TraditionalForm\`f\_i = f[x\_i]\)]],
  " at ",
  Cell[BoxData[
      \(TraditionalForm\`x\_i = x\_0 + i\ h\)]],
  " for ",
  Cell[BoxData[
      \(TraditionalForm\`{i, 1, n}\)]],
  ", the second derivative at these points can be approximated by the \
central-difference formula\n\t",
  Cell[BoxData[
      \(TraditionalForm\`f\_i\%\[DoublePrime] \[TildeTilde] \((f\_\(i - 1\) - 
              2  f\_i + f\_\(i + 1\))\)/h\^2\)]],
  "\nwhere ",
  StyleBox["h",
    FontSlant->"Italic"],
  " is the step size.  The array of second derivatives can be constructed \
using ",
  StyleBox["RotateLeft", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["RotateRight", "InlineInput",
    FontWeight->"Bold"],
  " without having to access list elements directly, as follows."
}], "Text"],

Cell[BoxData[
    \(SecondDerivative[f_List, 
        h_] := \((RotateRight[f] - 2  f + RotateLeft[f])\)/h\^2\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(SecondDerivative[Array[f, 10], h]\)], "Input"],

Cell[BoxData[
    \({\(\(-2\)\ f[1] + f[2] + f[10]\)\/h\^2, \(f[1] - 2\ f[2] + \
f[3]\)\/h\^2, \(f[2] - 2\ f[3] + f[4]\)\/h\^2, \(f[3] - 2\ f[4] + \
f[5]\)\/h\^2, \(f[4] - 2\ f[5] + f[6]\)\/h\^2, \(f[5] - 2\ f[6] + \
f[7]\)\/h\^2, \(f[6] - 2\ f[7] + f[8]\)\/h\^2, \(f[7] - 2\ f[8] + \
f[9]\)\/h\^2, \(f[8] - 2\ f[9] + f[10]\)\/h\^2, \(f[1] + f[9] - 2\ f[10]\)\/h\
\^2}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "This method works well in the interior of the array, but the end points \
are more subtle because the basic algorithm can be extended past the edges of \
the input array without making model-dependent assumptions about the behavior \
of the function at the boundaries.  Our implementation implicitly assumes ",
  StyleBox["periodic boundary",
    FontSlant->"Italic"],
  " conditions, namely ",
  Cell[BoxData[
      \(TraditionalForm\`f\_i = f\_\(n + i\)\)]],
  " for function whose period is ",
  Cell[BoxData[
      \(TraditionalForm\`n\ h\)]],
  "."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Example: eliminating duplicates from list of approximate real numbers\
\>", "Subsubsection"],

Cell[TextData[{
  StyleBox["Suppose that we want a list of distinct elements within one or \
more lists of approximate real numbers.  We can use the ",
    FontWeight->"Plain"],
  StyleBox["SameTest", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" option of ",
    FontWeight->"Plain"],
  StyleBox["Union", "InlineInput",
    FontWeight->"Bold"],
  " ",
  StyleBox["to provide a function that tests whether two elements are the \
same within some specified tolerance.  In the example below, 20000 iterations \
are made for the logistic map, the first 10000 are dropped to eliminate \
transients, and then ",
    FontWeight->"Plain"],
  StyleBox["Union", "InlineInput",
    FontWeight->"Bold"],
  " is used to determine whether there is a periodic cycle where elements \
closer than ",
  Cell[BoxData[
      \(TraditionalForm\`10\^\(-8\)\)]],
  " are considered identical.  The resulting cycle is very long, and some \
members are quite close together, because we are near the chaotic regime, but \
it is much smaller than the total number of iterations retained.  By \
experimenting with the total number of iterations and the number of initial \
iterations dropped, one is quickly convinced that a stable cycle of distinct \
points has indeed been found."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(\(cycle1 = 
        Union[Drop[NestList[3.5695  # \((1 - #)\) &, Random[], 20000], 
            10000], SameTest \[Rule] \((Abs[#2 - #1] < 
                  10\^\(-8\) &)\)];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(NumberForm[cycle1, 20]\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"{", 
        RowBox[{
          InterpretationBox["\<\"0.3428297415062176\"\>",
            .34282974150621759,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.3434832100545695\"\>",
            .3434832100545695,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.3468411251047962\"\>",
            .3468411251047962,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.3485661486960289\"\>",
            .34856614869602892,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.3658032548400155\"\>",
            .36580325484001547,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.3698742624032947\"\>",
            .36987426240329468,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.3787774920792289\"\>",
            .37877749207922889,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.380660106547398\"\>",
            .38066010654739801,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.4759988778524136\"\>",
            .47599887785241357,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.4799311548268867\"\>",
            .4799311548268867,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.4990875564702376\"\>",
            .49908755647023767,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.5081367963211245\"\>",
            .50813679632112452,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.5481976659586872\"\>",
            .54819766595868713,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.5523427489340971\"\>",
            .55234274893409707,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.5604721505318064\"\>",
            .56047215053180643,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.562063063705842\"\>",
            .56206306370584203,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.804199461391719\"\>",
            .80419946139171905,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.804931153993453\"\>",
            .80493115399345283,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.808642950596262\"\>",
            .80864295059626157,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.810518471690571\"\>",
            .81051847169057134,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.82809270829403\"\>",
            .82809270829403003,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.831933700275033\"\>",
            .83193370027503333,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.839921567205246\"\>",
            .83992156720524636,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.841538144700761\"\>",
            .84153814470076083,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.878625914672635\"\>",
            .87862591467263518,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.879321763306404\"\>",
            .87932176330640355,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.882595414665141\"\>",
            .88259541466514058,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.884082997943703\"\>",
            .88408299794370271,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.890318775731226\"\>",
            .89031877573122642,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.890937353367974\"\>",
            .89093735336797408,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.892138672491621\"\>",
            .89213867249162093,
            AutoDelete->True], ",", 
          InterpretationBox["\<\"0.89237202820137\"\>",
            .8923720282013704,
            AutoDelete->True]}], "}"}],
      (NumberForm[ #, 20]&)]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(\(cycle2 = 
        Union[Drop[NestList[3.5695  # \((1 - #)\) &, Random[], 25000], 
            20000], SameTest \[Rule] \((Abs[#2 - #1] < 
                  10\^\(-8\) &)\)];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(cycle2 \[Equal] cycle1\)}], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Length[cycle1]\)], "Input"],

Cell[BoxData[
    \(32\)], "Output"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Selecting elements by position", "Subsection"],

Cell[TextData[{
  ButtonBox["First",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" returns the first element, ",
    FontWeight->"Plain"],
  ButtonBox["Rest",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" returns everything but the first element, and ",
    FontWeight->"Plain"],
  ButtonBox["Last",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" returns the last element of a list.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
    \(First[{a, b, c, d}]\)], "Input"],

Cell[BoxData[
    \(a\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(First[{{a, b}, {c, d}, {e, f}}]\)], "Input"],

Cell[BoxData[
    \({a, b}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Rest[{a, b, c, d}]\)], "Input"],

Cell[BoxData[
    \({b, c, d}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Last[{a, b, c, d}]\)], "Input"],

Cell[BoxData[
    \(d\)], "Output"]
}, Closed]],

Cell[TextData[{
  ButtonBox["Take",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list,n", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" takes whereas ",
    FontWeight->"Plain"],
  ButtonBox["Drop",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list,n", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" removes",
    FontWeight->"Plain"],
  " ",
  StyleBox["the first ",
    FontWeight->"Plain"],
  StyleBox["n", "InlineInput"],
  StyleBox[" elements of a list.  Similarly, ",
    FontWeight->"Plain"],
  StyleBox["Take[", "InlineInput"],
  StyleBox["list,{n,m}", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" and ",
    FontWeight->"Plain"],
  StyleBox["Drop[", "InlineInput"],
  StyleBox["list,{n,m}", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" take or drop elements ",
    FontWeight->"Plain"],
  StyleBox["n", "InlineInput"],
  StyleBox[" through ",
    FontWeight->"Plain"],
  StyleBox["m", "InlineInput"],
  StyleBox[".  Negative indices count from the end.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Take[{a, b, c, d, e, f}, 3]\)], "Input"],

Cell[BoxData[
    \({a, b, c}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Take[{a, b, c, d, e, f}, \(-3\)]\)], "Input"],

Cell[BoxData[
    \({d, e, f}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Take[{a, b, c, d, e, f}, {3, 5}]\)], "Input"],

Cell[BoxData[
    \({c, d, e}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Take[{a, b, c, d, e, f}, {\(-5\), \(-3\)}]\)], "Input"],

Cell[BoxData[
    \({b, c, d}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Drop[{a, b, c, d, e, f}, 3]\)], "Input"],

Cell[BoxData[
    \({d, e, f}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Drop[{a, b, c, d, e, f}, \(-3\)]\)], "Input"],

Cell[BoxData[
    \({a, b, c}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Drop[{a, b, c, d, e, f}, {3, 5}]\)], "Input"],

Cell[BoxData[
    \({a, b, f}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Drop[{a, b, c, d, e, f}, {\(-5\), \(-3\)}]\)], "Input"],

Cell[BoxData[
    \({a, e, f}\)], "Output"]
}, Closed]],

Cell["\<\
Create a list of integers between 1 and 100.  Divide that list into two equal \
sublists and reverse the order of the second sublist.  Then add corresponding \
elements of those lists.\
\>", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Selecting elements by value or pattern", "Subsection"],

Cell[TextData[{
  "Elements satisfying some criterion can be selected using ",
  StyleBox[ButtonBox["Select",
    ButtonStyle->"RefGuideLink"],
    FontWeight->"Bold"],
  StyleBox["[list,criterion]", "InlineInput",
    FontWeight->"Bold"],
  " where ",
  StyleBox["criterion", "InlineInput",
    FontWeight->"Bold"],
  " is a logical function acting on the elements of the list one at a time.  \
The result is a list of elements for which the criterion function tests ",
  StyleBox["True", "InlineInput"],
  ", with ambiguous cases omitted.  Note that ",
  StyleBox["criterion", "InlineInput",
    FontWeight->"Bold"],
  " must be formulated as a pure function with one slot."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Select[{1, q, 2, 3, \(-3\), "\<Oscar\>"}, \ OddQ]\)], "Input"],

Cell[BoxData[
    \({1, 3, \(-3\)}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Select[{1, q, 2, 3, \(-3\), "\<Oscar\>"}, \ # > 2 &]\)], "Input"],

Cell[BoxData[
    \({3}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Select[{1, q, 2, 3, \(-3\), "\<Oscar\>"}, \ StringQ]\)], "Input"],

Cell[BoxData[
    \({"Oscar"}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Select[{1, q, 2, 3, \(-3\), "\<Oscar\>", "\<abc\>"}, \ 
      StringQ[#]\  && \ StringLength[#] > 4 &]\)], "Input"],

Cell[BoxData[
    \({"Oscar"}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Similarly, a list of elements matching a pattern is produced using ",
  StyleBox[ButtonBox["Cases",
    ButtonStyle->"RefGuideLink"],
    FontWeight->"Bold"],
  StyleBox["[list,pattern]", "InlineInput",
    FontWeight->"Bold"],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Cases[{1, q, 2, 3, \(-3\), "\<Oscar\>"}, \ _?OddQ]\)], "Input"],

Cell[BoxData[
    \({1, 3, \(-3\)}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Cases[{1, q\^2, 2, 3, \(-3\), "\<Oscar\>"}, \ x_\^n_]\)], "Input"],

Cell[BoxData[
    \({q\^2}\)], "Output"]
}, Closed]],

Cell["\<\
Note that because we do not use the parts of the part, it is not necessary to \
name them.  Thus, the preceding example can be be written as \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Cases[{1, q\^2, 2, 3, \(-3\), "\<Oscar\>"}, \ _\^_]\)], "Input"],

Cell[BoxData[
    \({q\^2}\)], "Output"]
}, Closed]],

Cell["\<\
without naming either the base or the exponent in the pattern for something \
to some power.\
\>", "Text"],

Cell[TextData[{
  "Naturally, ",
  ButtonBox["DeleteCases",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[list,pattern]", "InlineInput"],
  StyleBox[" removes elements matching a pattern",
    FontWeight->"Plain"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(DeleteCases[{1, q\^2, 2, 3, \(-3\), "\<Oscar\>"}, \ _?
        StringQ]\)], "Input"],

Cell[BoxData[
    \({1, q\^2, 2, 3, \(-3\)}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "whereas ",
  ButtonBox["Count",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[list,pattern]", "InlineInput"],
  " just returns the number of elements that match a pattern."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Count[{1, q\^2, 2, 3, \(-3\), "\<Oscar\>"}, \ _?StringQ]\)], "Input"],

Cell[BoxData[
    \(1\)], "Output"]
}, Closed]],

Cell["\<\
Produce a list of 100 random integers between 0 and 100.  Then select those \
that are even using all three of these functions (Select, Cases, \
DeleteCases).  How many are prime?  How many duplications are there?\
\>", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Creating ntuples", "Subsection"],

Cell[TextData[{
  "Often we create or read ",
  Cell[BoxData[
      \(TraditionalForm\`m\)]],
  " lists of the same length ",
  Cell[BoxData[
      \(TraditionalForm\`n\)]],
  " and want to produce a single list of ",
  StyleBox["ntuples",
    FontSlant->"Italic"],
  " consisting of ",
  Cell[BoxData[
      \(TraditionalForm\`n\)]],
  " sublists of ",
  Cell[BoxData[
      \(TraditionalForm\`m\)]],
  " elements each containing corresponding elements drawn each of the \
sublists.  For example, we might read a list of ",
  Cell[BoxData[
      \(TraditionalForm\`x\)]],
  " values, ",
  Cell[BoxData[
      \(TraditionalForm\`y\)]],
  " values, and ",
  Cell[BoxData[
      \(TraditionalForm\`z\)]],
  " values and wish to produce a list of ",
  Cell[BoxData[
      \(TraditionalForm\`{x, y, z}\)]],
  " ntuples (here triples).  This is easily accomplished using ",
  ButtonBox["Transpose",
    ButtonStyle->"RefGuideLink"],
  " to transform an ",
  Cell[BoxData[
      \(TraditionalForm\`m\[Times]n\)]],
  " list into an ",
  Cell[BoxData[
      \(TraditionalForm\`n\[Times]m\)]],
  " list, as illustrated below"
}], "Text"],

Cell[BoxData[{
    \(\(xlist = Table[x[i], {i, 10}];\)\), "\[IndentingNewLine]", 
    \(\(ylist = Table[y[i], {i, 10}];\)\), "\[IndentingNewLine]", 
    \(\(zlist = Table[z[i], {i, 10}];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(triples = 
        Transpose[{xlist, ylist, zlist}];\)\), "\[IndentingNewLine]", 
    \(ColumnForm[triples]\)}], "Input"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {\({x[1], y[1], z[1]}\)},
          {\({x[2], y[2], z[2]}\)},
          {\({x[3], y[3], z[3]}\)},
          {\({x[4], y[4], z[4]}\)},
          {\({x[5], y[5], z[5]}\)},
          {\({x[6], y[6], z[6]}\)},
          {\({x[7], y[7], z[7]}\)},
          {\({x[8], y[8], z[8]}\)},
          {\({x[9], y[9], z[9]}\)},
          {\({x[10], y[10], z[10]}\)}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      ColumnForm[ {{
        x[ 1], 
        y[ 1], 
        z[ 1]}, {
        x[ 2], 
        y[ 2], 
        z[ 2]}, {
        x[ 3], 
        y[ 3], 
        z[ 3]}, {
        x[ 4], 
        y[ 4], 
        z[ 4]}, {
        x[ 5], 
        y[ 5], 
        z[ 5]}, {
        x[ 6], 
        y[ 6], 
        z[ 6]}, {
        x[ 7], 
        y[ 7], 
        z[ 7]}, {
        x[ 8], 
        y[ 8], 
        z[ 8]}, {
        x[ 9], 
        y[ 9], 
        z[ 9]}, {
        x[ 10], 
        y[ 10], 
        z[ 10]}}],
      Editable->False]], "Output"]
}, Closed]],

Cell[TextData[{
  "Here ",
  StyleBox["Transpose", "InlineInput"],
  " takes a ",
  Cell[BoxData[
      \(TraditionalForm\`3\[Times]10\)]],
  " list as input and produces a ",
  Cell[BoxData[
      \(TraditionalForm\`10\[Times]3\)]],
  " list as output.  Notice that the input must be given as a list of \
sublists of equal length."
}], "Text"],

Cell["\<\
Conversely, if we already have an ntuple, its columns may be extracted as \
follows.\
\>", "Text"],

Cell[BoxData[
    \(\({alist, blist, clist} = Transpose[triples];\)\)], "Input"],

Cell["Below we demonstrate the success of this procedure.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(alist \[Equal] xlist\  && \ blist \[Equal] ylist\  && \ 
      clist \[Equal] zlist\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Sorting", "Subsection"],

Cell[TextData[{
  "The elements of a list can be sorted according to an ordering function \
that acts pairwise in the list until satisfied by all successive pairs using \
the function ",
  StyleBox[ButtonBox["Sort",
    ButtonStyle->"RefGuideLink"],
    FontWeight->"Bold"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["list,criterion", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  ".  If the ordering function is omitted, the internal \"canonical\" \
ordering function is applied."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sort[{3, \(-1\), 4, 99, \(-27\), 0, 2, 2}, #2 > #1 &]\)], "Input"],

Cell[BoxData[
    \({\(-27\), \(-1\), 0, 2, 2, 3, 4, 99}\)], "Output"]
}, Closed]],

Cell["\<\
However, sorting stops if ambiguous results are obtained, resulting in \
partial but incomplete ordering.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sort[{3, \(-1\), 4, 99, a, \(-27\), 0, 2, 2}, #2 > #1 &]\)], "Input"],

Cell[BoxData[
    \({\(-1\), a, 2, 0, \(-27\), 2, 3, 4, 99}\)], "Output"]
}, Closed]],

Cell["Sort a list of 10 random integers in decreasing order.", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Restructuring", "Subsection"],

Cell[TextData[{
  "Sometimes it is necessary to regroup the elements of a list into another \
list with a different structure.  A list containing sublists can be \
visualized as an inverted tree using ",
  ButtonBox["TreeForm",
    ButtonStyle->"RefGuideLink"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(TreeForm[aTensor]\)], "Input"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"List\"\>", "[", 
        RowBox[{
          InterpretationBox[GridBox[{
                {"\<\"|\"\>"},
                {
                  RowBox[{"\<\"List\"\>", "[", 
                    RowBox[{GridBox[{
                          {"\<\"|\"\>"},
                          {\("List"[a, b, c]\)}
                          },
                        GridBaseline->{Baseline, {1, 1}},
                        ColumnAlignments->{Left}], ",", GridBox[{
                          {"\<\"|\"\>"},
                          {\("List"[d, e, f]\)}
                          },
                        GridBaseline->{Baseline, {1, 1}},
                        ColumnAlignments->{Left}]}], "]"}]}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnAlignments->{Left}],
            ColumnForm[ {"|", 
              "List"[ 
                ColumnForm[ {"|", 
                  "List"[ a, b, c]}], 
                ColumnForm[ {"|", 
                  "List"[ d, e, f]}]]}],
            Editable->False], ",", 
          InterpretationBox[GridBox[{
                {"\<\"|\"\>"},
                {
                  RowBox[{"\<\"List\"\>", "[", 
                    RowBox[{GridBox[{
                          {"\<\"|\"\>"},
                          {\("List"[g, h, i]\)}
                          },
                        GridBaseline->{Baseline, {1, 1}},
                        ColumnAlignments->{Left}], ",", GridBox[{
                          {"\<\"|\"\>"},
                          {\("List"[j, k, l]\)}
                          },
                        GridBaseline->{Baseline, {1, 1}},
                        ColumnAlignments->{Left}]}], "]"}]}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnAlignments->{Left}],
            ColumnForm[ {"|", 
              "List"[ 
                ColumnForm[ {"|", 
                  "List"[ g, h, i]}], 
                ColumnForm[ {"|", 
                  "List"[ j, k, l]}]]}],
            Editable->False]}], "]"}],
      TreeForm[ {{{a, b, c}, {d, e, f}}, {{g, h, i}, {j, k, l}}}],
      Editable->False]], "Output"]
}, Closed]],

Cell[TextData[{
  "The structure of a list can be \"flattened\" to a single level using ",
  StyleBox[ButtonBox["Flatten",
    ButtonStyle->"RefGuideLink"],
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Flatten[aTensor]\)], "Input"],

Cell[BoxData[
    \({a, b, c, d, e, f, g, h, i, j, k, l}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(TreeForm[%]\)], "Input"],

Cell[BoxData[
    InterpretationBox[\("List"[a, b, c, d, e, f, g, h, i, j, k, l]\),
      TreeForm[ {a, b, c, d, e, f, g, h, i, j, k, l}],
      Editable->False]], "Output"]
}, Closed]],

Cell[TextData[{
  "Partial flattening to level ",
  StyleBox["n", "InlineInput"],
  " is obtained using ",
  StyleBox["Flatten[list,n]", "InlineInput",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Flatten[aTensor, 1]\)], "Input"],

Cell[BoxData[
    \({{a, b, c}, {d, e, f}, {g, h, i}, {j, k, l}}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(TreeForm[%]\)], "Input"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"List\"\>", "[", 
        RowBox[{
          InterpretationBox[GridBox[{
                {"\<\"|\"\>"},
                {\("List"[a, b, c]\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnAlignments->{Left}],
            ColumnForm[ {"|", 
              "List"[ a, b, c]}],
            Editable->False], ",", 
          InterpretationBox[GridBox[{
                {"\<\"|\"\>"},
                {\("List"[d, e, f]\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnAlignments->{Left}],
            ColumnForm[ {"|", 
              "List"[ d, e, f]}],
            Editable->False], ",", 
          InterpretationBox[GridBox[{
                {"\<\"|\"\>"},
                {\("List"[g, h, i]\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnAlignments->{Left}],
            ColumnForm[ {"|", 
              "List"[ g, h, i]}],
            Editable->False], ",", 
          InterpretationBox[GridBox[{
                {"\<\"|\"\>"},
                {\("List"[j, k, l]\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnAlignments->{Left}],
            ColumnForm[ {"|", 
              "List"[ j, k, l]}],
            Editable->False]}], "]"}],
      TreeForm[ {{a, b, c}, {d, e, f}, {g, h, i}, {j, k, l}}],
      Editable->False]], "Output"]
}, Closed]],

Cell[TextData[{
  ButtonBox["FlattenAt",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["list,position", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" flattens a sublist at a specified ",
    FontWeight->"Plain"],
  StyleBox["position", "InlineInput"],
  StyleBox[" of ",
    FontWeight->"Plain"],
  StyleBox["list", "InlineInput"],
  StyleBox[".  The position can be a sequence list or a list of sequence \
lists.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FlattenAt[{a, {b, c, d}, e, \ f, \ {g, h}}, 2]\)], "Input"],

Cell[BoxData[
    \({a, b, c, d, e, f, {g, h}}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The elements of a flattened list can be regrouped into sublists with ",
  StyleBox["n", "InlineInput"],
  " elements each using ",
  StyleBox[ButtonBox["Partition",
    ButtonStyle->"RefGuideLink"],
    FontWeight->"Bold"],
  StyleBox["[list,n]", "InlineInput",
    FontWeight->"Bold"],
  ".  Note that any elements left over which do not comprise a complete \
sublist are dropped."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Flatten[aTensor]\  // Partition[#, 5] &\)], "Input"],

Cell[BoxData[
    \({{a, b, c, d, e}, {f, g, h, i, j}}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Flatten[aTensor]\  // Partition[#, 2] &\)], "Input"],

Cell[BoxData[
    \({{a, b}, {c, d}, {e, f}, {g, h}, {i, j}, {k, l}}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Nest[Partition[#, 2] &, Flatten[aTensor], 2]\)], "Input"],

Cell[BoxData[
    \({{{a, b}, {c, d}}, {{e, f}, {g, h}}, {{i, j}, {k, l}}}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "If ",
  StyleBox["Partition[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["list,n,d", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " is supplied another argument, an offset ",
  StyleBox["d",
    FontSlant->"Italic"],
  " is used each time a sublist is created.  The offset gives the difference \
in position between the first elements of successive sublists.  Thus, if the \
offset is ",
  Cell[BoxData[
      \(TraditionalForm\`d\)]],
  ", the first sublist begins at position 1, the second at position ",
  Cell[BoxData[
      \(TraditionalForm\`1 + d\)]],
  ", the third at position ",
  Cell[BoxData[
      \(TraditionalForm\`1 + 2  d\)]],
  ", etc."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Partition[{a, b, c, d, e, f, g, h, i, j}, 3, 1]\)], "Input"],

Cell[BoxData[
    \({{a, b, c}, {b, c, d}, {c, d, e}, {d, e, f}, {e, f, g}, {f, g, h}, {g, 
        h, i}, {h, i, j}}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Partition[{a, b, c, d, e, f, g, h, i, j}, 3, 2]\)], "Input"],

Cell[BoxData[
    \({{a, b, c}, {c, d, e}, {e, f, g}, {g, h, i}}\)], "Output"]
}, Closed]],

Cell["\<\
Suppose that two lists contain several sublists of arbitrary structure, but \
that we want the sum of all elements wherever they are found; how is that \
done?  Test your method by adding the two lists { {a,b,{c,d}}, 3, 9, {{-f,8}} \
} and {g,j,{k},{-2,{4,q}}}.\
\>", "Exercise"],

Cell[CellGroupData[{

Cell["Example: extracting specified records from a database", "Subsubsection"],

Cell["\<\
Suppose that we wish to construct a list of authors from the data contained \
in the list of references.  The irregular structure of this list complicates \
that task.  Here we develop one of several possible solutions to this \
problem.  Each reference contains a list of data entries pertaining to some \
publication, where each entry consists of an identification label and either \
a single datum or a list of data.  If we just want the data with a particular \
label, it is useful to flatten the list enough to remove the grouping by \
publication while preserving the grouping of data by category.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Flatten[references, 2]\)], "Input"],

Cell[BoxData[
    \({"Author", "J.J. Kelly", "Title", 
      "Essential Mathematica for Students of Science", "Date", 1998, 
      "Author", "S. Wolfram", "Title", "The Mathematica Book", 
      "Publisher", {"Wolfram Media", "Cambridge University Press"}, "Date", 
      1996, "Author", "P.T. Tam", "Title", 
      "A Physicist's Guide to Mathematica", "Publisher", "Academic Press", 
      "Date", 1997}\)], "Output"]
}, Closed]],

Cell["\<\
Next, we group the label and data entries back together using partition.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Partition[Flatten[references, 2], 2]\)], "Input"],

Cell[BoxData[
    \({{"Author", "J.J. Kelly"}, {"Title", 
        "Essential Mathematica for Students of Science"}, {"Date", 
        1998}, {"Author", "S. Wolfram"}, {"Title", 
        "The Mathematica Book"}, {"Publisher", {"Wolfram Media", 
          "Cambridge University Press"}}, {"Date", 1996}, {"Author", 
        "P.T. Tam"}, {"Title", 
        "A Physicist's Guide to Mathematica"}, {"Publisher", 
        "Academic Press"}, {"Date", 1997}}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Next, we use ",
  StyleBox["Select", "InlineInput",
    FontWeight->"Bold"],
  " with a skeletal function to isolate the author information"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Select[
      Partition[Flatten[references, 2], 
        2], #\[LeftDoubleBracket]1\[RightDoubleBracket] \[Equal] "\<Author\>" \
&]\)], "Input"],

Cell[BoxData[
    \({{"Author", "J.J. Kelly"}, {"Author", "S. Wolfram"}, {"Author", 
        "P.T. Tam"}}\)], "Output"]
}, Closed]],

Cell["\<\
Finally, we strip off the redundant label to produce just an author list.  \
Note that multiple authors of a single publication remain grouped together.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(#\[LeftDoubleBracket]2\[RightDoubleBracket] &\)\  /@ 
      Select[Partition[Flatten[references, 2], 
          2], #\[LeftDoubleBracket]1\[RightDoubleBracket] \[Equal] \
"\<Author\>" &]\)], "Input"],

Cell[BoxData[
    \({"J.J. Kelly", "S. Wolfram", "P.T. Tam"}\)], "Output"]
}, Closed]],

Cell["\<\
It is now an easy matter to generalize this function to extract a list of \
records of a particular type from a database with this format.\
\>", "Text"],

Cell[BoxData[
    \(listRecords[database_, 
        record_]\  := \ \(#\[LeftDoubleBracket]2\[RightDoubleBracket] &\)\  /@ 
        Select[Partition[Flatten[database, 2], 
            2], #\[LeftDoubleBracket]1\[RightDoubleBracket] \[Equal] 
              record &]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(listRecords[references, "\<Author\>"]\)], "Input"],

Cell[BoxData[
    \({"J.J. Kelly", "S. Wolfram", "P.T. Tam"}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(listRecords[references, "\<Title\>"]\)], "Input"],

Cell[BoxData[
    \({"Essential Mathematica for Students of Science", 
      "The Mathematica Book", 
      "A Physicist's Guide to Mathematica"}\)], "Output"]
}, Closed]],

Cell["\<\
Write a function which selects the works published before a specified date.\
\>", "Exercise"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Operations on lists", "Section"],

Cell[CellGroupData[{

Cell["Listable functions", "Subsection"],

Cell[TextData[{
  "Many ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " functions are ",
  StyleBox["Listable", "InlineInput",
    FontWeight->"Bold"],
  ", meaning that they can be applied to lists as well as to scalar \
arguments.  A listable function is applied separately to the elements of any \
lists which appear in its arguments, provided that the dimensions of those \
lists are compatible.  For example, a binary function like ",
  StyleBox["Plus", "InlineInput",
    FontWeight->"Bold"],
  " can receive either a list and a scalar or two lists of the same length."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \({a, b, c, d}\  + 1\)], "Input"],

Cell[BoxData[
    \({1 + a, 1 + b, 1 + c, 1 + d}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \({a, b, c, d} + {1, 2, 3, 4}\)], "Input"],

Cell[BoxData[
    \({1 + a, 2 + b, 3 + c, 4 + d}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \({a, b, c, d}\ {e, f, g, h}\)], "Input"],

Cell[BoxData[
    \({a\ e, b\ f, c\ g, d\ h}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \({a, b, c, d}\^2\)], "Input"],

Cell[BoxData[
    \({a\^2, b\^2, c\^2, d\^2}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \({a, b, c, d}\^{1, 2, 3, 4}\)], "Input"],

Cell[BoxData[
    \({a, b\^2, c\^3, d\^4}\)], "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Scalar and vector products", "Subsection"],

Cell[TextData[{
  "The ordinary scalar product of two vectors is defined by ",
  Cell[BoxData[
      \(TraditionalForm\`a . b\  = \ \[Sum]\(a\_i\) b\_i\)]],
  StyleBox[" ",
    FontSlant->"Italic"],
  "and is produced by ",
  StyleBox[ButtonBox["Dot",
    ButtonStyle->"RefGuideLink"],
    FontWeight->"Bold"],
  StyleBox["[",
    FontWeight->"Bold"],
  StyleBox["a,b",
    FontSlant->"Italic"],
  StyleBox["]",
    FontWeight->"Bold"],
  ".  More generally, ",
  StyleBox["Dot[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["a,b", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " contracts the last index of ",
  StyleBox["a",
    FontSlant->"Italic"],
  " with the first index of ",
  StyleBox["b",
    FontSlant->"Italic"],
  " and can be applied to various combinations of vectors, matrices, or \
tensors with compatible dimensions.  The operator form of ",
  StyleBox["Dot[a,b]", "InlineInput"],
  " is ",
  StyleBox["a.b", "InlineInput"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \({a, b, c, d} . {e, f, g, h}\)], "Input"],

Cell[BoxData[
    \(a\ e + b\ f + c\ g + d\ h\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \({{a, b, c}, {e, f, g}} . {x, y, z}\)], "Input"],

Cell[BoxData[
    \({a\ x + b\ y + c\ z, e\ x + f\ y + g\ z}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \({x, y} . {{a, b, c}, {e, f, g}}\)], "Input"],

Cell[BoxData[
    \({a\ x + e\ y, b\ x + f\ y, c\ x + g\ y}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Write a function that computes the sample variance ",
  Cell[BoxData[
      \(TraditionalForm\`\(1\/\(n - 
              1\)\) \(\[Sum]\+\(i = 1\)\%n\((x\_i - x\&_)\)\^2\)\)]],
  " where ",
  Cell[BoxData[
      \(TraditionalForm\`x\&_ = \(1\/n\) \(\[Sum]\+\(i = 1\)\%n x\_i\)\)]],
  " is the sample mean.  Test using uniform random numbers between 0 and 1."
}], "Exercise"],

Cell[TextData[{
  ButtonBox["Inner",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["f,a,b,g", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " is generalized inner product between tensors ",
  StyleBox["a", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["b", "InlineInput",
    FontWeight->"Bold"],
  " in which the function ",
  StyleBox["f", "InlineInput",
    FontWeight->"Bold"],
  " plays the role of multiplication while ",
  StyleBox["g", "InlineInput",
    FontWeight->"Bold"],
  " plays the role of addition."
}], "Text",
  FontWeight->"Plain"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[f, g, a, b, c, d];\)\), "\n", 
    \(Inner[f, {{a, b}, {c, d}}, \ {x, y}, \ g]\)}], "Input"],

Cell[BoxData[
    \({g[f[a, x], f[b, y]], g[f[c, x], f[d, y]]}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Inner[Times, {{a, b}, {c, d}}, \ {x, y}, \ Plus]\)], "Input"],

Cell[BoxData[
    \({a\ x + b\ y, c\ x + d\ y}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The vector product or cross product in three dimensions is given by ",
  ButtonBox["Cross",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["a,b", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " or ",
  Cell[BoxData[
      \(TraditionalForm\`a\[Cross]b\)]],
  ".  ",
  StyleBox["Beware",
    FontColor->RGBColor[1, 0, 0]],
  ": the operator for the cross product is \[EscapeKey]cross\[EscapeKey] or \
\[Cross], which looks very similar to \[EscapeKey]*\[EscapeKey] or \[Times] \
but is not the same!  "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Cross[{a, b, c}, {d, e, f}]\)], "Input"],

Cell[BoxData[
    \({\(-c\)\ e + b\ f, c\ d - a\ f, \(-b\)\ d + a\ e}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "More generally, ",
  StyleBox["Cross[",
    FontWeight->"Bold"],
  " ",
  Cell[BoxData[
      \(TraditionalForm\`v\_1\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`v\_2\)]],
  ", \[CenterEllipsis] ",
  Cell[BoxData[
      \(TraditionalForm\`v\_\(n - 1\)\)]],
  " ",
  StyleBox["]",
    FontWeight->"Bold"],
  " produces a totally antisymmetric vector in ",
  Cell[BoxData[
      \(TraditionalForm\`n\)]],
  " dimensions that is orthogonal to each input vector { ",
  Cell[BoxData[
      \(TraditionalForm\`v\_1\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`v\_2\)]],
  ", \[CenterEllipsis] ",
  Cell[BoxData[
      \(TraditionalForm\`v\_\(n - 1\)\)]],
  "}."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Cross[{a1, a2, a3, a4}, {b1, b2, b3, b4}, {c1, c2, c3, c4}]\)], "Input"],

Cell[BoxData[
    \({a4\ b3\ c2 - a3\ b4\ c2 - a4\ b2\ c3 + a2\ b4\ c3 + a3\ b2\ c4 - 
        a2\ b3\ c4, \(-a4\)\ b3\ c1 + a3\ b4\ c1 + a4\ b1\ c3 - a1\ b4\ c3 - 
        a3\ b1\ c4 + a1\ b3\ c4, 
      a4\ b2\ c1 - a2\ b4\ c1 - a4\ b1\ c2 + a1\ b4\ c2 + a2\ b1\ c4 - 
        a1\ b2\ c4, \(-a3\)\ b2\ c1 + a2\ b3\ c1 + a3\ b1\ c2 - a1\ b3\ c2 - 
        a2\ b1\ c3 + a1\ b2\ c3}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example: selected vector identities", "Subsubsection"],

Cell["\<\
Here we create four generic vectors in 3-space and test a few identities \
which are somewhat tedious to evaluate by hand.\
\>", "Text"],

Cell[BoxData[{
    \(\(Clear[a, b, c, d];\)\), "\n", 
    \(a = Array[aa, 3]; \ b = Array[bb, 3]; c = Array[cc, 3]; \ 
    d = Array[dd, 3];\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\((a\[Cross]b)\) . \((c\[Cross]d)\) \[Equal] 
        a . \((b\[Cross]\((c\[Cross]d)\))\)\  // Simplify\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\((a\[Cross]b)\) . \((c\[Cross]
              d)\) \[Equal] \((a . c)\) \((b . d)\)\  - \ \((a . d)\) \((b . 
                c)\) // Simplify\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\((a\[Cross]b)\)\[Cross]\((c\[Cross]
              d)\) \[Equal] \((\((a\[Cross]b)\) . d)\) 
            c\  - \ \((\((a\[Cross]b)\) . c)\) d\  // Simplify\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example: Fourier series for a sawtooth signal", "Subsubsection"],

Cell[TextData[{
  "An odd periodic function, for which ",
  Cell[BoxData[
      \(TraditionalForm\`f[\(-x\)] \[Equal] \(-f[x]\)\)]],
  " and ",
  Cell[BoxData[
      \(TraditionalForm\`f[x + b] \[Equal] f[x]\)]],
  ", can be represented as a Fourier-Sine series ",
  Cell[BoxData[
      \(TraditionalForm\`f[
          x]\  = \ \[Sum]\+\(n = 1\)\%\[Infinity]\( a\_n\) 
            Sin[2  \[Pi]\ n\ x\/b]\)]],
  " where the coefficients are given by ",
  Cell[BoxData[
      \(TraditionalForm\`a\_n = \(2\/b\) \(\[Integral]\_0\%b f[x]\ Sin[
                2  \[Pi]\ n\ x\/b]\ \[DifferentialD]x\)\)]],
  ".  A sawtooth function which varies between ",
  Cell[BoxData[
      \(TraditionalForm\`\(+1\)\)]],
  " and ",
  Cell[BoxData[
      \(TraditionalForm\`\(-1\)\)]],
  " in a unit interval can then be represented by Fourier-Sine coefficients \
of the following form. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Simplify[
      2 \(\[Integral]\_0\%1\((1 - 2  x)\) 
            Sin[2  \[Pi]\ n\ x] \[DifferentialD]x\)\ , 
      n \[Element] Integers]\)], "Input"],

Cell[BoxData[
    \(2\/\(n\ \[Pi]\)\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The convergence of the Fourier-Sine series can be displayed using the \
following function based upon list programming.  The finite series is \
represented as a scalar product between two lists produced by applying the \
listable functions ",
  Cell[BoxData[
      \(TraditionalForm\`Sin[2  \[Pi]\ m\ x]\)]],
  " and ",
  Cell[BoxData[
      \(TraditionalForm\`\((2\/\(m\ \[Pi]\))\)\)]],
  " to ",
  StyleBox["Range[n]", "InlineInput"],
  "."
}], "Text"],

Cell[BoxData[{
    \(\(Clear[f, x, n, m];\)\), "\n", 
    \(f[x_, n_]\  := \ 
      Sin[2  \[Pi]\ m\ x] . \((2\/\(m\ \[Pi]\))\)\  /. 
        m \[Rule] Range[n]\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(Plot[{f[x, 5], 1 - 2  x + 2  Floor[x]}, {x, 0, 2}, 
        PlotPoints \[Rule] 100];\)\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.47619 0.309018 0.292061 [
[.2619 .29652 -9.5 -15.6875 ]
[.2619 .29652 9.5 0 ]
[.5 .29652 -5 -15.6875 ]
[.5 .29652 5 0 ]
[.7381 .29652 -9.5 -15.6875 ]
[.7381 .29652 9.5 0 ]
[.97619 .29652 -5 -15.6875 ]
[.97619 .29652 5 0 ]
[.01131 .01696 -18.3125 -7.84375 ]
[.01131 .01696 0 7.84375 ]
[.01131 .16299 -27.3125 -7.84375 ]
[.01131 .16299 0 7.84375 ]
[.01131 .45505 -19 -7.84375 ]
[.01131 .45505 0 7.84375 ]
[.01131 .60108 -10 -7.84375 ]
[.01131 .60108 0 7.84375 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.2619 .30902 m
.2619 .31527 L
s
gsave
.2619 .29652 -70.5 -19.6875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 15.813 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.5) show
1.000 setlinewidth
grestore
.5 .30902 m
.5 .31527 L
s
gsave
.5 .29652 -66 -19.6875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 15.813 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
.7381 .30902 m
.7381 .31527 L
s
gsave
.7381 .29652 -70.5 -19.6875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 15.813 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1.5) show
1.000 setlinewidth
grestore
.97619 .30902 m
.97619 .31527 L
s
gsave
.97619 .29652 -66 -19.6875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 15.813 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
1.000 setlinewidth
grestore
.125 Mabswid
.07143 .30902 m
.07143 .31277 L
s
.11905 .30902 m
.11905 .31277 L
s
.16667 .30902 m
.16667 .31277 L
s
.21429 .30902 m
.21429 .31277 L
s
.30952 .30902 m
.30952 .31277 L
s
.35714 .30902 m
.35714 .31277 L
s
.40476 .30902 m
.40476 .31277 L
s
.45238 .30902 m
.45238 .31277 L
s
.54762 .30902 m
.54762 .31277 L
s
.59524 .30902 m
.59524 .31277 L
s
.64286 .30902 m
.64286 .31277 L
s
.69048 .30902 m
.69048 .31277 L
s
.78571 .30902 m
.78571 .31277 L
s
.83333 .30902 m
.83333 .31277 L
s
.88095 .30902 m
.88095 .31277 L
s
.92857 .30902 m
.92857 .31277 L
s
.25 Mabswid
0 .30902 m
1 .30902 L
s
.02381 .01696 m
.03006 .01696 L
s
gsave
.01131 .01696 -79.3125 -11.8438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 15.813 moveto
%%IncludeResource: font Mathematica1
%%IncludeFont: Mathematica1
/Mathematica1 findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
71.313 15.813 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
.02381 .16299 m
.03006 .16299 L
s
gsave
.01131 .16299 -88.3125 -11.8438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 15.813 moveto
%%IncludeResource: font Mathematica1
%%IncludeFont: Mathematica1
/Mathematica1 findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
71.313 15.813 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.5) show
1.000 setlinewidth
grestore
.02381 .45505 m
.03006 .45505 L
s
gsave
.01131 .45505 -80 -11.8438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 15.813 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0.5) show
1.000 setlinewidth
grestore
.02381 .60108 m
.03006 .60108 L
s
gsave
.01131 .60108 -71 -11.8438 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 23.6875 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 15.813 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
1.000 setlinewidth
grestore
.125 Mabswid
.02381 .04616 m
.02756 .04616 L
s
.02381 .07537 m
.02756 .07537 L
s
.02381 .10457 m
.02756 .10457 L
s
.02381 .13378 m
.02756 .13378 L
s
.02381 .19219 m
.02756 .19219 L
s
.02381 .2214 m
.02756 .2214 L
s
.02381 .25061 m
.02756 .25061 L
s
.02381 .27981 m
.02756 .27981 L
s
.02381 .33822 m
.02756 .33822 L
s
.02381 .36743 m
.02756 .36743 L
s
.02381 .39664 m
.02756 .39664 L
s
.02381 .42584 m
.02756 .42584 L
s
.02381 .48425 m
.02756 .48425 L
s
.02381 .51346 m
.02756 .51346 L
s
.02381 .54267 m
.02756 .54267 L
s
.02381 .57187 m
.02756 .57187 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .30902 m
.03318 .42073 L
.03805 .47275 L
.04339 .5215 L
.04836 .55735 L
.05298 .58158 L
.05553 .59102 L
.05678 .59465 L
.05793 .59743 L
.05896 .59944 L
.06009 .60116 L
.06064 .60181 L
.06123 .60237 L
.06156 .60263 L
.06185 .60283 L
.06213 .60298 L
.06244 .60312 L
.06275 .60322 L
.06304 .60328 L
.06333 .60332 L
.06359 .60332 L
.06388 .60329 L
.06419 .60323 L
.06435 .60319 L
.06452 .60313 L
.06482 .603 L
.06542 .60266 L
.06598 .60223 L
.06704 .60113 L
.06829 .59938 L
.06945 .59734 L
.07206 .59138 L
.07659 .57741 L
.08158 .55824 L
.09133 .51753 L
.09581 .50045 L
.10071 .48465 L
.10557 .47271 L
.10821 .46789 L
.11068 .46448 L
.1119 .46316 L
.11323 .462 L
.11448 .46114 L
.11508 .46082 L
.11564 .46056 L
.11668 .46019 L
.11723 .46005 L
.11754 .45999 L
.11783 .45994 L
.11813 .4599 L
Mistroke
.11828 .45989 L
.11845 .45988 L
.11876 .45986 L
.11904 .45986 L
.11931 .45986 L
.11961 .45987 L
.11989 .45989 L
.12015 .45992 L
.12074 .46001 L
.12129 .46012 L
.12251 .46046 L
.12365 .46089 L
.12472 .46138 L
.12973 .46434 L
.13416 .46717 L
.13667 .46854 L
.13791 .46909 L
.13904 .4695 L
.14016 .46982 L
.14073 .46995 L
.14135 .47005 L
.14168 .47009 L
.14197 .47012 L
.14214 .47013 L
.14232 .47014 L
.14248 .47015 L
.14264 .47016 L
.14292 .47016 L
.14322 .47015 L
.14354 .47014 L
.14384 .47011 L
.14415 .47008 L
.1445 .47002 L
.14512 .4699 L
.14573 .46974 L
.1463 .46955 L
.14758 .469 L
.14893 .46821 L
.1512 .4664 L
.15365 .46376 L
.15808 .45722 L
.16293 .44768 L
.16804 .43555 L
.17727 .41112 L
.18242 .39787 L
.1871 .38706 L
.19202 .37757 L
.19656 .37081 L
.19881 .3682 L
.2012 .36596 L
Mistroke
.2036 .36424 L
.20496 .36349 L
.20624 .3629 L
.20742 .36247 L
.2087 .36211 L
.20987 .36186 L
.21095 .3617 L
.21161 .36163 L
.21224 .36158 L
.2128 .36154 L
.21311 .36153 L
.2134 .36152 L
.21372 .36152 L
.21401 .36151 L
.21418 .36151 L
.21433 .36151 L
.21451 .36151 L
.21467 .36151 L
.21483 .36152 L
.21501 .36152 L
.21532 .36152 L
.21565 .36153 L
.21601 .36155 L
.2183 .36165 L
.21955 .36172 L
.22016 .36174 L
.22071 .36176 L
.221 .36177 L
.22132 .36178 L
.22149 .36178 L
.22165 .36178 L
.22197 .36179 L
.22229 .36179 L
.22247 .36179 L
.22264 .36179 L
.22282 .36178 L
.22298 .36178 L
.22317 .36178 L
.22335 .36177 L
.22364 .36176 L
.22395 .36174 L
.2245 .36171 L
.22517 .36165 L
.22576 .36158 L
.22695 .36139 L
.2282 .36111 L
.22927 .36079 L
.23044 .36036 L
.23306 .35905 L
.2355 .35733 L
Mistroke
.23804 .35501 L
.24044 .35228 L
.24495 .34578 L
.25425 .32731 L
.26416 .3035 L
.2737 .28178 L
.27848 .27288 L
.28286 .26639 L
.28757 .26133 L
.29016 .25936 L
.29146 .25858 L
.29263 .25799 L
.29374 .25752 L
.29495 .25711 L
.29623 .25678 L
.2968 .25666 L
.29743 .25655 L
.29856 .2564 L
.29917 .25634 L
.29947 .25632 L
.29975 .2563 L
.30001 .25628 L
.30029 .25627 L
.30052 .25626 L
.30078 .25626 L
.30106 .25625 L
.30135 .25625 L
.30163 .25625 L
.30188 .25625 L
.30217 .25625 L
.30247 .25626 L
.30276 .25626 L
.30302 .25627 L
.30427 .25632 L
.30547 .25638 L
.30677 .25645 L
.30736 .25647 L
.30797 .2565 L
.3085 .25651 L
.3088 .25652 L
.30908 .25652 L
.30936 .25652 L
.30963 .25652 L
.30987 .25652 L
.31013 .25652 L
.31042 .25651 L
.31072 .2565 L
.311 .25649 L
.31126 .25648 L
.31183 .25644 L
Mistroke
.31244 .25638 L
.31309 .25631 L
.31369 .25622 L
.31478 .25601 L
.31593 .25571 L
.31729 .25525 L
.31858 .25469 L
.32098 .25329 L
.32333 .25145 L
.32582 .24895 L
.33028 .24294 L
.33501 .23449 L
.33945 .22483 L
.34883 .20076 L
.35882 .17503 L
.3638 .16434 L
.36623 .15998 L
.36843 .15656 L
.37058 .15377 L
.37291 .15136 L
.37419 .15031 L
.37536 .14952 L
.37649 .14891 L
.37768 .14842 L
.3783 .14823 L
.37888 .14809 L
.3794 .148 L
.3797 .14795 L
.37997 .14792 L
.38027 .1479 L
.38054 .14789 L
.38084 .14788 L
.38101 .14788 L
.38117 .14788 L
.38146 .14789 L
.38163 .1479 L
.38178 .14791 L
.3821 .14794 L
.38243 .14798 L
.38301 .14807 L
.38363 .14821 L
.38476 .14853 L
.38688 .14938 L
.38916 .15058 L
.39169 .15213 L
.39678 .1554 L
.3992 .15671 L
.40039 .15724 L
.40149 .15763 L
.40215 .15783 L
Mistroke
.40275 .15797 L
.40342 .15808 L
.4036 .15811 L
.40379 .15813 L
.40397 .15814 L
.40413 .15816 L
.40443 .15817 L
.40475 .15818 L
.40506 .15817 L
.40523 .15817 L
.40539 .15816 L
.40568 .15813 L
.40599 .15809 L
.40628 .15805 L
.40655 .15799 L
.40714 .15785 L
.40768 .15767 L
.40889 .15714 L
.40995 .15649 L
.41108 .15563 L
.41346 .15315 L
.41607 .14936 L
.41857 .14466 L
.42083 .13947 L
.42591 .12476 L
.4356 .08764 L
.44493 .04906 L
.44965 .0326 L
.45216 .0256 L
.45354 .02237 L
.45485 .01979 L
.45609 .0178 L
.45674 .01694 L
.45743 .01618 L
.45807 .01561 L
.45865 .01521 L
.45894 .01506 L
.45924 .01492 L
.45952 .01483 L
.45979 .01477 L
.46006 .01473 L
.46034 .01472 L
.46061 .01473 L
.46086 .01477 L
.46115 .01484 L
.46146 .01496 L
.46176 .0151 L
.46204 .01526 L
.46258 .01567 L
.46319 .01625 L
Mistroke
.46441 .01786 L
.46566 .02015 L
.46686 .02293 L
.46911 .02977 L
.47152 .03953 L
.47417 .05304 L
.47893 .08477 L
.48401 .1283 L
.49409 .23731 L
.5038 .35536 L
.51314 .4615 L
.51787 .50695 L
.52307 .54772 L
.52546 .56282 L
.52802 .57637 L
.53041 .58653 L
.53264 .59375 L
.53383 .59678 L
.5351 .59935 L
.53637 .60127 L
.5371 .60208 L
.53778 .60265 L
.53838 .60301 L
.53868 .60314 L
.53885 .60319 L
.539 .60324 L
.53928 .60329 L
.53959 .60332 L
.53986 .60331 L
.54013 .60329 L
.54043 .60322 L
.54059 .60317 L
.54076 .60311 L
.54134 .60283 L
.54167 .60262 L
.54202 .60236 L
.54266 .60177 L
.54393 .60021 L
.54511 .59832 L
.54779 .59258 L
.55266 .57783 L
.56215 .53989 L
.567 .51963 L
.57224 .4996 L
.57687 .48472 L
.5795 .47775 L
.58196 .4723 L
.58449 .46776 L
.5868 .46457 L
.58798 .46328 L
Mistroke
.58926 .46212 L
.59062 .46117 L
.59124 .46083 L
.5919 .46053 L
.59252 .4603 L
.59308 .46013 L
.59362 .46001 L
.59389 .45996 L
.59419 .45992 L
.59436 .4599 L
.59452 .45989 L
.59482 .45987 L
.59498 .45986 L
.59514 .45986 L
.59531 .45986 L
.59549 .45986 L
.59579 .45987 L
.59607 .45989 L
.59637 .45993 L
.5967 .45997 L
.59736 .46009 L
.59807 .46027 L
.59937 .4607 L
.6018 .46183 L
.60698 .46503 L
.61167 .46792 L
.61403 .46906 L
.61535 .46954 L
.61598 .46973 L
.61657 .46987 L
.61713 .46999 L
.61764 .47006 L
.61793 .4701 L
.61821 .47012 L
.6185 .47014 L
.61881 .47016 L
.6191 .47016 L
.61941 .47015 L
.61957 .47015 L
.61973 .47014 L
.62004 .47011 L
.62034 .47008 L
.62063 .47003 L
.62118 .46993 L
.6218 .46977 L
.62239 .46959 L
.6235 .46913 L
.62469 .46848 L
.62598 .4676 L
.6283 .46551 L
Mistroke
.63043 .46301 L
.635 .45594 L
.64 .44572 L
.6498 .42093 L
.65923 .39635 L
.66404 .38549 L
.66926 .37582 L
.67169 .3722 L
.67428 .36898 L
.6767 .36656 L
.67892 .36481 L
.68119 .36346 L
.68238 .36292 L
.68364 .36246 L
.68473 .36214 L
.68575 .36192 L
.68687 .36173 L
.6875 .36166 L
.68807 .3616 L
.68863 .36156 L
.68895 .36155 L
.68924 .36153 L
.68956 .36152 L
.68984 .36152 L
.69 .36151 L
.69017 .36151 L
.69049 .36151 L
.69078 .36151 L
.69105 .36152 L
.69136 .36152 L
.69165 .36153 L
.69216 .36154 L
.69272 .36157 L
.69512 .36169 L
.6964 .36174 L
.69676 .36176 L
.69711 .36177 L
.69743 .36178 L
.6976 .36178 L
.69776 .36178 L
.69806 .36179 L
.69822 .36179 L
.69838 .36179 L
.69869 .36179 L
.69896 .36178 L
.69927 .36178 L
.69944 .36177 L
.6996 .36177 L
.69992 .36175 L
.70027 .36174 L
Mistroke
.7009 .36169 L
.70149 .36163 L
.7026 .36148 L
.70322 .36137 L
.70388 .36123 L
.70506 .36092 L
.70632 .36049 L
.70771 .35988 L
.71018 .35845 L
.71244 .35671 L
.7175 .35116 L
.72212 .34412 L
.72715 .3345 L
.73703 .31163 L
.74654 .28893 L
.75568 .27124 L
.76037 .26478 L
.763 .26201 L
.76542 .26 L
.76779 .2585 L
.77 .2575 L
.77127 .25707 L
.77243 .25678 L
.77307 .25664 L
.77376 .25652 L
.77437 .25644 L
.77502 .25637 L
.77564 .25632 L
.7762 .25628 L
.77647 .25627 L
.77677 .25626 L
.77705 .25625 L
.77731 .25625 L
.77747 .25625 L
.77764 .25625 L
.77795 .25625 L
.77825 .25625 L
.77853 .25625 L
.77883 .25626 L
.77916 .25627 L
.77983 .25629 L
.7825 .25642 L
.78366 .25648 L
.78398 .25649 L
.78432 .2565 L
.78461 .25651 L
.78493 .25652 L
.78524 .25652 L
.78553 .25652 L
.7858 .25652 L
Mistroke
.78608 .25652 L
.7864 .25652 L
.78669 .25651 L
.78702 .2565 L
.78736 .25648 L
.78798 .25644 L
.78857 .25639 L
.78909 .25633 L
.78966 .25625 L
.79094 .25601 L
.7923 .25565 L
.79346 .25525 L
.79473 .2547 L
.7972 .25328 L
.79945 .25151 L
.80205 .2489 L
.80452 .24581 L
.80933 .23808 L
.81379 .22903 L
.82329 .2054 L
.83339 .17891 L
.83846 .16739 L
.84312 .15883 L
.84548 .15539 L
.84768 .15276 L
.84997 .15063 L
.85118 .14975 L
.85248 .14901 L
.85311 .14872 L
.85377 .14846 L
.85434 .14828 L
.85496 .14812 L
.8553 .14805 L
.85562 .14799 L
.85594 .14795 L
.85623 .14792 L
.8564 .1479 L
.85658 .14789 L
.85678 .14788 L
.85696 .14788 L
.85713 .14788 L
.85731 .14788 L
.85748 .14788 L
.85764 .14789 L
.85793 .14791 L
.85823 .14793 L
.85851 .14797 L
.85877 .148 L
.85941 .14812 L
.86002 .14826 L
Mistroke
.86122 .14862 L
.86252 .14913 L
.86732 .15177 L
.87241 .15506 L
.87468 .15636 L
.87587 .15693 L
.87712 .15745 L
.87823 .1578 L
.87885 .15795 L
.87944 .15806 L
.87971 .1581 L
.87997 .15813 L
.88021 .15815 L
.88046 .15817 L
.88074 .15818 L
.88103 .15818 L
.88128 .15817 L
.88155 .15816 L
.88187 .15813 L
.88216 .1581 L
.88248 .15804 L
.88282 .15798 L
.88345 .15781 L
.88402 .15762 L
.88518 .15709 L
.88627 .15641 L
.88753 .1554 L
.8887 .15425 L
.89133 .15085 L
.89369 .14679 L
.8959 .14214 L
.90091 .12856 L
.91035 .09365 L
.92039 .0519 L
.92541 .03396 L
.92762 .02749 L
.93006 .02169 L
.93118 .01955 L
.93238 .01765 L
.93352 .01628 L
.93403 .0158 L
.93457 .01538 L
.93487 .01519 L
.93515 .01505 L
.93542 .01493 L
.93568 .01484 L
.93598 .01476 L
.93614 .01474 L
.93631 .01472 L
.93659 .01472 L
Mistroke
.9369 .01474 L
.93722 .01481 L
.93751 .0149 L
.93785 .01505 L
.93817 .01522 L
.93874 .01564 L
.93936 .01623 L
.94053 .01776 L
.94163 .0197 L
.94414 .02599 L
.94659 .03468 L
.94923 .04692 L
.95408 .07705 L
.95919 .1189 L
.96842 .2155 L
.97619 .30902 L
Mfstroke
.02381 .60108 m
.03318 .58959 L
.04339 .57706 L
.05298 .56529 L
.06221 .55398 L
.07203 .54193 L
.08148 .53033 L
.09153 .51801 L
.10121 .50614 L
.11052 .49471 L
.12043 .48256 L
.12997 .47086 L
.13914 .45961 L
.14891 .44763 L
.15831 .4361 L
.1683 .42384 L
.17793 .41203 L
.18719 .40067 L
.19704 .38859 L
.20653 .37695 L
.21661 .36458 L
.22632 .35267 L
.23566 .34121 L
.2456 .32901 L
.25518 .31727 L
.26438 .30598 L
.27418 .29396 L
.28361 .28239 L
.29364 .27009 L
.3033 .25824 L
.31259 .24684 L
.32248 .23471 L
.332 .22304 L
.34115 .21181 L
.3509 .19985 L
.36028 .18835 L
.37025 .17612 L
.37985 .16433 L
.38909 .153 L
.39893 .14094 L
.40839 .12933 L
.41845 .11699 L
.42814 .1051 L
.43747 .09366 L
.44739 .08149 L
.45694 .06977 L
.46613 .05851 L
.47591 .04651 L
.48532 .03497 L
.49011 .02909 L
Mistroke
.49263 .02599 L
.49532 .02269 L
.49668 .02103 L
.49795 .01947 L
.49909 .01807 L
.4994 .01769 L
.49958 .01748 L
.49973 .01728 L
.50002 .60106 L
.50033 .60068 L
.50496 .59499 L
.51441 .58341 L
.52445 .57109 L
.53412 .55923 L
.54342 .54781 L
.55332 .53567 L
.56286 .52398 L
.57202 .51274 L
.58178 .50076 L
.59117 .48924 L
.60116 .477 L
.61077 .4652 L
.62003 .45385 L
.62987 .44177 L
.63935 .43015 L
.64942 .41779 L
.65913 .40588 L
.66847 .39443 L
.6784 .38225 L
.68796 .37051 L
.69716 .35923 L
.70695 .34722 L
.71638 .33566 L
.7264 .32337 L
.73605 .31153 L
.74533 .30014 L
.75521 .28802 L
.76472 .27636 L
.77387 .26514 L
.7836 .25319 L
.79297 .2417 L
.80294 .22948 L
.81254 .2177 L
.82177 .20638 L
.83159 .19433 L
.84105 .18273 L
.8511 .1704 L
.86079 .15852 L
.87011 .14709 L
.88002 .13493 L
Mistroke
.88956 .12322 L
.89874 .11196 L
.90851 .09998 L
.91791 .08844 L
.92791 .07618 L
.93754 .06436 L
.94681 .053 L
.95667 .04091 L
.96616 .02926 L
.97619 .01696 L
Mfstroke
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.875},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00;@3oool00`000000oooo0?ooo`3o0?oooh40oooo000N0?ooo`060;md0000000000000000
0000B9`0gooo2@3oool00`000000oooo0?ooo`3o0?oooh40oooo000O0?ooo`030?oOW0180000M;oo
00/0oooo00<000000?ooo`3oool0o`3ooon10?ooo`007`3oool00`3ogi`0B00007Boo`0;0?ooo`03
0000003oool0oooo0?l0ooooP@3oool001l0oooo00<0omnL04P0001d_ol02`3oool00`000000oooo
0?ooo`3o0?oooh40oooo000@0?ooo`030?oog`2LB000000000L0000000<0B9cO0?ooo`3oool00P3o
ool00`3ogi`0B00007Boo`0;0?ooo`030000003oool0oooo0:T0oooo0P00002j0?ooo`030000003o
ool0oooo01P0oooo000O0?ooo`030?oOW0180000M;oo00/0oooo1000002W0?ooo`@00000^03oool4
000000d0oooo00<000000?ooo`3oool0203oool001l0oooo00<0omnL04P0001d_ol02`3oool00`00
0000oooo0?ooo`2W0?ooo`8000000P3oool00`000000oooo0?ooo`0:0?ooo`800000Z@3oool20000
0080oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`090?ooo`007`3oool00`3ogi`0
B00007Boo`0;0?ooo`030000003oool0oooo0:L0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`090?ooo`800000Z@3oool01@000000oooo0?ooo`3oool0000000/0oooo00<000000?oo
o`3oool02P3oool001l0oooo00<0omnL04P0001d_ol02`3oool00`000000oooo0?ooo`2W0?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool0203oool00`000000oooo0000002Y0?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0:0?ooo`00
7`3oool00`3ogi`0B00007Boo`0;0?ooo`030000003oool0oooo0:H0oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`070?ooo`040000003oool0oooo00000:P0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00/0oooo000M0?ooo`050?oo
g`2LB00000000000001d_ol02`3oool00`000000oooo0?ooo`2V0?ooo`030000003oool0oooo00@0
oooo00<000000?ooo`3oool01@3oool01@000000oooo0?ooo`3oool000000:P0oooo00<000000?oo
o`3oool00`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00`0oooo000O0?ooo`03
0?noM0000000M;oo00/0oooo00<000000?ooo`3oool0Y@3oool00`000000oooo0?ooo`050?ooo`03
0000003oool0oooo00@0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`2U0?ooo`03
0000003oool0oooo00D0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0=0?ooo`00
;@3oool00`000000oooo0?ooo`2U0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0:D0oooo00<000000?ooo`3oool0
1@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00h0oooo000]0?ooo`030000003o
ool0oooo0:D0oooo00<000000?ooo`3oool01P3oool01@000000oooo0?ooo`3oool0000000H0oooo
00<000000?ooo`3oool0Y@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool03P3oool002d0oooo00<000000?ooo`3oool0Y@3oool00`000000oooo0?oo
o`060?ooo`050000003oool0oooo0?ooo`0000001P3oool00`000000oooo0?ooo`2T0?ooo`030000
003oool0oooo00H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0?0?ooo`00;@3o
ool00`000000oooo0?ooo`2T0?ooo`030000003oool0oooo00L0oooo00@000000?ooo`3oool00000
1`3oool00`000000oooo0?ooo`2T0?ooo`030000003oool0oooo00L0oooo00@000000?ooo`3oool0
00004P3oool002d0oooo00<000000?ooo`3oool0Y03oool00`000000oooo0?ooo`070?ooo`040000
003oool0oooo000000L0oooo00<000000?ooo`3oool0Y03oool00`000000oooo0?ooo`070?ooo`03
0000003oool0000001<0oooo000]0?ooo`<00000Y03oool00`000000oooo0?ooo`070?ooo`030000
003oool0000000P0oooo00<000000?ooo`3oool0Y03oool00`000000oooo0?ooo`070?ooo`030000
003oool0000001<0oooo000]0?ooo`030000003oool0oooo0:@0oooo00<000000?ooo`3oool0203o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0:<0oooo00<000000?ooo`3oool0203o
ool2000001@0oooo000]0?ooo`030000003oool0oooo0:@0oooo00<000000?ooo`3oool01`3oool2
000000T0oooo00<000000?ooo`3oool0X`3oool00`000000oooo0?ooo`080?ooo`800000503oool0
02d0oooo00<000000?ooo`3oool0X`3oool00`000000oooo0?ooo`080?ooo`8000002@3oool00`00
0000oooo0?ooo`2S0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool04`3oool002d0
oooo00<000000?ooo`3oool0X`3oool00`000000oooo0?ooo`070?ooo`030000003oool0000000T0
oooo00<000000?ooo`3oool0X`3oool00`000000oooo0?ooo`070?ooo`030000003oool0000001@0
oooo000]0?ooo`030000003oool0oooo0:<0oooo00<000000?ooo`3oool01P3oool010000000oooo
0?ooo`0000090?ooo`030000003oool0oooo0:80oooo00<000000?ooo`3oool01`3oool010000000
oooo0?ooo`00000D0?ooo`00;@3oool00`000000oooo0?ooo`2S0?ooo`030000003oool0oooo00D0
oooo00D000000?ooo`3oool0oooo000000090?ooo`030000003oool0oooo0:80oooo00<000000?oo
o`3oool01P3oool01@000000oooo0?ooo`3oool0000001@0oooo000]0?ooo`030000003oool0oooo
0:80oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
00H0oooo00<000000?ooo`3oool0XP3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool04P3oool002d0oooo00<000000?ooo`3oool0XP3oool00`000000
oooo0?ooo`040?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool01P3oool00`000000
oooo0?ooo`2R0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`0B0?ooo`00;@3oool00`000000oooo0?ooo`2R0?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo0:40oooo
00<000000?ooo`3oool0103oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0180oooo
000]0?ooo`030000003oool0oooo0:80oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`060?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0X@3oool00`000000oooo0?oo
o`040?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool04@3oool002d0oooo0`00002Q
0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`06
0?ooo`030000003oool0oooo0:40oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`06
0?ooo`030000003oool0oooo0140oooo000]0?ooo`030000003oool0oooo0:40oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo00<000000?oo
o`3oool0X@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool04@3oool002d0oooo00<000000?ooo`3oool0X@3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo00P0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`2P0?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0A0?ooo`00
;@3oool00`000000oooo0?ooo`2Q0?ooo`050000003oool0oooo0?ooo`0000002`3oool00`000000
oooo0?ooo`050?ooo`030000003oool0oooo0:00oooo00D000000?ooo`3oool0oooo0000000;0?oo
o`030000003oool0oooo0140oooo000]0?ooo`030000003oool0oooo0:00oooo00D000000?ooo`3o
ool0oooo0000000<0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0X03oool01@00
0000oooo0?ooo`3oool0000000/0oooo00<000000?ooo`3oool04@3oool002d0oooo00<000000?oo
o`3oool0X03oool010000000oooo0?ooo`00000=0?ooo`030000003oool0oooo00D0oooo00<00000
0?ooo`3oool0X03oool010000000oooo0?ooo`00000<0?ooo`030000003oool0oooo0140oooo000]
0?ooo`030000003oool0oooo0:00oooo00@000000?ooo`3oool000003@3oool00`000000oooo0?oo
o`050?ooo`030000003oool0oooo09l0oooo00@000000?ooo`3oool000003P3oool00`000000oooo
0?ooo`0@0?ooo`00;@3oool00`000000oooo0?ooo`2O0?ooo`040000003oool0oooo000000h0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`2O0?ooo`030000003oool0000000l0oooo
00<000000?ooo`3oool0403oool002d0oooo00<000000?ooo`3oool0W`3oool00`000000oooo0000
000?0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0W`3oool200000100oooo00<0
00000?ooo`3oool0403oool002d0oooo00<000000?ooo`3oool0W`3oool200000140oooo00<00000
0?ooo`3oool0103oool00`000000oooo0?ooo`2O0?ooo`030000003oool0oooo00l0oooo00<00000
0?ooo`3oool0403oool002d0oooo00<000000?ooo`3oool0W`3oool00`000000oooo0?ooo`0@0?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool0WP3oool00`000000oooo0?ooo`0@0?oo
o`030000003oool0oooo0100oooo000]0?ooo`030000003oool0oooo09h0oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo09d0oooo0P00000B0?ooo`03
0000003oool0oooo0100oooo000]0?ooo`<00000W@3oool2000001<0oooo00<000000?ooo`3oool0
103oool00`000000oooo0?ooo`2M0?ooo`8000004P3oool00`000000oooo0?ooo`0@0?ooo`00;@3o
ool00`000000oooo0?ooo`2L0?ooo`030000003oool0000001<0oooo00<000000?ooo`3oool0103o
ool00`000000oooo0?ooo`2L0?ooo`8000004`3oool00`000000oooo0?ooo`0@0?ooo`00;@3oool0
0`000000oooo0?ooo`2K0?ooo`040000003oool0oooo000001<0oooo00<000000?ooo`3oool0103o
ool00`000000oooo0?ooo`2L0?ooo`800000503oool00`000000oooo0?ooo`0?0?ooo`00;@3oool0
0`000000oooo0?ooo`2K0?ooo`030000003oool0000001@0oooo00<000000?ooo`3oool0103oool0
0`000000oooo0?ooo`2K0?ooo`030000003oool0000001@0oooo00<000000?ooo`3oool03`3oool0
02d0oooo00<000000?ooo`3oool0VP3oool010000000oooo0?ooo`00000D0?ooo`030000003oool0
oooo00@0oooo00<000000?ooo`3oool0VP3oool010000000oooo0?ooo`00000D0?ooo`030000003o
ool0oooo00l0oooo000]0?ooo`030000003oool0oooo09T0oooo00D000000?ooo`3oool0oooo0000
000E0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0V@3oool010000000oooo0?oo
o`00000E0?ooo`030000003oool0oooo00l0oooo000]0?ooo`030000003oool0oooo09P0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool0V03oool01@000000oooo0?ooo`3oool0000001D0oooo00<000000?ooo`3oool0
3`3oool002d0oooo00<000000?ooo`3oool0U`3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo01@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`2G0?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`0?0?ooo`00;@3oool0
0`000000oooo0?ooo`2G0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0503oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo09H0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`0D0?ooo`030000003oool0oooo00l0oooo000]0?ooo`030000003oool0oooo
09H0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo
00<0oooo00<000000?ooo`3oool0U@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
01@0oooo00<000000?ooo`3oool03`3oool002d0oooo00<000000?ooo`3oool0U@3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`2E0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0503oool00`000000
oooo0?ooo`0?0?ooo`00;@3oool3000009@0oooo00<000000?ooo`3oool0103oool00`000000oooo
0?ooo`0E0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0U03oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool03P3oool002d0oooo00<0
00000?ooo`3oool0T`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo01D0oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`2C0?ooo`030000003oool0oooo00@0oooo00<0
00000?ooo`3oool05P3oool00`000000oooo0?ooo`0>0?ooo`00;@3oool00`000000oooo0?ooo`2B
0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo0980oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0F
0?ooo`030000003oool0oooo00h0oooo000]0?ooo`030000003oool0oooo0940oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool0T@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo01L0oooo00<000000?oo
o`3oool03P3oool002d0oooo00<000000?ooo`3oool0T03oool00`000000oooo0?ooo`060?ooo`03
0000003oool0oooo01P0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`2A0?ooo`03
0000003oool0oooo00D0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0>0?ooo`00
;@3oool00`000000oooo0?ooo`2@0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0
603oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0900oooo00<000000?ooo`3oool0
1P3oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00h0oooo000]0?ooo`030000003o
ool0oooo08T0oooo100000020?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool06@3o
ool00`000000oooo0?ooo`020?ooo`030000003oool0oooo08P0oooo1@0000020?ooo`030000003o
ool0oooo00L0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0>0?ooo`004@3oool0
1@3ogi`0B0000000000007@0_ooo00<0oooo00H0okmd0000001d_ol0oooo0?oog`2LB00300000003
07Boo`3oool0oooo00P0oooo00<000000?ooo`3oool0Q`3oool2000000@0oooo0`0000080?ooo`03
0000003oool0oooo01T0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`270?ooo`80
00000`3oool00`000000oooo000000090?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3o
ool03P3oool00100oooo00L0oono07@0001d_ol0oooo0?noM00007@0_ooo0080oooo00L0okmd0000
001d_ol0oooo0?oog`2LB7@0_ooo0080oooo00<0_g@007Boo`3oool0203oool00`000000oooo0?oo
o`260?ooo`030000003oool0oooo00D0oooo0P0000070?ooo`030000003oool0oooo01X0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`260?ooo`030000003oool0oooo00@0oooo0P00
00080?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool03P3oool00100oooo00<0_g@0
0018W03Oool00P3oool00`2oM00007Bo0?ooo`0:0?ooo`030?oog`2LB7@0_ooo00P0oooo00<00000
0?ooo`3oool0Q@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00800000103oool0
0`000000oooo0?ooo`0K0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0QP3oool0
0`000000oooo0?ooo`040?ooo`030000003oool0000000800000103oool2000001/0oooo00<00000
0?ooo`3oool03P3oool000l0oooo00<0oono07@00018W=l00`3oool00`3OW4P0001d0;ooo`0;0?oo
o`030;md001d_ol0oooo00L0oooo00<000000?ooo`3oool0Q03oool00`000000oooo0?ooo`050?oo
o`030000003oool0oooo0080oooo1@00000N0?ooo`030000003oool0oooo0080oooo00<000000?oo
o`3oool0Q@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00<0oooo1000000N0?oo
o`030000003oool0oooo00d0oooo00030?ooo`030?oog`2LB000000000L0000000D0B9cO0?ooo`3o
gi`0B00007Boo`030?ooo`030?noM00004P0W=oo00X0oooo00<0oooO09a80018W=l0203oool00`00
0000oooo0?ooo`240?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool09@3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo08@0oooo00<000000?ooo`3oool0103oool00`00
0000oooo0?ooo`0V0?ooo`030000003oool0oooo00d0oooo000?0?ooo`030?oOW0180000M;oo00<0
oooo00<0okmd0000B02Lgol02P3oool00`3OW4P0000007Boo`080?ooo`@00000P`3oool00`000000
oooo0?ooo`040?ooo`030000003oool0oooo02H0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`240?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool09`3oool00`000000
oooo0?ooo`0=0?ooo`003`3oool00`3ogi`0B00007Boo`030?ooo`030?noM00004P0W=oo00H0oooo
00L0gmoO0?ooo`3ookl0M0000000000007@0_ooo00P0oooo00<000000?ooo`3oool0Q03oool00`00
0000oooo0?ooo`030?ooo`030000003oool0oooo02L0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`230?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool09`3oool00`00
0000oooo0?ooo`0=0?ooo`003`3oool00`3ogi`0B00007Boo`030?ooo`030?noM00004P0W=oo00H0
oooo00H0gia800000000000000000000B02Lgol90?ooo`030000003oool0oooo08<0oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`0X0?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool0P`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo02P0oooo00<00000
0?ooo`3oool03@3oool000l0oooo00<0oono07@00018W=l00`3oool00`3OW4P0001d0;ooo`060?oo
o`040?oo_`1d0000000004RLg`/0oooo00<000000?ooo`3oool0P`3oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo02X0oooo00D000000?ooo`3oool0oooo000000240?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool0:@3oool00`000000oooo0?ooo`0=0?ooo`00403oool0
0`3OW4P004RL0=ooo`020?ooo`030;md0000M;l0oooo00L0oooo00<0_g@007Boo`3oool02`3oool0
0`000000oooo0?ooo`220?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0:`3oool0
1@000000oooo0?ooo`3oool0000008@0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`0Z0?ooo`030000003oool0oooo00d0oooo000@0?ooo`070?oo_`1d0000M;oo0?ooo`3o_g@0001d
0;ooo`080?ooo`060?oOW018000000000000000004P0W=oo203oool00`000000oooo0?ooo`220?oo
o`050000003oool0oooo0?ooo`000000;P3oool01@000000oooo0?ooo`3oool0000008<0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`0[0?ooo`030000003oool0oooo00d0oooo000A
0?ooo`050?oo_`1d000000000000M02oool02P3oool01@2oM0000000000000000000B9cO00P0oooo
00<000000?ooo`3oool0PP3oool010000000oooo0?ooo`00000_0?ooo`050000003oool0oooo0?oo
o`000000P`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo02/0oooo00<000000?oo
o`3oool03@3oool002d0oooo00<000000?ooo`3oool0P@3oool010000000oooo0?ooo`00000`0?oo
o`050000003oool0oooo0?ooo`000000P`3oool01@000000oooo0?ooo`3oool0000002l0oooo00<0
00000?ooo`3oool0303oool002d0oooo00<000000?ooo`3oool0P@3oool010000000oooo0?ooo`00
000`0?ooo`050000003oool0oooo0?ooo`000000PP3oool01@000000oooo0?ooo`3oool000000300
oooo00<000000?ooo`3oool0303oool002d0oooo00<000000?ooo`3oool0P03oool010000000oooo
0?ooo`00000a0?ooo`050000003oool0oooo0?ooo`000000PP3oool010000000oooo0?ooo`00000a
0?ooo`030000003oool0oooo00`0oooo000]0?ooo`030000003oool0oooo0800oooo00<000000?oo
o`000000<P3oool01@000000oooo0?ooo`3oool000000880oooo00<000000?ooo`000000<P3oool0
0`000000oooo0?ooo`0<0?ooo`00;@3oool00`000000oooo0?ooo`200?ooo`800000<`3oool01@00
0000oooo0?ooo`3oool000000840oooo00<000000?ooo`000000<`3oool00`000000oooo0?ooo`0<
0?ooo`00;@3oool3000007l0oooo0P00000d0?ooo`050000003oool0oooo0?ooo`000000P@3oool2
000003@0oooo00<000000?ooo`3oool0303oool002d0oooo00<000000?ooo`3oool0O`3oool20000
03D0oooo00@000000?ooo`3oool00000P03oool2000003D0oooo00<000000?ooo`3oool0303oool0
02d0oooo00<000000?ooo`3oool0OP3oool2000003H0oooo00@000000?ooo`3oool00000P03oool0
0`000000oooo0?ooo`0d0?ooo`030000003oool0oooo00`0oooo000]0?ooo`030000003oool0oooo
07h0oooo00<000000?ooo`3oool0=@3oool010000000oooo0?ooo`0000200?ooo`030000003oool0
oooo03@0oooo00<000000?ooo`3oool0303oool002d0oooo00<000000?ooo`3oool0O@3oool20000
03L0oooo00@000000?ooo`3oool00000O`3oool00`000000oooo0?ooo`0e0?ooo`030000003oool0
oooo00`0oooo000]0?ooo`030000003oool0oooo07`0oooo0P00000h0?ooo`040000003oool0oooo
000007h0oooo0P00000h0?ooo`030000003oool0oooo00/0oooo000]0?ooo`030000003oool0oooo
07`0oooo0P00000h0?ooo`040000003oool0oooo000007d0oooo00<000000?ooo`000000>03oool0
0`000000oooo0?ooo`0;0?ooo`00;@3oool00`000000oooo0?ooo`1k0?ooo`800000>@3oool01000
0000oooo0?ooo`00001m0?ooo`800000>@3oool00`000000oooo0?ooo`0;0?ooo`00;@3oool00`00
0000oooo0?ooo`1j0?ooo`030000003oool0000003T0oooo00@000000?ooo`3oool00000O03oool0
0`000000oooo0000000i0?ooo`030000003oool0oooo00/0oooo000]0?ooo`030000003oool0oooo
07T0oooo00<000000?ooo`000000>P3oool010000000oooo0?ooo`00001l0?ooo`800000>P3oool0
0`000000oooo0?ooo`0;0?ooo`00;@3oool00`000000oooo0?ooo`1i0?ooo`030000003oool00000
03X0oooo00@000000?ooo`3oool00000N`3oool00`000000oooo0000000j0?ooo`030000003oool0
oooo00/0oooo000]0?ooo`<00000N03oool00`000000oooo0000000k0?ooo`040000003oool0oooo
000007X0oooo00<000000?ooo`000000>`3oool00`000000oooo0?ooo`0;0?ooo`00;@3oool00`00
0000oooo0?ooo`1g0?ooo`040000003oool0oooo000003`0oooo00<000000?ooo`000000N@3oool0
10000000oooo0?ooo`00000k0?ooo`030000003oool0oooo00/0oooo000]0?ooo`030000003oool0
oooo07H0oooo00@000000?ooo`3oool00000?@3oool00`000000oooo0000001h0?ooo`040000003o
ool0oooo000003`0oooo00<000000?ooo`3oool02`3oool002d0oooo00<000000?ooo`3oool0M@3o
ool01@000000oooo0?ooo`3oool0000003d0oooo00<000000?ooo`000000M`3oool01@000000oooo
0?ooo`3oool0000003`0oooo00<000000?ooo`3oool02`3oool002d0oooo00<000000?ooo`3oool0
M03oool01@000000oooo0?ooo`3oool0000003h0oooo00<000000?ooo`000000MP3oool01@000000
oooo0?ooo`3oool0000003d0oooo00<000000?ooo`3oool02`3oool002d0oooo00<000000?ooo`3o
ool0L`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo03`0oooo00<000000?ooo`00
0000M@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo03`0oooo00<000000?ooo`3o
ool02P3oool002d0oooo00<000000?ooo`3oool0LP3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo03d0oooo00<000000?ooo`000000M@3oool01@000000oooo0?ooo`3oool0000003l0
oooo00<000000?ooo`3oool02P3oool002d0oooo00<000000?ooo`3oool0L@3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo03d0oooo00<000000?ooo`000000M03oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3oool02P3oool002d0oooo00<0
00000?ooo`3oool0L@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo03h0oooo00<0
00000?ooo`000000L`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo03h0oooo00<0
00000?ooo`3oool02P3oool002d0oooo00<000000?ooo`3oool0L03oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`000000LP3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3oool02P3oool002d0oooo00<000000?oo
o`3oool0K`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo03l0oooo00<000000?oo
o`000000L@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo03l0oooo00<000000?oo
o`3oool02P3oool002d0oooo00<000000?ooo`3oool0KP3oool00`000000oooo0?ooo`040?ooo`03
0000003oool0oooo03l0oooo00<000000?ooo`000000L@3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo0400oooo00<000000?ooo`3oool02P3oool002d0oooo0`00001^0?ooo`030000
003oool0oooo00<0oooo00<000000?ooo`3oool0@@3oool200000700oooo00<000000?ooo`3oool0
0P3oool00`000000oooo0?ooo`110?ooo`030000003oool0oooo00X0oooo000]0?ooo`030000003o
ool0oooo0580oooo00D0omnL04P000000000001d0;ooo`030?ooo`060?noM0000000M;oo0?ooo`3o
oml0W4P00`0000000`1d_ol0oooo0?ooo`070?ooo`040000003oool0oooo0?ooo`<00000@`3oool0
1P2oM000000000000000000004RL0=oooe40oooo00H0_g@000000000000000000018W03Oool20?oo
o`060?noM0000000M;oo0?ooo`3ooml0W4P00`0000000`1d_ol0oooo0?ooo`070?ooo`040000003o
ool0oooo0?ooo`800000@P3oool00`2oM0000000000000040000000304RLg`3oool0oooo00D0oooo
000]0?ooo`030000003oool0oooo0540oooo00L0oono07@0001d_ol0oooo0?noM00007@0_ooo0080
oooo00L0okmd0000001d_ol0oooo0?oog`2LB7@0_ooo0080oooo00@0_g@007Boo`3oool0oooo2`00
00160?ooo`80000000<0M;oo0?ooo`3oool0DP3oool00`3ogi`0B00007Boo`040?ooo`070?noM000
0000M;oo0?ooo`3ooml0W4Qd0;ooo`020?ooo`030;md001d_ol0oooo0080oooo2P0000140?ooo`03
0=nLB0000000000000<0000000<004RL0=ooo`3oool01@3oool002d0oooo00<000000?ooo`3oool0
D@3oool00`2oM00004RL0=ooo`020?ooo`030;md0000M;l0oooo00X0oooo00<0oooO09a8M02oool0
0P0000040?ooo`030000003oool0oooo04T0oooo0P0000000`1d_ol0oooo0?ooo`1B0?ooo`030?oO
W0180000M;oo00d0oooo00<0oooO09a8M02oool00P0000030?ooo`030000003oool0oooo04T0oooo
00<0000004RLg`3oool00P3oool00`3OW7@0W=oo0?ooo`050?ooo`00;@3oool00`000000oooo0?oo
o`1@0?ooo`030?oo_`1d0000B9cO00<0oooo00<0gia80000M02oool02`3oool00`2oM00000000?oo
o`040?ooo`030000003oool0oooo04X0oooo0P0000000`1d_ol0oooo0?ooo`1B0?ooo`030?oOW018
0000M;oo00h0oooo00<0_g@00000003oool00`3oool00`000000oooo0?ooo`1:0?ooo`030000003O
W4P0M;oo00X0oooo000]0?ooo`030000003oool0oooo0500oooo00<0omnL04P0001d_ol00`3oool0
0`3o_g@0001809cOo`0:0?ooo`030?oog`000000B9cO00@0oooo00<000000?ooo`3oool0B`3oool2
0000000307Boo`3oool0oooo0580oooo00<0omnL04P0001d_ol03@3oool00`3ooml0000004RLg`03
0?ooo`030000003oool0oooo04`0oooo00<000000;mdB02Lgol02@3oool002d0oooo00<000000?oo
o`3oool0D03oool00`3ogi`0B00007Boo`030?ooo`030?noM00004P0W=oo00X0oooo00<0gia80000
001d_ol00`3oool00`000000oooo0?ooo`1<0?ooo`80000000<0M;oo0?ooo`3oool0DP3oool00`3o
gi`0B00007Boo`0=0?ooo`80000000@0M;oo0?ooo`3oool00000C`3oool010000000oooO09a8M02o
ool80?ooo`00;@3oool00`000000oooo0?ooo`1@0?ooo`030?oOW0180000M;oo00<0oooo00<0okmd
0000B02Lgol01P3oool01`3Ogml0oooo0?oo_`1d000000000000M02oool00P3oool00`000000oooo
0?ooo`1=0?ooo`80000000<0M;oo0?ooo`3oool0DP3oool00`3ogi`0B00007Boo`090?ooo`070=oO
g`3oool0oono07@000000000001d0;ooo`020?ooo`030000003oool0oooo04d0oooo00@000000?oo
o`3o_g@007Bo203oool002d0oooo00<000000?ooo`3oool0D03oool00`3ogi`0B00007Boo`030?oo
o`030?noM00004P0W=oo00H0oooo00H0gia800000000000000000000B02Lgol20?ooo`030000003o
ool0oooo04h0oooo0P0000000`1d_ol0oooo0?ooo`1B0?ooo`030?oOW0180000M;oo00T0oooo00H0
gia800000000000000000000B02Lgol20?ooo`030000003oool0oooo04h0oooo00D000000?ooo`3o
okl0M01809cOo`070?ooo`00;@3oool00`000000oooo0?ooo`1@0?ooo`030?oo_`1d0000B9cO00<0
oooo00<0gia80000M02oool01P3oool0103ookl0M00000000018W=l30?ooo`030000003oool0oooo
04l0oooo0P0000000`1d_ol0oooo0?ooo`1B0?ooo`030?oOW0180000M;oo00T0oooo00@0oono07@0
000000000000103oool00`000000oooo0?ooo`1>0?ooo`050000003oool0oono07@00018W=l01`3o
ool002d0oooo00<000000?ooo`3oool0D@3oool00`3OW4P004RL0=ooo`020?ooo`030;md0000M;l0
oooo00L0oooo00<0_g@00000003oool00`3oool00`000000oooo0?ooo`1?0?ooo`80000000<0M;oo
0?ooo`3oool0DP3oool00`3ogi`0B00007Boo`0:0?ooo`030;md00000000oooo00<0oooo00<00000
0?ooo`3oool0C03oool0203o_i`0W=oo0?ooo`000000oooo0?oOW0180000B9cO1`3oool002d0oooo
0`00001A0?ooo`070?oo_`1d0000M;oo0?ooo`3o_g@0001d0;ooo`080?ooo`060000001800000000
0000000004P00000D03oool01@3ooml0W4P0000000000000M;oo0580oooo00D0oooO09a800000000
000007Boo`0:0?ooo`060?oOW000000000000000000004P00000C`3oool0203ooml0W4Q809cOo`00
0000oono07@0000007@0_ooo1`3oool002d0oooo00<000000?ooo`3oool0DP3oool01@3ookl0M000
0000000007@0_ooo00T0oooo00<000000;md000000000P0000000`18W=l0oooo0?ooo`1@0?ooo`03
0?noM0000000M;oo05@0oooo00<0okmd0000001d_ol02P3oool00`000000_g@00000000200000003
04RLg`3oool0oooo04h0oooo00H0oooO09a80000000000000000M02oool80?ooo`00;@3oool00`00
0000oooo0?ooo`1O0?ooo`050000003oool0oooo0?ooo`000000E@3oool00`000000oooo0?ooo`1P
0?ooo`040000003oool0oooo000005@0oooo00<000000?ooo`3oool02@3oool002d0oooo00<00000
0?ooo`3oool0G`3oool010000000oooo0?ooo`00001F0?ooo`030000003oool0oooo05l0oooo00@0
00000?ooo`3oool00000E@3oool00`000000oooo0?ooo`090?ooo`00;@3oool00`000000oooo0?oo
o`1N0?ooo`050000003oool0oooo0?ooo`000000EP3oool00`000000oooo0?ooo`1O0?ooo`030000
003oool0000005H0oooo00<000000?ooo`3oool02@3oool002d0oooo00<000000?ooo`3oool0GP3o
ool010000000oooo0?ooo`00001G0?ooo`030000003oool0oooo05l0oooo0P00001G0?ooo`030000
003oool0oooo00T0oooo000]0?ooo`030000003oool0oooo05d0oooo00@000000?ooo`3oool00000
F03oool00`000000oooo0?ooo`1N0?ooo`030000003oool0000005P0oooo00<000000?ooo`3oool0
203oool002d0oooo00<000000?ooo`3oool0G@3oool00`000000oooo0000001I0?ooo`030000003o
ool0oooo05h0oooo0P00001I0?ooo`030000003oool0oooo00P0oooo000]0?ooo`030000003oool0
oooo05`0oooo00<000000?ooo`000000FP3oool00`000000oooo0?ooo`1M0?ooo`800000FP3oool0
0`000000oooo0?ooo`080?ooo`00;@3oool00`000000oooo0?ooo`1L0?ooo`800000F`3oool00`00
0000oooo0?ooo`1M0?ooo`030000003oool0oooo05T0oooo00<000000?ooo`3oool0203oool002d0
oooo00<000000?ooo`3oool0G03oool00`000000oooo0?ooo`1J0?ooo`030000003oool0oooo05`0
oooo00<000000?ooo`3oool0FP3oool00`000000oooo0?ooo`080?ooo`00;@3oool00`000000oooo
0?ooo`1K0?ooo`030000003oool0oooo05/0oooo00<000000?ooo`3oool0G03oool00`000000oooo
0?ooo`1J0?ooo`030000003oool0oooo00P0oooo000T0?ooool00000S@00000002d0oooo00<00000
0?ooo`3oool0403oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo0100oooo00<00000
0?ooo`3oool0403oool00`000000oooo0?ooo`0>0?ooo`8000004P3oool00`000000oooo0?ooo`0@
0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0@
0?ooo`8000004@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo0100oooo00<00000
0?ooo`3oool03`3oool00`000000oooo0?ooo`0?0?ooo`8000004P3oool00`000000oooo0?ooo`0@
0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0@
0?ooo`030000003oool0oooo00P0oooo000]0?ooo`030000003oool0oooo05X0oooo0P00001M0?oo
o`800000FP3oool00`000000oooo0000001M0?ooo`030000003oool0oooo00P0oooo000]0?ooo`03
0000003oool0oooo05T0oooo0P00001N0?ooo`800000F@3oool00`000000oooo0000001Y0?ooo`00
;@3oool00`000000oooo0?ooo`1H0?ooo`800000G`3oool2000005T0oooo00<000000?ooo`000000
J@3oool002d0oooo00<000000?ooo`3oool0E`3oool00`000000oooo0000001O0?ooo`800000F03o
ool00`000000oooo0000001Z0?ooo`00;@3oool2000005L0oooo00<000000?ooo`000000H03oool2
000005L0oooo00@000000?ooo`3oool00000JP3oool002d0oooo0P00001F0?ooo`040000003oool0
oooo00000600oooo0P00001F0?ooo`040000003oool0oooo000006/0oooo000]0?ooo`800000E@3o
ool01@000000oooo0?ooo`3oool000000600oooo0P00001F0?ooo`040000003oool0oooo000006/0
oooo000]0?ooo`800000E03oool01@000000oooo0?ooo`3oool000000640oooo0P00001E0?ooo`04
0000003oool0oooo000006`0oooo000]0?ooo`800000E03oool01@000000oooo0?ooo`3oool00000
0640oooo0P00001D0?ooo`050000003oool0oooo0?ooo`000000K03oool002d0oooo0`00001B0?oo
o`050000003oool0oooo0?ooo`000000HP3oool2000005<0oooo00D000000?ooo`3oool0oooo0000
001]0?ooo`00;@3oool200000580oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`1P
0?ooo`800000DP3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo06/0oooo000]0?oo
o`800000D@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0640oooo00<000000?oo
o`000000D@3oool01@000000oooo0?ooo`3oool0000006h0oooo000]0?ooo`800000D03oool00`00
0000oooo0?ooo`030?ooo`030000003oool0oooo0640oooo00<000000?ooo`000000D03oool01@00
0000oooo0?ooo`3oool0000006l0oooo000]0?ooo`800000D03oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo0680oooo00<000000?ooo`000000C`3oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo06d0oooo000]0?ooo`800000C`3oool00`000000oooo0?ooo`030?ooo`03
0000003oool0oooo0680oooo00<000000?ooo`000000CP3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo06h0oooo000]0?ooo`030000003oool0000004d0oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`1S0?ooo`030000003oool0000004d0oooo00<000000?ooo`3oool0
0P3oool00`000000oooo0?ooo`1_0?ooo`00;@3oool00`000000oooo0000001<0?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool0I03oool00`000000oooo0000001<0?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool0L03oool002d0oooo00<000000?ooo`000000B`3oool0
0`000000oooo0?ooo`020?ooo`800000I`3oool00`000000oooo0000001;0?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool0L@3oool002d0oooo00<000000?ooo`000000A`3oool90000
06T0oooo00<000000?ooo`000000A`3oool9000007@0oooo000]0?ooo`030000003oool0000004@0
oooo0`0000030?ooo`030000003oool0oooo06`0oooo00<000000?ooo`000000A@3oool200000080
oooo00<000000?ooo`3oool0N03oool002d0oooo00<000000?ooo`000000@`3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo06d0oooo00<000000?ooo`000000@`3oool2000000@0oooo
00<000000?ooo`3oool0N03oool002d0oooo0`0000120?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool0KP3oool00`000000oooo000000120?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool0N@3oool002d0oooo00<000000?ooo`000000@P3oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo06l0oooo00<000000?ooo`000000@@3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo07X0oooo000]0?ooo`030000003oool000000440oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`1`0?ooo`030000003oool000000440oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`1k0?ooo`00;@3oool00`000000oooo000000110?ooo`05
0000003oool0oooo0?ooo`000000L`3oool010000000oooo0?ooo`00000o0?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool0O03oool002d0oooo00<000000?ooo`000000@03oool01@00
0000oooo0?ooo`3oool0000007@0oooo00@000000?ooo`3oool00000?P3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo07`0oooo000]0?ooo`040000003oool0oooo000003h0oooo00<0
00000?ooo`3oool00P3oool00`000000oooo0?ooo`1b0?ooo`040000003oool0oooo000003h0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`1m0?ooo`00;@3oool010000000oooo0?oo
o`00000n0?ooo`050000003oool0oooo0?ooo`000000M@3oool010000000oooo0?ooo`00000m0?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool0OP3oool002d0oooo00@000000?ooo`3o
ool00000?@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo07<0oooo00@000000?oo
o`3oool00000?@3oool01@000000oooo0?ooo`3oool000000840oooo000]0?ooo`040000003oool0
oooo000003d0oooo00D000000?ooo`3oool0oooo0000001f0?ooo`040000003oool0oooo000003`0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`1o0?ooo`00;@3oool010000000oooo
0?ooo`00000l0?ooo`050000003oool0oooo0?ooo`000000M`3oool010000000oooo0?ooo`00000l
0?ooo`050000003oool0oooo0?ooo`000000PP3oool002d0oooo00@000000?ooo`3oool00000?03o
ool010000000oooo0?ooo`00001h0?ooo`040000003oool0oooo000003/0oooo00D000000?ooo`3o
ool0oooo000000230?ooo`00;@3oool4000003/0oooo00D000000?ooo`3oool0oooo0000001h0?oo
o`040000003oool0oooo000003/0oooo00@000000?ooo`3oool00000Q03oool002d0oooo00@00000
0?ooo`3oool00000>`3oool010000000oooo0?ooo`00001i0?ooo`040000003oool0oooo000003/0
oooo00<000000?ooo`000000Q@3oool002d0oooo00@000000?ooo`3oool00000>`3oool00`000000
oooo0000001j0?ooo`040000003oool0oooo000003X0oooo00@000000?ooo`3oool00000Q@3oool0
02d0oooo00@000000?ooo`3oool00000>P3oool00`000000oooo0000001k0?ooo`040000003oool0
oooo000003X0oooo00<000000?ooo`000000QP3oool002d0oooo00@000000?ooo`3oool00000>P3o
ool2000007`0oooo00@000000?ooo`3oool00000>@3oool00`000000oooo000000270?ooo`00;@3o
ool01@000000oooo0?ooo`3oool0000003P0oooo0P00001m0?ooo`040000003oool0oooo000003T0
oooo0P0000280?ooo`00;@3oool01@000000oooo0?ooo`3oool0000003P0oooo00<000000?ooo`3o
ool0O03oool01@000000oooo0?ooo`3oool0000003P0oooo00<000000?ooo`3oool0Q`3oool002d0
oooo00D000000?ooo`3oool0oooo0000000g0?ooo`800000OP3oool01@000000oooo0?ooo`3oool0
000003L0oooo0P0000290?ooo`00;@3oool01@000000oooo0?ooo`3oool0000003H0oooo0P00001o
0?ooo`050000003oool0oooo0?ooo`000000=`3oool00`000000oooo0?ooo`280?ooo`00;@3oool0
1@000000oooo0?ooo`3oool0000003H0oooo0P00001o0?ooo`050000003oool0oooo0?ooo`000000
=P3oool00`000000oooo0?ooo`290?ooo`00;@3oool01@000000oooo0?ooo`3oool0000003D0oooo
0P0000200?ooo`050000003oool0oooo0?ooo`000000=@3oool2000008/0oooo000]0?ooo`050000
003oool0oooo0?ooo`000000=03oool00`000000oooo000000200?ooo`050000003oool0oooo0?oo
o`000000=03oool00`000000oooo0000002;0?ooo`00;@3oool3000000030?ooo`000000oooo0380
oooo00@000000?ooo`3oool00000P03oool01@000000oooo0?ooo`3oool0000003<0oooo00<00000
0?ooo`000000S03oool002d0oooo00D000000?ooo`3oool0oooo0000000b0?ooo`040000003oool0
oooo00000840oooo00D000000?ooo`3oool0oooo0000000b0?ooo`040000003oool0oooo000008`0
oooo000]0?ooo`050000003oool0oooo0?ooo`000000<P3oool010000000oooo0?ooo`0000210?oo
o`050000003oool0oooo0?ooo`000000<@3oool010000000oooo0?ooo`00002=0?ooo`00;@3oool0
1@000000oooo0?ooo`3oool000000340oooo00@000000?ooo`3oool00000PP3oool01@000000oooo
0?ooo`3oool000000300oooo00D000000?ooo`3oool0oooo0000002=0?ooo`00;@3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo02d0oooo00D000000?ooo`3oool0oooo000000220?oo
o`050000003oool0oooo0?ooo`000000<03oool01@000000oooo0?ooo`3oool0000008d0oooo000]
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0;03oool01@000000oooo0?ooo`3o
ool0000008<0oooo00D000000?ooo`3oool0oooo0000000_0?ooo`050000003oool0oooo0?ooo`00
0000SP3oool00140oooo00D0omnL04P000000000001d0;ooo`030?ooo`060?noM0000000M;oo0?oo
o`3ooml0W4P00`0000000`1d_ol0oooo0?ooo`080?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool0:`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0840oooo00D00000
0?ooo`3oool0oooo0000000^0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0S03o
ool00100oooo00L0oono07@0001d_ol0oooo0?noM00007@0_ooo0080oooo00L0okmd0000001d_ol0
oooo0?oog`2LB7@0_ooo0080oooo00<0_g@007Boo`3oool0203oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo02/0oooo00D000000?ooo`3oool0oooo000000240?ooo`050000003oool0
oooo0?ooo`000000;@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo08d0oooo000@
0?ooo`030;md0000B9`0gooo0080oooo00<0_g@0001d_`3oool02P3oool00`3ooml0W4Qd0;ooo`08
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo0880oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0Z
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0S@3oool000l0oooo00<0oono07@0
0018W=l00`3oool00`3OW4P0001d0;ooo`0;0?ooo`030;md001d_ol0oooo00L0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0oooo0080oooo00<000000?oo
o`3oool0P`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo02T0oooo00<000000?oo
o`3oool00`3oool00`000000oooo0?ooo`2=0?ooo`003`3oool00`3ogi`0B00007Boo`030?ooo`03
0?noM00004P0W=oo00X0oooo00<0oooO09a80018W=l0203oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo02P0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`230?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool0:@3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo08h0oooo000?0?ooo`030?oOW0180000M;oo00<0oooo00<0okmd0000B02Lgol0
2P3oool00`3OW4P0000007Boo`080?ooo`@0000000<0oooo0000003oool0:@3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo08@0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`0X0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0SP3oool000l0oooo00<0
omnL04P0001d_ol00`3oool00`3o_g@0001809cOo`060?ooo`070=oOg`3oool0oono07@000000000
001d0;ooo`080?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool09`3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo08@0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`0W0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0SP3oool000l0oooo
00<0omnL04P0001d_ol00`3oool00`3o_g@0001809cOo`060?ooo`060=nLB0000000000000000000
04P0W=oo2@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01`0oooo100000060?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool0Q03oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo01`0oooo100000060?ooo`030000003oool0oooo00@0oooo00<000000?oo
o`3oool0S`3oool000l0oooo00<0oono07@00018W=l00`3oool00`3OW4P0001d0;ooo`060?ooo`04
0?oo_`1d0000000004RLg`/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0J0?oo
o`8000000`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00@0oooo00<000000?oo
o`3oool0Q@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01/0oooo0P0000030?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`2@0?oo
o`00403oool00`3OW4P004RL0=ooo`020?ooo`030;md0000M;l0oooo00L0oooo00<0_g@007Boo`3o
ool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3o
ool00`3oool2000000030?ooo`000000oooo00H0oooo00<000000?ooo`3oool0Q@3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0103oool200000003
0?ooo`000000oooo00D0oooo00<000000?ooo`3oool0T@3oool00100oooo00L0oono07@0001d_ol0
oooo0?noM00007@0_ooo00P0oooo00H0omnL04P00000000000000000B02Lgol80?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`060?ooo`8000001@3o
ool2000008P0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0J0?ooo`030000003o
ool0oooo00H0oooo0P0000040?ooo`800000U03oool00140oooo00D0oono07@000000000001d0;oo
o`0:0?ooo`050;md00000000000000000018W=l0203oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo01P0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`05000008X0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool01@00002E0?ooo`00;@3oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo01P0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`2@0?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`060?ooo`030000003o
ool0oooo09X0oooo000]0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0603oool0
0`000000oooo0?ooo`050?ooo`030000003oool0oooo0900oooo00<000000?ooo`3oool00`3oool0
0`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0V`3oool0
02d0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo
00D0oooo00<000000?ooo`3oool0T@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
01L0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`2L0?ooo`00;@3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool01@3oool00`000000
oooo0?ooo`2A0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool05`3oool00`000000
oooo0?ooo`040?ooo`030000003oool0oooo09d0oooo000]0?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0980oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool0WP3oool002d0oooo0`0000040?ooo`030000003oool0oooo01D0oooo00<0
00000?ooo`3oool0103oool00`000000oooo0?ooo`2C0?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool05P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo09h0oooo000]
0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo09@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0F
0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0W`3oool002d0oooo00<000000?oo
o`3oool0103oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo00@0oooo00<000000?oo
o`3oool0U03oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo01D0oooo00<000000?oo
o`3oool00`3oool00`000000oooo0?ooo`2P0?ooo`00;@3oool00`000000oooo0?ooo`040?ooo`03
0000003oool0oooo01@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`2E0?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo0:40oooo000]0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0
503oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo09H0oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`0E0?ooo`050000003oool0oooo0?ooo`000000Y03oool002d0oooo
00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool0U`3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01<0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`2R0?ooo`00;@3oool00`000000oooo0?oo
o`040?ooo`030000003oool0oooo01<0oooo00D000000?ooo`3oool0oooo0000002J0?ooo`030000
003oool0oooo00@0oooo00<000000?ooo`3oool04`3oool01@000000oooo0?ooo`3oool000000:D0
oooo000]0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool04`3oool010000000oooo
0?ooo`00002K0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool04`3oool010000000
oooo0?ooo`00002V0?ooo`00;@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0180
oooo00@000000?ooo`3oool00000W03oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo
0180oooo00@000000?ooo`3oool00000Y`3oool002d0oooo00<000000?ooo`3oool0103oool00`00
0000oooo0?ooo`0B0?ooo`030000003oool0000009d0oooo00<000000?ooo`3oool0103oool00`00
0000oooo0?ooo`0B0?ooo`040000003oool0oooo00000:L0oooo000]0?ooo`030000003oool0oooo
00D0oooo00<000000?ooo`3oool04@3oool2000009h0oooo00<000000?ooo`3oool0103oool00`00
0000oooo0?ooo`0B0?ooo`030000003oool000000:P0oooo000]0?ooo`<000001@3oool00`000000
oooo0?ooo`0A0?ooo`800000WP3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0180
oooo0P00002Y0?ooo`00;@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0100oooo
0P00002O0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool04@3oool200000:X0oooo
000]0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0403oool00`000000oooo0?oo
o`2N0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?oo
o`2Y0?ooo`00;@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00l0oooo0P00002P
0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool03`3oool200000:/0oooo000]0?oo
o`030000003oool0oooo00D0oooo00<000000?ooo`3oool03P3oool200000:40oooo00<000000?oo
o`3oool01@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool000000:/0oooo000]0?ooo`03
0000003oool0oooo00D0oooo00<000000?ooo`3oool03P3oool200000:40oooo00<000000?ooo`3o
ool01@3oool00`000000oooo0?ooo`0=0?ooo`030000003oool000000:`0oooo000]0?ooo`030000
003oool0oooo00D0oooo00<000000?ooo`3oool03@3oool00`000000oooo0000002Q0?ooo`030000
003oool0oooo00D0oooo00<000000?ooo`3oool0303oool010000000oooo0?ooo`00002/0?ooo`00
;@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00/0oooo00@000000?ooo`3oool0
0000X@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00`0oooo00@000000?ooo`3o
ool00000[03oool002d0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0:0?ooo`04
0000003oool0oooo00000:80oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0;0?oo
o`050000003oool0oooo0?ooo`000000[03oool002d0oooo00<000000?ooo`3oool01P3oool00`00
0000oooo0?ooo`090?ooo`050000003oool0oooo0?ooo`000000XP3oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo00X0oooo00D000000?ooo`3oool0oooo0000002]0?ooo`00;@3oool0
0`000000oooo0?ooo`060?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`2P0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo0:/0oooo000]0?ooo`030000003oool0oooo
00H0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
0:00oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo
00<0oooo00<000000?ooo`3oool0Z`3oool002d0oooo0`0000060?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`2Q0?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0:/0
oooo000]0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo0:40oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0[03oool002d0oooo00<0
00000?ooo`3oool01P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00@0oooo00<0
00000?ooo`3oool0X@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo00<0
00000?ooo`3oool0103oool00`000000oooo0?ooo`2/0?ooo`00;@3oool00`000000oooo0?ooo`07
0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`2Q
0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo0:`0oooo000]0?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool00`3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0:80oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00H0oooo00<000000?oo
o`3oool0[03oool002d0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo00D0oooo00<000000?ooo`3oool0XP3oool00`000000oooo0?ooo`060?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`2]0?ooo`00
;@3oool00`000000oooo0?ooo`070?ooo`050000003oool0oooo0?ooo`000000203oool00`000000
oooo0?ooo`2R0?ooo`030000003oool0oooo00L0oooo00D000000?ooo`3oool0oooo000000080?oo
o`030000003oool0oooo0:d0oooo000]0?ooo`030000003oool0oooo00L0oooo00D000000?ooo`3o
ool0oooo000000080?ooo`030000003oool0oooo0:80oooo00<000000?ooo`3oool01`3oool01000
0000oooo0?ooo`0000090?ooo`030000003oool0oooo0:d0oooo000]0?ooo`030000003oool0oooo
00L0oooo00@000000?ooo`3oool00000203oool00`000000oooo0?ooo`2S0?ooo`030000003oool0
oooo00L0oooo00<000000?ooo`0000002P3oool00`000000oooo0?ooo`2]0?ooo`00;@3oool00`00
0000oooo0?ooo`080?ooo`8000002@3oool00`000000oooo0?ooo`2S0?ooo`030000003oool0oooo
00L0oooo00<000000?ooo`0000002@3oool00`000000oooo0?ooo`2^0?ooo`00;@3oool00`000000
oooo0?ooo`080?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0X`3oool00`000000
oooo0?ooo`070?ooo`8000002P3oool00`000000oooo0?ooo`2^0?ooo`00;@3oool3000000L0oooo
0P00000:0?ooo`030000003oool0oooo0:<0oooo00<000000?ooo`3oool01`3oool2000000X0oooo
00<000000?ooo`3oool0[P3oool002d0oooo00<000000?ooo`3oool01P3oool00`000000oooo0000
00090?ooo`030000003oool0oooo0:@0oooo00<000000?ooo`3oool01P3oool00`000000oooo0000
000:0?ooo`030000003oool0oooo0:h0oooo000]0?ooo`030000003oool0oooo00D0oooo00D00000
0?ooo`3oool0oooo000000080?ooo`030000003oool0oooo0:@0oooo00<000000?ooo`3oool01@3o
ool010000000oooo0?ooo`0000090?ooo`030000003oool0oooo0:l0oooo000]0?ooo`030000003o
ool0oooo00@0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`060?ooo`030000003o
ool0oooo0:@0oooo00<000000?ooo`3oool01@3oool010000000oooo0?ooo`0000090?ooo`030000
003oool0oooo0:l0oooo000]0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00`3o
ool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0:D0oooo00<000000?ooo`3oool0103o
ool01@000000oooo0?ooo`3oool0000000T0oooo00<000000?ooo`3oool0[`3oool002d0oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00D0oooo00<0
00000?ooo`3oool0Y@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool01@3oool00`000000oooo0?ooo`2`0?ooo`00;@3oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`2U
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo0;00oooo000O0?ooo`060;md00000000000000000000B9`0gooo203o
ool01@000000oooo0?ooo`3oool0000000P0oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`2V0?ooo`050000003oool0oooo0?ooo`0000001`3oool00`000000oooo0?ooo`040?ooo`03
0000003oool0oooo0;40oooo000P0?ooo`030?oOW0180000M;oo00X0oooo00@000000?ooo`3oool0
00002@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0:H0oooo00@000000?ooo`3o
ool000002@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0;40oooo000P0?ooo`03
0?oOW0180000M;oo00X0oooo00<000000?ooo`0000002P3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo0:L0oooo00<000000?ooo`0000002P3oool00`000000oooo0?ooo`030?ooo`03
0000003oool0oooo0;40oooo000P0?ooo`030?oOW0180000M;oo00X0oooo00<000000?ooo`000000
2`3oool01@000000oooo0?ooo`3oool000000:T0oooo0P00000<0?ooo`050000003oool0oooo0?oo
o`000000]03oool00200oooo00<0omnL04P0001d_ol02P3oool2000000`0oooo00D000000?ooo`3o
ool0oooo0000002Y0?ooo`800000303oool01@000000oooo0?ooo`3oool000000;@0oooo000P0?oo
o`030?oOW0180000M;oo00X0oooo1000000;0?ooo`030000003oool000000:X0oooo00<000000?oo
o`3oool0303oool00`000000oooo0000002e0?ooo`00803oool00`3ogi`0B00007Boo`0:0?ooo`03
0000003oool0oooo00d0oooo0P00002i0?ooo`800000]P3oool00200oooo00<0omnL04P0001d_ol0
2P3oool00`000000oooo0?ooo`3o0?oooh40oooo000P0?ooo`030?oOW0180000M;oo00X0oooo00<0
00000?ooo`3oool0o`3ooon10?ooo`00803oool00`3ogi`0B00007Boo`0:0?ooo`030000003oool0
oooo0?l0ooooP@3oool001h0oooo00D0oooO09a800000000000007Boo`0:0?ooo`030000003oool0
oooo0?l0ooooP@3oool00200oooo00<0okmd0000001d_ol02P3oool00`000000oooo0?ooo`3o0?oo
oh40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oo
ok40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oo
ok40oooo003o0?oook40oooo0000\
\>"],
  ImageRangeCache->{{{0, 431}, {265.813, 0}} -> {-0.24435, -1.15354, \
0.00798502, 0.0130192}}]
}, Closed]],

Cell["\<\
Note that it is necessary to increase the number of points plotted in order \
to fully appreciate the periodic nature of the ripples that are superimposed \
upon the sawtooth.  We clearly see that the error in a finite Fourier series \
is dominated by the first omitted term, which impresses its periodicity upon \
the final result.\
\>", "Text"],

Cell[TextData[{
  "Often it is faster to employ functional programming techniques based upon \
lists than to use traditional procedural programming techniques based upon \
iteration.  To illustrate this we compare the times needed to sum the Fourier \
series using a scalar product of lists with the time needed using a direct \
summation of terms in a ",
  StyleBox["Do", "InlineInput",
    FontWeight->"Bold"],
  " loop."
}], "Text"],

Cell[BoxData[
    \(time[Dot, x_, 
        nmax_] := \(Timing[\(f[x, 
              nmax];\)]\)\[LeftDoubleBracket]1\[RightDoubleBracket]\)], \
"Input"],

Cell[BoxData[
    \(time[Do, x_, 
        nmax_] := \(Timing[sum = 0; 
          Do[sum = sum + \ Sin[2  \[Pi]\ m\ x] \((2\/\(m\ \[Pi]\))\)\ , {m, 
              1, nmax}];]\)\[LeftDoubleBracket]1\[RightDoubleBracket]\)], \
"Input"],

Cell[BoxData[
    \(ratio[x_, nmax_]\  := \ 
      time[Do, x, nmax]\/time[Dot, x, nmax]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ratio[0.2, 1000]\)], "Input"],

Cell[BoxData[
    \(2.1999999999999575`\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ratio[x, 1000]\)], "Input"],

Cell[BoxData[
    \(21.500000000049738`\)], "Output"]
}, Closed]],

Cell["\<\
Thus, we find that for numerical calculations the list method is more than \
twice as fast as direct summation while for symbolic calculations the ratio \
increases to about 20.  (Your results may differ somewhat because of \
processor dependence, but should be similar.)  Functional programming based \
upon lists offers some of the advantages of parallel processing where \
operations are applied to entire lists in parallel rather than to individual \
elements in series.\
\>", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Outer product", "Subsection"],

Cell[TextData[{
  "An ",
  StyleBox["outer product",
    FontSlant->"Italic"],
  " or ",
  StyleBox["tensor product",
    FontSlant->"Italic"],
  " is defined as the set of all possible products of the elements of two \
tensors, which then forms a tensor of rank equal to the product of the ranks \
its factors.  ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " provides a generalized outer product ",
  ButtonBox["Outer",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["f,list1,list2,\[CenterEllipsis]", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontWeight->"Bold"],
  "in which the function ",
  StyleBox["f", "InlineInput",
    FontWeight->"Bold"],
  " is applied to all possible selections of elements from the top level of \
each list supplied.  If ",
  StyleBox["f", "InlineInput"],
  " has two slots then two lists are needed, three lists for three slots, \
etc."
}], "Text"],

Cell[BoxData[
    \(Clear[a, b, f]\)], "Input"],

Cell[BoxData[
    \(at\  = \ Array[a, \ {2, 2}]; \ bt\  = \ Array[b, {3, 3}];\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ct = Outer[f, at, bt]\)], "Input"],

Cell[BoxData[
    \({{{{f[a[1, 1], b[1, 1]], f[a[1, 1], b[1, 2]], 
            f[a[1, 1], b[1, 3]]}, {f[a[1, 1], b[2, 1]], f[a[1, 1], b[2, 2]], 
            f[a[1, 1], b[2, 3]]}, {f[a[1, 1], b[3, 1]], f[a[1, 1], b[3, 2]], 
            f[a[1, 1], b[3, 3]]}}, {{f[a[1, 2], b[1, 1]], 
            f[a[1, 2], b[1, 2]], f[a[1, 2], b[1, 3]]}, {f[a[1, 2], b[2, 1]], 
            f[a[1, 2], b[2, 2]], f[a[1, 2], b[2, 3]]}, {f[a[1, 2], b[3, 1]], 
            f[a[1, 2], b[3, 2]], 
            f[a[1, 2], b[3, 3]]}}}, {{{f[a[2, 1], b[1, 1]], 
            f[a[2, 1], b[1, 2]], f[a[2, 1], b[1, 3]]}, {f[a[2, 1], b[2, 1]], 
            f[a[2, 1], b[2, 2]], f[a[2, 1], b[2, 3]]}, {f[a[2, 1], b[3, 1]], 
            f[a[2, 1], b[3, 2]], 
            f[a[2, 1], b[3, 3]]}}, {{f[a[2, 2], b[1, 1]], 
            f[a[2, 2], b[1, 2]], f[a[2, 2], b[1, 3]]}, {f[a[2, 2], b[2, 1]], 
            f[a[2, 2], b[2, 2]], f[a[2, 2], b[2, 3]]}, {f[a[2, 2], b[3, 1]], 
            f[a[2, 2], b[3, 2]], f[a[2, 2], b[3, 3]]}}}}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Dimensions[ct]\)], "Input"],

Cell[BoxData[
    \({2, 2, 3, 3}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(TensorRank[ct]\)], "Input"],

Cell[BoxData[
    \(4\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Suppose that ",
  StyleBox["eqs",
    FontSlant->"Italic"],
  " is a list of linear equations and that ",
  StyleBox["vars",
    FontSlant->"Italic"],
  " is a list of the independent variables.  Write a function that returns a \
matrix ",
  StyleBox["A",
    FontSlant->"Italic"],
  " and a vector ",
  StyleBox["rhs",
    FontSlant->"Italic"],
  " such that the system of of linear equations is expressed in the form ",
  StyleBox["A.vars\[Equal]rhs",
    FontSlant->"Italic"],
  ".  [Hints: replace Equal by Subtract to transform ",
  StyleBox["eqs",
    FontSlant->"Italic"],
  " to a list of polynomials.  Then use Outer with Coefficient to produce the \
coefficient matrix ",
  StyleBox["A.",
    FontSlant->"Italic"],
  "]  ",
  "  Test your function using the equations {a x +b y\[Equal] c z + 1, d y-2\
\[Equal] e z + f x,  g y + h z -i x+3\[Equal]0} with variables x,y,z."
}], "Exercise"],

Cell[CellGroupData[{

Cell["Example: expansion in terms of orthogonal functions", "Subsubsection"],

Cell[TextData[{
  "We can construct a matrix which represents monomials of the form ",
  Cell[BoxData[
      \(TraditionalForm\`x\^n\)]],
  " in terms of Legendre polynomials ",
  Cell[BoxData[
      \(TraditionalForm\`P\_m[x]\)]],
  " by applying the orthogonality relationship"
}], "Text"],

Cell[BoxData[
    \(\[Integral]\_\(-1\)\%1 P\_n[x] 
          P\_m[x] \[DifferentialD]x = \(2\/\(2  n + 
              1\)\) \[Delta]\_\(n, m\)\)], "InlineInput",
  Evaluatable->False,
  TextAlignment->Center,
  TextJustification->0],

Cell["to the series representation", "Text"],

Cell[BoxData[
    \(x\^n = \[Sum]\+\(m = 0\)\%n\( a\_\(n, m\)\) P\_m[x]\)], "InlineInput",
  Evaluatable->False,
  TextAlignment->Center,
  TextJustification->0],

Cell["to deduce the expansion coefficients", "Text"],

Cell[BoxData[
    \(a\_\(n, m\) = \(\(2  m + 1\)\/2\) \(\[Integral]\_\(-1\)\%1\( x\^n\) 
            P\_m[x] \[DifferentialD]x\)\)], "InlineInput",
  Evaluatable->False,
  TextAlignment->Center,
  TextJustification->0],

Cell[TextData[{
  "The coefficient matrix can now be constructed using ",
  StyleBox["Outer",
    FontWeight->"Bold"],
  " to form the integrals."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Pm\  = \ 
        Table[\(\(2  m + 1\)\/2\) LegendreP[m, \ x], {m, 0, 6}];\)\), "\n", 
    \(\(xn = Table[x\^n, {n, 0, 6}];\)\), "\n", 
    \(\(coefficientMatrix\  = 
        Outer[Integrate[#1\ #2, {x, \(-1\), 1}] &, xn, Pm];\)\), "\n", 
    \(coefficientMatrix\  // MatrixForm\)}], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "0", "0", "0", "0", "0", "0"},
            {"0", "1", "0", "0", "0", "0", "0"},
            {\(1\/3\), "0", \(2\/3\), "0", "0", "0", "0"},
            {"0", \(3\/5\), "0", \(2\/5\), "0", "0", "0"},
            {\(1\/5\), "0", \(4\/7\), "0", \(8\/35\), "0", "0"},
            {"0", \(3\/7\), "0", \(4\/9\), "0", \(8\/63\), "0"},
            {\(1\/7\), "0", \(10\/21\), "0", \(24\/77\), "0", \(16\/231\)}
            }], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Closed]],

Cell["We check our work by reconstructing the monomials.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(coefficientMatrix\  . \ LegendreP[Range[0, 6], x] // 
      Simplify\)], "Input"],

Cell[BoxData[
    \({1, x, x\^2, x\^3, x\^4, x\^5, x\^6}\)], "Output"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[" Applying functions to a list", "Subsection"],

Cell[TextData[{
  ButtonBox["Map",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["f,expr", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" or ",
    FontWeight->"Plain"],
  StyleBox["f/@expr", "InlineInput"],
  StyleBox[" applies ",
    FontWeight->"Plain"],
  StyleBox["f", "InlineInput"],
  StyleBox[" to each element at the first level of an expression.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[BoxData[
    \(Clear["\<Global`*\>"]\)], "Input"],

Cell[BoxData[{
    \(\(aVector\  = \ {x, y, z};\)\), "\n", 
    \(\(aMatrix\  = \ {{a, b, c, d}, {e, f, g, h}\ };\)\), "\n", 
    \(\(aTensor\  = {{{a, b, c}, \ {d, e, f}}, \ {{g, h, i}, {j, k, 
              l}}\ };\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f /@ aVector\)], "Input"],

Cell[BoxData[
    \({f[x], f[y], f[z]}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(f /@ aMatrix\)], "Input"],

Cell[BoxData[
    \({f[{a, b, c, d}], f[{e, f, g, h}]}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Map[Sin[\(#1  \[Pi]\)\/4] &, \ Range[10]]\)], "Input"],

Cell[BoxData[
    \({1\/\@2, 1, 1\/\@2, 0, \(-\(1\/\@2\)\), \(-1\), \(-\(1\/\@2\)\), 0, 
      1\/\@2, 1}\)], "Output"]
}, Closed]],

Cell[TextData[{
  ButtonBox["Apply",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["f,expr", "InlineInput"],
  StyleBox["]", "InlineInput"],
  StyleBox[" or ",
    FontWeight->"Plain"],
  StyleBox["f@@expr", "InlineInput"],
  StyleBox[" replaces the head of ",
    FontWeight->"Plain"],
  StyleBox["expr", "InlineInput"],
  StyleBox[" with ",
    FontWeight->"Plain"],
  StyleBox["f", "InlineInput"],
  StyleBox[".  Thus, if ",
    FontWeight->"Plain"],
  StyleBox["expr", "InlineInput"],
  StyleBox[" is a list and ",
    FontWeight->"Plain"],
  StyleBox["f", "InlineInput"],
  StyleBox[" a function, the result if a function with a list of arguments.  \
For example, we can calculate the sum of ",
    FontWeight->"Plain"],
  Cell[BoxData[
      FormBox[
        StyleBox[\(1/n\^2\),
          FontWeight->"Plain"], TraditionalForm]]],
  " ",
  StyleBox["over a range of ",
    FontWeight->"Plain"],
  StyleBox["n",
    FontWeight->"Plain",
    FontSlant->"Italic"],
  StyleBox[" by first forming a list of ",
    FontWeight->"Plain"],
  StyleBox["n",
    FontWeight->"Plain",
    FontSlant->"Italic"],
  StyleBox[" using ",
    FontWeight->"Plain"],
  StyleBox["Range", "InlineInput"],
  StyleBox[", obtaining a list of ",
    FontWeight->"Plain"],
  Cell[BoxData[
      FormBox[
        StyleBox[\(1/n\^2\),
          FontWeight->"Plain"], TraditionalForm]]],
  " ",
  StyleBox["by applying listable functions to the entire list rather than to \
its elements, and then using ",
    FontWeight->"Plain"],
  StyleBox["Apply", "InlineInput"],
  StyleBox[" to form the sum (replacing ",
    FontWeight->"Plain"],
  StyleBox["List", "InlineInput"],
  StyleBox[" by ",
    FontWeight->"Plain"],
  StyleBox["Plus", "InlineInput"],
  StyleBox[").",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Apply[\ Plus, \ 1/Range[10]\^2\ ] // N\)], "Input"],

Cell[BoxData[
    \(1.5497677311665408`\)], "Output"]
}, Closed]],

Cell["The result is within about 10% of the infinite sum.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sum[n\^\(-2\), {n, 1, \[Infinity]}]\)], "Input"],

Cell[BoxData[
    \(\[Pi]\^2\/6\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(% // N\)], "Input"],

Cell[BoxData[
    \(1.6449340668482262`\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The convergence is easily examined using ",
  StyleBox["FoldList", "InlineInput",
    FontWeight->"Bold"],
  " to produce a list of partial sums and ",
  StyleBox["ListPlot", "InlineInput",
    FontWeight->"Bold"],
  " to display that list.  Evidently, the convergence is fairly slow."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(ListPlot[
        Evaluate[FoldList[\ Plus, 0, \ 1/Range[30]\^2\ ]]];\)\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.030722 -2.02012 1.62729 [
[.17742 .08286 -3 -9 ]
[.17742 .08286 3 0 ]
[.33103 .08286 -6 -9 ]
[.33103 .08286 6 0 ]
[.48464 .08286 -6 -9 ]
[.48464 .08286 6 0 ]
[.63825 .08286 -6 -9 ]
[.63825 .08286 6 0 ]
[.79186 .08286 -6 -9 ]
[.79186 .08286 6 0 ]
[.94547 .08286 -6 -9 ]
[.94547 .08286 6 0 ]
[.01131 .01399 -24 -4.5 ]
[.01131 .01399 0 4.5 ]
[.01131 .17672 -24 -4.5 ]
[.01131 .17672 0 4.5 ]
[.01131 .25809 -18 -4.5 ]
[.01131 .25809 0 4.5 ]
[.01131 .33945 -24 -4.5 ]
[.01131 .33945 0 4.5 ]
[.01131 .42082 -18 -4.5 ]
[.01131 .42082 0 4.5 ]
[.01131 .50218 -24 -4.5 ]
[.01131 .50218 0 4.5 ]
[.01131 .58355 -18 -4.5 ]
[.01131 .58355 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.17742 .09536 m
.17742 .10161 L
s
[(5)] .17742 .08286 0 1 Mshowa
.33103 .09536 m
.33103 .10161 L
s
[(10)] .33103 .08286 0 1 Mshowa
.48464 .09536 m
.48464 .10161 L
s
[(15)] .48464 .08286 0 1 Mshowa
.63825 .09536 m
.63825 .10161 L
s
[(20)] .63825 .08286 0 1 Mshowa
.79186 .09536 m
.79186 .10161 L
s
[(25)] .79186 .08286 0 1 Mshowa
.94547 .09536 m
.94547 .10161 L
s
[(30)] .94547 .08286 0 1 Mshowa
.125 Mabswid
.05453 .09536 m
.05453 .09911 L
s
.08525 .09536 m
.08525 .09911 L
s
.11598 .09536 m
.11598 .09911 L
s
.1467 .09536 m
.1467 .09911 L
s
.20814 .09536 m
.20814 .09911 L
s
.23886 .09536 m
.23886 .09911 L
s
.26959 .09536 m
.26959 .09911 L
s
.30031 .09536 m
.30031 .09911 L
s
.36175 .09536 m
.36175 .09911 L
s
.39247 .09536 m
.39247 .09911 L
s
.4232 .09536 m
.4232 .09911 L
s
.45392 .09536 m
.45392 .09911 L
s
.51536 .09536 m
.51536 .09911 L
s
.54608 .09536 m
.54608 .09911 L
s
.5768 .09536 m
.5768 .09911 L
s
.60753 .09536 m
.60753 .09911 L
s
.66897 .09536 m
.66897 .09911 L
s
.69969 .09536 m
.69969 .09911 L
s
.73041 .09536 m
.73041 .09911 L
s
.76114 .09536 m
.76114 .09911 L
s
.82258 .09536 m
.82258 .09911 L
s
.8533 .09536 m
.8533 .09911 L
s
.88402 .09536 m
.88402 .09911 L
s
.91475 .09536 m
.91475 .09911 L
s
.97619 .09536 m
.97619 .09911 L
s
.25 Mabswid
0 .09536 m
1 .09536 L
s
.02381 .01399 m
.03006 .01399 L
s
[(1.25)] .01131 .01399 1 0 Mshowa
.02381 .17672 m
.03006 .17672 L
s
[(1.35)] .01131 .17672 1 0 Mshowa
.02381 .25809 m
.03006 .25809 L
s
[(1.4)] .01131 .25809 1 0 Mshowa
.02381 .33945 m
.03006 .33945 L
s
[(1.45)] .01131 .33945 1 0 Mshowa
.02381 .42082 m
.03006 .42082 L
s
[(1.5)] .01131 .42082 1 0 Mshowa
.02381 .50218 m
.03006 .50218 L
s
[(1.55)] .01131 .50218 1 0 Mshowa
.02381 .58355 m
.03006 .58355 L
s
[(1.6)] .01131 .58355 1 0 Mshowa
.125 Mabswid
.02381 .03027 m
.02756 .03027 L
s
.02381 .04654 m
.02756 .04654 L
s
.02381 .06281 m
.02756 .06281 L
s
.02381 .07909 m
.02756 .07909 L
s
.02381 .11163 m
.02756 .11163 L
s
.02381 .12791 m
.02756 .12791 L
s
.02381 .14418 m
.02756 .14418 L
s
.02381 .16045 m
.02756 .16045 L
s
.02381 .193 m
.02756 .193 L
s
.02381 .20927 m
.02756 .20927 L
s
.02381 .22554 m
.02756 .22554 L
s
.02381 .24182 m
.02756 .24182 L
s
.02381 .27436 m
.02756 .27436 L
s
.02381 .29063 m
.02756 .29063 L
s
.02381 .30691 m
.02756 .30691 L
s
.02381 .32318 m
.02756 .32318 L
s
.02381 .35573 m
.02756 .35573 L
s
.02381 .372 m
.02756 .372 L
s
.02381 .38827 m
.02756 .38827 L
s
.02381 .40454 m
.02756 .40454 L
s
.02381 .43709 m
.02756 .43709 L
s
.02381 .45336 m
.02756 .45336 L
s
.02381 .46964 m
.02756 .46964 L
s
.02381 .48591 m
.02756 .48591 L
s
.02381 .51846 m
.02756 .51846 L
s
.02381 .53473 m
.02756 .53473 L
s
.02381 .551 m
.02756 .551 L
s
.02381 .56727 m
.02756 .56727 L
s
.02381 .59982 m
.02756 .59982 L
s
.02381 .61609 m
.02756 .61609 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.008 w
.11598 .01399 Mdot
.1467 .19481 Mdot
.17742 .29651 Mdot
.20814 .3616 Mdot
.23886 .40681 Mdot
.26959 .44002 Mdot
.30031 .46544 Mdot
.33103 .48553 Mdot
.36175 .5018 Mdot
.39247 .51525 Mdot
.4232 .52655 Mdot
.45392 .53618 Mdot
.48464 .54449 Mdot
.51536 .55172 Mdot
.54608 .55807 Mdot
.5768 .56371 Mdot
.60753 .56873 Mdot
.63825 .57324 Mdot
.66897 .5773 Mdot
.69969 .58099 Mdot
.73041 .58436 Mdot
.76114 .58743 Mdot
.79186 .59026 Mdot
.82258 .59286 Mdot
.8533 .59527 Mdot
.88402 .5975 Mdot
.91475 .59958 Mdot
.94547 .60151 Mdot
.97619 .60332 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.875},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00:03oool0
0`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool00003
0?ooo`3o_g@0000000@0000000<007Bo0?ooo`3oool00P3oool00`2oM0000000001d_`030?ooo`03
0?oo_`1d0000000000@0000000D0M;oo0?ooo`3oool0oooo0;md00030000000307Boo`3oool0oooo
00@0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00103oool00`2LB4P0W=oo0?ooo`050?ooo`03
0;md0000000007Bo00@0oooo00<0_g@00000M02oool00P3oool01P3OW7@0W=oo0?ooo`3oool0_g@0
001d_`80oooo00<0omnL04P0001d_ol01@3oool00`000000oooo0?ooo`3o0?ooohH0oooo00040?oo
o`0309a8B02Lgol0oooo00d0oooo00<0okmd0000B02Lgol02P3oool00`3o_g@007Bo0?ooo`040?oo
o`030000003oool0oooo0280oooo00<000000?ooo`3oool0o`3ooomQ0?ooo`00103oool00`2LB4P0
W=oo0?ooo`0>0?ooo`030?oOW0180000B9cO00T0oooo00<0okmd001d_`3oool0103oool400000200
oooo0`00003o0?ooof80oooo00040?ooo`0309a8B02Lgol0oooo0100oooo00<0W4P004RLg`3oool0
1`3oool00`2LB000M;oo0?ooo`040?ooo`030000003oool0oooo0280oooo00<000000?ooo`3oool0
o`3ooomQ0?ooo`00103oool00`2LB4P0W=oo0?ooo`0A0?ooo`0609a8M02oool0oooo0?ooo`3ookl0
M0000`0000000`18W=l0oooo0?ooo`040?ooo`030000003oool0oooo0?l0ooooQP3oool000@0oooo
00<0W4Q809cOo`3oool0303oool00`3OW4P0M;oo0?ooo`020?ooo`070;md001d_ol0oooo0?ooo`3o
okl0M01d0;ooo`090?ooo`030000003oool0oooo0?l0ooooQP3oool000060?ooo`3OW4P000000018
W02LB4P0W=oo3@3oool01`3o_g@0001d0;ooo`3oool0okmd0000B02Lgol00P3oool00`3ookl0M01d
0;ooo`090?ooo`030000003oool0oooo0?l0ooooQP3oool000<0oooo00<0gia80000B02Lgol03P3o
ool01@3o_g@000000000000004P0W=oo00<0oooo00<0oono07@0000000000P0000000`0007@0_ooo
0?ooo`040?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3o
oon60?ooo`00:03oool300000?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?oo
o`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0oooo
QP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o
0?ooohH0oooo000X0?ooo`<00000o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0
oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0>03o
ool01@2oM0000000000000000000M;oo03<0oooo00<0okmd0000000000000`0000001@00M;l0oooo
0?ooo`3oool0okmd00<0000000<0M;oo0?ooo`3oool0;@3oool00`3o_g@000000000000300000005
001d_`3oool0oooo0?ooo`2oM0000`0000000`1d_ol0oooo0?ooo`0[0?ooo`030?oo_`1d00000000
00@0000000D0M;oo0?ooo`3oool0oooo0?noM0030000000307Boo`3oool0oooo02/0oooo00<0oono
07@000000000100000001@1d_ol0oooo0?ooo`3oool0_g@000<0000000<0M;oo0?ooo`3oool0;P3o
ool01@2oM0000000000000000000B9cO00@0oooo00D0okmd000000000000000007Boo`0@0?ooo`00
:03oool00`000000oooo0?ooo`0g0?ooo`070;md0000M;l0oooo0?ooo`3ogi`0B00007Boo`0e0?oo
o`0309a8B02Lgol0oooo00@0oooo00H0W4Qd0;ooo`3oool0oono07@0M02ooola0?ooo`0309a8B02L
gol0oooo00<0oooo00L0_g@0001d_`3oool0oooo0?oOW0180000M;oo02d0oooo00<0_g@00000M02o
ool00P3oool00`3OW7@0W=oo0?ooo`020?ooo`0609a8M02oool0oooo0?oo_`1d07@0_ooo;@3oool0
0`2oM000001d0;ooo`020?ooo`060=nLM02Lgol0oooo0?ooo`2oM00007Bo0P3oool00`3ogi`0B000
07Boo`0^0?ooo`070;md0000M;l0oooo0?ooo`3ookl0M00004RLg`030?ooo`0609a8M02oool0oooo
0?oo_`1d07@0_ooo3`3oool002P0oooo00<000000?ooo`3oool0?03oool00`3o_g@007Bo0?ooo`0d
0?ooo`0309a8B02Lgol0oooo00<0oooo00<0okmd001d_`3oool00P3oool00`3OW4P0B9cO0?ooo`0`
0?ooo`0309a8B02Lgol0oooo00P0oooo00<0okmd001d_`3oool0;@3oool00`3o_g@0001809cOo`05
0?ooo`030?noM000M;l0oooo0080oooo00<0gia804RLg`3oool0;@3oool00`3o_g@0001809cOo`0:
0?ooo`030?noM000M;l0oooo0380oooo00H0okmd001d_`3oool0oooo0?noM000M;l30?ooo`030=nL
B018W=l0oooo00h0oooo000X0?ooo`030000003oool0oooo03`0oooo00<0okmd001d_`3oool0=03o
ool00`2LB4P0W=oo0?ooo`030?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool0<03o
ool00`2LB4P0W=oo0?ooo`080?ooo`030?noM000M;l0oooo02h0oooo00<0omnL04P00018W=l0103o
ool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo02h0oooo00<0omnL04P00018W=l02@3o
ool00`3o_g@007Bo0?ooo`0a0?ooo`030?oOW01804P0W=oo0080oooo00<0gia804RLg`3oool00P3o
ool00`3o_g@007Bo0?ooo`0>0?ooo`00:03oool3000003`0oooo00<0W4P007Boo`3oool0=03oool0
0`2LB4P0W=oo0?ooo`030?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool0<03oool0
0`2LB4P0W=oo0?ooo`080?ooo`0309a8001d_ol0oooo0300oooo00<0W4P004RLg`3oool00P3oool0
0`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo0300oooo00<0W4P004RLg`3oool01`3oool0
0`2LB000M;oo0?ooo`0_0?ooo`040=nLB0000000001809cOo`<0oooo00<0gia804RLg`3oool00P3o
ool00`3o_g@007Bo0?ooo`0>0?ooo`00:03oool00`000000oooo0?ooo`0g0?ooo`030?oo_`1d0000
00000080000000<0B9cO0?ooo`3oool0=03oool00`2LB4P0W=oo0?ooo`030?ooo`030=nLB018W=l0
oooo0080oooo00<0okmd001d_`3oool0<03oool00`2LB4P0W=oo0?ooo`030?ooo`030?oo_`1d0000
00000080000000<0B9cO0?ooo`3oool0<@3oool01P2LB7@0_ooo0?ooo`3oool0gia804RLg`<0oooo
00<0okmd001d_`3oool0<@3oool01P2LB7@0_ooo0?ooo`3oool0oono07@000<0000000<0B9cO0?oo
o`3oool0<@3oool00`3ogi`0B01809cOo`020?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d
_`3oool03P3oool002P0oooo00<000000?ooo`3oool0=`3oool00`3ookl0M01d0;ooo`0i0?ooo`03
09a8B02Lgol0oooo00<0oooo00<0okmd04RLg`3oool00P3oool00`3OW4P0B9cO0?ooo`0`0?ooo`03
09a8B02Lgol0oooo00<0oooo00<0oono07@0M02oool0<@3oool00`3OW4P0M;oo0?ooo`020?ooo`06
0;md001d_ol0oooo0?ooo`3o_g@0B9cO0`3oool00`3OW4P0B9cO0?ooo`0/0?ooo`030=nLB01d_ol0
oooo0080oooo00L0_g@007Boo`3oool0oooo0?oo_`1d07@0_ooo03L0oooo00H0_g@007Boo`3oool0
oooo0?noM018W=l30?ooo`030=nLB018W=l0oooo00h0oooo000X0?ooo`030000003oool0oooo03L0
oooo00<0oono07@0M02oool0=P3oool01@3OW4P000000018W02LB4P0W=oo00D0oooo00H0W4P007Bo
o`3oool0omnL04P0M02oool^0?ooo`050=nLB000000004RL09a8B02Lgol0103oool00`3ookl0M01d
0;ooo`0a0?ooo`070?noM00007@0_ooo0?ooo`3o_g@0001809cOo`030?ooo`0609a8001d_ol0oooo
0?oOW01807@0_ooo;@3oool01`3o_g@0001d0;ooo`3oool0okmd0000B02Lgol00P3oool00`3ookl0
M01d0;ooo`0b0?ooo`070?noM00004P0W=oo0?ooo`3ogi`0B01809cOo`030?ooo`0609a8001d_ol0
oooo0?oOW01807@0_ooo3`3oool002P0oooo00<000000?ooo`3oool0=`3oool00`3ookl0M0000000
0002000000030000M02oool0oooo03<0oooo00<0gia80000B02Lgol01@3oool01@3ookl0M0000000
000004P0W=oo0340oooo00<0gia80000B02Lgol0103oool00`3ookl0M00000000002000000030000
M02oool0oooo02d0oooo00D0okmd000000000000001809cOo`040?ooo`050?oo_`1d000000000000
B02Lgol0;`3oool01@3o_g@000000000000004P0W=oo00<0oooo00<0oono07@0000000000P000000
0`0007@0_ooo0?ooo`0^0?ooo`050?oOW018000000000000001d_ol0103oool01@3ookl0M0000000
000004P0W=oo0100oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo0`00003o
0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3o
ool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003o
ool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`00
0000oooo0?ooo`3o0?ooohH0oooo000O0?ooool00000T@0000010?ooo`00:03oool00`000000oooo
0?ooo`0:0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`0:0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool02P3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`0:0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`0:0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool02P3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo00P0oooo000X0?ooo`030000003oool0oooo03/0oooo00<0
00000?ooo`3oool0>P3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo03X0oooo00<0
00000?ooo`3oool0>P3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo01@0oooo000X
0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?oo
o`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`<00000o`3ooon60?ooo`00:03o
ool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool0
02P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0
oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3o
oon60?ooo`00:03oool300000?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?oo
o`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0oooo
QP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o
0?ooohH0oooo000X0?ooo`<00000o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0
oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3o
oon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo
0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool300000?l0oooo
QP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o
0?ooohH0oooo00000`3oool0okmd0000000400000003001d_`3oool0oooo0080oooo00<0_g@00000
0000M;l01@3oool01@2oM0000000000000000000B9cO00@0oooo00D0_g@0000000000000000007Bo
o`060?ooo`030000003oool0oooo0?l0ooooQP3oool000@0oooo00<0W4Q809cOo`3oool01@3oool0
0`2oM0000000001d_`040?ooo`070;md0000M;l0oooo0?ooo`3ookl0M00004RLg`020?ooo`070;md
0000M;l0oooo0?ooo`3ogi`0B00007Boo`050?ooo`030000003oool0oooo0?l0ooooQP3oool000@0
oooo00<0W4Q809cOo`3oool04@3oool00`3o_g@007Bo0?ooo`060?ooo`030?noM000M;l0oooo00@0
oooo00<000000?ooo`3oool0o`3ooon60?ooo`00103oool00`2LB4P0W=oo0?ooo`0@0?ooo`030?oO
W01804P0W=oo00L0oooo00<0okmd001d_`3oool0103oool400000?l0ooooQ@3oool000@0oooo00<0
W4Q809cOo`3oool03P3oool0103OW4P000000000B02Lgol80?ooo`0309a8001d_ol0oooo00@0oooo
00<000000?ooo`3oool0o`3ooon60?ooo`00103oool00`2LB4P0W=oo0?ooo`0@0?ooo`030?oOW018
04P0W=oo0080oooo00<0oono07@0000000000P0000000`18W=l0oooo0?ooo`040?ooo`030000003o
ool0oooo0?l0ooooQP3oool000@0oooo00<0W4Q809cOo`3oool04@3oool01`2oM000M;oo0?ooo`3o
ool0oono07@0M02oool02@3oool00`000000oooo0?ooo`3o0?ooohH0oooo00001P3oool0gia80000
0000B9`0W4Q809cOo`d0oooo00L0okmd0000B02Lgol0oooo0?oOW01804P0W=oo0080oooo00<0oono
07@0M02oool02@3oool00`000000oooo0?ooo`3o0?ooohH0oooo00030?ooo`030=nLB00004P0W=oo
00h0oooo00D0omnL04P000000000000007Boo`030?ooo`030?oo_`1d000000000080000000<0001d
0;ooo`3oool0103oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo
0?l0ooooQP3oool002P0oooo0`00000_0?ooo`030000003oool0oooo0?l0ooooE03oool002P0oooo
00<000000?ooo`3oool0;P3oool300000?l0ooooE@3oool002P0oooo00<000000?ooo`3oool0;`3o
ool00`000000oooo0?ooo`3o0?oooe@0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool0
02P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0
oooo000X0?ooo`<00000o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X
0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?oo
o`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0oooo
QP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool300000?l0ooooQP3oool0
02P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0
oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3o
oon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`<00000o`3ooon60?oo
o`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0oooo
QP3oool000X0oooo00<0okmd0000000000000`0000000`00M;l0oooo0?ooo`020?ooo`030;md0000
000007Bo00H0oooo00D0omnL04P000000000000007Boo`050?ooo`030000003oool0oooo0?l0oooo
QP3oool000d0oooo00<0W4Q809cOo`3oool01@3oool00`2oM0000000001d_`080?ooo`030;md001d
_ol0oooo00D0oooo00<000000?ooo`3oool0o`3ooon60?ooo`003@3oool00`2LB4P0W=oo0?ooo`0@
0?ooo`030;md001d_ol0oooo00D0oooo00<000000?ooo`3oool0o`3ooon60?ooo`003@3oool00`2L
B4P0W=oo0?ooo`0<0?ooo`030=nLB0000000000000<0000000<0M;oo0?ooo`3oool00`3oool00`00
0000oooo0?ooo`3o0?ooohH0oooo000=0?ooo`0309a8B02Lgol0oooo00`0oooo00H0okmd0000M02o
ool0oooo0;md001d_ol60?ooo`@00000o`3ooon50?ooo`003@3oool00`2LB4P0W=oo0?ooo`0=0?oo
o`050=nLB000M;l0oooo0;md001d_ol01P3oool00`000000oooo0?ooo`3o0?ooohH0oooo000=0?oo
o`0309a8B02Lgol0oooo00h0oooo00@0W4P004RLg`2oM000M;oo1P3oool00`000000oooo0?ooo`3o
0?ooohH0oooo000:0?ooo`050=nLB000000004RL09a8B02Lgol03`3oool0103ogi`0B01804Q8001d
_ol60?ooo`030000003oool0oooo0?l0ooooQP3oool000`0oooo00<0gia80000B02Lgol0403oool0
0`3o_g@0000007Boo`060?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?oo
o`3oool0o`3ooon60?ooo`00:03oool300000?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0
o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0
oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000
oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo0`00
003o0?ooohH0oooo000X0?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0o`3ooom8
0?ooo`00:03oool00`000000oooo0?ooo`0j0?ooo`<00000o`3ooom90?ooo`00:03oool00`000000
oooo0?ooo`0k0?ooo`030000003oool0oooo0?l0ooooB03oool002P0oooo00<000000?ooo`3oool0
o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`<00000o`3ooon6
0?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0
ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?oo
o`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?oo
o`3oool0o`3ooon60?ooo`00:03oool300000?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0
o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo00000`3oool0okmd00000004
00000003001d_`3oool0oooo0080oooo00<0_g@000000000M;l01P3oool01@3ogi`0B00000000000
0000M;oo00<0oooo00D0_g@0000000000000000007Boo`060?ooo`030000003oool0oooo0?l0oooo
QP3oool000@0oooo00<0W4Q809cOo`3oool01@3oool00`2oM0000000001d_`080?ooo`030;md001d
_ol0oooo0080oooo00L0_g@0001d_`3oool0oooo0?oOW0180000M;oo00D0oooo00<000000?ooo`3o
ool0o`3ooon60?ooo`00103oool00`2LB4P0W=oo0?ooo`0@0?ooo`030;md001d_ol0oooo00L0oooo
00<0okmd001d_`3oool0103oool00`000000oooo0?ooo`3o0?ooohH0oooo00040?ooo`0309a8B02L
gol0oooo00`0oooo00<0gia80000000000000`0000000`1d_ol0oooo0?ooo`050?ooo`030?noM000
M;l0oooo00@0oooo1000003o0?ooohD0oooo00040?ooo`0309a8B02Lgol0oooo00`0oooo00H0okmd
0000M02oool0oooo0;md001d_ol80?ooo`0309a8001d_ol0oooo00@0oooo00<000000?ooo`3oool0
o`3ooon60?ooo`00103oool00`2LB4P0W=oo0?ooo`0=0?ooo`050=nLB000M;l0oooo0;md001d_ol0
0`3oool00`3ookl0M000000000020000000304RLg`3oool0oooo00@0oooo00<000000?ooo`3oool0
o`3ooon60?ooo`00103oool00`2LB4P0W=oo0?ooo`0>0?ooo`0409a80018W=l0_g@007Boo`<0oooo
00<0oono07@0M02oool02@3oool00`000000oooo0?ooo`3o0?ooohH0oooo00001P3oool0gia80000
0000B9`0W4Q809cOo`l0oooo00@0omnL04P0B018B000M;oo0`3oool00`3ookl0M01d0;ooo`090?oo
o`030000003oool0oooo0?l0ooooQP3oool000<0oooo00<0gia80000B02Lgol0403oool00`3o_g@0
000007Boo`030?ooo`030?oo_`1d000000000080000000<0001d0;ooo`3oool0103oool00`000000
oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo0`00
003o0?ooohH0oooo000X0?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3oool0o`3oooll
0?ooo`00:03oool00`000000oooo0?ooo`160?ooo`<00000o`3ooolm0?ooo`00:03oool00`000000
oooo0?ooo`170?ooo`030000003oool0oooo0?l0oooo?03oool002P0oooo00<000000?ooo`3oool0
o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`<00000o`3ooon6
0?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0
ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?oo
o`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?oo
o`3oool0o`3ooon60?ooo`00:03oool300000?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0
o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0
oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000
oooo0?ooo`3o0?ooohH0oooo000X0?ooo`<00000D`3oool00`000000oooo0?ooo`3o0?oooc00oooo
000X0?ooo`030000003oool0oooo0580oooo0`00003o0?oooc40oooo000X0?ooo`030000003oool0
oooo05<0oooo00<000000?ooo`3oool0o`3oool`0?ooo`002P3oool00`3o_g@00000000000030000
0003001d_`3oool0oooo0080oooo00<0_g@000000000M;l01@3oool01@2oM0000000000000000000
M;oo00H0oooo00<000000?ooo`3oool0o`3ooon60?ooo`003@3oool00`2LB4P0W=oo0?ooo`050?oo
o`030;md0000000007Bo00@0oooo00L0_g@0001d_`3oool0oooo0?oOW0180000M;oo00D0oooo00<0
00000?ooo`3oool0o`3ooon60?ooo`003@3oool00`2LB4P0W=oo0?ooo`0A0?ooo`030?noM000M;l0
oooo00@0oooo00<000000?ooo`3oool0o`3ooon60?ooo`003@3oool00`2LB4P0W=oo0?ooo`0A0?oo
o`030?noM000M;l0oooo00@0oooo00<000000?ooo`3oool0o`3ooon60?ooo`003@3oool00`2LB4P0
W=oo0?ooo`0A0?ooo`0309a8001d_ol0oooo00@0oooo1000003o0?ooohD0oooo000=0?ooo`0309a8
B02Lgol0oooo00`0oooo00<0oono07@0000000000P0000000`18W=l0oooo0?ooo`040?ooo`030000
003oool0oooo0?l0ooooQP3oool000d0oooo00<0W4Q809cOo`3oool0303oool00`3ookl0M01d0;oo
o`090?ooo`030000003oool0oooo0?l0ooooQP3oool000X0oooo00D0gia800000000B9`0W4Q809cO
o`0=0?ooo`030?oo_`1d07@0_ooo00T0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00303oool0
0`3OW4P0001809cOo`0=0?ooo`030?oo_`1d000000000080000000<0001d0;ooo`3oool0103oool0
0`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0
oooo0`00003o0?ooohH0oooo000X0?ooo`030000003oool0oooo0600oooo00<000000?ooo`3oool0
o`3ooolS0?ooo`00:03oool00`000000oooo0?ooo`1O0?ooo`<00000o`3ooolT0?ooo`00:03oool0
0`000000oooo0?ooo`1P0?ooo`030000003oool0oooo0?l0oooo8`3oool002P0oooo00<000000?oo
o`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000
003oool0oooo0?l0ooooQP3oool002P0oooo0`00003o0?ooohH0oooo000X0?ooo`030000003oool0
oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000
oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo06`0oooo00<000000?ooo`3oool0
o`3ooolG0?ooo`00:03oool00`000000oooo0?ooo`1[0?ooo`<00000o`3ooolH0?ooo`00:03oool3
000006`0oooo00<000000?ooo`3oool0o`3ooolG0?ooo`00:03oool00`000000oooo0?ooo`3o0?oo
ohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0
o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0
oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0N03oool00`000000oooo0?ooo`3o0?oo
o`/0oooo000X0?ooo`<00000M`3oool300000?l0oooo303oool002P0oooo00<000000?ooo`3oool0
N03oool00`000000oooo0?ooo`3o0?ooo`/0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3o
ool000030?ooo`3o_g@0000000@0000000<007Bo0?ooo`3oool00P3oool00`2oM0000000001d_`05
0?ooo`050;md0000000000000000001d_ol0103oool01@2oM0000000000000000000M;oo00H0oooo
00<000000?ooo`3oool0o`3ooon60?ooo`00103oool00`2LB4P0W=oo0?ooo`050?ooo`030;md0000
000007Bo00@0oooo00L0_g@0001d_`3oool0oooo0?oOW0180000M;oo0080oooo00L0_g@0001d_`3o
ool0oooo0?oOW0180000M;oo00D0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00103oool00`2L
B4P0W=oo0?ooo`0A0?ooo`030?noM000M;l0oooo00H0oooo00<0okmd001d_`3oool0103oool00`00
0000oooo0?ooo`240?ooo`030000003oool0oooo0?h0oooo00040?ooo`0309a8B02Lgol0oooo0140
oooo00<0okmd001d_`3oool01P3oool00`3o_g@007Bo0?ooo`040?ooo`@00000PP3oool300000?l0
oooo00040?ooo`0309a8B02Lgol0oooo0140oooo00<0W4P007Boo`3oool01P3oool00`2LB000M;oo
0?ooo`040?ooo`030000003oool0oooo08@0oooo00<000000?ooo`3oool0oP3oool000@0oooo00<0
W4Q809cOo`3oool0303oool00`3ookl0M000000000020000000604RLg`3oool0oooo0?ooo`3ookl0
M0000`0000000`18W=l0oooo0?ooo`040?ooo`030000003oool0oooo0?l0ooooQP3oool000@0oooo
00<0W4Q809cOo`3oool0303oool00`3ookl0M01d0;ooo`060?ooo`030?oo_`1d07@0_ooo00T0oooo
00<000000?ooo`3oool0o`3ooon60?ooo`0000H0oooo0=nLB000000004RL09a8B02Lgol=0?ooo`03
0?oo_`1d07@0_ooo00H0oooo00<0oono07@0M02oool02@3oool00`000000oooo0?ooo`3o0?ooohH0
oooo00030?ooo`030=nLB00004P0W=oo00d0oooo00<0oono07@0000000000P0000001P0007@0_ooo
0?ooo`3oool0oono07@000<0000000<0001d0;ooo`3oool0103oool00`000000oooo0?ooo`2A0?oo
o`030000003oool0oooo0?40oooo000X0?ooo`030000003oool0oooo0900oooo0`00003b0?ooo`00
:03oool300000940oooo00<000000?ooo`3oool0l@3oool002P0oooo00<000000?ooo`3oool0o`3o
oon60?ooo`00:03oool00`000000oooo0?ooo`2M0?ooo`030000003oool0oooo0>D0oooo000X0?oo
o`030000003oool0oooo09`0oooo0`00003V0?ooo`00:03oool00`000000oooo0?ooo`2M0?ooo`03
0000003oool0oooo0>D0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo0`00
002Y0?ooo`030000003oool0oooo0=T0oooo000X0?ooo`030000003oool0oooo0:P0oooo0`00003J
0?ooo`00:03oool00`000000oooo0?ooo`2Y0?ooo`030000003oool0oooo0=T0oooo000X0?ooo`03
0000003oool0oooo0;H0oooo00<000000?ooo`3oool0c03oool002P0oooo00<000000?ooo`3oool0
]@3oool300000<d0oooo000X0?ooo`030000003oool0oooo0;H0oooo00<000000?ooo`3oool0c03o
ool002P0oooo00<000000?ooo`3oool0`P3oool00`000000oooo0?ooo`300?ooo`00:03oool30000
0<40oooo0`0000310?ooo`00:03oool00`000000oooo0?ooo`320?ooo`030000003oool0oooo0<00
oooo000X0?ooo`030000003oool0oooo0<h0oooo00<000000?ooo`3oool0]03oool002P0oooo00<0
00000?ooo`3oool0c@3oool300000;D0oooo000X0?ooo`030000003oool0oooo0<h0oooo00<00000
0?ooo`3oool02@3oool00`000000oooo0?ooo`2X0?ooo`00:03oool00`000000oooo0?ooo`3I0?oo
o`<00000Z@3oool002P0oooo0`00003J0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool0V`3oool002P0oooo00<000000?ooo`3oool0iP3oool3000009`0oooo000X0?ooo`030000003o
ool0oooo0>L0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`2?0?ooo`002P3oool0
0`3o_g@000000000000300000003001d_`3oool0oooo0080oooo00<0_g@000000000M;l01P3oool0
1@2oM00000000000000007@0_ooo00D0oooo00<000000?ooo`3oool0lP3oool3000000X0oooo00<0
00000?ooo`3oool0P`3oool000d0oooo00<0W4Q809cOo`3oool01@3oool00`2oM0000000001d_`05
0?ooo`060=nLB000M;l0oooo0?ooo`3o_g@007Bo1@3oool00`000000oooo0?ooo`3c0?ooo`030000
003oool0oooo00P0oooo0`0000240?ooo`003@3oool00`2LB4P0W=oo0?ooo`0<0?ooo`030?oo_`1d
0000M;oo0080oooo00<0oono07A8W03oool0103oool00`000000oooo0?ooo`3o0?ooo`030000003o
ool0oooo00T0oooo00<000000?ooo`3oool0M`3oool000d0oooo00<0W4Q809cOo`3oool0303oool0
1`3o_g@004Q807@0M02oool0oooo0=nLB000M;l01@3oool00`000000oooo0?ooo`3o0?ooo`/0oooo
0`00000;0?ooo`030000003oool0oooo06X0oooo000=0?ooo`0309a8B02Lgol0oooo00`0oooo00<0
omnL04Q8W03o_g@00P0000000`00B9`0oooo0?ooo`040?ooo`@00000o`3oool;0?ooo`030000003o
ool0oooo00T0oooo0`00000:0?ooo`030000003oool0oooo05h0oooo000=0?ooo`0309a8B02Lgol0
oooo00`0oooo00<0oono07@0M02oool02@3oool00`000000oooo0?ooo`3o0?oooaT0oooo00<00000
0?ooo`3oool0203oool3000005l0oooo000=0?ooo`0309a8B02Lgol0oooo00d0oooo00<0_g@004RL
g`3oool0203oool00`000000oooo0?ooo`3o0?ooobD0oooo00<000000?ooo`3oool02@3oool00`00
0000oooo0?ooo`1B0?ooo`002P3oool01@3OW4P000000018W02LB4P0W=oo00h0oooo00<0oono07@0
0000M;l0203oool00`000000oooo0?ooo`3o0?oooc00oooo0`00000;0?ooo`030000003oool0oooo
04D0oooo000<0?ooo`030=nLB00004P0W=oo0100oooo00@0_g@000000000000004RL1@3oool00`00
0000oooo0?ooo`3o0?oooc40oooo00<000000?ooo`3oool02@3oool3000000X0oooo00<000000?oo
o`3oool02@3oool00`000000oooo0?ooo`0]0?ooo`00:03oool00`000000oooo0?ooo`3o0?oooch0
oooo00<000000?ooo`3oool0203oool3000000T0oooo0`00000:0?ooo`030000003oool0oooo0240
oooo000X0?ooo`<00000o`3ooom:0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
203oool3000000/0oooo00<000000?ooo`3oool0503oool002P0oooo00<000000?ooo`3oool0o`3o
oomR0?ooo`030000003oool0oooo00T0oooo0`00000:0?ooo`030000003oool0oooo00P0oooo000X
0?ooo`030000003oool0oooo0?l0ooooK`3oool00`000000oooo0?ooo`080?ooo`<000002@3oool0
02P0oooo00<000000?ooo`3oool0o`3ooomk0?ooo`030000003oool0oooo00P0oooo000X0?ooo`03
0000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03o
ool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`<00000o`3ooon60?ooo`00:03oool00`00
0000oooo0?ooo`3o0?ooohH0oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o
0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo0000
\
\>"],
  ImageRangeCache->{{{0, 431}, {265.813, 0}} -> {-3.34008, 1.22597, 0.122211, \
0.00230724}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercises", "ExerciseMain"],

Cell[CellGroupData[{

Cell["Trace of square matrix", "ExerciseTitle"],

Cell["\<\
Write a function which evaluates the trace of a square matrix, defined as the \
sum of the diagonal elements.  Your function should check the input structure \
and print an error message if the input is not a square matrix.\
\>", "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Laplacian using central differences", "ExerciseTitle"],

Cell[TextData[{
  "a) Suppose that function values ",
  Cell[BoxData[
      \(TraditionalForm\`f\_\(i, j\) = f[x\_i, y\_j]\)]],
  " are available for an ",
  Cell[BoxData[
      \(TraditionalForm\`m\[Times]n\)]],
  " grid, such that ",
  Cell[BoxData[
      \(TraditionalForm\`{x\_i = x\_0 + i\ h\_x, \ 
        y\_j = y\_0 + j\ h\_y}\)]],
  ".  Write a function using ",
  StyleBox["RotateRight", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["RotateLeft", "InlineInput",
    FontWeight->"Bold"],
  " that constructs the Laplacian array using the central-difference \
approximations  "
}], "ExerciseText"],

Cell[BoxData[
    \(TraditionalForm\`\[PartialD]\^2 f[x, y]\/\[PartialD]x\^2 \[TildeTilde] \
\((f[x - h\_x, y] - 2  f[x, y] + f[x + h\_x, y])\)/
        h\_x\^2\)], "DisplayFormula",
  TextAlignment->Center,
  TextJustification->0,
  FontFamily->"Times New Roman"],

Cell[BoxData[
    \(\[PartialD]\^2 f[x, y]\/\[PartialD]y\^2 \[TildeTilde] \((f[x, 
              y - h\_y] - 2  f[x, y] + f[x, y + h\_y])\)/
        h\_y\^2\)], "DisplayFormula",
  TextAlignment->Center,
  TextJustification->0,
  FontFamily->"Times New Roman"],

Cell[TextData[{
  "[Hint: the rotate functions have an optional argument that gives a list of \
rotations for each level.  For example, ",
  Cell[BoxData[
      \(TraditionalForm\`{k, l}\)]],
  " rotates the first level ",
  StyleBox["k",
    FontSlant->"Italic"],
  " positions and the second ",
  StyleBox["l",
    FontSlant->"Italic"],
  " positions.]"
}], "ExerciseText"],

Cell["\<\
b) Generalize your Laplacian function to an arbitrary number of dimensions.\
\>", "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Random walk", "ExerciseTitle"],

Cell[TextData[{
  "Suppose that a drunk randomly steps either forward, backward, left, or \
right one unit many times.  Create a list of coordinates {",
  StyleBox["{x,y}..}", "InlineInput"],
  " representing his path and then display that path as a set of line \
segments for each step.  [Hint: use ",
  StyleBox["NestList", "InlineInput",
    FontWeight->"Bold"],
  " to create a list of coordinates, ",
  StyleBox["Partition", "InlineInput",
    FontWeight->"Bold"],
  " to form a list of segments, map ",
  StyleBox["Line", "InlineInput",
    FontWeight->"Bold"],
  " onto the segment list, and ",
  StyleBox["Show[Graphics[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["list", "InlineInput"],
  StyleBox["]]", "InlineInput",
    FontWeight->"Bold"],
  " to display the path.]"
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Pauli identities", "ExerciseTitle"],

Cell[TextData[{
  "The Pauli spin vector ",
  Cell[BoxData[
      \(TraditionalForm\`\[Sigma]\&\[RightVector]\)]],
  " is defined as ",
  Cell[BoxData[
      \(TraditionalForm\`{\[Sigma]\_x, \[Sigma]\_y, \[Sigma]\_z}\)]],
  " where the customary representation of the Pauli matrices is given by"
}], "ExerciseText"],

Cell[TextData[{
  Cell[BoxData[
      FormBox[
        RowBox[{\(\[Sigma]\_x\), "=", 
          RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
                {"0", "1"},
                {"1", "0"}
                }], "\[NegativeThinSpace]", ")"}]}], TraditionalForm]]],
  ",   ",
  Cell[BoxData[
      FormBox[
        RowBox[{\(\[Sigma]\_y\), "=", 
          RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
                {"0", \(-\[ImaginaryI]\)},
                {"\[ImaginaryI]", "0"}
                }], "\[NegativeThinSpace]", ")"}]}], TraditionalForm]]],
  ",  ",
  Cell[BoxData[
      FormBox[
        RowBox[{\(\[Sigma]\_z\), "=", 
          RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
                {"1", "0"},
                {"0", \(-1\)}
                }], "\[NegativeThinSpace]", ")"}]}], TraditionalForm]]]
}], "ExerciseText",
  TextAlignment->Center,
  TextJustification->0],

Cell[TextData[{
  "Let ",
  Cell[BoxData[
      \(TraditionalForm\`a\&\[RightVector] = {a\_x, a\_y, a\_z}\)]],
  " and ",
  Cell[BoxData[
      \(TraditionalForm\`b\&\[RightVector] = {b\_x, b\_y, b\_z}\)]],
  " represent ordinary three-dimensional vectors and let \
\[DoubleStruckCapitalI] represent the two-dimensional identity matrix.  \
Finally, let ",
  Cell[BoxData[
      \(TraditionalForm\`\[Delta]\_\(i, j\)\)]],
  " represent the Kronecker delta symbol and let ",
  Cell[BoxData[
      \(TraditionalForm\`\[CurlyEpsilon]\_\(i, j, k\) = 
        Signature[{i, j, k}]\)]],
  " represent the Levi-Civita symbol, or completely antisymmetric tensor, \
with values ",
  Cell[BoxData[
      \(TraditionalForm\`\(+1\)\)]],
  " for even permutations, ",
  Cell[BoxData[
      \(TraditionalForm\`\(-1\)\)]],
  " for odd permutations, or ",
  Cell[BoxData[
      \(TraditionalForm\`0\)]],
  " for duplications of the indices.  Prove the following identities.\na) ",
  Cell[BoxData[
      \(TraditionalForm\`\(\[Sigma]\_i\) \[Sigma]\_j == \(\[Delta]\_\(i, 
                j\)\) \[DoubleStruckCapitalI] + \[ImaginaryI]\ \(\[Sum]\+k\ \
\(\[CurlyEpsilon]\_\(i, j, k\)\) \[Sigma]\_k\)\)]],
  " \nb) ",
  Cell[BoxData[
      \(TraditionalForm\`\(\[Sigma]\_i\) \[Sigma]\_j + \(\[Sigma]\_j\) \
\[Sigma]\_i == 2  \[Delta]\_\(i, j\)\)]],
  "\nc) ",
  Cell[BoxData[
      \(TraditionalForm\`\(\[Sigma]\_i\) \[Sigma]\_j - \(\[Sigma]\_j\) \
\[Sigma]\_i == \ 
        2  \[ImaginaryI] \(\[Sum]\+k\ \(\[CurlyEpsilon]\_\(i, j, 
                  k\)\) \[Sigma]\_k\)\)]],
  "\nd) ",
  Cell[BoxData[
      \(TraditionalForm\`a\&\[RightVector]\[CenterDot]\[Sigma]\&\[RightVector]\
\ b\&\[RightVector]\[CenterDot]\(\(\[Sigma]\)\(\ \)\)\&\[RightVector] == \ 
        a\&\[RightVector]\[CenterDot]
              b\&\[RightVector]\ \[DoubleStruckCapitalI] + \ \[ImaginaryI] 
             a\&\[RightVector]\[Cross]
                b\&\[RightVector]\[CenterDot]\ \(\(\[Sigma]\)\(\ \)\)\&\(\(\
\[RightVector]\)\(\ \)\)\)]],
  "\ne) ",
  Cell[BoxData[
      \(TraditionalForm\`\[Sigma]\&\[RightVector]\[Cross]\[Sigma]\&\
\[RightVector]\  == \ 2  \[ImaginaryI]  \[Sigma]\&\[RightVector]\)]]
}], "ExerciseText"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1400}, {0, 952}},
WindowToolbars->"EditBar",
WindowSize->{1392, 912},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
ShowCellLabel->False,
Magnification->1.5,
StyleDefinitions -> Notebook[{
  
  Cell[CellGroupData[{
  Cell["Style Definitions", "Subtitle"],
  
  Cell["\<\
Modify the definitions below to change the default appearance of all cells in \
a given style.  Make modifications to any definition using commands in the \
Format menu.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell["Style Environment Names", "Section"],
  
  Cell[StyleData[All, "Working"],
    PageWidth->WindowWidth,
    ScriptMinSize->9],
  
  Cell[StyleData[All, "Presentation"],
    PageWidth->WindowWidth,
    ScriptMinSize->12,
    FontSize->16],
  
  Cell[StyleData[All, "Condensed"],
    PageWidth->PaperWidth,
    CellBracketOptions->{"Margins"->{1, 1},
    "Widths"->{0, 5}},
    ScriptMinSize->7,
    FontSize->10],
  
  Cell[StyleData[All, "Printout"],
    PageWidth->PaperWidth,
    ScriptMinSize->7,
    FontSize->10,
    PrivateFontOptions->{"FontType"->"Outline"}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Notebook Options", "Section"],
  
  Cell["\<\
The options defined for the style below will be used at the Notebook level.\
\>", "Text"],
  
  Cell[StyleData["Notebook"],
    PageHeaders->{{Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"], None, Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"]}, {Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"], None, Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"]}},
    PageFooters->{{Cell[ 
            TextData[ {"Essential Mathematica for Students of Science"}], 
            "Footer"], None, Cell[ 
            TextData[ {"\[Copyright] James J. Kelly, 1998"}], "Footer"]}, {
        Cell[ 
            TextData[ {"Essential Mathematica for Students of Science"}], 
            "Footer"], None, Cell[ 
            TextData[ {"\[Copyright] James J. Kelly, 1998"}], "Footer"]}},
    PageHeaderLines->{True, True},
    PageFooterLines->{True, True},
    PrintingOptions->{"FirstPageHeader"->False,
    "FacingPages"->True},
    CellFrameLabelMargins->6,
    StyleMenuListing->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headings", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Title"],
    ShowCellBracket->True,
    CellMargins->{{0, 0}, {0, 0}},
    CellGroupingRules->"TitleGrouping",
    PageBreakBelow->False,
    LineSpacing->{1, 0},
    CounterIncrements->"Title",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subtitle", 0}, {"Subsubtitle", 0}},
    FontSize->34,
    FontColor->GrayLevel[1],
    Background->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["Title", "Presentation"],
    CellMargins->{{0, 0}, {0, 0}},
    LineSpacing->{1, 0},
    FontSize->44],
  
  Cell[StyleData["Title", "Condensed"],
    CellMargins->{{0, 0}, {0, 0}},
    FontSize->24],
  
  Cell[StyleData["Title", "Printout"],
    CellMargins->{{0, 0}, {0, 0}},
    FontSize->24,
    FontTracking->"Plain",
    FontColor->GrayLevel[0],
    Background->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subtitle"],
    CellMargins->{{0, 0}, {0, 0}},
    PageBreakBelow->False,
    LineSpacing->{1, 3},
    ParagraphIndent->-96,
    CounterIncrements->"Subtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subsubtitle", 0}},
    FontFamily->"Helvetica",
    FontSize->18,
    FontColor->GrayLevel[1],
    Background->RGBColor[0.2, 0.700008, 0.700008]],
  
  Cell[StyleData["Subtitle", "Presentation"],
    CellMargins->{{0, 0}, {0, 0}},
    LineSpacing->{1, 6},
    ParagraphIndent->-157,
    FontSize->30],
  
  Cell[StyleData["Subtitle", "Condensed"],
    CellMargins->{{0, 0}, {0, 0}},
    ParagraphIndent->-78,
    FontSize->14],
  
  Cell[StyleData["Subtitle", "Printout"],
    CellMargins->{{0, 0}, {0, 0}},
    ParagraphIndent->-85,
    FontSize->16,
    FontColor->GrayLevel[0],
    Background->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubtitle"],
    ShowCellBracket->True,
    CellMargins->{{10, 4}, {30, 10}},
    PageBreakBelow->False,
    CounterIncrements->"Subsubtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}},
    FontFamily->"Helvetica",
    FontSize->14,
    FontSlant->"Italic"],
  
  Cell[StyleData["Subsubtitle", "Presentation"],
    ShowCellBracket->True,
    CellMargins->{{8, 10}, {40, 20}},
    LineSpacing->{1, 0},
    FontSize->24],
  
  Cell[StyleData["Subsubtitle", "Condensed"],
    ShowCellBracket->True,
    CellMargins->{{8, 10}, {12, 8}},
    FontSize->12],
  
  Cell[StyleData["Subsubtitle", "Printout"],
    ShowCellBracket->True,
    CellMargins->{{9, 10}, {50, 10}},
    FontSize->14]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Section"],
    CellFrame->{{0, 0}, {0, 1}},
    CellDingbat->None,
    CellMargins->{{12, Inherited}, {4, 24}},
    CellGroupingRules->{"SectionGrouping", 30},
    PageBreakBelow->False,
    CellFrameMargins->6,
    CounterIncrements->"Section",
    CounterAssignments->{{"Subsection", 0}, {"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->16,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["Section", "Presentation"],
    CellMargins->{{10, 10}, {8, 32}},
    LineSpacing->{1, 2},
    FontSize->24,
    FontTracking->"Condensed"],
  
  Cell[StyleData["Section", "Condensed"],
    CellMargins->{{9, 0}, {2, 50}},
    FontSize->14],
  
  Cell[StyleData["Section", "Printout"],
    CellMargins->{{9, 0}, {2, 50}},
    FontSize->14,
    FontTracking->"Plain",
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsection"],
    CellMargins->{{12, Inherited}, {8, 20}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->13,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsection", "Presentation"],
    CellMargins->{{11, 10}, {8, 32}},
    LineSpacing->{1, 0},
    FontSize->22],
  
  Cell[StyleData["Subsection", "Condensed"],
    CellMargins->{{8, Inherited}, {2, 12}},
    FontSize->12],
  
  Cell[StyleData["Subsection", "Printout"],
    CellMargins->{{9, 0}, {4, 40}},
    FontSize->12]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubsection"],
    CellDingbat->"\[FilledSquare]",
    CellMargins->{{25, Inherited}, {8, 12}},
    CellGroupingRules->{"SectionGrouping", 50},
    PageBreakBelow->False,
    CounterIncrements->"Subsubsection",
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsubsection", "Presentation"],
    CellMargins->{{29, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Subsubsection", "Condensed"],
    CellMargins->{{21, 0}, {4, 20}},
    FontSize->11],
  
  Cell[StyleData["Subsubsection", "Printout"],
    CellMargins->{{21, 0}, {4, 20}},
    FontSize->11]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Body Text", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Text"],
    CellMargins->{{12, 10}, {5, 5}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 12},
    CounterIncrements->"Text",
    FontFamily->"Times"],
  
  Cell[StyleData["Text", "Presentation"],
    CellMargins->{{13, 10}, {8, 8}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12},
    FontSize->16],
  
  Cell[StyleData["Text", "Condensed"],
    CellMargins->{{9, 0}, {4, 4}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 6}],
  
  Cell[StyleData["Text", "Printout"],
    CellMargins->{{9, 0}, {4, 4}},
    ParagraphSpacing->{0, 6}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SmallText"],
    CellMargins->{{12, 10}, {5, 5}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 6},
    CounterIncrements->"SmallText",
    FontFamily->"Helvetica",
    FontSize->9],
  
  Cell[StyleData["SmallText", "Presentation"],
    CellMargins->{{13, 10}, {8, 8}},
    LineSpacing->{1, 5},
    FontSize->12],
  
  Cell[StyleData["SmallText", "Condensed"],
    CellMargins->{{8, 10}, {2, 2}},
    LineSpacing->{1, 2},
    FontSize->9],
  
  Cell[StyleData["SmallText", "Printout"],
    CellMargins->{{9, 0}, {4, 4}}]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Input/Output", "Section"],
  
  Cell["\<\
The cells in this section define styles used for input and output to the \
kernel.  Be careful when modifying, renaming, or removing these styles, \
because the front end associates special meanings with these style names.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Input"],
    CellFrame->0.5,
    CellMargins->{{25, 10}, {8, 8}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{5, Inherited}, {Inherited, Inherited}},
    DefaultFormatType->DefaultInputFormatType,
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    CounterIncrements->"Input",
    FontWeight->"Bold",
    Background->RGBColor[1, 0.700008, 0.4]],
  
  Cell[StyleData["Input", "Presentation"],
    CellMargins->{{25, Inherited}, {10, 10}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Input", "Condensed"],
    CellMargins->{{25, 0}, {6, 6}}],
  
  Cell[StyleData["Input", "Printout"],
    CellFrame->0.5,
    CellMargins->{{25, 0}, {6, 6}},
    Background->None]
  }, Closed]],
  
  Cell[StyleData["InlineInput"],
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    DefaultFormatType->DefaultInputFormatType,
    AutoItalicWords->{},
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    CounterIncrements->"Input",
    FontWeight->"Bold"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Output"],
    CellFrame->True,
    CellMargins->{{25, 10}, {8, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4},
    CellEditDuplicate->True,
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    CellLabelMargins->{{3, Inherited}, {Inherited, Inherited}},
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Output",
    Background->RGBColor[1, 0.900008, 0.900008]],
  
  Cell[StyleData["Output", "Presentation"],
    CellMargins->{{25, Inherited}, {12, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Output", "Condensed"],
    CellMargins->{{25, 0}, {6, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4}],
  
  Cell[StyleData["Output", "Printout"],
    CellMargins->{{25, 0}, {6, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4},
    Background->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Message"],
    CellMargins->{{62, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Message",
    StyleMenuListing->None,
    FontColor->RGBColor[1, 0, 0]],
  
  Cell[StyleData["Message", "Presentation"],
    CellMargins->{{74, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Message", "Condensed"],
    CellMargins->{{50, Inherited}, {Inherited, Inherited}}],
  
  Cell[StyleData["Message", "Printout"],
    CellMargins->{{54, Inherited}, {Inherited, Inherited}},
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Print"],
    CellMargins->{{62, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Print",
    StyleMenuListing->None],
  
  Cell[StyleData["Print", "Presentation"],
    CellMargins->{{74, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Print", "Condensed"],
    CellMargins->{{50, Inherited}, {Inherited, Inherited}}],
  
  Cell[StyleData["Print", "Printout"],
    CellMargins->{{54, Inherited}, {Inherited, Inherited}}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Graphics"],
    CellMargins->{{62, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"GraphicsGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Graphics",
    StyleMenuListing->None],
  
  Cell[StyleData["Graphics", "Presentation"],
    CellMargins->{{74, Inherited}, {Inherited, Inherited}}],
  
  Cell[StyleData["Graphics", "Condensed"],
    CellMargins->{{52, Inherited}, {Inherited, Inherited}},
    ImageSize->{175, 175}],
  
  Cell[StyleData["Graphics", "Printout"],
    CellMargins->{{54, Inherited}, {Inherited, Inherited}},
    ImageSize->{250, 250}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["CellLabel"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->11,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["CellLabel", "Presentation"],
    FontSize->12],
  
  Cell[StyleData["CellLabel", "Condensed"],
    FontSize->8],
  
  Cell[StyleData["CellLabel", "Printout"],
    FontSize->8,
    FontColor->GrayLevel[0]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Unique Styles", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Author"],
    CellMargins->{{10, 4}, {2, 10}},
    FontSize->12,
    FontSlant->"Italic"],
  
  Cell[StyleData["Author", "Presentation"],
    CellMargins->{{12, 10}, {2, 12}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12},
    FontSize->16],
  
  Cell[StyleData["Author", "Condensed"],
    CellMargins->{{8, 10}, {1, 4}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 4},
    FontSize->9],
  
  Cell[StyleData["Author", "Printout"],
    CellMargins->{{9, 0}, {4, 12}},
    ParagraphSpacing->{0, 6}]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Copyright"],
    CellMargins->{{10, 10}, {40, 2}},
    FontFamily->"Helvetica",
    FontSize->9],
  
  Cell[StyleData["Copyright", "Presentation"],
    CellMargins->{{12, 10}, {50, 2}},
    LineSpacing->{1, 5},
    FontSize->12],
  
  Cell[StyleData["Copyright", "Condensed"],
    CellMargins->{{8, 10}, {12, 1}},
    LineSpacing->{1, 2},
    FontSize->9],
  
  Cell[StyleData["Copyright", "Printout"],
    CellMargins->{{9, 0}, {72, 4}},
    FontSize->7]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Abstract"],
    CellMargins->{{45, 75}, {Inherited, 30}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Abstract", "Printout"],
    CellMargins->{{36, 67}, {Inherited, 50}},
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Example"],
    CellMargins->{{12, 10}, {5, 12}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 12},
    CounterIncrements->"Example",
    FontFamily->"Times",
    FontWeight->"Bold"],
  
  Cell[StyleData["Example", "Presentation"],
    CellMargins->{{18, 10}, {8, 20}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12}],
  
  Cell[StyleData["Example", "Condensed"],
    CellMargins->{{8, 10}, {4, 8}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 4}],
  
  Cell[StyleData["Example", "Printout"],
    CellMargins->{{9, 0}, {4, 10}},
    ParagraphSpacing->{0, 6}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Definition"],
    CellFrame->{{3, 0}, {0, 0}},
    CellMargins->{{52, 10}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Definition",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontColor->GrayLevel[1],
    Background->RGBColor[0.2, 0.700008, 0.700008]],
  
  Cell[StyleData["Definition", "Presentation"],
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Definition", "Condensed"],
    CellMargins->{{40, 10}, {1, 4}}],
  
  Cell[StyleData["Definition", "Printout"],
    CellMargins->{{44, 0}, {2, 6}},
    Background->GrayLevel[0.6]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Theorem"],
    CellFrame->{{3, 0}, {0, 0}},
    CellMargins->{{52, 10}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Theorem",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontColor->GrayLevel[1],
    Background->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["Theorem", "Presentation"],
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Theorem", "Condensed"],
    CellMargins->{{40, 10}, {1, 4}}],
  
  Cell[StyleData["Theorem", "Printout"],
    CellMargins->{{44, 0}, {2, 6}},
    Background->GrayLevel[0.4]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Caution"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{52, 25}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Caution",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->GrayLevel[0],
    Background->RGBColor[0.996109, 0, 0],
    FontVariations->{"Underline"->False}],
  
  Cell[StyleData["Caution", "Presentation"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Caution", "Condensed"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{40, 25}, {1, 4}}],
  
  Cell[StyleData["Caution", "Printout"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{44, 25}, {2, 6}},
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Advice"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{52, 25}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Advice",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->GrayLevel[0],
    Background->RGBColor[0, 1, 0],
    FontVariations->{"Underline"->False}],
  
  Cell[StyleData["Advice", "Presentation"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Advice", "Condensed"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{40, 25}, {1, 4}}],
  
  Cell[StyleData["Advice", "Printout"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{44, 25}, {2, 6}},
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Exercise"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{23, Inherited}, {4, 18}},
    CellGroupingRules->"NormalGrouping",
    PageBreakBelow->False,
    CounterIncrements->"Subsubsection",
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 0.996109]],
  
  Cell[StyleData["Exercise", "Presentation"],
    CellMargins->{{33, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Exercise", "Condensed"],
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11],
  
  Cell[StyleData["Exercise", "Printout"],
    CellFrame->False,
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11,
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ExerciseMain"],
    CellFrame->{{6, 0}, {0, 1}},
    CellMargins->{{12, Inherited}, {4, 20}},
    CellGroupingRules->{"SectionGrouping", 30},
    PageBreakBelow->False,
    CellFrameColor->RGBColor[0.571389, 0.19675, 0.570504],
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->16,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["ExerciseMain", "Presentation"],
    CellMargins->{{18, 10}, {8, 32}},
    LineSpacing->{1, 2},
    FontSize->24,
    FontTracking->"Condensed"],
  
  Cell[StyleData["ExerciseMain", "Condensed"],
    CellMargins->{{9, 0}, {2, 50}},
    FontSize->14],
  
  Cell[StyleData["ExerciseMain", "Printout"],
    CellMargins->{{9, 0}, {2, 50}},
    CellFrameColor->GrayLevel[0.500008],
    FontSize->14,
    FontTracking->"Plain",
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ExerciseTitle"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{23, Inherited}, {4, 18}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["ExerciseTitle", "Presentation"],
    CellMargins->{{33, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["ExerciseTitle", "Condensed"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11],
  
  Cell[StyleData["ExerciseTitle", "Printout"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11,
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ExerciseText"],
    CellMargins->{{32, 10}, {5, 5}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 8},
    CounterIncrements->"ExcersiceText",
    FontFamily->"Times"],
  
  Cell[StyleData["ExerciseText", "Presentation"],
    CellMargins->{{32, 10}, {8, 8}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12}],
  
  Cell[StyleData["ExerciseText", "Condensed"],
    CellMargins->{{32, 0}, {4, 4}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 6}],
  
  Cell[StyleData["ExerciseText", "Printout"],
    CellMargins->{{32, 0}, {4, 4}},
    ParagraphSpacing->{0, 6}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Problem"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{23, Inherited}, {4, 18}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Plain",
    FontColor->GrayLevel[0]],
  
  Cell[StyleData["Problem", "Presentation"],
    CellMargins->{{33, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Problem", "Condensed"],
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11],
  
  Cell[StyleData["Problem", "Printout"],
    CellFrame->False,
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11,
    FontColor->GrayLevel[0]]
  }, Closed]]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell["Formulas and Programming", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DisplayFormula"],
    CellMargins->{{62, 10}, {2, 10}},
    CellHorizontalScrolling->True,
    DefaultFormatType->DefaultInputFormatType,
    ScriptLevel->0,
    SingleLetterItalics->True,
    UnderoverscriptBoxOptions->{LimitsPositioning->True}],
  
  Cell[StyleData["DisplayFormula", "Presentation"],
    CellMargins->{{74, 10}, {2, 10}}],
  
  Cell[StyleData["DisplayFormula", "Condensed"],
    CellMargins->{{52, 10}, {2, 10}}],
  
  Cell[StyleData["DisplayFormula", "Printout"],
    CellMargins->{{54, 10}, {2, 10}}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ChemicalFormula"],
    CellMargins->{{62, 10}, {2, 10}},
    DefaultFormatType->DefaultInputFormatType,
    AutoSpacing->False,
    ScriptLevel->1,
    ScriptBaselineShifts->{0.6, Automatic},
    SingleLetterItalics->False,
    ZeroWidthTimes->True],
  
  Cell[StyleData["ChemicalFormula", "Presentation"],
    CellMargins->{{74, 10}, {2, 10}},
    FontSize->10],
  
  Cell[StyleData["ChemicalFormula", "Condensed"],
    CellMargins->{{52, 10}, {2, 10}},
    FontSize->10],
  
  Cell[StyleData["ChemicalFormula", "Printout"],
    CellMargins->{{54, 10}, {2, 10}},
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Program"],
    CellMargins->{{12, 10}, {Inherited, 6}},
    FontFamily->"Courier"],
  
  Cell[StyleData["Program", "Presentation"],
    CellMargins->{{13, 30}, {Inherited, 4}},
    FontSize->9.5],
  
  Cell[StyleData["Program", "Condensed"],
    CellMargins->{{8, 10}, {Inherited, 4}},
    FontSize->9.5],
  
  Cell[StyleData["Program", "Printout"],
    CellMargins->{{9, 0}, {Inherited, 4}},
    FontSize->9.5]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Automatic Numbering", "Section"],
  
  Cell["\<\
The following styles are useful for numbered equations, figures, etc.  They \
automatically give the cell a FrameLabel containing a reference to a \
particular counter, and also increment that counter.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["NumberedEquation"],
    CellMargins->{{62, 10}, {Inherited, Inherited}},
    CellFrameLabels->{{None, Cell[ 
            TextData[ {"(", 
              CounterBox[ "NumberedEquation"], ")"}]]}, {None, None}},
    DefaultFormatType->DefaultInputFormatType,
    CounterIncrements->"NumberedEquation",
    FormatTypeAutoConvert->False],
  
  Cell[StyleData["NumberedEquation", "Presentation"],
    CellMargins->{{74, 10}, {Inherited, Inherited}}],
  
  Cell[StyleData["NumberedEquation", "Condensed"],
    CellMargins->{{52, 10}, {Inherited, Inherited}}],
  
  Cell[StyleData["NumberedEquation", "Printout"],
    CellMargins->{{54, 0}, {Inherited, Inherited}}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["NumberedFigure"],
    CellMargins->{{62, 145}, {Inherited, Inherited}},
    CellFrameLabels->{{None, None}, {Cell[ 
            TextData[ {"Figure ", 
              CounterBox[ "NumberedFigure"]}]], None}},
    CounterIncrements->"NumberedFigure",
    ImageMargins->{{43, Inherited}, {Inherited, 0}},
    FormatTypeAutoConvert->False],
  
  Cell[StyleData["NumberedFigure", "Presentation"]],
  
  Cell[StyleData["NumberedFigure", "Condensed"]],
  
  Cell[StyleData["NumberedFigure", "Printout"]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["NumberedTable"],
    CellMargins->{{62, 145}, {Inherited, Inherited}},
    CellFrameLabels->{{None, None}, {Cell[ 
            TextData[ {"Table ", 
              CounterBox[ "NumberedTable"]}]], None}},
    TextAlignment->Center,
    CounterIncrements->"NumberedTable",
    FormatTypeAutoConvert->False],
  
  Cell[StyleData["NumberedTable", "Presentation"]],
  
  Cell[StyleData["NumberedTable", "Condensed"]],
  
  Cell[StyleData["NumberedTable", "Printout"]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headers and Footers", "Section"],
  
  Cell[StyleData["Header"],
    CellMargins->{{0, 0}, {4, 1}},
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontSlant->"Italic"],
  
  Cell[StyleData["Footer"],
    CellMargins->{{0, 0}, {0, 4}},
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontSlant->"Italic"],
  
  Cell[StyleData["PageNumber"],
    CellMargins->{{0, 0}, {4, 1}},
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontWeight->"Bold"]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Hyperlink Styles", "Section"],
  
  Cell["\<\
The cells below define styles useful for making hypertext ButtonBoxes.  The \
\"Hyperlink\" style is for links within the same Notebook, or between \
Notebooks.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Hyperlink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookLocate[ #2]}]&),
    Active->True,
    ButtonFrame->"None",
    ButtonNote->ButtonData}],
  
  Cell[StyleData["Hyperlink", "Presentation"]],
  
  Cell[StyleData["Hyperlink", "Condensed"]],
  
  Cell[StyleData["Hyperlink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell["\<\
The following styles are for linking automatically to the on-line help \
system.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["MainBookLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "MainBook", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["MainBookLink", "Presentation"]],
  
  Cell[StyleData["MainBookLink", "Condensed"]],
  
  Cell[StyleData["MainBookLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["AddOnsLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "AddOns", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["AddOnsLink", "Presentation"]],
  
  Cell[StyleData["AddOnsLink", "Condensed"]],
  
  Cell[StyleData["AddOnLink", "Printout"],
    FontWeight->"Bold",
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["RefGuideLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "RefGuideLink", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["RefGuideLink", "Presentation"]],
  
  Cell[StyleData["RefGuideLink", "Condensed"]],
  
  Cell[StyleData["RefGuideLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["GettingStartedLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "GettingStarted", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["GettingStartedLink", "Presentation"]],
  
  Cell[StyleData["GettingStartedLink", "Condensed"]],
  
  Cell[StyleData["GettingStartedLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["OtherInformationLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "OtherInformation", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["OtherInformationLink", "Presentation"]],
  
  Cell[StyleData["OtherInformationLink", "Condensed"]],
  
  Cell[StyleData["OtherInformationLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]]
  }, Closed]]
  }, Open  ]]
  }]
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 71, 2, 81, "Title"],
Cell[1850, 57, 455, 15, 85, "Author"],

Cell[CellGroupData[{
Cell[2330, 76, 33, 0, 83, "Section"],
Cell[2366, 78, 119, 2, 99, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[2522, 85, 31, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[2578, 89, 36, 0, 68, "Subsection"],
Cell[2617, 91, 638, 13, 197, "Text"],
Cell[3258, 106, 316, 7, 94, "Text"],
Cell[3577, 115, 391, 11, 68, "Text"],
Cell[3971, 128, 444, 11, 94, "Text"],
Cell[4418, 141, 445, 12, 94, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[4900, 158, 48, 0, 68, "Subsection"],
Cell[4951, 160, 386, 6, 145, "Text"],
Cell[5340, 168, 232, 4, 151, "Input"],

Cell[CellGroupData[{
Cell[5597, 176, 78, 1, 73, "Input"],
Cell[5678, 179, 43, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[5758, 185, 82, 1, 73, "Input"],
Cell[5843, 188, 58, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[5938, 194, 83, 1, 73, "Input"],
Cell[6024, 197, 46, 1, 59, "Output"]
}, Closed]],
Cell[6085, 201, 765, 25, 95, "Text"],

Cell[CellGroupData[{
Cell[6875, 230, 77, 1, 73, "Input"],
Cell[6955, 233, 54, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[7046, 239, 77, 1, 73, "Input"],
Cell[7126, 242, 54, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[7217, 248, 77, 1, 73, "Input"],
Cell[7297, 251, 52, 1, 59, "Output"]
}, Closed]],
Cell[7364, 255, 65, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[7454, 259, 108, 2, 99, "Input"],
Cell[7565, 263, 39, 1, 59, "Output"]
}, Closed]],
Cell[7619, 267, 290, 9, 68, "Text"],

Cell[CellGroupData[{
Cell[7934, 280, 52, 1, 73, "Input"],
Cell[7989, 283, 250, 9, 101, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[8276, 297, 52, 1, 73, "Input"],
Cell[8331, 300, 345, 12, 98, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[8713, 317, 52, 1, 73, "Input"],
Cell[8768, 320, 338, 10, 76, "Output"]
}, Closed]],
Cell[9121, 333, 575, 19, 95, "Text"],

Cell[CellGroupData[{
Cell[9721, 356, 51, 1, 73, "Input"],
Cell[9775, 359, 67, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[9879, 365, 71, 1, 73, "Input"],
Cell[9953, 368, 554, 12, 120, "Output"]
}, Closed]],
Cell[10522, 383, 251, 9, 84, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[10810, 397, 35, 0, 68, "Subsection"],
Cell[10848, 399, 137, 3, 67, "Text"],
Cell[10988, 404, 586, 8, 333, "Input"],

Cell[CellGroupData[{
Cell[11599, 416, 51, 1, 73, "Input"],
Cell[11653, 419, 35, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[11725, 425, 55, 1, 73, "Input"],
Cell[11783, 428, 37, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[11857, 434, 55, 1, 73, "Input"],
Cell[11915, 437, 35, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[11987, 443, 140, 2, 99, "Input"],
Cell[12130, 447, 858, 21, 138, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[13049, 475, 37, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[13111, 479, 58, 0, 68, "Subsection"],
Cell[13172, 481, 538, 16, 69, "Text"],

Cell[CellGroupData[{
Cell[13735, 501, 56, 1, 73, "Input"],
Cell[13794, 504, 49, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[13880, 510, 57, 1, 73, "Input"],
Cell[13940, 513, 49, 1, 59, "Output"]
}, Closed]],
Cell[14004, 517, 115, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[14144, 524, 61, 1, 73, "Input"],
Cell[14208, 527, 54, 1, 59, "Output"]
}, Closed]],
Cell[14277, 531, 362, 10, 68, "Text"],

Cell[CellGroupData[{
Cell[14664, 545, 63, 1, 73, "Input"],
Cell[14730, 548, 53, 1, 59, "Output"]
}, Closed]],
Cell[14798, 552, 456, 15, 69, "Text"],

Cell[CellGroupData[{
Cell[15279, 571, 68, 1, 73, "Input"],
Cell[15350, 574, 50, 1, 59, "Output"]
}, Closed]],
Cell[15415, 578, 471, 13, 94, "Text"],

Cell[CellGroupData[{
Cell[15911, 595, 67, 1, 73, "Input"],
Cell[15981, 598, 58, 1, 59, "Output"]
}, Closed]],
Cell[16054, 602, 470, 13, 94, "Text"],

Cell[CellGroupData[{
Cell[16549, 619, 81, 1, 73, "Input"],
Cell[16633, 622, 55, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[16725, 628, 55, 1, 73, "Input"],
Cell[16783, 631, 43, 1, 59, "Output"]
}, Closed]],
Cell[16841, 635, 324, 11, 42, "Text"],

Cell[CellGroupData[{
Cell[17190, 650, 54, 1, 73, "Input"],
Cell[17247, 653, 46, 1, 59, "Output"]
}, Closed]],
Cell[17308, 657, 868, 28, 96, "Text"],

Cell[CellGroupData[{
Cell[18201, 689, 60, 1, 73, "Input"],
Cell[18264, 692, 49, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[18350, 698, 63, 1, 73, "Input"],
Cell[18416, 701, 49, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[18502, 707, 61, 1, 73, "Input"],
Cell[18566, 710, 49, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[18652, 716, 64, 1, 73, "Input"],
Cell[18719, 719, 49, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[18805, 725, 83, 1, 55, "Subsubsection"],
Cell[18891, 728, 1172, 30, 300, "Text"],
Cell[20066, 760, 122, 2, 99, "Input"],

Cell[CellGroupData[{
Cell[20213, 766, 66, 1, 73, "Input"],
Cell[20282, 769, 382, 6, 251, "Output"]
}, Closed]],
Cell[20679, 778, 584, 14, 145, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[21300, 797, 102, 2, 55, "Subsubsection"],
Cell[21405, 801, 1274, 28, 303, "Text"],

Cell[CellGroupData[{
Cell[22704, 833, 300, 6, 177, "Input"],
Cell[23007, 841, 4146, 100, 434, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[27190, 946, 300, 6, 177, "Input"],
Cell[27493, 954, 38, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[27568, 960, 47, 1, 73, "Input"],
Cell[27618, 963, 36, 1, 59, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[27715, 971, 52, 0, 68, "Subsection"],
Cell[27770, 973, 742, 23, 69, "Text"],

Cell[CellGroupData[{
Cell[28537, 1000, 52, 1, 73, "Input"],
Cell[28592, 1003, 35, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[28664, 1009, 64, 1, 73, "Input"],
Cell[28731, 1012, 40, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[28808, 1018, 51, 1, 73, "Input"],
Cell[28862, 1021, 43, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[28942, 1027, 51, 1, 73, "Input"],
Cell[28996, 1030, 35, 1, 59, "Output"]
}, Closed]],
Cell[29046, 1034, 1149, 38, 96, "Text"],

Cell[CellGroupData[{
Cell[30220, 1076, 60, 1, 73, "Input"],
Cell[30283, 1079, 43, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[30363, 1085, 65, 1, 73, "Input"],
Cell[30431, 1088, 43, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[30511, 1094, 65, 1, 73, "Input"],
Cell[30579, 1097, 43, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[30659, 1103, 75, 1, 73, "Input"],
Cell[30737, 1106, 43, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[30817, 1112, 60, 1, 73, "Input"],
Cell[30880, 1115, 43, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[30960, 1121, 65, 1, 73, "Input"],
Cell[31028, 1124, 43, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[31108, 1130, 65, 1, 73, "Input"],
Cell[31176, 1133, 43, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[31256, 1139, 75, 1, 73, "Input"],
Cell[31334, 1142, 43, 1, 59, "Output"]
}, Closed]],
Cell[31392, 1146, 212, 4, 108, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[31641, 1155, 60, 0, 68, "Subsection"],
Cell[31704, 1157, 688, 17, 149, "Text"],

Cell[CellGroupData[{
Cell[32417, 1178, 82, 1, 73, "Input"],
Cell[32502, 1181, 48, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[32587, 1187, 85, 1, 73, "Input"],
Cell[32675, 1190, 37, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[32749, 1196, 85, 1, 73, "Input"],
Cell[32837, 1199, 43, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[32917, 1205, 135, 2, 99, "Input"],
Cell[33055, 1209, 43, 1, 59, "Output"]
}, Closed]],
Cell[33113, 1213, 266, 8, 69, "Text"],

Cell[CellGroupData[{
Cell[33404, 1225, 83, 1, 73, "Input"],
Cell[33490, 1228, 48, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[33575, 1234, 86, 1, 74, "Input"],
Cell[33664, 1237, 40, 1, 61, "Output"]
}, Closed]],
Cell[33719, 1241, 165, 3, 67, "Text"],

Cell[CellGroupData[{
Cell[33909, 1248, 84, 1, 74, "Input"],
Cell[33996, 1251, 40, 1, 61, "Output"]
}, Closed]],
Cell[34051, 1255, 116, 3, 67, "Text"],
Cell[34170, 1260, 226, 7, 68, "Text"],

Cell[CellGroupData[{
Cell[34421, 1271, 104, 2, 74, "Input"],
Cell[34528, 1275, 57, 1, 61, "Output"]
}, Closed]],
Cell[34600, 1279, 204, 6, 68, "Text"],

Cell[CellGroupData[{
Cell[34829, 1289, 89, 1, 74, "Input"],
Cell[34921, 1292, 35, 1, 59, "Output"]
}, Closed]],
Cell[34971, 1296, 241, 4, 133, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[35249, 1305, 38, 0, 68, "Subsection"],
Cell[35290, 1307, 1128, 39, 172, "Text"],
Cell[36421, 1348, 202, 3, 125, "Input"],

Cell[CellGroupData[{
Cell[36648, 1355, 144, 3, 99, "Input"],
Cell[36795, 1360, 1056, 46, 255, "Output"]
}, Closed]],
Cell[37866, 1409, 344, 11, 68, "Text"],
Cell[38213, 1422, 108, 3, 41, "Text"],
Cell[38324, 1427, 80, 1, 73, "Input"],
Cell[38407, 1430, 67, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[38499, 1434, 116, 2, 73, "Input"],
Cell[38618, 1438, 38, 1, 59, "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[38705, 1445, 29, 0, 68, "Subsection"],
Cell[38737, 1447, 570, 15, 121, "Text"],

Cell[CellGroupData[{
Cell[39332, 1466, 86, 1, 73, "Input"],
Cell[39421, 1469, 70, 1, 59, "Output"]
}, Closed]],
Cell[39506, 1473, 129, 3, 67, "Text"],

Cell[CellGroupData[{
Cell[39660, 1480, 89, 1, 73, "Input"],
Cell[39752, 1483, 73, 1, 59, "Output"]
}, Closed]],
Cell[39840, 1487, 74, 0, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[39951, 1492, 35, 0, 68, "Subsection"],
Cell[39989, 1494, 279, 7, 94, "Text"],

Cell[CellGroupData[{
Cell[40293, 1505, 50, 1, 73, "Input"],
Cell[40346, 1508, 2192, 55, 194, "Output"]
}, Closed]],
Cell[42553, 1566, 199, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[42777, 1576, 49, 1, 73, "Input"],
Cell[42829, 1579, 70, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[42936, 1585, 44, 1, 73, "Input"],
Cell[42983, 1588, 173, 3, 59, "Output"]
}, Closed]],
Cell[43171, 1594, 194, 7, 42, "Text"],

Cell[CellGroupData[{
Cell[43390, 1605, 52, 1, 73, "Input"],
Cell[43445, 1608, 78, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[43560, 1614, 44, 1, 73, "Input"],
Cell[43607, 1617, 1454, 41, 134, "Output"]
}, Closed]],
Cell[45076, 1661, 520, 16, 69, "Text"],

Cell[CellGroupData[{
Cell[45621, 1681, 79, 1, 73, "Input"],
Cell[45703, 1684, 60, 1, 59, "Output"]
}, Closed]],
Cell[45778, 1688, 413, 11, 95, "Text"],

Cell[CellGroupData[{
Cell[46216, 1703, 72, 1, 73, "Input"],
Cell[46291, 1706, 68, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[46396, 1712, 72, 1, 73, "Input"],
Cell[46471, 1715, 82, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[46590, 1721, 77, 1, 73, "Input"],
Cell[46670, 1724, 88, 1, 59, "Output"]
}, Closed]],
Cell[46773, 1728, 747, 23, 120, "Text"],

Cell[CellGroupData[{
Cell[47545, 1755, 80, 1, 73, "Input"],
Cell[47628, 1758, 131, 2, 84, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[47796, 1765, 80, 1, 73, "Input"],
Cell[47879, 1768, 78, 1, 59, "Output"]
}, Closed]],
Cell[47972, 1772, 289, 5, 133, "Exercise"],

Cell[CellGroupData[{
Cell[48286, 1781, 78, 0, 55, "Subsubsection"],
Cell[48367, 1783, 627, 9, 223, "Text"],

Cell[CellGroupData[{
Cell[49019, 1796, 55, 1, 73, "Input"],
Cell[49077, 1799, 419, 7, 234, "Output"]
}, Closed]],
Cell[49511, 1809, 96, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[49632, 1815, 69, 1, 73, "Input"],
Cell[49704, 1818, 464, 8, 234, "Output"]
}, Closed]],
Cell[50183, 1829, 171, 5, 42, "Text"],

Cell[CellGroupData[{
Cell[50379, 1838, 164, 4, 99, "Input"],
Cell[50546, 1844, 119, 2, 84, "Output"]
}, Closed]],
Cell[50680, 1849, 176, 3, 67, "Text"],

Cell[CellGroupData[{
Cell[50881, 1856, 221, 4, 125, "Input"],
Cell[51105, 1862, 74, 1, 59, "Output"]
}, Closed]],
Cell[51194, 1866, 162, 3, 67, "Text"],
Cell[51359, 1871, 278, 5, 125, "Input"],

Cell[CellGroupData[{
Cell[51662, 1880, 70, 1, 73, "Input"],
Cell[51735, 1883, 74, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[51846, 1889, 69, 1, 73, "Input"],
Cell[51918, 1892, 159, 3, 109, "Output"]
}, Closed]],
Cell[52092, 1898, 103, 2, 83, "Exercise"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[52256, 1907, 38, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[52319, 1911, 40, 0, 68, "Subsection"],
Cell[52362, 1913, 598, 14, 147, "Text"],

Cell[CellGroupData[{
Cell[52985, 1931, 51, 1, 73, "Input"],
Cell[53039, 1934, 62, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[53138, 1940, 60, 1, 73, "Input"],
Cell[53201, 1943, 62, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[53300, 1949, 59, 1, 73, "Input"],
Cell[53362, 1952, 58, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[53457, 1958, 48, 1, 74, "Input"],
Cell[53508, 1961, 58, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[53603, 1967, 59, 1, 74, "Input"],
Cell[53665, 1970, 55, 1, 61, "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[53769, 1977, 48, 0, 68, "Subsection"],
Cell[53820, 1979, 1020, 35, 147, "Text"],

Cell[CellGroupData[{
Cell[54865, 2018, 60, 1, 73, "Input"],
Cell[54928, 2021, 59, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[55024, 2027, 67, 1, 73, "Input"],
Cell[55094, 2030, 74, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[55205, 2036, 64, 1, 73, "Input"],
Cell[55272, 2039, 73, 1, 59, "Output"]
}, Closed]],
Cell[55360, 2043, 393, 9, 124, "Exercise"],
Cell[55756, 2054, 674, 23, 95, "Text"],

Cell[CellGroupData[{
Cell[56455, 2081, 121, 2, 99, "Input"],
Cell[56579, 2085, 76, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[56692, 2091, 81, 1, 73, "Input"],
Cell[56776, 2094, 60, 1, 59, "Output"]
}, Closed]],
Cell[56851, 2098, 638, 19, 95, "Text"],

Cell[CellGroupData[{
Cell[57514, 2121, 60, 1, 73, "Input"],
Cell[57577, 2124, 83, 1, 59, "Output"]
}, Closed]],
Cell[57675, 2128, 705, 29, 67, "Text"],

Cell[CellGroupData[{
Cell[58405, 2161, 92, 1, 99, "Input"],
Cell[58500, 2164, 395, 6, 184, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[58932, 2175, 60, 0, 55, "Subsubsection"],
Cell[58995, 2177, 146, 3, 67, "Text"],
Cell[59144, 2182, 154, 3, 125, "Input"],

Cell[CellGroupData[{
Cell[59323, 2189, 136, 2, 73, "Input"],
Cell[59462, 2193, 38, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[59537, 2199, 175, 3, 73, "Input"],
Cell[59715, 2204, 38, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[59790, 2210, 188, 3, 99, "Input"],
Cell[59981, 2215, 38, 1, 59, "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[60068, 2222, 70, 0, 55, "Subsubsection"],
Cell[60141, 2224, 882, 24, 155, "Text"],

Cell[CellGroupData[{
Cell[61048, 2252, 170, 4, 94, "Input"],
Cell[61221, 2258, 49, 1, 76, "Output"]
}, Closed]],
Cell[61285, 2262, 473, 13, 125, "Text"],
Cell[61761, 2277, 174, 4, 126, "Input"],

Cell[CellGroupData[{
Cell[61960, 2285, 121, 2, 99, "Input"],
Cell[62084, 2289, 69030, 1800, 279, 21942, 1214, "GraphicsData", \
"PostScript", "Graphics"]
}, Closed]],
Cell[131129, 4092, 356, 6, 119, "Text"],
Cell[131488, 4100, 435, 9, 146, "Text"],
Cell[131926, 4111, 152, 4, 73, "Input"],
Cell[132081, 4117, 232, 5, 157, "Input"],
Cell[132316, 4124, 101, 2, 98, "Input"],

Cell[CellGroupData[{
Cell[132442, 4130, 49, 1, 73, "Input"],
Cell[132494, 4133, 53, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[132584, 4139, 47, 1, 73, "Input"],
Cell[132634, 4142, 53, 1, 59, "Output"]
}, Closed]],
Cell[132702, 4146, 498, 8, 171, "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[133249, 4160, 35, 0, 68, "Subsection"],
Cell[133287, 4162, 1020, 31, 173, "Text"],
Cell[134310, 4195, 47, 1, 73, "Input"],
Cell[134360, 4198, 90, 1, 73, "Input"],

Cell[CellGroupData[{
Cell[134475, 4203, 54, 1, 73, "Input"],
Cell[134532, 4206, 1008, 15, 534, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[135577, 4226, 47, 1, 73, "Input"],
Cell[135627, 4229, 46, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[135710, 4235, 47, 1, 73, "Input"],
Cell[135760, 4238, 35, 1, 59, "Output"]
}, Closed]],
Cell[135810, 4242, 917, 27, 239, "Exercise"],

Cell[CellGroupData[{
Cell[136752, 4273, 76, 0, 55, "Subsubsection"],
Cell[136831, 4275, 291, 8, 67, "Text"],
Cell[137125, 4285, 233, 6, 60, "InlineInput",
  Evaluatable->False],
Cell[137361, 4293, 44, 0, 41, "Text"],
Cell[137408, 4295, 161, 4, 68, "InlineInput",
  Evaluatable->False],
Cell[137572, 4301, 52, 0, 41, "Text"],
Cell[137627, 4303, 218, 5, 59, "InlineInput",
  Evaluatable->False],
Cell[137848, 4310, 158, 5, 41, "Text"],

Cell[CellGroupData[{
Cell[138031, 4319, 315, 6, 203, "Input"],
Cell[138349, 4327, 601, 12, 250, "Output"]
}, Closed]],
Cell[138965, 4342, 66, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[139056, 4346, 101, 2, 99, "Input"],
Cell[139160, 4350, 70, 1, 61, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[139291, 4358, 51, 0, 68, "Subsection"],
Cell[139345, 4360, 461, 15, 68, "Text"],
Cell[139809, 4377, 54, 1, 73, "Input"],
Cell[139866, 4380, 232, 4, 151, "Input"],

Cell[CellGroupData[{
Cell[140123, 4388, 45, 1, 73, "Input"],
Cell[140171, 4391, 52, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[140260, 4397, 45, 1, 73, "Input"],
Cell[140308, 4400, 68, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[140413, 4406, 74, 1, 96, "Input"],
Cell[140490, 4409, 119, 2, 82, "Output"]
}, Closed]],
Cell[140624, 4414, 1834, 62, 176, "Text"],

Cell[CellGroupData[{
Cell[142483, 4480, 71, 1, 74, "Input"],
Cell[142557, 4483, 53, 1, 59, "Output"]
}, Closed]],
Cell[142625, 4487, 67, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[142717, 4491, 68, 1, 74, "Input"],
Cell[142788, 4494, 45, 1, 80, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[142870, 4500, 39, 1, 73, "Input"],
Cell[142912, 4503, 53, 1, 59, "Output"]
}, Closed]],
Cell[142980, 4507, 316, 8, 69, "Text"],

Cell[CellGroupData[{
Cell[143321, 4519, 106, 2, 99, "Input"],
Cell[143430, 4523, 27767, 613, 279, 4604, 322, "GraphicsData", "PostScript", \
"Graphics"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[171258, 5143, 33, 0, 54, "ExerciseMain"],

Cell[CellGroupData[{
Cell[171316, 5147, 47, 0, 58, "ExerciseTitle"],
Cell[171366, 5149, 255, 4, 93, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[171658, 5158, 60, 0, 58, "ExerciseTitle"],
Cell[171721, 5160, 622, 19, 120, "ExerciseText"],
Cell[172346, 5181, 264, 6, 64, "DisplayFormula"],
Cell[172613, 5189, 260, 6, 68, "DisplayFormula"],
Cell[172876, 5197, 375, 12, 41, "ExerciseText"],
Cell[173254, 5211, 107, 2, 41, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[173398, 5218, 36, 0, 58, "ExerciseTitle"],
Cell[173437, 5220, 809, 21, 96, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[174283, 5246, 41, 0, 58, "ExerciseTitle"],
Cell[174327, 5248, 315, 8, 41, "ExerciseText"],
Cell[174645, 5258, 897, 26, 58, "ExerciseText"],
Cell[175545, 5286, 2181, 54, 263, "ExerciseText"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

