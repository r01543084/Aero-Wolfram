(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    345815,       7813]
NotebookOptionsPosition[    330961,       7354]
NotebookOutlinePosition[    333462,       7420]
CellTagsIndexPosition[    333382,       7415]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Discontinuous Galerkin", "Title",
 CellChangeTimes->{{3.582632821512338*^9, 3.582632840056709*^9}, {
  3.582633018274555*^9, 3.582633021043658*^9}, {3.582633059628018*^9, 
  3.58263306510106*^9}}],

Cell["Weak Formulation (Modal DG)", "Subtitle",
 CellChangeTimes->{{3.582632843137968*^9, 3.58263284940143*^9}, {
  3.5826330674625*^9, 3.582633071844529*^9}}],

Cell["\<\
Manuel Diaz, 
2013.07.19\
\>", "Subsubtitle",
 CellChangeTimes->{{3.583159583862431*^9, 3.583159671824996*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Legendre Polynomials", "Section",
 CellChangeTimes->{{3.582633181358471*^9, 3.58263318713618*^9}, {
  3.582883322808546*^9, 3.582883328412389*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"legendreP", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"LegendreP", "[", 
      RowBox[{"i", ",", "z"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Column", "[", "legendreP", "]"}], " ", "/.", 
   RowBox[{"z", "\[Rule]", "\[ScriptCapitalX]"}]}], "//", " ", 
  "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.582633589688171*^9, 3.582633596594518*^9}, {
   3.582633952782095*^9, 3.582634034481052*^9}, {3.582634447666443*^9, 
   3.582634457494976*^9}, {3.582634494919634*^9, 3.582634571041513*^9}, 
   3.582634654653079*^9, {3.582635126969351*^9, 3.582635170536479*^9}, {
   3.58263580387243*^9, 3.582635804095707*^9}, {3.582635838234979*^9, 
   3.582635838417655*^9}, {3.582635974070169*^9, 3.582635997652675*^9}, {
   3.582704368689047*^9, 3.582704368818382*^9}, {3.583143456396882*^9, 
   3.58314346600902*^9}}],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {"1"},
     {"\[ScriptCapitalX]"},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          SuperscriptBox["\[ScriptCapitalX]", "2"]}], "-", "1"}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", " ", 
          SuperscriptBox["\[ScriptCapitalX]", "3"]}], "-", 
         RowBox[{"3", " ", "\[ScriptCapitalX]"}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"35", " ", 
          SuperscriptBox["\[ScriptCapitalX]", "4"]}], "-", 
         RowBox[{"30", " ", 
          SuperscriptBox["\[ScriptCapitalX]", "2"]}], "+", "3"}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"63", " ", 
          SuperscriptBox["\[ScriptCapitalX]", "5"]}], "-", 
         RowBox[{"70", " ", 
          SuperscriptBox["\[ScriptCapitalX]", "3"]}], "+", 
         RowBox[{"15", " ", "\[ScriptCapitalX]"}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "16"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"231", " ", 
          SuperscriptBox["\[ScriptCapitalX]", "6"]}], "-", 
         RowBox[{"315", " ", 
          SuperscriptBox["\[ScriptCapitalX]", "4"]}], "+", 
         RowBox[{"105", " ", 
          SuperscriptBox["\[ScriptCapitalX]", "2"]}], "-", "5"}], ")"}]}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], TraditionalForm]], "Output",
 CellChangeTimes->{3.583147176143562*^9, 3.583183983495058*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Plot Legendre Polynomials", "Section",
 CellChangeTimes->{{3.583142848704157*^9, 3.583142900474672*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", "legendreP", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.582634095831302*^9, 3.582634096214427*^9}, {
  3.582634461529277*^9, 3.582634479425608*^9}, {3.582634537516301*^9, 
  3.582634543485002*^9}, {3.582634629504307*^9, 3.58263463887421*^9}, {
  3.582635047777282*^9, 3.582635105976619*^9}, {3.582636007932458*^9, 
  3.582636011729656*^9}, {3.583143837091813*^9, 3.583143837313064*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
VtPR1EhDhL52RHi19J5JGiL0tVWR17RvWNNQcei0wUJuD5rQl7G+OMCEHfXS
Kr7b+Oh28h3JGfw86Hx8+EN3eC++X6wPIWkmOT+TXLTtZtqfISQo+squ61Uv
NPQuW9P4hQH9zco9Rcf4IH5z3sZyvJ5YUanX2S7Gg6b7U3/C8fOX0O+GxEjF
oXH8ef2n33UI//mwgkZD559qHQ2w4aHpgng5dzz+7+suf8Z7z0cRz1ND/eRZ
MPO6feHfv3xQKRCc7dzNBFandu+pQh7I3t07cvAsi9T/9ivMkukrpiFC/0vf
FSq5BK/finX1R5MLelBaBH3Nhk9MYIfe3Zy/kI948QmZ0Xj+6EDPPx0qzAex
LPegYdwn9MKhTRsMf+GfV5C005XJ5yHNlZkLI/H9M+010LU4kw/X+Pu+qW9k
wdGBhrM7zvLA8OFkQp8Ri9QXr6f/uZPPxuvH//TFOk3HjgZ8o6EixtunV4V5
SHli/c04fH2jhXPXGJ/io319h2pWWrLI+R31ksCrRW+GUV1jlV/FeT4YJnVT
bM1ZQOiRu4/c6y7Dz8M9Pq5WiQY8JNTOqpLA8/2PHHbgxXoeJO7+pd7lwiL1
yuFxnAA7HP85bh+1mn7g758q/pGH41OXeljoiTQf7C2jLmfg7yf0zI/7gmzt
8fP/x6+o/VqJPNTmfky0xp4Few+cVgsGPiiP2utKybJAq89ZWO8WD3o3iR8Q
P8oi9c933yumf/xBQ2cH+IpnTPD7e3j4jSee3wi3PdDN1sU/v/548GM8XyL0
0Qodo55CEzT05IOAmYs7D52LF9y62YwFk92pBsdT8fXe0BVj5Mgi9dN6Tfpx
gng+ufD14Y1xa/io2D0hNNcZv1/m8ir/Mfz9gafeFOD3R+irM2mDsu34/Ztr
rkeCdTxEV72wPgu/30rFm6s23+CjmpSZUg6ePxHzQi2vb63tCvs3L9Te0C7a
2ojncV+u0caLhmF0X/5SE0seunP6Xekrm69g+NFx5oRzO2oQ2+qxczle/35N
8SoweYe2y13UeEHD84fvufoCv4vgZn5EUKP3AAjMklyjvLyZnD9acbE5rv9R
BxDzR8quwSmuoQwg5o+a7p9xysLxQcwflfnrF1psw+uf/+aPKk0eXtHNwM/H
/+aPygT2du9aRiP14X7uJwPOza9FhD585bEY4Q/GLYjQh9u/uRLheIKCCH14
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
     "], {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{1, 3066, 3067, 50, 52, 49, 48, 47, 46, 45, 44, 43, 42, 
          41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 
          24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7,
           6, 5, 4, 3, 2, 51}}]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{3063, 3064, 53, 123, 117, 112, 108, 105, 103, 54, 55, 
          56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 
          73, 74, 75, 76, 77}}]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{3063, 3065, 102, 129, 122, 128, 116, 121, 127, 111, 115,
           120, 126, 107, 110, 114, 119, 125, 104, 106, 109, 113, 118, 124, 
          101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 
          85, 84, 83, 82, 81, 80, 79, 78}}]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[CompressedData["
1:eJwl0WVrlnEYxuH72XTG0JnY4iywG1tRtyk2MybYs7A2xRYbG5fW1Nn5BewG
u7EV7MZ2toIesBcH5/X73+x5s+jE5PiksCAIQjzja2QQ5JDiTiWNdDLIZCWr
6O8PavDP/YBT7GU1A7zXDOX+6ENzmn2M1k0pxFt9nTUM1LUI8UifYT9jdDMK
807fYC2DdG3CeKzPcoCxujlRvNc3yWKwrkM4T/Q5JrnbUYpv+iDj3C0owgd9
i3UM0XXJw1N9nsnu9pTmuz7EeHdLivJRz7FdqcxtPd3GUZ7fer7tQTXW66G2
HnlZSHwo938yy3amEkvpywXvU2wHUijDYnqTwQ/f59nupFGV5fQjk8O+J9lW
rKAYi+hFOp98n2u7kUoVlpHAHd9m2I5UYAl9+ON9ge1JdTboRFufCJ7r2bYL
0VzUU20MZfmpj5Dsbk1xPuu7zHR3oiJ/dTbD3A3Ixwt9iWnuWMrxSx9lgrsN
Jfii77GR4boh+XmpL3OMibotJcnR99nECN2IArzSVzjOZkZ6a0xBXuurnGAL
o7w1IZI3+hon2co2trODnexiN3v4D3fvcyw=
          "]]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          
          PolygonBox[{{130, 3061, 3059, 140, 139, 138, 137, 136, 135, 134, 
           133, 132, 131, 180, 195, 220, 254, 296, 346}}], 
          
          PolygonBox[{{3060, 3062, 179, 403, 345, 395, 295, 337, 387, 253, 
           287, 329, 379, 219, 244, 278, 320, 370, 194, 209, 234, 268, 310, 
           360, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169}}]}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          
          PolygonBox[{{3054, 3057, 404, 751, 659, 584, 524, 480, 454, 405, 
           406, 407, 408, 409}}], 
          PolygonBox[CompressedData["
1:eJwV0UlvTWEABuDTezsYVkpRU3tbCRamlrKgRBALEmmoucTSVKxatcCiEiLh
H5jHmErnloVioRaqrdISERERtGaL0j7f4sn7fu85J/fecxPbS4v2xKIoSqKd
vuFR1Mt1ww1ucovbVHGHfg+cZi2ZfLE9Z0Q8iqqddzCDGHft/+QZihnHV1s7
6e6vcd7JTOJU2//Ls6xjPL22LPc+0MtYQIdtpK1W38UskqmxD8hzrGcCfbZs
97bo5Syk0zbKVqfvZnbg3CGPkcIU5yfyEEuZ59wtT1IbXpjzeX1D+E76WzmR
6fozWRme0z/Kb+5P6A/1VfKAXCzfh/coC+Uc2SWL5Am5Qn4Ov0O+8HyGrHde
KcOfVijfyTUyT+bJTrlaHpfL5SeZylS9VR5mif5BLmO+3iNPUeczkpwv6BuZ
FP5H5zZ5lO+u5zg/0itYRJdttK1BLyWfNKbZnsoj4XtQ776Y7aK+iSx+2HJt
j/WD4X3w0jbG1qjvDe+EITTY4/ZL+may+Wl7xVh7k/M+5jKURnuy/bK+hQS/
bN1k2pud91PAMJrsKfYregk5/Lb10Eyqa1dtW8nlj+0190hz7ZptG5P5a3vD
fQYB+8NqZg==
           "]]}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          
          PolygonBox[{{3056, 3058, 453, 857, 750, 842, 658, 733, 825, 583, 
           643, 718, 810, 523, 567, 627, 702, 794, 479, 505, 549, 609, 684, 
           776, 452, 451, 450, 449, 448}}], 
          PolygonBox[CompressedData["
1:eJwV0klIVWEYBuBjrtIcmizIgsAss0iIIpUIk4i0SZPa27ypTcPK2hQkRG3K
5sHKBi0bdN+wydS6NkDUIjFzKLPJRm16/sXD+33v+Q+Xc+6ZXL61dMuwKIri
iPEhMYo+clVRRy1XuMwlLvKE94x3YxlnGKJG95g+xtlXcZpBLuji5Ew200hq
fBS16d+RZi/lFL84ryuUu2km09lIzmATDaToYs7lm3dyj0m6t7q95rZw3j5W
tpNvLpEn+ck55/rlEv1B+ZK55oWyiwLzLrlcPpBT5D/3rA6/YV8kK+UK+Uzm
yOzw3LJDzpcbZbG8JZPlI/evkX32xXK/LJHP5WyZJztZYN4h7zLR3Ou+HnOh
eY+MkW0eI1+RZ14pT/CDaucPyBfMca1AVtBEhv2v6/vMT5llny43cJMk+0PX
c83buUO6rkc3Ojwvx/nOWd0fsszrucEIZ1t188zbuM0EXbduVHifHONb+HZ0
v5lmXsd1Ep1t0XUx0r6Mo3wN35NuiKnmtdST4Hyz7g2p9qUcYSB8T7pBMs3l
XGN4+D91naSE/4cqvoRvQ9fEa5LtRRzmc3i3uvt0kBS+Gw7xKbwP3X8hBHDC

           "]]}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwVz8lLVXEYBuBfqZvcWGpGICQFQZnLHKptpuamRVlmjjlm47asbKFCaYN5
bWMIgkIQmOONIBCE1jllf4FCGZml1qbnLB6+933vudx7smpunLu+M4SwgylW
k0NYoSchhPNJIXxODKGe3czZrnDc/k4/zU99jKdcsM/ZGtjDvK2SXPuYXsi6
Ps4zyuzztkZSWbBVkWcf18/wS5/gpu2b/oCjPLddtC3ITaSxaLtr25Ifk0u1
Ld82IRexoXfoCcT0Sf2W/F1+SDYvbJdsi3Iz6XTruxiQl3x+T96WnzAsHyRP
jrmpDMs1niuQJ+ViBuT9/LZ3uon029+4h5my33bXbHG33R1yDzDLMb3XTeEj
Q/potPOJXt8vd5ei93Jb3EE3kxn26j1uMh94rb91j/DFd9vcv9G7MiIfIl/u
d9MYkWs9dyL6r3IJf/QuPYlX+rR+R/4hPyKHl7bL0W/I18hg2Xbf9i/6TxRQ
Zztpm5bPsqnH6aPCvmxrZR9fbVc5ZY/rpWzp74lRTwONNNHMfymzYzE=
           "]], 
          PolygonBox[CompressedData["
1:eJwV0M8v13EcB/C3UKTV1kUHmxFis9UWjtU1SXFLP3VIqbgVvoioVLpUuqSt
9ZVCNhuHmq2tLb9//BEhfF0rRz0+h8dez+fz4/P1Jed6Y3XDrhBCEt/Yyggh
QSw5hFbaaOcBp1NDmEoJ4QIpTNvi3LD/0u+Rw4qtg3L7tF5DKjO2AersK/p9
clm1dXLGPqNfZDeztibbH7mH43y03bStyk0c5qW+nw/ymudd8o78ihO81TMZ
kR96XiHPypd4L2exR+510+iXR90i5vx8s/vX9pRBOZcS+Y17kB8M6uPuUeaj
7r1b7pr9q9vsxt1sfpIXfT/3AN+J62NucfQ/4Lf3u93AJK89H3YLOCn3u4f4
Ik+4x+jyztnoO9suk8YLPZ138rznLfI/+RmlfLLVR79PbiGfddsjWxJ9+im6
bZXR3yZfIZ0FW8y2LT+njM+227Z1OUYBG9Hncc6+oF9lL4u2Ie7YN/RWjrBp
e8x5+6J+jQyWbMPctW/qbRSSsD2hyr6k17KPZdsIDfaE3k4R/wEEvmNG
           "]]}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          
          PolygonBox[{{858, 3052, 3048, 946, 1008, 1093, 1201, 1333, 861, 978,
            1040, 1125, 1233, 1365, 910, 945, 1007, 1092, 1200, 1332, 860, 
           909, 944, 1006, 1091, 1199, 1331, 859, 908, 943, 1005, 1090, 1198, 
           1330}}], 
          
          PolygonBox[{{3051, 3053, 907, 1483, 1329, 1461, 1197, 1305, 1437, 
           1089, 1174, 1282, 1414, 1004, 1066, 1151, 1259, 1391, 942, 977, 
           1039, 1124, 1232, 1364, 906, 941, 976, 1038, 1123, 1231, 1363, 905,
            940, 975, 1037, 1122, 1230, 1362, 904, 1003}}], 
          PolygonBox[CompressedData["
1:eJwV0clLVWEYB+BPzVxUCxcFTQ4LIQgy22azaasyG1daVqvyXuehVYoV5MaE
oNJMBRdGELQJcr5q0L+QmtquVpWrTK3nWzy87+/3ncM995z86mRFIj2EkEaK
79tC+MH9jBDaaGWIOTK2hHCdWc5lhtCiG2SWdN01Zihz1qz7Rp7cxAp39AO6
GdLkq6Qo1TfpVsiVG1nmtv61LkWQrzDNWX2j7pi9h006dMu6HHsDS9zS9euO
2B+zSotuWtdrz7J38U++LE9RIjfIb+y77C8ptheYIzy1b9BuX3LdQfMdg7px
c0e8hv3xXZg5DFEvfzC/mtXmK/d+Ng/xnuH4+2Y2zyiSP5n58YxH8kfzt9ls
Trn/gPk2PqNuq/mETf3e+N64pJ/kTPx9/Yh9p/0FR+3drPMgPpfzAft2ezf7
7HUsclPuc37Y/pBf8ZvqJnUbVMgTnNbVyYvxGeRaFrih79UV2jv5Gb+xbkK3
zsX47jilq5UX2CMnmacq/kfdOH8p141xUp+U59ktJ/hCZfyPujHWuKAb5YQ+
IT9nlD+cj++V485q5Hvc5T++imt8
           "]]}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          
          PolygonBox[{{3041, 3046, 1484, 2016, 1861, 1735, 1638, 1570, 1534, 
           2052, 1897, 1771, 1674, 1606, 1485, 2017, 1862, 1736, 1639, 1571, 
           1535, 2053, 1898, 1772, 1675, 1607, 1486, 2018, 1863, 1737, 1640, 
           1572}}], 
          PolygonBox[CompressedData["
1:eJwV0LlP1EEchvHhJvEPQG5J0JLLBBtAhUI7jYmVILCACYVCR0woYHfBxNAY
o1KRyGUjnZyVRqWwsCCxMxSc1iAIqMBniifv93lnfjs7U5Hou/ckM4SQgQls
XwhhC3s5IezjN/7mhdCBjdwQhtGIQhTnhzCkz8Rb3oYD+//xTmzyJJpQhBL7
h/VZmOQPcWj/f57AFk/hOmrsfaUrwEI8C6W6JM/GFL/DP5jr0R7/F580V+Kx
eU1+1j8wfzQ346l5Xf5x7qnswqBu275OucrHZJrfku95WlbJfvlDvpQ3rNfK
1zwpL8pe+V2+kIvW78sV/lw2yAH5U5ZYKzOnzDnoMX+T0/q75nnztfjm8e34
lPkyvvBW/sncgiN3OJPd2LE2gtvW53g1bvI6/sZciKX4hiiP9+O5mIn3jm+u
m+ZX8JUf++2g6+G7fBTNuKob1xVhOd4Dl3QjPA+zPIET32foH+l+8WdoiWej
Qj+qz8c73oVz/dhRpg==
           "]], 
          PolygonBox[CompressedData["
1:eJwV0jdPllEYh/EjCdJUygewbAiilEF00AE3CSB9I8HBwQTkhRc240RYEKO0
AZlloWwOoouDgwMISFeKC1jQqAibvzNc+Zf7flrOc6G1vbYtJYRwApPYzQph
ByupIaxiLy2EKsydDKEdhUjDqfQQOvS/+aeowpr9fV015uUHuIR0nLaf0P/h
n6Ea6/a/6mrwQe5AEfLt9uuyMSln4IyuU/7LD6IGG67/pruDBTmBy7ho97Eu
B1NyJrJ1XfIhP4Tb8rRcGq+Xr8pj/FnMyk3yK/4GNj3nO63FolmL2Vu+k6/g
X/AFaOMX6BV9AT/AP6K59B59Twfic83r6Eu5j16nSbpGh2iWeQ5Nyg/pP/ku
fSf302G5ks7IvbSMJuhyfEezcv45fw73+Tn6Wt/Mz/I38ck3/aB1WDLrwi3z
CbkQxfGs5Sd8HmbimSNX1y0f8SPxO3BNN647jzfyZ/c+4OvxUU6iJP4DyLPb
oz/mR1GPLfs/dQ1YlrtRGs8c22a/9I1YkXtQFs8TO2a7+IL/LGBdFw==
           "]]}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          
          PolygonBox[{{3045, 3047, 1533, 2200, 2015, 2170, 1860, 1986, 2141, 
           1734, 1831, 1957, 2112, 1637, 1705, 1802, 1928, 2083, 1569, 1605, 
           1673, 1770, 1896, 2051, 1532, 1636, 1704, 1801, 1927, 2082, 1568, 
           1604, 1672, 1769, 1895, 2050, 1531}}], 
          PolygonBox[CompressedData["
1:eJwV0D1Pk2EAheGn1Ra04h9QBhP7AZMmaHRwwImWdqADI0MHEtvSYuJAQpwI
g4qKRkPUXRIV2CQBNwcSBSqgNQ4OAn4sgvoLvN7hzjn3eZ8+fdszlWa5EQ8h
xPAY31Ih7OJzIoQ2PiGZDKEXDbRQ6gjhFz56VuIP8A/jtlRnCAm9B2PYRNH+
EzvOv+Hd+jNcdLbIZ/EXTdtx21H9sr6MMl/gJ/UZZHkuul+fx1Ve52/1EX1D
n5SD/Ae2fecc/6pPyCvyjlyVw1E6/1C2eFWellPyqbwQ3eP5I9nm1+V5OS2X
ZEHe93xNr+h/9JuywY/JI/yLfkO/JF9jSH9lf6+P6l3R+yCjZ+05/Tn6eY2v
o8C/Y8tvWeGn9Cfoc6bAz+mLyPN7/DD673knj+svcYLfRtqW4dXoHZC37eOD
u/P8Lg5Qt3U4G9NfIMVv4awtza/hHQZse2j5/ACfwW/UbElng/4fd8BMFA==

           "]], 
          PolygonBox[CompressedData["
1:eJwV0DlMlGEUheEPE5fERh1mQDu0BWnEhaHQQjstiAozIBpjYWGkIDHIqhWh
MW4xUUCw1Q60oAE0sbCwMKEAUZEAigsuICiL6PMVb855773/P0vB2dryi+tC
CDnow+TmEKbwc30IP5C/IYQyXMEETm8MYRnf7ap5D3J4K3ZsCiGPp9GK96gx
X8I391W8G4G3YLv7FH+CFL+NYrNS3oJxnDL7g1nPP+O79Acoc5fl9/EPzWb5
Zkn9MZL8FnabHeBF+iMc4c38Har5b3z17kNyEFn7p3av9Av6TtmDtJ4xH9Hr
9BLZJvvkMdlld02+4OfkWvwPZBPPk7n8jhzjl2Ratst+eTy+x/66fMnPx3t5
Vd6URXK//bBeqxfKhzgc32/+XD+jv9Wr9EV88ZsOygFk7IbsCvRulPJKvkfv
xVHeyf+ikad4Qu9Fgt9Aodm+uMcbZM0W8NnnVPAOrKLBLOl2m743OsaQMf+F
T+5P8ntYwWWzXPdb9ZLoeI1K83nMuD/B72IZ9WYJ91vi94+OUVSYz+Gj+w+Y
xn/nQGH7
           "]]}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwV0DcvhVEAxvHDpH0DPVFWRoNePoANm0SJq0ysRHQSi4WLS2LVEosQixCD
OlzlLiaLlask2s/wz/P8n3POO7yF7QPN/akhhBSMIpEZwgNy0kOIpoXwlRFC
HTZ5JZK2eufTtlc+hgtbka3HFucdyEWLLWbLwBJfdu9br8cWr0KPOzs8G2/O
G/iMnnQ2jmF+wstw6byYR/RbZ50Y5Ae8BHm8la/pmYjpTzJqn9Iv9Qps60m5
4ns/sgF7tm335mWcn8lqHpG7/Oj/n8gN+Sxv5Lv3jXKW78s39xflIz+XE3xE
nvJjWf7/H+WLvPK2RO/V79xb0BN6lz6kH+qlyOdtfF3PwjJf9fZXb8QOr8GH
rcm9Ods7n8S1rdTWZ7vn3ShAzB7sTfZdXotP2w3WsI4/LctPXQ==
           "]], 
          PolygonBox[CompressedData["
1:eJwVz71PU2EAhfFXo1hkFbARFaKsuvjRRCj/A/ixANoC1UkSdVT8hskJkKLW
xUQlFAYW0cSlLZaBoqYDYYAFFhMKxMnR3x2enPOc9733tm3p4e67B0MIB5DF
ZkMIGyjEQijihJ46GsJKfQi9OIYd+xX7U/sOf4gLKNlb7Gl7hfehET22adsh
TPCaex22Z7zGH+EihmyztiZ85EvunbQN8FXej3t8kZ+J7vGr/I1+GDl9S07a
R/UV/TJ2vaeTP4+6s6y+qY9E39aLekGek3n5V1blJecZmeffZbP8IP/IX/KT
81eyyssyKRfkP7kmf/juKTnIv8if7o/LdX5Tv69/1c/is74rm+3X9Ld6Hd7r
2/K1fUyv6AnseXeSv4i6s8cY4SV+Pvrf/Daf049H7+dlz5y2DUW/n9/CA/6N
t0f3+HX+Tj+CKb7vmS7bS77PnyCBO7Z5WxwzfNm9VluG/+YpxHHDlrPFkOX/
ATLaVr0=
           "]], 
          PolygonBox[CompressedData["
1:eJwV0TlPVGEAheEPBGEGUeAPoBUgRhHo4BeIbMNWiv4ANlnElk5ZghAbGzUR
CVFU9qACGhpCTDQxMYFRGDCxobCgxOW5xZtzzvvdO3fuzIVbnYmO9BBCGqaR
zAlhFy+yQ3iJmF4fD2E1FsI1pGOHn0XcWYOzt1wNTmGXv8z38nt2J4rwis/h
G/l39nVkRPdx49yJPoyk665wfdy+3YVivObP8An+vV2LzOhzuAfcH30E311X
xvVzKbsbg/a6fREl9g37mZ6Hx/Y9+7NehTfuz7Wb9DVn4/o3vU7v0Bf0Qkzp
R/J09F30ieg3kn/tRzJlf5Kj9pDcsjdlpZyVx/Kr/OF5V+WAvSIPXP9QJu1t
2WPflRv2B1kqZ+Tv6H2ctetTej6e6L+i5O/rX/RqzHnGWbtZX3dWH/0v9qJ9
Hll2nT2p/9PHsOeecu4Od2jfRilucs+5Ajy15113jmuxN+wGZGOfr+AH+Z92
Ly5hgc/jW6P3sRsRQ4pfRL6zNmcfuQTiOOCXsIz/vDVdPw==
           "]]}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Opacity[0.2], 
        EdgeForm[None], 
        GraphicsGroupBox[{
          
          PolygonBox[{{2201, 3039, 3033, 2404, 2516, 2665, 2851, 2252, 2435, 
           2547, 2696, 2882, 2292, 2364, 2476, 2625, 2811, 2202, 2331, 2403, 
           2515, 2664, 2850, 2251, 2291, 2363, 2475, 2624, 2810}}], 
          
          PolygonBox[{{3038, 3040, 2250, 3032, 2809, 2995, 2623, 2772, 2958, 
           2474, 2586, 2735, 2921, 2362, 2434, 2546, 2695, 2881, 2290, 2457, 
           2569, 2718, 2904, 2330, 2402, 2514, 2663, 2849, 2249, 2361, 2433, 
           2545, 2694, 2880, 2289}}], 
          PolygonBox[CompressedData["
1:eJwV0r1PU2EAhfG3RQU06l8ACV8GFBfZHBEpFGFgVgY3ESjoIKtOFqN0cSEB
FQsILATwK0SYjLhogqK0FePk4uBmpFXxd4cn55znvbe3TW/N5VTvUDyEEMMj
5I+EUMBiRQgLyCFWGUInXqLncAgVzuf5HQSuAy/Q7azc2RP+hD2Er7jOn+Y/
83fsEjJcktvnEvZzXOAOcXPcA/u4nUUf12A36esYtQftXVyzm+1P7mnRN3HL
HnP2TZ/Qi/q43qn/c92W/GHPyGq5IVfkoGx37dvo8+yMfGY/lV32QTnr/m35
y16SZ+Vr+V6m5ZTr38nv9kN5TK7Jx/KSrHf+U5/XG+Ur3NAH+IJ+X/+ij+in
9G3PO6O/wU077WwP9+wO+6/zKn0ZA/b56PsiaR+wZ5xP2kftaVzk6uyr0fMw
zJ3kPrrutv0bd7kE94drs1ej/58r47Jcrd2PPFJ8E/+BL+EctxK9E3w8+t1c
jX0Fueid4Bv5Lb6IVm4ZCT7GT3P/AdzEXK0=
           "]], 
          PolygonBox[CompressedData["
1:eJwV0rlPFVEAhfELNCKIwgMUOqzZVEAh4W9QFlFxgaC1S4Egi1pIRwEYl4IK
JShUNrgACip7QUJBLKQR2WNBRevvFifnfN+dybzJm4KWe7V3k0MISTImv9NC
WJf9IyEkUkO4LsvSfDSEfH6G35MsrlGWpMlZnrNp/hzulH15ylfxu3wmviaL
cos/xX/jz+IO2ZMnfCW/wz/HKfi11HIn8FVZkJvcSe6r64ZxDh6VO9wZXGR/
ly78CO/KY3wBb7unwl6WHjzg7I89aCfrV1JjH+f/2SP2aT2tP+oH+kp8b/0L
D+h5PK5v4Fw95Rlr+hB/0NV6Tq/qXv3W9SvxPfGQztaT+r2+rUudH9hjdqGe
kU67nV+PvzHea3fb5+0tzyu3l+QZ7neWZL+USzgDF9jjch834Ln43+IcPOn+
NziB30kLV4LbZFu6uApu03V9OOAXcpE7hi/LbPweuGxuwnXF+KFsxe+BL+f/
8um4Xn7G74FP8F/4Itwqm/F74Mv4DT4N18mP+P/zWfxn/pP8B54jXek=
           
           "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[{1, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
         17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
         34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 
         50}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwlzks2QgEAANBnbBUWQUhCPyKlEKXfI5IUKokkqzbtnmNw53ctHBT7K0EQ
nLLOF2Ne6PHIAxtE2GSLbaLsEGOXOHvsc0CCJCnSZDjkiCzHnJDjb/X/kKfA
GUVKnHPBJWWuuKZClRtq1GnQpEXILXe0mfHOK8906fDNhDf6PDHngyEDfpgy
YsEnv9yzBHAUHmM=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwl1GWUlGUYgOFZuiQFASUlpVukU+lGurtLpRt2qU3p7gZJpRtRulEapQUV
UDquPfy45nnu9z3nO/NjvsnUpmfdHkGBQOBDHyPNJmYO3tgvsY+NjGI0YxhL
MCGMYzwTmMjjhIHAJDOUMMKJIJIovqep5+fkrf0y+9nEZJo5/yz6C3HFOMBm
OutifMB9fYopNNe5COKqPsiPdNGfk5i/9Gmm0kLnJgbX9M/8RFddnCQ80GeY
Rkudh5hc14foay/HR/ynt9DN/gVJeajPMp1WOi+xuKF/oZ+9PKn5X2+lu70E
yfhbDzWrk5lzur9ZmU94oUeYtcjKDN3azEdsRlOXP5wPNquSkRAa8qvzb8wK
TCINY6lPBE/dDzdrEkYWxtOISLa5j/7RlGQiyRlDPcL5x/0wswahfMo4vua8
uwHml6QjmAa8dD7SrE02Zuo2Zn7i8KceYlYjE4f1t2ZF0vJMb6envRQp+Fdf
YKD9K9LzSs+irb0Acbmpj/CdvRIf81zvoJe9dND79+OR/o3ZtNMFicctfZSd
9NZlSMlj/TtzaK8LEZ/b+hi7mEsHZ4VJwB19nN3Mo6OzIiTkrj7BHuazgIUs
YjFLWMoynngPl5srWMkqVrOGtfzAOtbTybOLkoh7+iR76aPLkoon+iKD7FXI
wOvo/wWzDtmZQGOi2ODuHaDbjZc=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwl1XV8VmUYBuCzjR7dDSOkTBAEA8QCEQzsVuwCu1vsVrpVursbpJFGujtG
d3k9P/+4dj/vfd7Dvu/EyGjRqnnLlCRJ5vrRhgOpSfI7jcnNJt0s2tKO9nSg
I5npSdJJHrSvDbeSh8262XTmkHVbmpCXLbo5dOGwdTtuIx9bU/7/HDnTkmSQ
dQsu4rSuK0fM7WlKfrbp5pHL/sHWT1GFM7puHDV3oBkF2K6bT7r9Q6yfpipn
dd05Zu7I7RRkh66UvVPMb1KXBbrcuqHmZ6jGOV0Pjps7cQeF2Kkrbe9U81vU
Y6Euj26Y+Vmqc5n1MvkN5x2vZD3H/BENqW29Wv7EH46fkJ25k6sd2yALU8O8
SLbmRvNOucv+MuZp5rdpYN4a51HL/K+8S/4gG8m98n75j/PyyuFxf+Rz8jq5
Wd4ta8jL5fL4vvJbebPcLe+TF5xfWc6N6yk/ju8it8sbqGNeI3+O58a8X/7p
nJOyS3wmrtFvlEW42LxYfslu+8paTze/E/tYpMunG2F+PvaTxPOjmyc/iWvC
X/adkl1pTlH26BaT396R1i9wCSn01J+W3eJ7U4y9uiX04ox1d+6hOPt0S+lN
H/rSj/4MYGC8Y96bQXIwQxjKMIYzgrP+nR7cSwn265ZRwOcbZf0il5LKSP25
eC7iulOSTN1yCto/2vqleMZIY5T+fFzruM+U4oCunL0zzO9yLSt0hXRjzC/H
vSYLo/UX4jryAKU5qCtv70zze/GcsFJXWDfW/ApXBOsV8juyUsV6vvyUm7jK
eq38hTHxR8m6p/nB+EzmTbJM3BvzEvlVnGfeJQ/Zn2H+29xMvi+vl9viOsr6
8kq5Ku67/FE2lvvie8R74Pwicpx1U9lS1pdb4t7KmrKmXBnvnfxe3iL3yGxU
NS+Qn8Xzbd4R7wN1zevkr4z1O1Kse5kfomzcR+ul8msOO17Bepb5AxqwSldU
N97cilpkp5puofw8Pgfj7EvV9TY/TDmO6CrqZps/jOvBal0x3QTzq3FNyMF4
fZq+j/kRynNUt4bi+onWr1GbnEzQZ9H3NT9KBsd0aymhn2T9OnXIxUR9Vn0/
82NU4LhuHZPI5lh/3eNU5IRuPZPJ7tgA3RNU4qRuA1Pi/x7v0lQ5jenMYCY5
nDPQ3iepzCndRkrqJ1u/Ec8b6VSPv3fyCxpRz3q9/I0m5sx4BuPZcv5/BBTt
DQ==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwV1XfcTQUYB/Brll0hIympSCpFZG+hyAgRsskme2ZmU9ll772FomFUilAp
ilDKLiOrpO/zx/fzPL/fufd973vuOefN1axTrY5JEolEj6SJRINkicQzKRKJ
lckTiXKcl1cxhlcp6NgqfXkuyKsZS0MKObZaX4E/5TWMo45+v64ld3FA14hn
9Wvkivwlr+VUmkRivFnXsQP6VtzNt7rGFNavlStxUV7HBOrpv9W15h6+071G
Ef06+Xkuyet5m1f03+nakJHvdU14Tr9ersxleQOddefkN3mcd3T1dd/bXycT
B3X9dNftYyhCU11R3QZ7Fa7Ib8nJmCJvlLvYz9sHkZ93dQ10B+1tycw4OTUz
7T843t9+wz6WRfbcPGefYmZkkb2Z1xWzb7RXZaY9O3/rR5jJmapfZubhA31X
84JusznYnG8+yE6ekCead/Ex8+U10fMFE+P6MH+Iv8tsZ84x7+cz7pXHm2n4
iFnySjMfP3rvAPNm/K0stj9MUftUMxOL7c29rnh8VvsLXJVHyimYJm+S37D/
aR/Ck0yKazN+h709WTikG6j7Jz4TxWihK6HbZH+Ra/JmJse1qj+k60BWDuta
UlK/Wa7GdXkLU2hFa9rwOm057bpuZ7anA6W8d4v3VeeG/CFT6Uhpxz7Uv8RN
+SOmxfWvP6zrSDZ+0nWiTJxTuQb/yFuZHte//iddJ7Lzc1zLlNVvlWvyr7yN
brq/5KE8xXtxP+h+tnfmPo7E9Uo5/Ta5Frfkj+muuygPowDv65rqjti7kIMJ
clpm2486/qb93+gpzjQ5M0vsXR0vH9eavTaz7Pfxn36UmZLp+uVmXj7R9zAv
6baYw80FZi528XRcC+bd8VoWyGvNJ/mSGd7fzDyq/8Dsas41c7I9rmP5bTNd
nDvmyKvMx/nFeweZt+I1LLE/Qgn79Lj2WWp/w+sqxO+3v8xtebR8B+/Jn8o9
7Zftb/FM3Le65vE74v3k5JhucJyLeBZRkm66irpP7XVI8JluFi30x+I1PMDx
+L6oFPemXJckbNfNjmtbf1zuzoOciHPL83Eu5HokZYduTnxmKju2Q/cKydip
m0svetOHM+6BvvGcjGdY3PNxH1IlnjHeU5/k7NLNi/tIf0LuQS5+jWuGqvGd
yg1Iwee6+XHP6X+Ve/IQv8X3wgv6z+VXSckX8bl0V+wjKBjXStyvut/svcgd
51ZOz1z7SceH2G/b36VU3CNyFpbZBzv+YjwL7Q2Zbc8R3619jHkn79tXmI/F
NRfnJZ7HupEstD9EIftk8574LlkorzOfYnfkeKaYJ/WbzN7mPPOBOP/x3IzP
Z2aIe5R58mozf5wDfvf+oWYinjHx3HZ8qfkopeO+NbOy3L7eLMAQ76kWn1nX
iDsZK6eK+8a+O75f+1X7KJ5lUTz34vfZ+/AIf+iG6ZIwSS4Tzxtd9fjb7I1J
xVe6vrpr9tEUZrGune4Pe18e5VT8PF7SfyW/Rmq+1i2JZ63+lNyPPJzWDaeG
/mu5CWnYo1saz2X9abk/eTkT/6+pqd8jNyUte3XL4lmtPyMP4DHOur7Pxv9X
ajm2V9eMdHyjWx7/r6jt2De65qRnn25FPNd42bF9uhZkYL9uZTzn9WflgeTj
XPwtuqRMlssyw56NFfYN8cyL88Jor/0f+Y1QOA==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJwV1Xf8TXUcx/Fr/BAqUkhUVhRSKZSR7FBkNGRlj/yMbNnZI3tXtAmlIpWU
UUqyN2UU2Xtk9/z88Xq8x/dzzr3n3O85N3fTDrWTUyQSiU0pE4m1SYnEvrSJ
RCWsTpNItEQe3NCnTpdItNEfk0egMv7Q79dVxq9yK+TFTX2S+bb64/JIVME6
/QFdFfwmt0Y+7M/gC9A0jmln7QQ/ClWx3jF/66pijdwG+eM4s8N1GTBXToG0
utflk/xoPIsNjv9H9yx+l9vigTiH2RG6jPhMTol0uvbyKX5MHC8vkB9BNflx
eRp/D76TNzr3wVjDWrkdnjHzsVwQBeKz5JH8rWjJ/07n6V/gF/Ml0YXfSVPp
b+GT+T70tNyUrpbf5qvxn/OD6aO0E91GJ9Lq1p+g0+VBNCdtS9fT8fR76y+G
yiNpGdqD/kmn0E2u5RBfHb3lP8w3oivl1/ny/Cf8g3FtcgF5FH8b5su15W/4
J5FaTi934M/wY1EDxXUzdLmwVN7sM//la2Cd3B4PIgkZzHbUn+XH4TlsMX9Y
9xzWy8l4KPYNtlrbhu2xx+ynHXQnjph9HhvMdECh2CfI6Pyd9Of48Xgeu8wf
1dXERrkjCse+wK3mO+vP8xNQE7vNH9PVwia5E4qgoNnRutuxIH5T3KZ7Q77A
T0Qt7HH8cd0L2Cx3xsNxD8yO0WXC53Evcbuui3yRn4Tq8hfyY3G8XEKeyd+L
H+SX5KV8Wfzpc07Q2thirbG1VfwbfAX+U/4hJPObadG4r/zbfH+ambaia2Mf
xudar0OXyMPoU7Qr3UUn0QzWM9Gucl96SW5Gf5VH08mxH+hCeQgtRjvT7fEd
rZXk3+HvQzt+A12mf5n/gX8af7mmk7QOtlrrgorW58iF4pmN31oey9+BhfGb
I7Oum/wfPyWuA0/q3tXdjx/lvc59iq+LbXJXPBp7AHeY7a6/zE9FXewzf1pX
D9vlbngsfvN4t1k7o38RO+TuKBa/Jw7Euy3eT6H27MF4BuOZwFnzL2GnuR7x
7ol7iiw+v4f+Cj8N9XDY/Dndy9gl94x3QVwr7jTfU3+Vnx7vABwxf173CnbL
veLZjGvDXeZ76a/xM2If4aj5C7r62CP3jv0Wz4bZcbos+DK+G7LqesvX+Znx
3Mpfyo/H95Ofkt/jc+Mn+RV5GV8Ox3zORfpq7FlrTaz9zL/JV+Ln8oXRgd8S
78543vjx/AB6J20d7y46ln4Vvw/9Vh5OS9FudDedHPPWs9E35X70htyc/iaP
iT0Y74U4jzyUPhHPDN0R985aKX4WnyfekfxGulxfn/+RfwbHXdMl2iD2rLU+
qGz9M7lIvC/jmZcn8Hfh6/gNkF3XR77JvxvnRGndbF1erJBPOPd/fEPslfvG
/UVRcxN1WbEofhPcresrJ/Ce/CpOOv6y3Aj75H5xTXFPkMN8P30KzJIb4JT5
K3Jj7Jf7x3eK74rTsc9jL9vHZ2M/xh7DVbNNcMDMAJSJ74J7nL+/PiVmyw1x
wfw1+TX8LQ9E2fguyGl+gD4V3pcb4aL563JT/CMPwtN4xOwkXTYsjs9CLt1A
OTU+kGvKX/PF43rie8nv8/nQPv4P6cq4T/xPfHn05P+il3zuDdos9qbuoLnX
6C/yKPqWXIXOk9+iD9OOdCudQMvF+yTeg/JAmp22oevouPgfjeeafiePoKVp
d7qH5rR2Lz+IT0ILfg39UF+LX8SXiHse907+gM+PVfEbysv5CvH+cw03aXMc
sjYYVa3Pl4vG3o13mDyFvxtL4h7ivrg+OQ0+iuuOe677UH4AP8uXnTuhayH/
Kw9B+Xjv6abqcuDbuA7crxssp8XHclNccXwKfUvdYXkoKsRnI7d+iD4dPpGb
4aA9d9UxKa210h/RDUPFOD/y6Ifqb8Gn8YzjmvlU+ta6o/LweMfE+ZFXP0yf
HnPkFiin+0gugF9iv8or+Iroxe+lU+l15/0f1jZ1Ew==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        LineBox[CompressedData["
1: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
         "]]}}}], AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes -> True, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
    Method -> {"AxesInFront" -> True}, 
    PlotRange -> {{-1, 1}, {-0.9999999591836735, 1.}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     TagBox[
      FormBox[
       TagBox["1", HoldForm], TraditionalForm], TraditionalForm, Editable -> 
      True], 
     TagBox[
      FormBox[
       TagBox["z", HoldForm], TraditionalForm], TraditionalForm, Editable -> 
      True], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
            RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"3", " ", 
                SuperscriptBox["z", "2"]}]}], ")"}]}], HoldForm], 
       TraditionalForm], TraditionalForm, Editable -> True], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
            RowBox[{
              RowBox[{
                RowBox[{"-", "3"}], " ", "z"}], "+", 
              RowBox[{"5", " ", 
                SuperscriptBox["z", "3"]}]}], ")"}]}], HoldForm], 
       TraditionalForm], TraditionalForm, Editable -> True], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
            RowBox[{"3", "-", 
              RowBox[{"30", " ", 
                SuperscriptBox["z", "2"]}], "+", 
              RowBox[{"35", " ", 
                SuperscriptBox["z", "4"]}]}], ")"}]}], HoldForm], 
       TraditionalForm], TraditionalForm, Editable -> True], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
          FractionBox["1", "8"], " ", 
          RowBox[{"(", 
            RowBox[{
              RowBox[{"15", " ", "z"}], "-", 
              RowBox[{"70", " ", 
                SuperscriptBox["z", "3"]}], "+", 
              RowBox[{"63", " ", 
                SuperscriptBox["z", "5"]}]}], ")"}]}], HoldForm], 
       TraditionalForm], TraditionalForm, Editable -> True], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{
          FractionBox["1", "16"], " ", 
          RowBox[{"(", 
            RowBox[{
              RowBox[{"-", "5"}], "+", 
              RowBox[{"105", " ", 
                SuperscriptBox["z", "2"]}], "-", 
              RowBox[{"315", " ", 
                SuperscriptBox["z", "4"]}], "+", 
              RowBox[{"231", " ", 
                SuperscriptBox["z", "6"]}]}], ")"}]}], HoldForm], 
       TraditionalForm], TraditionalForm, Editable -> True]}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.37820393249936934`, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.37820393249936934`, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.6142719099991583, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.6142719099991583, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.8503398874989481, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.8503398874989481, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.08640786499873876, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.08640786499873876, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
             ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.37820393249936934`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.6142719099991583`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.8503398874989481`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.08640786499873876`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7}], 
           "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.583147182166506*^9, 3.583183988398339*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Properties", "Section",
 CellChangeTimes->{{3.58314330374061*^9, 3.583143308547062*^9}}],

Cell[CellGroupData[{

Cell["Initialize Notation", "Subsubsection",
 CellChangeTimes->{{3.583143313359857*^9, 3.583143318179215*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Notation`\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{RowBox[{
       RowBox[{"<", "a_"}], ",", 
       RowBox[{"b_", ">"}]}]},
    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", " ", 
   TemplateBox[{RowBox[{"Integrate", "[", 
       RowBox[{
         RowBox[{"a_", " ", "b_"}], ",", 
         RowBox[{"{", 
           RowBox[{"z", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]},
    "NotationTemplateTag"]}], "]"}]], "Input",
 CellChangeTimes->{
  3.583143355094279*^9, {3.583143698868931*^9, 3.583143710978456*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Give a name to each Legendre Polynomial", "Subsubsection",
 CellChangeTimes->{{3.583143390868935*^9, 3.583143432867789*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["p", "0"], ",", 
     SubscriptBox["p", "1"], ",", 
     SubscriptBox["p", "2"], ",", 
     SubscriptBox["p", "3"], ",", 
     SubscriptBox["p", "4"], ",", 
     SubscriptBox["p", "5"], ",", 
     SubscriptBox["p", "6"]}], "}"}], " ", "=", " ", "legendreP"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.583143430072418*^9, 3.583143430391161*^9}, {
  3.583143486893188*^9, 3.583143553980889*^9}, {3.583143874908398*^9, 
  3.583143886011629*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate Orthogonality", "Subsubsection",
 CellChangeTimes->{{3.583143561990768*^9, 3.583143583747816*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"<", 
       SubscriptBox["p", "i"]}], ",", 
      RowBox[{
       SubscriptBox["p", "j"], ">"}]}], ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "6"}], "}"}]}], "]"}], " ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.58314359756665*^9, 3.58314366230539*^9}, {
  3.583143904970169*^9, 3.583143909508203*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "0", "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["2", "3"], "0", "0", "0", "0", "0"},
     {"0", "0", 
      FractionBox["2", "5"], "0", "0", "0", "0"},
     {"0", "0", "0", 
      FractionBox["2", "7"], "0", "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox["2", "9"], "0", "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox["2", "11"], "0"},
     {"0", "0", "0", "0", "0", "0", 
      FractionBox["2", "13"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.583143646067261*^9, 3.583143666253693*^9}, 
   3.583143715445287*^9, {3.583143891835671*^9, 3.583143911525367*^9}, 
   3.5831828693103304`*^9, 3.5831839928025904`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Reference", "Section",
 CellChangeTimes->{{3.58314444617846*^9, 3.583144447390289*^9}}],

Cell[TextData[StyleBox["Jian-Xian Qiu & Chi-Wang Shu", "Subsubsection"]], \
"Text",
 CellChangeTimes->{{3.58314447301145*^9, 3.583144492547288*^9}}],

Cell["\<\
Runge-Kutta Discontinuous Galerkin Method Using WENO Limiters
SIAM 2005.
\
\>", "Text",
 CellChangeTimes->{{3.583144504298638*^9, 3.583144559413125*^9}, 
   3.583144973753574*^9}],

Cell["\<\
Here we try to solve the one dimensional conservation Law,\
\>", "Text",
 CellChangeTimes->{{3.583144802003584*^9, 3.583144833856997*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["u", "t"], "+", 
   RowBox[{
    SubscriptBox["f", "x"], 
    RowBox[{"(", "u", ")"}]}]}], " ", "\[Equal]", "0"}]], "DisplayFormula",
 CellChangeTimes->{{3.583144838267081*^9, 3.583144856558911*^9}}],

Cell["with ", "Text",
 CellChangeTimes->{{3.583144862223115*^9, 3.583144885304153*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u", "[", 
   RowBox[{"x", ",", "0"}], "]"}], " ", "=", " ", 
  RowBox[{
   SubscriptBox["u", "0"], "[", "x", "]"}]}]], "DisplayFormula",
 CellChangeTimes->{{3.583144886912877*^9, 3.583144919364613*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Method", "Section",
 CellChangeTimes->{{3.583145059150504*^9, 3.583145060520824*^9}}],

Cell[TextData[{
 "Use a grid of cell defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["I", 
     RowBox[{"j", " "}]], "=", 
    RowBox[{"[", 
     RowBox[{
      SubscriptBox["x", 
       RowBox[{"j", "+", 
        RowBox[{"1", "/", "2"}]}]], ",", 
      SubscriptBox["x", 
       RowBox[{"j", "-", 
        RowBox[{"1", "/", "2"}]}]]}], "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "j"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the cell center.\nThe individual cell size is defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalDelta]x", 
     RowBox[{"j", " "}]], "=", " ", 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{"j", "-", 
       RowBox[{"1", "/", "2"}]}]], "-", 
     SubscriptBox["x", 
      RowBox[{"j", "+", 
       RowBox[{"1", "/", "2"}]}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and the maximun cell size is h = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["sup", "j"], 
    SubscriptBox["\[CapitalDelta]x", "j"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.583145074420726*^9, 3.583145318614759*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Symbolize", "[", 
   TemplateBox[{SubscriptBox["\[CapitalDelta]x", "j"]},
    "NotationTemplateTag"], "]"}], ";", " ", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{SubscriptBox["x", "j"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{SubscriptBox["I", "j"]},
    "NotationTemplateTag"], "]"}], ";"}]], "Input"],

Cell[TextData[{
 "Using Galerkin Method the solution and the test function are given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["V", "j"], "h"], "=", 
    RowBox[{"{", 
     RowBox[{"p", ":", 
      RowBox[{"p", 
       SubscriptBox["|", 
        SubscriptBox["I", "j"]], 
       RowBox[{"\[Element]", " ", 
        RowBox[{
         SuperscriptBox["P", "k"], "(", 
         SubscriptBox["I", "j"], ")"}]}]}]}], "}"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["P", "K"], "(", 
    SubscriptBox["I", "j"], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the space of polynomials of degree \[LessEqual] k on the cell ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "j"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". "
}], "Text",
 CellChangeTimes->{{3.583145328492051*^9, 3.583145485055285*^9}, {
  3.5831455332048*^9, 3.583145665724948*^9}}],

Cell[TextData[{
 "To fullil this last requirmente we require polynomials basis that provieds \
two requirements:\n1. Provides good interpolation properties inside ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "j"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n2. Provides delta function ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "ij"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " properties. "
}], "Text",
 CellChangeTimes->{{3.58314566795525*^9, 3.583145746152987*^9}, {
  3.583145778546792*^9, 3.583145809512655*^9}, {3.583146267341494*^9, 
  3.583146319148829*^9}, {3.583146362632595*^9, 3.583146365671823*^9}}],

Cell[CellGroupData[{

Cell["Main Approaches", "Subsubsection",
 CellChangeTimes->{{3.583145973525296*^9, 3.58314598382776*^9}}],

Cell[TextData[{
 "1. Use Legendre Polynomials using a Local/Normalized coordiante, \[Xi] for \
range [-1,1] as traditionally in FEM.\n2. Build scalated Legendre Polynomials \
to work in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "j"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for the range ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     SubscriptBox["x", 
      RowBox[{"j", "+", 
       RowBox[{"1", "/", "2"}]}]], ",", 
     SubscriptBox["x", 
      RowBox[{"j", "-", 
       RowBox[{"1", "/", "2"}]}]]}], "]"}], TraditionalForm]]],
 " or in the case of a uniform grid ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[CapitalDelta]x", "2"]}], ",", 
     FormBox[
      FractionBox["\[CapitalDelta]x", "2"],
      TraditionalForm]}], "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.583145992038118*^9, 3.583146261988512*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Scaled Legendre Polynomials", "Section",
 CellChangeTimes->{{3.583144601350548*^9, 3.583144608563784*^9}}],

Cell["\<\
This polynomials will have the form:
\
\>", "Text",
 CellChangeTimes->{{3.58314462215771*^9, 3.58314462960665*^9}, {
  3.583147816315939*^9, 3.583147820590855*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["v", "0"], " ", "=", " ", "1"}], ";", " ", 
    RowBox[{
     SubscriptBox["v", "1"], "=", " ", 
     FractionBox[
      RowBox[{"x", "-", 
       SubscriptBox["x", "j"]}], 
      SubscriptBox["\[CapitalDelta]x", "j"]]}], ";", " ", 
    RowBox[{
     SubscriptBox["v", "2"], "=", " ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], 
         SubscriptBox["\[CapitalDelta]x", "j"]], ")"}], "2"], "-", 
      FractionBox["1", "12"]}]}], ";"}], " ", "..."}], 
  "\[IndentingNewLine]"}]], "DisplayFormula",
 CellChangeTimes->{{3.583144634350992*^9, 3.583144701824*^9}, {
  3.583147779718705*^9, 3.583147811612756*^9}}],

Cell["\<\
How to build this scalated orthogonal polynomials?\
\>", "Text",
 CellChangeTimes->{{3.583147785727013*^9, 3.583147803718682*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Building Orthogonal Polynomials ", "Section"]], \
"Subsection",
 CellChangeTimes->{{3.582684698137864*^9, 3.582684703408516*^9}, {
  3.583146397583381*^9, 3.583146422974257*^9}}],

Cell[CellGroupData[{

Cell["\<\
Using Gram Schmidt Orthogonalization process\
\>", "Subsubsection",
 CellChangeTimes->{{3.583146428069818*^9, 3.583146440973631*^9}}],

Cell["\<\
based on http://en.wikipedia.org/wiki/Gram-Schmidt_process, we configure:\
\>", "Text",
 CellChangeTimes->{{3.582686264829612*^9, 3.58268629885406*^9}, {
  3.583143680978795*^9, 3.583143688952598*^9}}],

Cell[BoxData[
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{RowBox[{
       RowBox[{"<", "a_"}], ",", 
       RowBox[{"b_", ">"}]}]},
    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", " ", 
   TemplateBox[{RowBox[{"Integrate", "[", 
       RowBox[{
         RowBox[{"a_", " ", "b_"}], ",", 
         RowBox[{"{", 
           RowBox[{"z", ",", 
             RowBox[{
               RowBox[{"-", 
                 SubscriptBox["\[CapitalDelta]x", "j"]}], "/", "2"}], ",", 
             RowBox[{
               SubscriptBox["\[CapitalDelta]x", "j"], "/", "2"}]}], "}"}]}], 
       "]"}]},
    "NotationTemplateTag"]}], "]"}]], "Input",
 CellChangeTimes->{{3.5831835720935273`*^9, 3.583183574812683*^9}, {
  3.5831838162694936`*^9, 3.583183824317954*^9}}],

Cell[BoxData[
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{RowBox[{
       RowBox[{"<", 
         RowBox[{"a_", "[", "x_", "]"}]}], ",", 
       RowBox[{
         RowBox[{"b_", "[", "x_", "]"}], ">"}]}]},
    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", " ", 
   TemplateBox[{RowBox[{"Integrate", "[", 
       RowBox[{
         RowBox[{
           RowBox[{"a_", "[", "x_", "]"}], " ", 
           RowBox[{"b_", "[", "x_", "]"}]}], ",", 
         RowBox[{"{", 
           RowBox[{"x_", ",", 
             RowBox[{
               RowBox[{"-", 
                 SubscriptBox["\[CapitalDelta]x", "j"]}], "/", "2"}], ",", 
             RowBox[{
               SubscriptBox["\[CapitalDelta]x", "j"], "/", "2"}]}], "}"}]}], 
       "]"}]},
    "NotationTemplateTag"]}], "]"}]], "Input",
 CellChangeTimes->{{3.582638508470618*^9, 3.582638553843103*^9}, {
   3.582638748995147*^9, 3.582638844531706*^9}, {3.582684806423605*^9, 
   3.582684812061849*^9}, {3.582685449891361*^9, 3.582685451823138*^9}, {
   3.582693877632397*^9, 3.582693900818212*^9}, {3.582696136043915*^9, 
   3.582696157914478*^9}, 3.582696211968862*^9, {3.583143216867935*^9, 
   3.583143234334819*^9}, 3.583143352728468*^9, 3.583143767508555*^9, {
   3.583183579109929*^9, 3.5831835814370623`*^9}, {3.5831838273111253`*^9, 
   3.583183828854213*^9}}],

Cell[BoxData[
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{RowBox[{
       SubscriptBox["proj", "u_"], "[", "v_", "]"}]},
    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", " ", 
   TemplateBox[{RowBox[{
       FractionBox[
        RowBox[{
          RowBox[{"<", "u_"}], ",", 
          RowBox[{"v_", ">"}]}], 
        RowBox[{
          RowBox[{"<", "u_"}], ",", 
          RowBox[{"u_", ">"}]}]], "u_"}]},
    "NotationTemplateTag"]}], "]"}]], "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Testing Notation", "Section",
 CellChangeTimes->{{3.583146497077465*^9, 3.583146500087109*^9}}],

Cell["Inner Product of functions", "Text",
 CellChangeTimes->{{3.583146506070639*^9, 3.583146524703945*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"<", 
   RowBox[{
    SubscriptBox["v", "1"], "[", "z", "]"}]}], ",", 
  RowBox[{
   RowBox[{
    SubscriptBox["v", "1"], "[", "z", "]"}], ">"}]}]], "Input",
 CellChangeTimes->{{3.58269116746967*^9, 3.582691191876695*^9}, {
  3.582694205962818*^9, 3.582694246446663*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", 
    FractionBox[
     SubscriptBox["\[CapitalDelta]x", "j"], "2"]}], 
   FractionBox[
    SubscriptBox["\[CapitalDelta]x", "j"], "2"]], 
  RowBox[{
   SuperscriptBox[
    RowBox[{
     SubscriptBox["v", "1"], "[", "z", "]"}], "2"], 
   RowBox[{"\[DifferentialD]", "z"}]}]}]], "Output",
 CellChangeTimes->{
  3.582691192961636*^9, {3.582694216364683*^9, 3.582694247722152*^9}, 
   3.5826958517192*^9, 3.582696250023046*^9, 3.582885505541414*^9, 
   3.582888615802105*^9, 3.582942051555823*^9, 3.582943967481726*^9, 
   3.582945013883265*^9, 3.582950459474506*^9, 3.58314686369481*^9, 
   3.5831828955698323`*^9, 3.583183591707649*^9, 3.5831840344449725`*^9}]
}, Open  ]],

Cell["\<\
Inner product of name variables \
\>", "Text",
 CellChangeTimes->{{3.583146526417468*^9, 3.583146541344569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"<", 
   RowBox[{"a", " ", "z"}]}], ",", 
  RowBox[{"z", ">"}]}]], "Input",
 CellChangeTimes->{{3.582696245561391*^9, 3.582696266578928*^9}, {
  3.582699600142693*^9, 3.582699619895049*^9}, {3.582701552332708*^9, 
  3.58270155339817*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"a", " ", 
   SubsuperscriptBox["\[CapitalDelta]x", "j", "3"]}], "12"]], "Output",
 CellChangeTimes->{{3.582696263602158*^9, 3.582696267214362*^9}, {
   3.582699601230311*^9, 3.582699621070252*^9}, 3.582701555453195*^9, 
   3.582885506115672*^9, 3.58288861603444*^9, 3.582942052266219*^9, 
   3.582943968021283*^9, 3.582945014364894*^9, 3.582950459976027*^9, 
   3.583146864525714*^9, 3.5831828958888507`*^9, 3.5831835917386513`*^9, 
   3.5831840344969754`*^9}]
}, Open  ]],

Cell["Projection method", "Text",
 CellChangeTimes->{{3.583146548541453*^9, 3.583146559246745*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"<", 
      RowBox[{"a", "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"b", "[", "z", "]"}], ">"}]}], 
    RowBox[{
     RowBox[{"<", 
      RowBox[{"a", "[", "z", "]"}]}], ",", 
     RowBox[{
      RowBox[{"a", "[", "z", "]"}], ">"}]}]], 
   RowBox[{"a", "[", "z", "]"}]}], " ", "\[Equal]", " ", 
  RowBox[{
   SubscriptBox["proj", 
    RowBox[{"a", "[", "z", "]"}]], "[", 
   RowBox[{"b", "[", "z", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.582686445868915*^9, 3.582686467501787*^9}, {
  3.582686591037229*^9, 3.582686594492224*^9}, {3.58269391446727*^9, 
  3.582693979581595*^9}, {3.582694024414297*^9, 3.58269402656175*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.58268641813314*^9, {3.582686451887475*^9, 3.582686470106913*^9}, 
   3.582686596199774*^9, {3.582693960787385*^9, 3.582693980696359*^9}, 
   3.582694027655458*^9, 3.582696276525525*^9, 3.582885507012713*^9, 
   3.582888617118535*^9, 3.582942053017321*^9, 3.582943969122881*^9, 
   3.582945015397323*^9, 3.5829504609167*^9, 3.583146865622228*^9, 
   3.5831828960428596`*^9, 3.5831835918026547`*^9, 3.5831840345909805`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["\<\
Building Scaled Legendre Polynomials using Gram Schmidt Orthogonalization \
process\
\>", "Subsection",
 CellChangeTimes->{{3.582684985389581*^9, 3.582685013416777*^9}, {
  3.582685165447324*^9, 3.582685166963982*^9}, {3.58268673542562*^9, 
  3.582686749216911*^9}}],

Cell["\<\
based on http : // mathworld.wolfram.com/Gram - \
SchmidtOrthonormalization.html, we configure :\
\>", "Text",
 CellChangeTimes->{{3.582702310242509*^9, 3.582702332399345*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["p", "0"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["p", "1"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"z", " ", "-", " ", 
      FractionBox[
       RowBox[{
        RowBox[{"<", 
         RowBox[{"z", " ", 
          SubscriptBox["p", "0"]}]}], ",", 
        RowBox[{
         SubscriptBox["p", "0"], ">"}]}], 
       RowBox[{
        RowBox[{"<", 
         SubscriptBox["p", "0"]}], ",", 
        RowBox[{
         SubscriptBox["p", "0"], ">"}]}]]}], ")"}], 
    SubscriptBox["p", "0"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.582701609856257*^9, 3.582701697332573*^9}, {
  3.582702340012618*^9, 3.582702340881905*^9}, {3.583146680419461*^9, 
  3.583146683145017*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scaledLegendre", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["p", 
        RowBox[{"i", "+", "1"}]], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z", " ", "-", " ", 
           FractionBox[
            RowBox[{
             RowBox[{"<", 
              RowBox[{"z", " ", 
               SubscriptBox["p", "i"]}]}], ",", 
             RowBox[{
              SubscriptBox["p", "i"], ">"}]}], 
            RowBox[{
             RowBox[{"<", 
              SubscriptBox["p", "i"]}], ",", 
             RowBox[{
              SubscriptBox["p", "i"], ">"}]}]]}], ")"}], 
         SubscriptBox["p", "i"]}], " ", "-", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"<", 
            SubscriptBox["p", "i"]}], ",", 
           RowBox[{
            SubscriptBox["p", "i"], ">"}]}], 
          RowBox[{
           RowBox[{"<", 
            SubscriptBox["p", 
             RowBox[{"i", "-", "1"}]]}], ",", 
           RowBox[{
            SubscriptBox["p", 
             RowBox[{"i", "-", "1"}]], ">"}]}]], 
         SubscriptBox["p", 
          RowBox[{"i", "-", "1"}]]}]}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "//", "Expand"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scaledLegendre", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["p", "0"], ",", 
       SubscriptBox["p", "1"]}], "}"}], ",", "scaledLegendre"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.582701709670382*^9, 3.58270181226695*^9}, {
  3.582701981291174*^9, 3.58270211792995*^9}, {3.582702195552069*^9, 
  3.582702219319486*^9}, {3.582702351972792*^9, 3.582702522978062*^9}, {
  3.582702865515551*^9, 3.582702867544579*^9}, {3.583147226654544*^9, 
  3.583147227036503*^9}, {3.583152764862691*^9, 3.583152769449489*^9}, {
  3.583183751912812*^9, 3.583183752144826*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scaledLegendre", " ", "//", "Column", " "}]], "Input",
 CellChangeTimes->{{3.582702524712859*^9, 3.582702530620191*^9}, {
   3.582702619697515*^9, 3.582702715093649*^9}, {3.582702871903405*^9, 
   3.582702882600228*^9}, {3.582703431349703*^9, 3.582703449301598*^9}, {
   3.582878000456984*^9, 3.58287802964176*^9}, {3.582878066122893*^9, 
   3.582878113839313*^9}, {3.582878195448359*^9, 3.582878199405673*^9}, {
   3.582878271941571*^9, 3.582878283019237*^9}, {3.582878341280183*^9, 
   3.582878392584792*^9}, {3.582878439117153*^9, 3.582878497635797*^9}, 
   3.582880947785913*^9, {3.583146902024822*^9, 3.583146933708902*^9}, {
   3.583147199701357*^9, 3.583147231712286*^9}, {3.5831829173640795`*^9, 
   3.583182917588092*^9}, {3.583183613003867*^9, 3.5831836163460584`*^9}, 
   3.583183852364558*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {"z"},
    {
     RowBox[{
      SuperscriptBox["z", "2"], "-", 
      FractionBox[
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"], "12"]}]},
    {
     RowBox[{
      SuperscriptBox["z", "3"], "-", 
      FractionBox[
       RowBox[{"3", " ", "z", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "20"]}]},
    {
     RowBox[{
      SuperscriptBox["z", "4"], "-", 
      RowBox[{
       FractionBox["3", "14"], " ", 
       SuperscriptBox["z", "2"], " ", 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]}], "560"]}]},
    {
     RowBox[{
      SuperscriptBox["z", "5"], "-", 
      RowBox[{
       FractionBox["5", "18"], " ", 
       SuperscriptBox["z", "3"], " ", 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "+", 
      FractionBox[
       RowBox[{"5", " ", "z", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]}], "336"]}]},
    {
     RowBox[{
      SuperscriptBox["z", "6"], "-", 
      RowBox[{
       FractionBox["15", "44"], " ", 
       SuperscriptBox["z", "4"], " ", 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "+", 
      RowBox[{
       FractionBox["5", "176"], " ", 
       SuperscriptBox["z", "2"], " ", 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]}], "-", 
      FractionBox[
       RowBox[{"5", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "6"]}], "14784"]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.583146907738306*^9, 3.583146934719183*^9}, 
   3.583146979455472*^9, 3.583147038278773*^9, 3.583147203720114*^9, 
   3.583147236602177*^9, 3.5831828448869333`*^9, {3.5831829015901766`*^9, 
   3.58318291808712*^9}, {3.583183598200021*^9, 3.5831836168390865`*^9}, 
   3.583183754697972*^9, {3.583183847991308*^9, 3.583183852891588*^9}, 
   3.583184043571494*^9, 3.583184424457796*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Substituting \[OpenCurlyQuote]z\[CloseCurlyQuote] variable", "Section",
 CellChangeTimes->{{3.583147140424206*^9, 3.58314715059018*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"scaledLegendre", " ", "/.", 
   RowBox[{"z", "\[Rule]", " ", 
    RowBox[{"x", "-", 
     SubscriptBox["x", "j"]}]}]}], "//", "Column"}]], "Input",
 CellChangeTimes->{{3.582878501154025*^9, 3.582878510164032*^9}, {
  3.583146740620939*^9, 3.583146756951206*^9}, {3.583146793900048*^9, 
  3.583146801379051*^9}, {3.5831829411274385`*^9, 3.5831829416284666`*^9}, {
  3.5831840816616735`*^9, 3.5831840818846855`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     RowBox[{"x", "-", 
      SubscriptBox["x", "j"]}]},
    {
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "j"]}], ")"}], "2"], "-", 
      FractionBox[
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"], "12"]}]},
    {
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "j"]}], ")"}], "3"], "-", 
      RowBox[{
       FractionBox["3", "20"], " ", 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "j"]}], ")"}], " ", 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}]}]},
    {
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "j"]}], ")"}], "4"], "-", 
      RowBox[{
       FractionBox["3", "14"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}], "2"], " ", 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]}], "560"]}]},
    {
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "j"]}], ")"}], "5"], "-", 
      RowBox[{
       FractionBox["5", "18"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}], "3"], " ", 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "+", 
      RowBox[{
       FractionBox["5", "336"], " ", 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "j"]}], ")"}], " ", 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]}]}]},
    {
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "j"]}], ")"}], "6"], "-", 
      RowBox[{
       FractionBox["15", "44"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}], "4"], " ", 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "+", 
      RowBox[{
       FractionBox["5", "176"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}], "2"], " ", 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]}], "-", 
      FractionBox[
       RowBox[{"5", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "6"]}], "14784"]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.582878284131955*^9, 3.58287834880017*^9, 3.582878395691044*^9, 
   3.582878444978434*^9, {3.582878480274416*^9, 3.58287851064252*^9}, 
   3.582887072678597*^9, 3.582888659335493*^9, 3.582942683153918*^9, 
   3.582943972798162*^9, 3.582945019550115*^9, 3.582950465563729*^9, {
   3.58314673201779*^9, 3.583146757710908*^9}, 3.583146802478487*^9, 
   3.583146874467833*^9, 3.583146979904218*^9, 3.583147043932556*^9, {
   3.5831829363061624`*^9, 3.583182941996488*^9}, 3.583183627333687*^9, 
   3.5831838937709265`*^9, 3.5831840835317802`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"scaledLegendre2", " ", "=", 
   RowBox[{
    RowBox[{"Divide", "[", 
     RowBox[{"scaledLegendre", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        SubscriptBox["\[CapitalDelta]x", "j"], ",", 
        SuperscriptBox[
         SubscriptBox["\[CapitalDelta]x", "j"], "2"], ",", 
        SuperscriptBox[
         SubscriptBox["\[CapitalDelta]x", "j"], "3"], ",", 
        SuperscriptBox[
         SubscriptBox["\[CapitalDelta]x", "j"], "4"], ",", 
        SuperscriptBox[
         SubscriptBox["\[CapitalDelta]x", "j"], "5"], ",", 
        SuperscriptBox[
         SubscriptBox["\[CapitalDelta]x", "j"], "6"]}], "}"}]}], "]"}], "//", 
    "Expand"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scaledLegendre2", "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"x", "-", 
     SubscriptBox["x", "j"]}]}]}], "//", "Column"}]}], "Input",
 CellChangeTimes->{{3.5831843070363903`*^9, 3.583184343618454*^9}, {
  3.583184442039027*^9, 3.5831844723810806`*^9}, {3.583184515686756*^9, 
  3.583184516685158*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     FractionBox[
      RowBox[{"x", "-", 
       SubscriptBox["x", "j"]}], 
      SubscriptBox["\[CapitalDelta]x", "j"]]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "12"]}], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}], "2"], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]]}]},
    {
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}], "3"], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "3"]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}]}], 
       RowBox[{"20", " ", 
        SubscriptBox["\[CapitalDelta]x", "j"]}]]}]},
    {
     RowBox[{
      FractionBox["3", "560"], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}], "4"], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "2"]}], 
       RowBox[{"14", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}]]}]},
    {
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}], "5"], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "5"]], "-", 
      FractionBox[
       RowBox[{"5", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "3"]}], 
       RowBox[{"18", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "3"]}]], "+", 
      FractionBox[
       RowBox[{"5", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}]}], 
       RowBox[{"336", " ", 
        SubscriptBox["\[CapitalDelta]x", "j"]}]]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["5", "14784"]}], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}], "6"], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "6"]], "-", 
      FractionBox[
       RowBox[{"15", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "4"]}], 
       RowBox[{"44", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]}]], "+", 
      FractionBox[
       RowBox[{"5", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "2"]}], 
       RowBox[{"176", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}]]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.583184322449217*^9, 3.583184345459257*^9}, {
   3.583184430245406*^9, 3.5831844427878284`*^9}, 3.5831844779970903`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alternative procedure: (the mathematica way)", "Subsubsection",
 CellChangeTimes->{{3.582702796271568*^9, 3.582702814240405*^9}, 
   3.582781858995421*^9, {3.582883008710493*^9, 3.582883020599992*^9}, {
   3.58314727796372*^9, 3.583147283770801*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"scaledLegendre3", " ", "=", " ", 
   RowBox[{
    RowBox[{"Orthogonalize", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "z", ",", 
        RowBox[{"z", "^", "2"}], ",", 
        RowBox[{"z", "^", "3"}], ",", 
        RowBox[{"z", "^", "4"}], ",", 
        RowBox[{"z", "^", "5"}], ",", 
        RowBox[{"z", "^", "6"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"#1", " ", "#2"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}], ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}], "&"}]}], "]"}], " ", "//",
     "Expand"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.582697557009948*^9, 3.582697569480204*^9}, {
  3.582697607169111*^9, 3.582697612806947*^9}, {3.582697815214306*^9, 
  3.582697826377427*^9}, {3.582697909941645*^9, 3.582697952821202*^9}, {
  3.582699991419679*^9, 3.582699999928328*^9}, {3.582702549119043*^9, 
  3.582702571439214*^9}, {3.582703059254074*^9, 3.582703099723409*^9}, {
  3.582881795387923*^9, 3.582881827359478*^9}, {3.582882936070032*^9, 
  3.582882938408323*^9}, {3.58288303174316*^9, 3.582883031869792*^9}, {
  3.583182985541979*^9, 3.583182988061123*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"scaledLegendre3", " ", "/.", 
   RowBox[{"z", "\[Rule]", 
    FractionBox[
     RowBox[{"x", "-", 
      SubscriptBox["x", "j"], " "}], 
     SubscriptBox["\[CapitalDelta]x", "j"]]}]}], "//", "Column"}]], "Input",
 CellChangeTimes->{{3.582697958820523*^9, 3.582697966734555*^9}, {
   3.58269980984682*^9, 3.582699873983076*^9}, {3.582702589252683*^9, 
   3.582702593946129*^9}, {3.582703068958541*^9, 3.582703069086144*^9}, {
   3.582703105713696*^9, 3.582703108114631*^9}, {3.582881853035815*^9, 
   3.582881936527751*^9}, {3.582882791546429*^9, 3.582882796802899*^9}, 
   3.582882828988688*^9, 3.582882946523488*^9, {3.582883036285568*^9, 
   3.582883036441369*^9}, 3.5831829828208227`*^9, {3.583184096541524*^9, 
   3.5831840967465363`*^9}, {3.583184136125788*^9, 3.5831841411320744`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {
     FractionBox[
      RowBox[{"2", " ", 
       SqrtBox["3"], " ", 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "j"]}], ")"}]}], 
      SubscriptBox["\[CapitalDelta]x", "j"]]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SqrtBox["5"], "2"]}], "+", 
      FractionBox[
       RowBox[{"6", " ", 
        SqrtBox["5"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "2"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]]}]},
    {
     RowBox[{
      FractionBox[
       RowBox[{"20", " ", 
        SqrtBox["7"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "3"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "3"]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SqrtBox["7"], " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}]}], 
       SubscriptBox["\[CapitalDelta]x", "j"]]}]},
    {
     RowBox[{
      FractionBox["9", "8"], "+", 
      FractionBox[
       RowBox[{"210", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "4"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]], "-", 
      FractionBox[
       RowBox[{"45", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "2"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]]}]},
    {
     RowBox[{
      FractionBox[
       RowBox[{"252", " ", 
        SqrtBox["11"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "5"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "5"]], "-", 
      FractionBox[
       RowBox[{"70", " ", 
        SqrtBox["11"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "3"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "3"]], "+", 
      FractionBox[
       RowBox[{"15", " ", 
        SqrtBox["11"], " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}]}], 
       RowBox[{"4", " ", 
        SubscriptBox["\[CapitalDelta]x", "j"]}]]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"5", " ", 
         SqrtBox["13"]}], "16"]}], "+", 
      FractionBox[
       RowBox[{"924", " ", 
        SqrtBox["13"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "6"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "6"]], "-", 
      FractionBox[
       RowBox[{"315", " ", 
        SqrtBox["13"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "4"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]], "+", 
      FractionBox[
       RowBox[{"105", " ", 
        SqrtBox["13"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "2"]}], 
       RowBox[{"4", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}]]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.582697968517764*^9, {3.582699826618371*^9, 3.582699875365206*^9}, 
   3.582700009372885*^9, {3.582702565883889*^9, 3.582702594703812*^9}, {
   3.582703065452307*^9, 3.582703070149734*^9}, 3.582703109056295*^9, 
   3.582881813864574*^9, {3.582881865604713*^9, 3.582881937602644*^9}, 
   3.582882799375157*^9, 3.582882829873223*^9, {3.582882942443558*^9, 
   3.582882948352699*^9}, 3.582885371661349*^9, 3.582885587608761*^9, 
   3.583146733438616*^9, 3.583146875706789*^9, 3.583146980856784*^9, 
   3.583182936572178*^9, 3.5831829981506996`*^9, 3.583183627452694*^9, 
   3.583183893904934*^9, {3.5831840977195916`*^9, 3.583184107971178*^9}, 
   3.5831841418511157`*^9}]
}, Open  ]],

Cell["Their orthogonal behavior: ", "Text",
 CellChangeTimes->{{3.582885271097597*^9, 3.582885321993811*^9}, {
  3.58288537836285*^9, 3.582885385104512*^9}, {3.582886533362124*^9, 
  3.582886543219765*^9}}],

Cell["\<\
Here, I need to re-define in this case my notation becuase here the \
integration is obver the classical range of [-1,1]\
\>", "Text",
 CellChangeTimes->{{3.582886467854077*^9, 3.582886507793919*^9}, {
  3.582886546735293*^9, 3.582886547898099*^9}}],

Cell[BoxData[
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{RowBox[{
       RowBox[{"<", "a_"}], ",", 
       RowBox[{"b_", ">"}]}]},
    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", " ", 
   TemplateBox[{RowBox[{"Integrate", "[", 
       RowBox[{
         RowBox[{"a_", " ", "b_"}], ",", 
         RowBox[{"{", 
           RowBox[{"z", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]},
    "NotationTemplateTag"]}], "]"}]], "Input",
 CellChangeTimes->{{3.582886406562362*^9, 3.582886409016151*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"<", 
       RowBox[{"scaledLegendre3", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"scaledLegendre3", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ">"}]}], ")"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "7"}], "}"}]}], "]"}], " ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.58288532333611*^9, 3.582885365318049*^9}, {
  3.582885399925792*^9, 3.582885430957139*^9}, {3.582885517100572*^9, 
  3.582885557610863*^9}, {3.582885603870351*^9, 3.582885621649548*^9}, {
  3.582885656008051*^9, 3.582885656141537*^9}, {3.582885710015833*^9, 
  3.582885714889912*^9}, {3.582885860867721*^9, 3.582885865479314*^9}, {
  3.582886180226042*^9, 3.582886196761868*^9}, {3.582886237004118*^9, 
  3.582886248449401*^9}, {3.582886342905605*^9, 3.582886345531313*^9}, {
  3.582886426710886*^9, 3.582886429004761*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "0", 
      RowBox[{"3", " ", 
       SqrtBox["5"]}], "0", 
      FractionBox["225", "4"], "0", 
      FractionBox[
       RowBox[{"1239", " ", 
        SqrtBox["13"]}], "8"]},
     {"0", "8", "0", 
      RowBox[{"12", " ", 
       SqrtBox["21"]}], "0", 
      RowBox[{"93", " ", 
       SqrtBox["33"]}], "0"},
     {
      RowBox[{"3", " ", 
       SqrtBox["5"]}], "0", 
      FractionBox["109", "2"], "0", 
      FractionBox[
       RowBox[{"1827", " ", 
        SqrtBox["5"]}], "8"], "0", 
      FractionBox[
       RowBox[{"10821", " ", 
        SqrtBox["65"]}], "16"]},
     {"0", 
      RowBox[{"12", " ", 
       SqrtBox["21"]}], "0", "506", "0", 
      FractionBox[
       RowBox[{"1221", " ", 
        SqrtBox["77"]}], "2"], "0"},
     {
      FractionBox["225", "4"], "0", 
      FractionBox[
       RowBox[{"1827", " ", 
        SqrtBox["5"]}], "8"], "0", 
      FractionBox["170689", "32"], "0", 
      FractionBox[
       RowBox[{"1065591", " ", 
        SqrtBox["13"]}], "64"]},
     {"0", 
      RowBox[{"93", " ", 
       SqrtBox["33"]}], "0", 
      FractionBox[
       RowBox[{"1221", " ", 
        SqrtBox["77"]}], "2"], "0", 
      FractionBox["479209", "8"], "0"},
     {
      FractionBox[
       RowBox[{"1239", " ", 
        SqrtBox["13"]}], "8"], "0", 
      FractionBox[
       RowBox[{"10821", " ", 
        SqrtBox["65"]}], "16"], "0", 
      FractionBox[
       RowBox[{"1065591", " ", 
        SqrtBox["13"]}], "64"], "0", 
      FractionBox["89512861", "128"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.582886253035363*^9, 3.58288634674748*^9, {3.582886418419026*^9, 
   3.582886431695754*^9}, 3.583146736137334*^9, 3.583146877962504*^9, 
   3.583146983116437*^9, 3.5831829368301926`*^9, 3.583183627700708*^9, 
   3.58318367144521*^9, 3.583183894156948*^9, 3.5831841207649097`*^9}]
}, Open  ]],

Cell["\<\
Therefore this are normalized and scaled legrendre polynomials!\
\>", "Text",
 CellChangeTimes->{{3.582886440741465*^9, 3.582886460930068*^9}, 
   3.582886554684729*^9}]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Normalization Constants", "Section"]], "Subsection",
 CellChangeTimes->{{3.582703260202873*^9, 3.582703268568608*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"coefficients", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"<", 
        SubscriptBox["p", "n"]}], ",", 
       RowBox[{
        SubscriptBox["p", "m"], ">"}]}], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.582703475272251*^9, 3.582703476755273*^9}, {
  3.582703533010481*^9, 3.582703556937068*^9}, {3.582703603984184*^9, 
  3.582703679719721*^9}, {3.582703718019405*^9, 3.58270374237365*^9}, {
  3.582704905653278*^9, 3.582704938764153*^9}, {3.582705169200011*^9, 
  3.582705171047998*^9}, {3.582705228335396*^9, 3.582705246858697*^9}, {
  3.582960203143312*^9, 3.58296020417013*^9}, {3.583152776673652*^9, 
  3.58315277974643*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coefficients", " ", "//", " ", "TableForm"}]], "Input",
 CellChangeTimes->{{3.582703683174527*^9, 3.582703708151088*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     SubscriptBox["\[CapitalDelta]x", "j"], "0", "0", "0", "0", "0", "0"},
    {"0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "3"], "12"], "0", "0", "0", 
     "0", "0"},
    {"0", "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "5"], "180"], "0", "0", "0", 
     "0"},
    {"0", "0", "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "7"], "2800"], "0", "0", "0"},
    {"0", "0", "0", "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "9"], "44100"], "0", "0"},
    {"0", "0", "0", "0", "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "11"], "698544"], "0"},
    {"0", "0", "0", "0", "0", "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "13"], "11099088"]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.5827036942996492`*^9, 3.582703708884881*^9}, 
   3.582703752897045*^9, 3.582704920732255*^9, 3.582704951807234*^9, 
   3.582705190546971*^9, 3.582705268656853*^9, 3.58287780048485*^9, 
   3.582878532133*^9, 3.582960084558127*^9, 3.582960208925107*^9, 
   3.583152024887623*^9, 3.583152783507823*^9, 3.5831836895552464`*^9, 
   3.583183941856677*^9, 3.5831841800553007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"coef", " ", "=", " ", 
   RowBox[{"Diagonal", "[", "coefficients", "]"}]}], ";", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["a", "i"], "=", 
     RowBox[{"coef", "[", 
      RowBox[{"[", 
       RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "6"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.582704997745653*^9, 3.58270505759532*^9}, 
   3.582877887646803*^9, 3.582878544665232*^9, {3.582960214506024*^9, 
   3.582960267485963*^9}, {3.58296044234821*^9, 3.582960447956197*^9}, {
   3.583152787318206*^9, 3.583152787605798*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["\[CapitalDelta]x", "j"], ",", 
   FractionBox[
    SubsuperscriptBox["\[CapitalDelta]x", "j", "3"], "12"], ",", 
   FractionBox[
    SubsuperscriptBox["\[CapitalDelta]x", "j", "5"], "180"], ",", 
   FractionBox[
    SubsuperscriptBox["\[CapitalDelta]x", "j", "7"], "2800"], ",", 
   FractionBox[
    SubsuperscriptBox["\[CapitalDelta]x", "j", "9"], "44100"], ",", 
   FractionBox[
    SubsuperscriptBox["\[CapitalDelta]x", "j", "11"], "698544"], ",", 
   FractionBox[
    SubsuperscriptBox["\[CapitalDelta]x", "j", "13"], "11099088"]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.582878545792763*^9, 3.582960084859488*^9, 
  3.582960269329282*^9, 3.582960448748557*^9, 3.583152025186855*^9, 
  3.583152788312116*^9, 3.583183689580247*^9, 3.5831839418936787`*^9, 
  3.583184192492012*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derivative of the scaled polynomials", "Subsubsection",
 CellChangeTimes->{{3.582877863382231*^9, 3.582877891727861*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dscaledpolynomials", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"scaledLegendre", ",", "z"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dscaledpolynomials", " ", "/.", 
   RowBox[{"z", " ", "\[Rule]", " ", 
    FractionBox[
     RowBox[{"x", "-", 
      SubscriptBox["x", "j"]}], 
     SubscriptBox["\[CapitalDelta]x", "j"]]}]}], " ", "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{{3.582877892913649*^9, 3.582877981867578*^9}, {
  3.582878128413428*^9, 3.582878175426551*^9}, {3.583183081741481*^9, 
  3.5831830883958616`*^9}, {3.5831834654544277`*^9, 3.5831834819683723`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0"},
    {"1"},
    {
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "j"]}], ")"}]}], 
      SubscriptBox["\[CapitalDelta]x", "j"]]},
    {
     RowBox[{
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "2"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "20"]}]},
    {
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "3"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "3"]], "-", 
      RowBox[{
       FractionBox["3", "7"], " ", 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "j"]}], ")"}], " ", 
       SubscriptBox["\[CapitalDelta]x", "j"]}]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["5", "6"]}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SubscriptBox["x", "j"]}], ")"}], "2"]}], "+", 
      FractionBox[
       RowBox[{"5", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "4"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]], "+", 
      FractionBox[
       RowBox[{"5", " ", 
        SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]}], "336"]}]},
    {
     RowBox[{
      FractionBox[
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "5"]}], 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "5"]], "-", 
      FractionBox[
       RowBox[{"15", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", 
           SubscriptBox["x", "j"]}], ")"}], "3"]}], 
       RowBox[{"11", " ", 
        SubscriptBox["\[CapitalDelta]x", "j"]}]], "+", 
      RowBox[{
       FractionBox["5", "88"], " ", 
       RowBox[{"(", 
        RowBox[{"x", "-", 
         SubscriptBox["x", "j"]}], ")"}], " ", 
       SubsuperscriptBox["\[CapitalDelta]x", "j", "3"]}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.582878169184473*^9, 3.582878176104118*^9}, 
   3.58287855047415*^9, 3.582960085196486*^9, 3.583152025555587*^9, 
   3.5831830937291665`*^9, {3.583183465851451*^9, 3.5831834824123983`*^9}, 
   3.5831836896052485`*^9, 3.583183941929681*^9, 3.5831842002004533`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["dp", "i"], "=", " ", 
     RowBox[{"dscaledpolynomials", "[", 
      RowBox[{"[", 
       RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "6"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.582878687708135*^9, 3.582878740770409*^9}, {
  3.5831831448840923`*^9, 3.5831831450030994`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dcoefficients", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["b", 
       RowBox[{"n", ",", "m"}]], "=", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"<", 
         SubscriptBox["p", "n"]}], ",", 
        RowBox[{
         SubscriptBox["dp", "m"], ">"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "0", ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.582878743954288*^9, 3.582878792823969*^9}, {
  3.5831831377806864`*^9, 3.5831831408108597`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dcoefficients", " ", "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.582878773775996*^9, 3.582878784313128*^9}, {
  3.5831831624530973`*^9, 3.583183164693226*^9}, {3.583186976525479*^9, 
  3.5831869788186827`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", 
     SubscriptBox["\[CapitalDelta]x", "j"], "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "3"], "10"], "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "5"], "126"], "0"},
    {"0", "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "3"], "6"], "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "5"], "70"], "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "7"], "924"]},
    {"0", "0", "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "5"], "60"], "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "7"], "756"], "0"},
    {"0", "0", "0", "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "7"], "700"], "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "9"], "9240"]},
    {"0", "0", "0", "0", "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "9"], "8820"], "0"},
    {"0", "0", "0", "0", "0", "0", 
     FractionBox[
      SubsuperscriptBox["\[CapitalDelta]x", "j", "11"], "116424"]},
    {"0", "0", "0", "0", "0", "0", "0"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.582878784958762*^9, 3.58287880875806*^9}, 
   3.582960087742772*^9, 3.583152028038642*^9, {3.5831831562447424`*^9, 
   3.5831831652872596`*^9}, 3.5831836897852592`*^9, 3.5831839421136913`*^9, 
   3.5831842077798862`*^9, 3.5831869793022833`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["\<\
Numerical Solution and Degress Of Freedom\
\>", "Section",
 CellChangeTimes->{{3.583147350631246*^9, 3.58314736120097*^9}}],

Cell[TextData[{
 "Then the numerical Solution ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["u", "h"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "[x,t] in the space ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["V", "j"], "K"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " can be written as:"
}], "Text",
 CellChangeTimes->{{3.583147367683665*^9, 3.583147408195818*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["u", "h"], "[", 
     RowBox[{"x", ",", "t"}], "]"}], " ", "=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"l", "=", "0"}], "k"], 
     RowBox[{
      SubscriptBox["a", "l"], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["u", "j"], 
        RowBox[{"(", "l", ")"}]], "[", "t", "]"}], 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["v", "l"], 
        RowBox[{"(", "j", ")"}]], "[", "x", "]"}]}]}]}], ",", " ", 
   RowBox[{
    RowBox[{"for", " ", "x"}], " ", "\[Element]", " ", 
    SubscriptBox["I", "j"]}]}], "\[IndentingNewLine]"}]], "Text",
 CellChangeTimes->{{3.582951205205113*^9, 3.582951359350728*^9}, {
   3.582951500851903*^9, 3.582951512326244*^9}, {3.582960154121*^9, 
   3.582960154268739*^9}, 3.582960296061394*^9, 3.583147510743663*^9}],

Cell[TextData[{
 "And the degrees of freedom ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox["u", "j"], 
     RowBox[{"(", "l", ")"}]], "[", "t", "]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are the moments defined by:"
}], "Text",
 CellChangeTimes->{{3.58314741118947*^9, 3.583147448178228*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    SubscriptBox["u", "j"], 
    RowBox[{"(", "l", ")"}]], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["u", "j"], 
      RowBox[{"(", "l", ")"}]], "[", "t", "]"}], " ", "=", " ", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       SubscriptBox["\[CapitalDelta]x", "j"], 
       RowBox[{"l", "+", "1"}]]], 
     RowBox[{
      SubscriptBox["\[Integral]", 
       SubscriptBox["I", "j"]], 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "t"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["v", "l"], 
         RowBox[{"(", "j", ")"}]], "[", "x", "]"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}], ",", " ", 
  RowBox[{
   RowBox[{"for", " ", "l"}], " ", "=", " ", "1"}], ",", "...", ",", 
  "k"}]], "DisplayFormula",
 CellChangeTimes->{{3.58295095968786*^9, 3.58295105619794*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Basis Function for 1D cases:", "Section",
 CellChangeTimes->{{3.582883335098555*^9, 3.582883347492221*^9}}],

Cell["\<\
Here we are interested in understanding the expansion of these polynomials \
from their continuous initial form to a piezewize form.\
\>", "Text",
 CellChangeTimes->{{3.58288668813096*^9, 3.582886761577014*^9}, {
  3.583148196256601*^9, 3.583148213840764*^9}}],

Cell["\<\
Recal from previous calculations we can do :\
\>", "Text",
 CellChangeTimes->{{3.583148094514483*^9, 3.583148109863915*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["p", "5"], " "}]], "Input",
 CellChangeTimes->{{3.58288547355584*^9, 3.582885490264814*^9}, {
  3.583148066460428*^9, 3.583148084137412*^9}, {3.583148122523826*^9, 
  3.583148183761483*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["4", "63"]}], " ", 
   SubsuperscriptBox["\[CapitalDelta]x", "j", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "15"]}], " ", "z", " ", 
      SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "+", 
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["z", "2"], "-", 
        FractionBox[
         SubsuperscriptBox["\[CapitalDelta]x", "j", "2"], "12"]}], ")"}]}]}], 
    ")"}]}], "+", 
  RowBox[{"z", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["9", "140"]}], " ", 
      SubsuperscriptBox["\[CapitalDelta]x", "j", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["z", "2"], "-", 
        FractionBox[
         SubsuperscriptBox["\[CapitalDelta]x", "j", "2"], "12"]}], ")"}]}], 
     "+", 
     RowBox[{"z", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "15"]}], " ", "z", " ", 
         SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "+", 
        RowBox[{"z", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["z", "2"], "-", 
           FractionBox[
            SubsuperscriptBox["\[CapitalDelta]x", "j", "2"], "12"]}], 
          ")"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.58314807936885*^9, 3.583148084788394*^9}, 
   3.583148125858903*^9, 3.583148160342235*^9, 3.58318710806491*^9}]
}, Open  ]],

Cell["\<\
Then we can create our table of scalled polynomials:\
\>", "Text",
 CellChangeTimes->{{3.582887545897339*^9, 3.582887572018619*^9}, 
   3.583148092218256*^9, {3.583148227384732*^9, 3.583148268380886*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["v", "i"], "=", " ", 
      RowBox[{"Expand", "[", 
       SubscriptBox["p", "i"], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "6"}], "}"}]}], "]"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"recall", " ", "that", " ", "z"}], " ", "\[Rule]", " ", 
    FractionBox[
     RowBox[{"x", "-", 
      SubscriptBox["x", "j"]}], 
     SubscriptBox["\[CapitalDelta]x", "j"]]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    SubscriptBox["v", "i"], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "6"}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.58288830025635*^9, 3.582888308664284*^9}, {
  3.582888564937003*^9, 3.582888566716311*^9}, {3.582888667673715*^9, 
  3.582888708540253*^9}, {3.582889659396903*^9, 3.582889666158515*^9}, {
  3.582942982775822*^9, 3.582942984069006*^9}, {3.58295634391872*^9, 
  3.582956378128565*^9}, {3.583148053168833*^9, 3.583148056906759*^9}, {
  3.583148726992661*^9, 3.583148727789153*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"1"},
      {"z"},
      {
       RowBox[{
        SuperscriptBox["z", "2"], "-", 
        FractionBox[
         SubsuperscriptBox["\[CapitalDelta]x", "j", "2"], "12"]}]},
      {
       RowBox[{
        SuperscriptBox["z", "3"], "-", 
        FractionBox[
         RowBox[{"3", " ", "z", " ", 
          SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "20"]}]},
      {
       RowBox[{
        SuperscriptBox["z", "4"], "-", 
        RowBox[{
         FractionBox["3", "14"], " ", 
         SuperscriptBox["z", "2"], " ", 
         SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]}], "560"]}]},
      {
       RowBox[{
        SuperscriptBox["z", "5"], "-", 
        RowBox[{
         FractionBox["5", "18"], " ", 
         SuperscriptBox["z", "3"], " ", 
         SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "+", 
        FractionBox[
         RowBox[{"5", " ", "z", " ", 
          SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]}], "336"]}]},
      {
       RowBox[{
        SuperscriptBox["z", "6"], "-", 
        RowBox[{
         FractionBox["15", "44"], " ", 
         SuperscriptBox["z", "4"], " ", 
         SubsuperscriptBox["\[CapitalDelta]x", "j", "2"]}], "+", 
        RowBox[{
         FractionBox["5", "176"], " ", 
         SuperscriptBox["z", "2"], " ", 
         SubsuperscriptBox["\[CapitalDelta]x", "j", "4"]}], "-", 
        FractionBox[
         RowBox[{"5", " ", 
          SubsuperscriptBox["\[CapitalDelta]x", "j", "6"]}], "14784"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.583148735778381*^9, 3.58318710828331*^9}]
}, Open  ]],

Cell[TextData[{
 "Now must assume the location of the abcissas. Following our main reference \
we proceed to use Gauss-Lobatto-Legendre for 4 points scaled to fit in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "j"], TraditionalForm]]],
 ", the corresponding local coordiantes of the abscissas and weight are:"
}], "Text",
 CellChangeTimes->{{3.582954547656843*^9, 3.582954607108285*^9}, {
  3.582954955827716*^9, 3.582954958974388*^9}, {3.582955260413673*^9, 
  3.582955301008874*^9}, {3.582957789187283*^9, 3.582957801529987*^9}, {
  3.583148307090972*^9, 3.583148338920925*^9}, {3.583148370384207*^9, 
  3.583148398909096*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Xi]", "1"], ",", 
     SubscriptBox["\[Xi]", "2"], ",", 
     SubscriptBox["\[Xi]", "3"], ",", 
     SubscriptBox["\[Xi]", "4"]}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["5"], "10"]}], ",", 
     FractionBox[
      SqrtBox["5"], "10"], ",", 
     FractionBox["1", "2"]}], "}"}]}], ";", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["w", "1"], ",", 
     SubscriptBox["w", "2"], ",", 
     SubscriptBox["w", "3"], ",", 
     SubscriptBox["w", "4"]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "12"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "12"]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.582954981794587*^9, 3.582955036267124*^9}, {
  3.58295508708647*^9, 3.582955181829425*^9}, {3.582955214261447*^9, 
  3.582955226753758*^9}, {3.582955735379718*^9, 3.582955736873445*^9}}],

Cell[TextData[{
 "As an example, here I\[CloseCurlyQuote]ll assume an interval, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "j"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", with left and right boundaries located at [-1/6,1/6]. \nFirst we proceed \
to create the corresponding local nodes inside the cell:"
}], "Text",
 CellChangeTimes->{{3.582955402538858*^9, 3.582955504112241*^9}, {
  3.582955650206794*^9, 3.582955655826625*^9}, {3.582957325226323*^9, 
  3.582957331495487*^9}, {3.582957375888158*^9, 3.58295738048329*^9}, {
  3.582957419983148*^9, 3.582957424245637*^9}, {3.582957809619282*^9, 
  3.582957860032688*^9}, {3.58295792668321*^9, 3.582957954814768*^9}, {
  3.582958093417878*^9, 3.582958098375623*^9}, {3.583148489023491*^9, 
  3.583148512873026*^9}, {3.583150769642593*^9, 3.583150772183791*^9}, {
  3.583154669263216*^9, 3.583154673569024*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Symbolize", "[", 
   TemplateBox[{SubscriptBox["x", "r"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{SubscriptBox["x", "l"]},
    "NotationTemplateTag"], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.583150780477053*^9, 3.583150792322929*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["x", "l"], " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "1"}], "/", "6"}]}], ";", " ", 
  RowBox[{
   SubscriptBox["x", "r"], " ", "=", 
   RowBox[{"1", "/", "6"}]}], ";", " ", 
  RowBox[{
   SubscriptBox["\[CapitalDelta]x", "j"], "=", 
   RowBox[{
    SubscriptBox["x", "r"], "-", 
    SubscriptBox["x", "l"]}]}], ";", 
  RowBox[{
   SubscriptBox["x", "j"], " ", "=", " ", 
   FractionBox[
    SubscriptBox["\[CapitalDelta]x", "j"], "2"]}], ";", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["x", "3"], ",", 
     SubscriptBox["x", "4"]}], "}"}], " ", "=", 
   RowBox[{
    SubscriptBox["x", "j"], "+", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Xi]", "1"], ",", 
       SubscriptBox["\[Xi]", "2"], ",", 
       SubscriptBox["\[Xi]", "3"], ",", 
       SubscriptBox["\[Xi]", "4"]}], "}"}], " ", 
     SubscriptBox["\[CapitalDelta]x", "j"]}]}]}]}]], "Input",
 CellChangeTimes->{{3.582957052916821*^9, 3.58295706384823*^9}, {
  3.582957335024714*^9, 3.582957344263565*^9}, {3.582957388843941*^9, 
  3.582957429071439*^9}, {3.582957491175682*^9, 3.582957524906424*^9}, {
  3.582957564304214*^9, 3.582957730398747*^9}, {3.582957881935692*^9, 
  3.582957882086136*^9}, {3.583148531063296*^9, 3.583148533772407*^9}, {
  3.583154628993664*^9, 3.583154633532826*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    FractionBox["1", "6"], "-", 
    FractionBox["1", 
     RowBox[{"6", " ", 
      SqrtBox["5"]}]]}], ",", 
   RowBox[{
    FractionBox["1", "6"], "+", 
    FractionBox["1", 
     RowBox[{"6", " ", 
      SqrtBox["5"]}]]}], ",", 
   FractionBox["1", "3"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.58295734591212*^9, {3.582957414378704*^9, 3.582957429855174*^9}, {
   3.582957577410829*^9, 3.582957625397127*^9}, {3.582957661518036*^9, 
   3.58295770065797*^9}, 3.582957731312274*^9, 3.582957883157065*^9, {
   3.583148535826022*^9, 3.583148543031937*^9}, 3.583151407879701*^9, 
   3.583154634942193*^9, 3.5831871083613105`*^9}]
}, Open  ]],

Cell["\<\
Notice that the Global coordinates will be given by,\
\>", "Text",
 CellChangeTimes->{{3.582957962464832*^9, 3.582958005331788*^9}, {
  3.582958115029787*^9, 3.582958135617612*^9}, {3.583148552096501*^9, 
  3.583148552477674*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X", "=", " ", 
  RowBox[{
   SubscriptBox["x", "l"], "+", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["x", "3"], ",", 
     SubscriptBox["x", "4"]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.582958007730398*^9, 3.582958083373525*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "6"]}], ",", 
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"6", " ", 
      SqrtBox["5"]}]]}], ",", 
   FractionBox["1", 
    RowBox[{"6", " ", 
     SqrtBox["5"]}]], ",", 
   FractionBox["1", "6"]}], "}"}]], "Output",
 CellChangeTimes->{3.582958084671584*^9, 3.583148559883654*^9, 
  3.583154649925611*^9, 3.5831871083925104`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Degrees of Freedom ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["u", "j"], 
    RowBox[{"(", "l", ")"}]], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.582888836797757*^9, 3.582888876271271*^9}, 
   3.58288895482879*^9, {3.582950562113492*^9, 3.582950596007376*^9}}],

Cell[TextData[{
 "For ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "j"], TraditionalForm]]],
 " element using the continuous function u(x,t). If we define the degrees of \
freedom as:"
}], "Text",
 CellChangeTimes->{{3.582888957415497*^9, 3.5828889884117*^9}, {
  3.582950942973335*^9, 3.58295095527708*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    SubscriptBox["u", "j"], 
    RowBox[{"(", "l", ")"}]], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["u", "j"], 
      RowBox[{"(", "l", ")"}]], "[", "t", "]"}], " ", "=", " ", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox[
       SubscriptBox["\[CapitalDelta]x", "j"], 
       RowBox[{"l", "+", "1"}]]], 
     RowBox[{
      SubscriptBox["\[Integral]", 
       SubscriptBox["I", "j"]], 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"x", ",", "t"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["v", "l"], 
         RowBox[{"(", "j", ")"}]], "[", "x", "]"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}], ",", " ", 
  RowBox[{
   RowBox[{"for", " ", "l"}], " ", "=", " ", "1"}], ",", "...", ",", 
  "k"}]], "DisplayFormula"],

Cell[BoxData[
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{RowBox[{
       SubscriptBox["\[Integral]", 
        SubscriptBox["I", "j"]], 
       RowBox[{"f_", 
         RowBox[{"\[DifferentialD]", "x_"}]}]}]},
    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", " ", 
   TemplateBox[{RowBox[{"Integrate", "[", 
       RowBox[{"f_", ",", 
         RowBox[{"{", 
           RowBox[{"x_", ",", 
             RowBox[{
               RowBox[{"-", 
                 SubscriptBox["\[CapitalDelta]x", "j"]}], "/", "2"}], ",", 
             RowBox[{
               SubscriptBox["\[CapitalDelta]x", "j"], "/", "2"}]}], "}"}]}], 
       "]"}]},
    "NotationTemplateTag"]}], "]"}]], "Input",
 CellChangeTimes->{{3.583149841192757*^9, 3.58314984976369*^9}, {
   3.583150297409288*^9, 3.58315031318976*^9}, 3.583150352084625*^9, {
   3.583150460491231*^9, 3.583150465595815*^9}, {3.583150813720125*^9, 
   3.58315081839169*^9}, {3.583150894098462*^9, 3.583150910735698*^9}, 
   3.583151421913246*^9, 3.583151453403219*^9, {3.583152874840808*^9, 
   3.583152890734527*^9}, {3.583153379840694*^9, 3.583153387251423*^9}, {
   3.583153862128993*^9, 3.583153880205621*^9}}],

Cell[TextData[{
 "Of course, we will need to define u[x,t] in order to continue. i.e., to \
define u[x,0] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", 
    SubscriptBox["u", "0"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "[x].\[LineSeparator]We traditionally have two choises a continuous or a \
discontinuous function, "
}], "Text",
 CellChangeTimes->{{3.582959148769966*^9, 3.582959220398214*^9}, {
  3.583149546700678*^9, 3.583149624036347*^9}}],

Cell[CellGroupData[{

Cell["Case1: Riemann IC ", "Subsubsection",
 CellChangeTimes->{{3.58295828983283*^9, 3.582958317648299*^9}, {
  3.582958609488875*^9, 3.582958610633522*^9}, {3.583118883191585*^9, 
  3.583118885628931*^9}, {3.583149305984333*^9, 3.583149323920126*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x_", ",", "t_"}], "]"}], ":=", " ", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"x", "<", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", 
        RowBox[{"x", ">=", "0"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.582958318752501*^9, 3.582958321459927*^9}, {
  3.582958435923103*^9, 3.582958622756178*^9}, {3.582958690556131*^9, 
  3.582958815644899*^9}, {3.58295885370418*^9, 3.582958928105848*^9}, {
  3.583118765329881*^9, 3.583118778417251*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQrWcv9ur///f7GcDgg31Q+9nVxvEIfvn5ltz0fe/g
/CtXuF8dTHwL58seyBcxl3kD52/NPsLKf/cVnJ/QY/jhZtNLOP/HpOqO/fYv
4PzFfPckZzx8BufP8TIsutz5FM5vykms0PR8AudXM68qL3r7CM5PbDivcm3F
Qzh/6t6nM+ZkPYDzd93X4FmjdA/OVxZwcAqZdxvO36TVkfXo8Q04//7RjQpm
Ztfg/Kc6U432b7sM5wvWrTTTY7wI5+uYvddZ+vkMnN/s8vbCzorjcL5oyLoJ
keKHEPZ9O8p/QmUXnL/09tPely3r4Hwtpl+bs6OXwPmxgTJbbidPgfPXf8lR
fnGrBc63ZNVf/uCpC5wPAMX+qPM=
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQbcmqv/zBUxd7BjB4YH/tY9N8gR8ecP4Hf/VP+UVh
cH71ZLdT2SYJcH5D1pqcy1pZcP5hhc72uQJFcP6J7+80Wdlr4Pz0dK20bf+a
4Pwcuwkccl974PydXNVXD5VOhvNPbo532di5BM43fcQo1xixHs5X/rD7p9Wh
nXC+5+KbZ/0iDsH5rr5CzF+3Hofz++OvNxhsPwPnH/eT5Q0Qugjnv1UUrbs0
6zKcX1qindgvdg3Ov35HICjtxA04P6HS5jm7z22E/7XNuw6z3oPz1Tj3vFji
8QDOl92T7cra8RDOZ/jFtLLo0SM4/3vg3rijqk/g/Nsm8dKqLU/h/IJwAUGl
O8/gfMkpTyJYZF/A+euiFyz/XPESzg+3rfc4sfcVnL8xLlfJ6s9rOP8HlzPz
ztC3cH7QRWsz2Rnv4HwHDs0JfD7v4Xw9e7FX//8j+AChQ7AV
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-1, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.582958904154858*^9, 3.582958931883382*^9}, 
   3.582959744965083*^9, 3.58311878145758*^9, 3.583150187204582*^9, 
   3.583154771528064*^9, 3.583187081919264*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Case2: Sinusoidal wave function", "Subsubsection",
 CellChangeTimes->{{3.582959102302206*^9, 3.582959136739876*^9}, {
  3.582959259103856*^9, 3.582959260474516*^9}, {3.583118888954158*^9, 
  3.583118890492364*^9}, {3.583149318599422*^9, 3.583149327361339*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x_", ",", "t_"}], "]"}], ":=", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Pi]", " ", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.582959024589966*^9, 3.582959068438135*^9}, {
  3.583118785565208*^9, 3.583118792161854*^9}, {3.583149439682671*^9, 
  3.583149440492937*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
ofDQWvbCH4QDHx5NlRamMF3n09k/hO+ni0hd/MPEsSuPy/7no+tXubKSfzAx
RtROdpJwSUxHZmsfEzMYMoEDhA3maXqJdTHxt2E19zthyj/rkEY9E39qXzmT
Tdj15xJx709MzN6yqTGIsLBjQHt2CROZP0cNjQjHsgZTe14xkSHW2bCY8LoT
Ji7Sz5mY4vzz9Dfy/CXVpXuM4plYFGfK9SdscHCtyM0IJu4NWRi4jjBVGN5Q
coOJHR8OrvhM6uu6aSrhhw8T352cUWFJWDjF9rySCxMf1zud55H+xC6t2WFh
z8QwzbTlroSVwnYKRpszcfWRujoe6e9boaTqz4ZM1JkUC7cibHBlTtw/TSbq
/Qw5/oXMB8V3td2hzsQSOwf5DYSF2zWnkhSY6F66sKFugtz/aHZl83Imjgfv
KVxCWKlyaYSoBBPBNyzFhMyjfs7QWq8pBvqZh8S8Jjkk9kbE8aPfGLjxiVPP
zB/k+umpVcEfGJj+y2aBMNmPYhc7bvEbBlrm+mhNkn1inla9rviUgfzt2g1V
vP/Nb1fOHy8GVutKu073/29eD/tuc2LgShH6V27f/+YzR8vBloGb9gbdtiL7
7DLnOqNRn4GCJi4tSWTfi5lKopnyDDSINpUu6KLRd4/gy4dLGThw0XXz/k6y
7w/a9G+JMTA+ytfnXTuN5ca379lPdWFORH1JNtGfT5VDC+Xqu/CU9WZ6Yx2N
IfIfXotXdaGYqVmN1zeit9fiTf6WdqFCbGRvSQ3Rp136sR0vupB7i/F10xca
GzOylsUGdOGAi6pT7jtSD5GbxUGeXeiWvlClnOjhibOW5m4Xu/BrQtTWj2U0
tq+QeGx4qgtbxy6PFhM9ZUW4rJqn0oXCI2XeWrlETzy3r/WnOjF/6qwkL5HG
nEbRKqfmTqz1yxK4RvTdRaXn3JnqTvwyd/e2OY9oHBuMSVcr6kS0v+o8i/jD
7zO/No3f68SqYdEzT+8QP9Ao3n4eOjH+57swJw8aV0vsP2iS0IHvQkTVDxyi
MWwLy/t8VAfmSXsoRBN/mzAMfO0f0oHxmluWMtRprI74sOalawdKB3QvP0H8
0X3RkdmztDqwLejV6641NH6UMq4upNvx2a1fyvuI356XtTOVPtCOvrHduSYl
fGzcO/Oeys52VMsJHrhdyMd9Fs8+aW1ox7ITQUeLcvm4KLF/l7tkOwrNXZ09
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
9v0f6in8Dg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-1, 1}, {-0.9999998782112116, 0.9999998592131705}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.58295904805866*^9, 3.582959069408397*^9}, 
   3.583118796162689*^9, 3.583149441184508*^9, 3.583154304124136*^9, 
   3.583157158439665*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Degress of Freedom, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["u", "j"], 
    RowBox[{"(", "l", ")"}]], TraditionalForm]]],
 "(t)"
}], "Section",
 CellChangeTimes->{{3.5831494908927*^9, 3.583149492916368*^9}, {
  3.583184657943406*^9, 3.5831846868970575`*^9}}],

Cell["Having defined a u[x,t],", "Text",
 CellChangeTimes->{{3.583149568238607*^9, 3.583149572345016*^9}, {
  3.583149649050285*^9, 3.583149665790473*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Symbolize", "[", 
   TemplateBox[{SubscriptBox["u", "h"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{SuperscriptBox["u", "_"]},
    "NotationTemplateTag"], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["u", 
      RowBox[{"(", "0", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "1", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "2", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "3", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "4", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "5", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "6", ")"}]]}], "}"}], " ", "=", " ", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SubscriptBox["a", "l"]], 
      RowBox[{
       SubscriptBox["\[Integral]", 
        SubscriptBox["I", "j"]], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"z", ",", "t"}], "]"}], " ", 
          SubscriptBox["v", "l"]}], ")"}], 
        RowBox[{"\[DifferentialD]", "z"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "0", ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.58295062175752*^9, 3.582950666375043*^9}, {
  3.582950780738745*^9, 3.582950788185475*^9}, {3.582959281370874*^9, 
  3.582959285218787*^9}, {3.582959421150165*^9, 3.582959424867337*^9}, {
  3.583118923919281*^9, 3.583118927131196*^9}, {3.583150147251856*^9, 
  3.583150150315224*^9}, {3.583151538576986*^9, 3.583151545083079*^9}, {
  3.583152402314445*^9, 3.583152405828292*^9}}],

Cell["Evaluate Numerically", "Text",
 CellChangeTimes->{{3.5831846301597576`*^9, 3.583184638833373*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["u", 
       RowBox[{"(", "0", ")"}]], ",", 
      SuperscriptBox["u", 
       RowBox[{"(", "1", ")"}]], ",", 
      SuperscriptBox["u", 
       RowBox[{"(", "2", ")"}]], ",", 
      SuperscriptBox["u", 
       RowBox[{"(", "3", ")"}]], ",", 
      SuperscriptBox["u", 
       RowBox[{"(", "4", ")"}]], ",", 
      SuperscriptBox["u", 
       RowBox[{"(", "5", ")"}]], ",", 
      SuperscriptBox["u", 
       RowBox[{"(", "6", ")"}]]}], "}"}], " ", "//", "N"}], "//", 
   "MatrixForm"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["u", "0"], ",", 
     SubscriptBox["u", "1"], ",", 
     SubscriptBox["u", "2"], ",", 
     SubscriptBox["u", "3"], ",", 
     SubscriptBox["u", "4"], ",", 
     SubscriptBox["u", "5"], ",", 
     SubscriptBox["u", "6"]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["u", 
      RowBox[{"(", "0", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "1", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "2", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "3", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "4", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "5", ")"}]], ",", 
     SuperscriptBox["u", 
      RowBox[{"(", "6", ")"}]]}], "}"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.582950803421932*^9, 3.582950813540139*^9}, {
  3.583149942042818*^9, 3.583149946591153*^9}, {3.583154323475495*^9, 
  3.583154325873824*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"0.75`"},
      {
       RowBox[{"-", "2.25`"}]},
      {"0.`"},
      {"118.125`"},
      {"0.`"},
      {
       RowBox[{"-", "10524.9375`"}]},
      {"0.`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.582950814328533*^9, 3.582959392321587*^9, 3.58295944002576*^9, 
   3.582959755337464*^9, {3.583149934542871*^9, 3.583149947193788*^9}, {
   3.583150171301249*^9, 3.583150192878707*^9}, 3.583151462487853*^9, 
   3.583152409340588*^9, 3.583152900745148*^9, 3.583153409850741*^9, 
   3.58315389570319*^9, 3.583154326889647*^9, 3.583154384148851*^9, 
   3.583154782848273*^9, 3.58315716888168*^9, 3.5831871655978107`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Numerical Solution, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "h"], TraditionalForm]]],
 "(x,t)"
}], "Section",
 CellChangeTimes->{{3.582889854182876*^9, 3.582889882609513*^9}, {
  3.583151511459616*^9, 3.583151514739835*^9}, {3.583184666835422*^9, 
  3.5831846820610485`*^9}}],

Cell[TextData[{
 "Following the last example we can proceed to compute from the degress of \
freedom the approximate solution ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "h"], TraditionalForm]]],
 ","
}], "Text",
 CellChangeTimes->{{3.582959951558205*^9, 3.582960014020048*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["u", "h"], "=", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["u", "l"], 
       SubscriptBox["v", "l"]}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "0", ",", "6"}], "}"}]}], "]"}], "/.", " ", 
    RowBox[{"z", "\[Rule]", 
     SubscriptBox["x", "l"]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.582960339939018*^9, 3.582960421631387*^9}, {
   3.583119014523351*^9, 3.583119016698507*^9}, {3.583151551671671*^9, 
   3.58315155201078*^9}, {3.583151738751353*^9, 3.583151739582371*^9}, {
   3.583152077567825*^9, 3.583152078714641*^9}, {3.583152115254555*^9, 
   3.583152125573007*^9}, {3.583152270854773*^9, 3.583152316311871*^9}, {
   3.583152365084421*^9, 3.583152367371071*^9}, {3.583152480885671*^9, 
   3.583152493557081*^9}, {3.583152558896211*^9, 3.583152573429559*^9}, {
   3.583152606533314*^9, 3.583152613998866*^9}, {3.583152945401918*^9, 
   3.583153001410883*^9}, {3.583153112775837*^9, 3.58315318632116*^9}, {
   3.583153435265088*^9, 3.583153435541335*^9}, {3.583153843696643*^9, 
   3.583153844583509*^9}, {3.583153911438497*^9, 3.583153961525627*^9}, {
   3.583154025083293*^9, 3.583154032056937*^9}, {3.583154115995011*^9, 
   3.583154117564019*^9}, {3.583154260322865*^9, 3.583154262380562*^9}, {
   3.583154404998669*^9, 3.583154407408603*^9}, {3.583154685696752*^9, 
   3.583154695274761*^9}, 3.583154818891881*^9, {3.583157677918426*^9, 
   3.583157678162404*^9}, {3.583187185066645*^9, 3.583187192476658*^9}}],

Cell[BoxData["1.078125`"], "Output",
 CellChangeTimes->{{3.583153169052043*^9, 3.583153187016652*^9}, {
   3.583153422901201*^9, 3.583153436087372*^9}, 3.583153845538913*^9, {
   3.583153902924204*^9, 3.583153962296743*^9}, {3.583154026994416*^9, 
   3.583154032682253*^9}, 3.58315411889821*^9, 3.583154262965672*^9, {
   3.583154396114496*^9, 3.583154407984646*^9}, {3.583154687121104*^9, 
   3.583154695933432*^9}, {3.58315479390282*^9, 3.583154819700881*^9}, 
   3.583157178140485*^9, 3.583157679030367*^9, {3.5831871761746297`*^9, 
   3.583187193053859*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[TextData[{
 "Alternative way to compute ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", "h"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["u", "j"], 
    RowBox[{"(", "l", ")"}]], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Section",
 CellChangeTimes->{{3.583153612468627*^9, 3.583153647263158*^9}}],

Cell["\<\
Building a Vandermonde Matrix: \[LineSeparator]-> Evaluate every escaled \
polynomial for the computed abcisas we get:\
\>", "Text",
 CellChangeTimes->{{3.58295600055663*^9, 3.5829560335804*^9}, 
   3.58295641613682*^9, {3.582956800551472*^9, 3.582956800761861*^9}, {
   3.583153684434742*^9, 3.583153702513678*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V", "=", " ", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["q", "i"], "[", 
      SubscriptBox["\[ScriptX]", "n"], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}], " ", "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.5831872848756204`*^9, 3.5831873848717957`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SubscriptBox["q", "0"], "[", 
       SubscriptBox["\[ScriptX]", "1"], "]"}], 
      RowBox[{
       SubscriptBox["q", "1"], "[", 
       SubscriptBox["\[ScriptX]", "1"], "]"}], 
      RowBox[{
       SubscriptBox["q", "2"], "[", 
       SubscriptBox["\[ScriptX]", "1"], "]"}], 
      RowBox[{
       SubscriptBox["q", "3"], "[", 
       SubscriptBox["\[ScriptX]", "1"], "]"}]},
     {
      RowBox[{
       SubscriptBox["q", "0"], "[", 
       SubscriptBox["\[ScriptX]", "2"], "]"}], 
      RowBox[{
       SubscriptBox["q", "1"], "[", 
       SubscriptBox["\[ScriptX]", "2"], "]"}], 
      RowBox[{
       SubscriptBox["q", "2"], "[", 
       SubscriptBox["\[ScriptX]", "2"], "]"}], 
      RowBox[{
       SubscriptBox["q", "3"], "[", 
       SubscriptBox["\[ScriptX]", "2"], "]"}]},
     {
      RowBox[{
       SubscriptBox["q", "0"], "[", 
       SubscriptBox["\[ScriptX]", "3"], "]"}], 
      RowBox[{
       SubscriptBox["q", "1"], "[", 
       SubscriptBox["\[ScriptX]", "3"], "]"}], 
      RowBox[{
       SubscriptBox["q", "2"], "[", 
       SubscriptBox["\[ScriptX]", "3"], "]"}], 
      RowBox[{
       SubscriptBox["q", "3"], "[", 
       SubscriptBox["\[ScriptX]", "3"], "]"}]},
     {
      RowBox[{
       SubscriptBox["q", "0"], "[", 
       SubscriptBox["\[ScriptX]", "4"], "]"}], 
      RowBox[{
       SubscriptBox["q", "1"], "[", 
       SubscriptBox["\[ScriptX]", "4"], "]"}], 
      RowBox[{
       SubscriptBox["q", "2"], "[", 
       SubscriptBox["\[ScriptX]", "4"], "]"}], 
      RowBox[{
       SubscriptBox["q", "3"], "[", 
       SubscriptBox["\[ScriptX]", "4"], "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.5831873673841653`*^9, 3.5831873857141976`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["v", "i"], "/.", 
      RowBox[{"z", "\[Rule]", 
       SubscriptBox["x", "n"]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"V", " ", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.582956055593264*^9, 3.582956057245738*^9}, {
  3.58295609819068*^9, 3.582956121591887*^9}, {3.582956462801206*^9, 
  3.582956510506942*^9}, {3.582956587195639*^9, 3.58295666908139*^9}, {
  3.582956715331933*^9, 3.582956717649421*^9}, {3.582956867373604*^9, 
  3.582956952993747*^9}, {3.582957105343944*^9, 3.582957121704122*^9}, {
  3.582957276306545*^9, 3.582957293165947*^9}, {3.583148683714436*^9, 
  3.583148685510213*^9}, {3.583154867840407*^9, 3.583154869786603*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", 
      RowBox[{"-", 
       FractionBox["1", "108"]}], "0"},
     {"1", 
      RowBox[{
       FractionBox["1", "6"], "-", 
       FractionBox["1", 
        RowBox[{"6", " ", 
         SqrtBox["5"]}]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "108"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "6"], "-", 
          FractionBox["1", 
           RowBox[{"6", " ", 
            SqrtBox["5"]}]]}], ")"}], "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "6"], "-", 
          FractionBox["1", 
           RowBox[{"6", " ", 
            SqrtBox["5"]}]]}], ")"}], "3"], "+", 
       RowBox[{
        FractionBox["1", "60"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "6"]}], "+", 
          FractionBox["1", 
           RowBox[{"6", " ", 
            SqrtBox["5"]}]]}], ")"}]}]}]},
     {"1", 
      RowBox[{
       FractionBox["1", "6"], "+", 
       FractionBox["1", 
        RowBox[{"6", " ", 
         SqrtBox["5"]}]]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "108"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "6"], "+", 
          FractionBox["1", 
           RowBox[{"6", " ", 
            SqrtBox["5"]}]]}], ")"}], "2"]}], 
      RowBox[{
       RowBox[{
        FractionBox["1", "60"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "6"]}], "-", 
          FractionBox["1", 
           RowBox[{"6", " ", 
            SqrtBox["5"]}]]}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "6"], "+", 
          FractionBox["1", 
           RowBox[{"6", " ", 
            SqrtBox["5"]}]]}], ")"}], "3"]}]},
     {"1", 
      FractionBox["1", "3"], 
      FractionBox["11", "108"], 
      FractionBox["17", "540"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.582956122463576*^9, 3.582956409379726*^9, {3.582956468578717*^9, 
   3.582956490088384*^9}, {3.582956662123776*^9, 3.582956670110125*^9}, 
   3.582956718682533*^9, {3.582956881685274*^9, 3.58295690688671*^9}, {
   3.582956949546743*^9, 3.582956953997245*^9}, {3.582957289210145*^9, 
   3.582957293791476*^9}, 3.582957357639927*^9, {3.582957681797933*^9, 
   3.582957705107015*^9}, 3.582957736406814*^9, 3.582958145736265*^9, 
   3.583148686672168*^9, 3.583148780247501*^9, 3.583154875185489*^9}]
}, Open  ]],

Cell["\<\
if we are using equally distributed cells, we can just program the numerical \
version of this matrix:\
\>", "Text",
 CellChangeTimes->{{3.582956981696123*^9, 3.582957013514688*^9}, {
   3.582957315318646*^9, 3.582957320367801*^9}, {3.582957769424775*^9, 
   3.582957770902576*^9}, {3.582958150372781*^9, 3.582958256207499*^9}, 
   3.583148891597398*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "//", "N"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.582956972574493*^9, 3.582956994809361*^9}, {
  3.583154872355942*^9, 3.583154889366865*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.`", 
      RowBox[{"-", "0.009259259259259259`"}], "0.`"},
     {"1.`", "0.09213106741667368`", 
      RowBox[{"-", "0.0007711256759235889`"}], 
      RowBox[{"-", "0.0007534969828698641`"}]},
     {"1.`", "0.24120226591665964`", "0.04891927382407173`", 
      "0.01001275624212912`"},
     {"1.`", "0.3333333333333333`", "0.10185185185185185`", 
      "0.03148148148148148`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.582956988651331*^9, 3.582956995876715*^9}, {
  3.583154875880047*^9, 3.583154889848082*^9}}]
}, Open  ]],

Cell["Thus, for the degress of freedom,", "Text",
 CellChangeTimes->{{3.583154986306357*^9, 3.583155008825367*^9}, {
  3.583155099829156*^9, 3.583155106390491*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    SubscriptBox["u", "j"], 
    RowBox[{"(", "l", ")"}]], "[", "t", "]"}], " ", "=", " ", 
  RowBox[{
   SuperscriptBox["V", 
    RowBox[{"-", "1"}]], ".", 
   RowBox[{"u", "[", 
    RowBox[{"x", ",", "t"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.583155039666565*^9, 3.583155072114885*^9}, 
   3.583155159436674*^9, {3.583184703292686*^9, 3.5831847044782877`*^9}}],

Cell["and for the approximate solution,", "Text",
 CellChangeTimes->{{3.583155011310633*^9, 3.583155018179094*^9}, {
  3.583155102887295*^9, 3.583155109905558*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["u", "h"], "[", 
   RowBox[{"x", ",", "t"}], "]"}], "=", " ", 
  RowBox[{"V", " ", ".", " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["u", "j"], 
     RowBox[{"(", "l", ")"}]], "[", "t", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.583155023808965*^9, 3.583155026200633*^9}, {
  3.58315506687018*^9, 3.583155119878929*^9}, {3.583155162316151*^9, 
  3.583155163068856*^9}, {3.5831847092986965`*^9, 3.583184711825901*^9}}],

Cell["\<\
See my Matlab Burger\[CloseCurlyQuote]s implementation for details...\
\>", "Text",
 CellChangeTimes->{{3.583155121767724*^9, 3.583155142817888*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["The Conservation Equation", "Section",
 CellChangeTimes->{{3.58295207622204*^9, 3.58295208136534*^9}, {
  3.583185541466558*^9, 3.5831855429017606`*^9}}],

Cell["For hyperbolic conservation that we are targeting,", "Text",
 CellChangeTimes->{{3.582952246581669*^9, 3.582952310523313*^9}, {
  3.583155520824423*^9, 3.5831555335749*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], "u"}], "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "d"], 
    RowBox[{
     SubscriptBox["\[PartialD]", "i"], 
     RowBox[{"f", "[", "u", "]"}]}]}]}], "=", "0"}]], "Text",
 CellChangeTimes->{{3.582952147150395*^9, 3.582952214776608*^9}, {
   3.582952358780425*^9, 3.582952369802564*^9}, {3.582952431494608*^9, 
   3.582952513978957*^9}, 3.583147492108077*^9}],

Cell[TextData[{
 "We are basicly interested in evoling the degrees of freedom ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["u", "j"], 
    RowBox[{"(", "l", ")"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", following our main reference,"
}], "Text",
 CellChangeTimes->{{3.582952285975342*^9, 3.582952312247175*^9}, {
  3.582952382239562*^9, 3.582952393533152*^9}, {3.583155536364306*^9, 
  3.583155603242268*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["\[PartialD]", 
      RowBox[{"\[PartialD]", "t"}]], 
     SuperscriptBox[
      SubscriptBox["u", "i"], 
      RowBox[{"(", "l", ")"}]]}], "+", 
    RowBox[{
     FractionBox["1", 
      SubscriptBox["a", "l"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", " ", 
        RowBox[{
         SubscriptBox["\[Integral]", 
          SubscriptBox["I", "j"]], 
         RowBox[{"f", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["u", "h"], "[", 
            RowBox[{"x", ",", "t"}], "]"}], ")"}], 
          FractionBox["d", "dx"], 
          SuperscriptBox[
           SubscriptBox["v", "l"], 
           RowBox[{"(", "j", ")"}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["u", 
            RowBox[{"j", "+", 
             RowBox[{"1", "/", "2"}]}]], "-"], ",", 
          SuperscriptBox[
           SubscriptBox["u", 
            RowBox[{"j", "+", 
             RowBox[{"1", "/", "2"}]}]], "+"]}], "]"}], 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["v", "l"], 
          RowBox[{"(", "j", ")"}]], "[", 
         SubscriptBox["x", 
          RowBox[{"j", "+", 
           RowBox[{"1", "/", "2"}]}]], "]"}]}], "-", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["u", 
            RowBox[{"j", "-", 
             RowBox[{"1", "/", "2"}]}]], "-"], ",", 
          SuperscriptBox[
           SubscriptBox["u", 
            RowBox[{"j", "-", 
             RowBox[{"1", "/", "2"}]}]], "+"]}], "]"}], 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["v", "l"], 
          RowBox[{"(", "j", ")"}]], "[", 
         SubscriptBox["x", 
          RowBox[{"j", "-", 
           RowBox[{"1", "/", "2"}]}]], "]"}]}]}], ")"}]}]}], "=", "0"}], ",", 
  " ", 
  RowBox[{"l", "=", "0"}], ",", "1", ",", "...", ",", "k"}]], "DisplayFormula",
 CellChangeTimes->{{3.5831849182922635`*^9, 3.583185129064234*^9}, 
   3.58318616858766*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Operators", "Section",
 CellChangeTimes->{{3.58318542296875*^9, 3.58318542869396*^9}}],

Cell["\<\
We notice that we commonly found the following expresions\
\>", "Text",
 CellChangeTimes->{
  3.5831854329215674`*^9, {3.5831854830912557`*^9, 3.583185514587711*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["M", 
   RowBox[{"n", ",", "m"}]], " ", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox["dx", "d\[Xi]"], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "1"}], "1"], 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "n"], "[", "\[Xi]", "]"}], 
      RowBox[{
       SubscriptBox["L", "m"], "[", "\[Xi]", "]"}], 
      RowBox[{"\[DifferentialD]", "\[Xi]"}]}]}]}], " ", "=", " ", 
   SubscriptBox["a", "l"]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.5831858239674544`*^9, 3.583185848287897*^9}, {
  3.5831858837467594`*^9, 3.5831859419972615`*^9}, {3.5831865984588146`*^9, 
  3.583186616055646*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["D", 
   RowBox[{"n", ",", "m"}]], "=", " ", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "1"}], "1"], 
   RowBox[{
    RowBox[{
     SubscriptBox["L", "n"], "[", "\[Xi]", "]"}], 
    FractionBox["d", "dx"], 
    RowBox[{
     SubscriptBox["L", "m"], "[", "\[Xi]", "]"}], 
    RowBox[{"\[DifferentialD]", "\[Xi]"}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.5831859329180455`*^9, 3.58318597524092*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["\<\
Operator Version of the Conservation Equation\
\>", "Section",
 CellChangeTimes->{{3.5831855212801228`*^9, 3.5831855512633753`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", 
          RowBox[{"u", "[", "t", "]"}]}], 
         RowBox[{"\[PartialD]", "x"}]], "=", " ", 
        RowBox[{
         RowBox[{"Diag", "[", 
          SuperscriptBox["M", 
           RowBox[{"-", "1"}]], "]"}], " ", ".", " ", 
         RowBox[{"(", "D"}]}]}], "\[CloseCurlyQuote]"}], " ", 
      RowBox[{"F", "[", "t", "]"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["h", "i"], 
      RowBox[{
       SubscriptBox["v", "n"], "[", 
       SubscriptBox["x", 
        RowBox[{"j", "+", 
         RowBox[{"1", "/", "2"}]}]], "]"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["h", 
       RowBox[{"i", "-", "1"}]], 
      RowBox[{
       SubscriptBox["v", "p"], "[", 
       SubscriptBox["x", 
        RowBox[{"j", "-", 
         RowBox[{"1", "/", "2"}]}]], "]"}]}]}], ")"}], "+", " ", 
   RowBox[{"s", "[", "t", "]"}]}], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.583185566489002*^9, 3.5831855723546124`*^9}, {
  3.5831856236163025`*^9, 3.583185802236616*^9}, {3.5831860069089756`*^9, 
  3.583186129805991*^9}, {3.583186181800883*^9, 3.5831863256331353`*^9}, {
  3.583186577320778*^9, 3.5831865781631794`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
oJADAADQIAcAAKCQAwAA0CAHAABQ8V9CPFv3
    "], {{0, 367}, {517, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{517, 367},
  PlotRange->{{0, 517}, {0, 367}}]], "Input",
 CellChangeTimes->{3.5831864286993165`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["\<\
Burgers solution without Limiter\
\>", "Section",
 CellChangeTimes->{{3.5831867449430723`*^9, 3.5831867569082932`*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
+Ho9+SuV35vlURP6EYulU0RDlfH9O/d8u1Z/hKJWt3qS0qnazXZD4lIlzgjz
M/MqwmTe+9734nx/7b0W42FxUHB8Ojl55DAV1v0Z5nO9Fdk8EnFcjHAsm71O
VwmPw6ht6kez2evUHHZo675PJcrapvKs+rpCcteFLkwir6MjmIZHJ27a//hv
d7yYmbqrOqk9pBcT+tl99/+XJHkW6YOYcruRDAwsjFQm8K7Gign5zW9+Mx5S
vOmuu+46nkXRU3yyj11mMV+Qrfxdzl7nYMKKPHL1VgTyAKdOnULjFxaKRaXx
Z2BZoVMCBdXqSDeZz+z2Oi2P7tj2EaK9yvgWkKembT7LelCUxGHstxO/oatU
3HXH9kvaLZWIVfk8RDDZHeXzazd9KfCORa0Y9j1V5VwlD/ea4UE8FST1pZde
ytoQlvHcXG9/+9t/4zd+AxfkUVfXSj5VW/mNnT+DQwZW5JFJZT7XW8FUhhcX
/p+H/t5e0GL9KFBV9pR+FNYRYfT8rPa6g5v2XhfSVn4PXxviWp1R1lc6Xl0r
VwHrPK0GS5b71u24IvR1iiCf5ZRShVSSVdqxfusXlO1O0ySdqrWpK8mG6tuu
tyf3BZbuV1xxxSWXXAKvb4kjpn6HjNmqN2Gx/ovz9351Af0lDIMKsNJ9GDXY
pofbGM5gd9Kc9mXFxa0tJ/knCxYsoDRvpIw+gVnvz3RDRWkYMhyn5bLMCAJX
S4UyvIiIHtnHl8DDXOkC2AvA3yStoZY3XXSQ+ZXZDjhpjsdc6ZKRvxpSSXb0
8qY7YztHic/yaGDBAOKPVPaegO/w1Nptv8PySJUvD6ndiIJowvCve/bWTddq
/aihQlljantjem+I38tr1kYp4Sep1Bpbd97zUZ2CKFKpv7uVYZ9tJj/Yt//f
xiy8OuTXKAnbqB6bqAx6R/N+317tDIAzpXQvviqArlk9kKZKpZzoYiKSFsZX
uFXe74sDcw0myXL5r8gju3mGSwjsn3LjcFObkypaibsDXWBKc2xHkmHxxg/B
5+A6/hW3PP8K2rE5E/KdzcBzk1tkVzdzW6FuDl6+yfRdCWYDsUqJDMKUyFyU
N11wr/xK7IQFvG9m3YvG56ZGZPrSpUvlK8l0mh9dORaKOMibbq92hj+D1mu8
5mSblaO2Wk8dXr/jd7V+NNqoJHBFYHlUr0J7embD7o8Q7Ws3RwgpvamtMoR3
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
lvclIy0k7A9CTp4wj3Ywt+PheywqjwSkSC41Mqw9yDw5h/kQt2WK0D0z41ps
L9zIGR8zaZ/pqfbOHPDhnB5xb87Y4ljIjZBRk+dmv0KHxroomNwh4zkjjnxw
qKN0Cp3zvokZagEwe5tRvTw0zAITpBtHAnOwIOm7tj59PJLRvDNmypKIe5qr
CeW0xqP5PJksi7lCzCNHjx7FGZkYHfoILLPRsDwcxPfVzDxsRi31C6bBX+Yf
M6c3DmSEmjlDZCU2h/mw1/tKuk7ztnjljLMr9dW7Q1o14zFr+pWR4Y47/eSc
YdYciY1yEqYXgQR/kREyeeakZ0RGmshyXd7XfHGZhSTRwZyVBdNfgqZmQoDc
N12yKWVdk2fmsD6XBmQmREfIYwhLxEY2e5mlM3F5/UKv8SirERkaYj2jVJTL
ICpsPAZpzudkaqWqXGHaBFzxIwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcH
BwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHh3kIKS8lKXSQGA0wk/pSUflh
HBwcHBzmJxBrL4l0pKyGZG9DXo6+5JF2cHBwcHCYEZJv3CzEsGzZMhZDkszc
2sM5ODg4OMwnIDMnadnEx+Pj40EQDA4OSgo1sxSsg4ODg4NDHhBhJJn8WSFi
/YiVpkyBD1d0xsHBwcEhb0xOTrJy1G63zdpzUrZVUnD3vfqSg4ODg4MDwDKI
VaFMCXUcjI+Pn3322fiKj8mpSA4ODg4OeQKWOlS8gsQx69rwsVmuzsHBwcHB
wcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHB
wcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBYW74/wGtwV+z
    "], {{0, 420}, {560, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{560, 420},
  PlotRange->{{0, 560}, {0, 420}}]], "Input"]], "Text",
 CellChangeTimes->{{3.5831867595290976`*^9, 3.583186773444322*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Detection of \[OpenCurlyDoubleQuote]Troubled Cells\
\[CloseCurlyDoubleQuote]", "Section",
 CellChangeTimes->{{3.583156741179287*^9, 3.583156754309596*^9}}],

Cell["\<\
Following our main reference we will use the Modified Minmod Limiter for this \
task
As we observe before, the transformation of \
\>", "Text",
 CellChangeTimes->{{3.583156759267644*^9, 3.58315683232534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox["u", 
     RowBox[{"(", "0", ")"}]], ",", 
    SuperscriptBox["u", 
     RowBox[{"(", "1", ")"}]], ",", 
    SuperscriptBox["u", 
     RowBox[{"(", "2", ")"}]], ",", 
    SuperscriptBox["u", 
     RowBox[{"(", "3", ")"}]], ",", 
    SuperscriptBox["u", 
     RowBox[{"(", "4", ")"}]], ",", 
    SuperscriptBox["u", 
     RowBox[{"(", "5", ")"}]], ",", 
    SuperscriptBox["u", 
     RowBox[{"(", "6", ")"}]]}], "}"}], " "}]], "Input",
 CellChangeTimes->{{3.583156847357534*^9, 3.583156848186333*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.75`", ",", 
   RowBox[{"-", "2.25`"}], ",", "0.`", ",", "118.125`", ",", "0.`", ",", 
   RowBox[{"-", "10524.9375`"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.583156851090437*^9}]
}, Open  ]],

Cell["Notice that , ", "Text",
 CellChangeTimes->{{3.583156871853483*^9, 3.583156948893202*^9}, 
   3.583157025709485*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["u", 
   RowBox[{"(", "0", ")"}]], "==", 
  RowBox[{
   FractionBox["1", 
    SubscriptBox["\[CapitalDelta]x", "j"]], 
   RowBox[{
    SubscriptBox["\[Integral]", 
     SubscriptBox["I", "j"]], 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "t"}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.583156959927539*^9, 3.583157028356383*^9}, {
  3.58315707471827*^9, 3.583157089391008*^9}, {3.583157131241519*^9, 
  3.583157140927914*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.58315696515407*^9, {3.58315701347667*^9, 3.583157028933502*^9}, {
   3.583157075748018*^9, 3.583157089962173*^9}, {3.583157131939359*^9, 
   3.583157142018672*^9}, 3.583157192097381*^9}]
}, Open  ]],

Cell["\<\
Which is the classical definition of the cell average. Therefore we are \
interested in examing and limiting the contribution of the high order terms.\
\>", "Text",
 CellChangeTimes->{{3.583157034084762*^9, 3.583157059615695*^9}, {
  3.583157202416626*^9, 3.583157267682916*^9}}],

Cell["Let us define,", "Text",
 CellChangeTimes->{{3.583157270025003*^9, 3.583157300991107*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Symbolize", "[", 
   TemplateBox[{OverscriptBox[
      SubscriptBox["u", "i"], "~"]},
    "NotationTemplateTag"], "]"}], ";", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{OverscriptBox[
      OverscriptBox[
       SubscriptBox["u", "i"], "~"], "~"]},
    "NotationTemplateTag"], "]"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox[
    SubscriptBox["u", "i"], "~"], " ", "=", " ", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["u", "l"], 
       SubscriptBox["v", "l"]}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", "6"}], "}"}]}], "]"}], "/.", " ", 
    RowBox[{"z", "\[Rule]", 
     SubscriptBox["x", 
      RowBox[{"j", "+", 
       RowBox[{"1", "/", "2"}]}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    OverscriptBox[
     SubscriptBox["u", "i"], "~"], "~"], " ", "=", " ", 
   RowBox[{
    RowBox[{"-", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "l"], 
        SubscriptBox["v", "l"]}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", "6"}], "}"}]}], "]"}]}], "/.", " ", 
    RowBox[{"z", "\[Rule]", 
     SubscriptBox["x", 
      RowBox[{"j", "-", 
       RowBox[{"1", "/", "2"}]}]]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.583157602837381*^9, 3.583157661510605*^9}, {
  3.583157695523796*^9, 3.583157728596966*^9}, {3.583157781403685*^9, 
  3.583157869173238*^9}, {3.583157904514772*^9, 3.583157930439791*^9}, {
  3.583158111180247*^9, 3.583158122789058*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Symbolize", "[", 
   TemplateBox[{SuperscriptBox[
      SubscriptBox["u", 
       RowBox[{"j", "+", 
         RowBox[{"1", "/", "2"}]}]], "-"]},
    "NotationTemplateTag"], "]"}], ";", " ", 
  RowBox[{"Symbolize", "[", 
   TemplateBox[{SuperscriptBox[
      SubscriptBox["u", 
       RowBox[{"j", "-", 
         RowBox[{"1", "/", "2"}]}]], "+"]},
    "NotationTemplateTag"], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.583157303693466*^9, 3.583157353708496*^9}, {
   3.583157393829454*^9, 3.583157444718433*^9}, {3.583157478410283*^9, 
   3.583157487908215*^9}, 3.583157599753212*^9, {3.583158025597147*^9, 
   3.583158028711176*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox[
     SubscriptBox["u", 
      RowBox[{"j", "+", 
       RowBox[{"1", "/", "2"}]}]], "-"], "=", " ", 
    RowBox[{
     SuperscriptBox["u", 
      RowBox[{"(", "0", ")"}]], "+", 
     OverscriptBox[
      SubscriptBox["u", "i"], "~"]}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SuperscriptBox[
    SubscriptBox["u", 
     RowBox[{"j", "-", 
      RowBox[{"1", "/", "2"}]}]], "+"], "=", " ", 
   RowBox[{
    SuperscriptBox["u", 
     RowBox[{"(", "0", ")"}]], "+", 
    OverscriptBox[
     OverscriptBox[
      SubscriptBox["u", "i"], "~"], "~"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.583157359261288*^9, 3.5831573848024*^9}, {
  3.583157550196564*^9, 3.583157570949316*^9}, {3.583157951337255*^9, 
  3.583158022226395*^9}}],

Cell[TextData[{
 "we are now targeting to modified quantities ",
 Cell[BoxData[
  OverscriptBox[
   SubscriptBox["u", "i"], "~"]],
  CellChangeTimes->{{3.583157602837381*^9, 3.583157661510605*^9}, {
   3.583157695523796*^9, 3.583157728596966*^9}, {3.583157781403685*^9, 
   3.583157869173238*^9}, {3.583157904514772*^9, 3.583157930439791*^9}, {
   3.583158111180247*^9, 3.583158122789058*^9}}],
 " and ",
 Cell[BoxData[
  RowBox[{
   OverscriptBox[
    OverscriptBox[
     SubscriptBox["u", "i"], "~"], "~"], " "}]],
  CellChangeTimes->{{3.583157602837381*^9, 3.583157661510605*^9}, {
   3.583157695523796*^9, 3.583157728596966*^9}, {3.583157781403685*^9, 
   3.583157869173238*^9}, {3.583157904514772*^9, 3.583157930439791*^9}, {
   3.583158111180247*^9, 3.583158122789058*^9}}],
 "using standar or modified minmod limiters."
}], "Text",
 CellChangeTimes->{{3.583158085558472*^9, 3.583158162495015*^9}, {
  3.583158389984865*^9, 3.583158390568957*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Standar Minmod Limiter", "Section",
 CellChangeTimes->{{3.583158064656662*^9, 3.583158068834278*^9}}],

Cell["\<\
following the example we have 7 degress of freedom from which we want to \
modify the last 6\
\>", "Text",
 CellChangeTimes->{{3.583158530232619*^9, 3.583158623416979*^9}, {
  3.583158719696573*^9, 3.58315875386744*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "1"], ",", 
     SubscriptBox["A", "2"], ",", 
     RowBox[{"...", 
      SubscriptBox["A", "n"]}]}], ")"}]}], " ", "=", " ", 
  RowBox[{"{", GridBox[{
     {
      RowBox[{"s", " ", ".", " ", 
       RowBox[{
        SubscriptBox["Min", 
         RowBox[{"1", "\[LessEqual]", "j", "\[LessEqual]", "n"}]], "[", 
        SubscriptBox["A", "j"], "]"}], " "}], 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"If", " ", 
           RowBox[{"Sign", "[", 
            SubscriptBox["A", "1"], "]"}]}], "\[Equal]", 
          RowBox[{"Sign", "[", 
           SubscriptBox["A", "2"], "]"}]}], "=."}], ".."}], "\[Equal]", 
       RowBox[{"Sign", "[", 
        SubscriptBox["A", "n"], "]"}]}]},
     {
      RowBox[{"0", " "}], "otherwise"}
    }]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.583158826102074*^9, 3.583159046961227*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Modified Minmod Limiter", "Section",
 CellChangeTimes->{{3.583158172240432*^9, 3.583158176990857*^9}}],

Cell["\<\
The TVD modified minmod limiter is defined as,\
\>", "Text",
 CellChangeTimes->{{3.583159075205124*^9, 3.58315908922131*^9}, {
  3.583159179540319*^9, 3.583159183602318*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   OverscriptBox["m", "~"], 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["A", "1"], ",", 
     SubscriptBox["A", "2"], ",", 
     RowBox[{"...", 
      SubscriptBox["A", "n"]}]}], ")"}]}], " ", "=", " ", 
  RowBox[{"{", GridBox[{
     {
      RowBox[{
       SubscriptBox["A", "1"], " "}], 
      RowBox[{"If", " ", "|", 
       SubscriptBox["A", "1"], "|", 
       RowBox[{"\[LessEqual]", " ", 
        RowBox[{"M", " ", 
         SuperscriptBox["h", "2"]}]}]}]},
     {
      RowBox[{"m", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "1"], ",", 
         SubscriptBox["A", "2"], ",", 
         RowBox[{"...", 
          SubscriptBox["A", "n"]}]}], ")"}]}], "otherwise"}
    }]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.583158826102074*^9, 3.583159046961227*^9}, {
  3.583159098346649*^9, 3.583159170893601*^9}}],

Cell["\<\
where M > 0 is a constant. Its choice depends on the problem. Traditionally M \
is proportional the to second derivate of the initial condition at smooth \
extrema.\
\>", "Text",
 CellChangeTimes->{{3.583159175312894*^9, 3.583159278425487*^9}, {
  3.583159342673006*^9, 3.58315934291193*^9}}],

Cell["\<\
If M is choosen to small accuracy may degenerate at smooth extrema of the \
solution; however if M is choosen too large, oscilations will appear.\
\>", "Text",
 CellChangeTimes->{{3.583159280345254*^9, 3.583159339491423*^9}}]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{1261, 672},
WindowMargins->{{Automatic, 2}, {Automatic, -4}},
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (January 25, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[1104, 40, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[4232, 137, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[89717, 1703, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[93327, 1824, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[94635, 1873, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[99277, 2035, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[100638, 2085, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[103954, 2183, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[107656, 2298, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[114051, 2487, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[133863, 3083, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[145470, 3423, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[148336, 3525, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[160591, 3899, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[177040, 4271, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[185085, 4509, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[195831, 4841, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[199402, 4957, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[200954, 5012, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[220523, 5366, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[320946, 7027, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[327688, 7242, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[329126, 7293, 64, 1, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 331299, 7365}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 202, 3, 206, "Title"],
Cell[784, 27, 159, 2, 109, "Subtitle"],
Cell[946, 31, 121, 4, 116, "Subsubtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1104, 40, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1193, 45, 153, 2, 123, "Section"],
Cell[CellGroupData[{
Cell[1371, 51, 990, 22, 76, "Input"],
Cell[2364, 75, 1807, 55, 282, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4232, 137, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[4321, 142, 110, 1, 123, "Section"],
Cell[CellGroupData[{
Cell[4456, 147, 677, 14, 46, "Input"],
Cell[5136, 163, 84520, 1533, 318, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89717, 1703, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[89806, 1708, 94, 1, 123, "Section"],
Cell[CellGroupData[{
Cell[89925, 1713, 110, 1, 57, "Subsubsection"],
Cell[90038, 1716, 74, 1, 46, "Input"],
Cell[90115, 1719, 561, 15, 60, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90713, 1739, 130, 1, 57, "Subsubsection"],
Cell[90846, 1742, 526, 15, 46, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91409, 1762, 113, 1, 57, "Subsubsection"],
Cell[CellGroupData[{
Cell[91547, 1767, 517, 16, 46, "Input"],
Cell[92067, 1785, 1187, 31, 258, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93327, 1824, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[93416, 1829, 93, 1, 123, "Section"],
Cell[93512, 1832, 148, 2, 59, "Text"],
Cell[93663, 1836, 189, 6, 105, "Text"],
Cell[93855, 1844, 148, 3, 45, "Text"],
Cell[94006, 1849, 250, 7, 34, "DisplayFormula"],
Cell[94259, 1858, 87, 1, 45, "Text"],
Cell[94349, 1861, 237, 6, 34, "DisplayFormula"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94635, 1873, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[94724, 1878, 91, 1, 123, "Section"],
Cell[94818, 1881, 1250, 44, 83, "Text"],
Cell[96071, 1927, 387, 10, 60, "Input"],
Cell[96461, 1939, 995, 32, 90, "Text"],
Cell[97459, 1973, 658, 16, 113, "Text"],
Cell[CellGroupData[{
Cell[98142, 1993, 105, 1, 57, "Subsubsection"],
Cell[98250, 1996, 966, 32, 123, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99277, 2035, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[99366, 2040, 112, 1, 123, "Section"],
Cell[99481, 2043, 174, 5, 75, "Text"],
Cell[99658, 2050, 788, 24, 99, "DisplayFormula"],
Cell[100449, 2076, 140, 3, 45, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100638, 2085, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[100727, 2090, 202, 3, 102, "Subsection"],
Cell[CellGroupData[{
Cell[100954, 2097, 143, 3, 57, "Subsubsection"],
Cell[101100, 2102, 211, 4, 45, "Text"],
Cell[101314, 2108, 769, 20, 60, "Input"],
Cell[102086, 2130, 1331, 30, 60, "Input"],
Cell[103420, 2162, 473, 14, 86, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[103954, 2183, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[104043, 2188, 101, 1, 123, "Section"],
Cell[104147, 2191, 108, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[104280, 2196, 305, 9, 46, "Input"],
Cell[104588, 2207, 734, 18, 91, "Output"]
}, Open  ]],
Cell[105337, 2228, 122, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[105484, 2235, 272, 7, 46, "Input"],
Cell[105759, 2244, 499, 9, 73, "Output"]
}, Open  ]],
Cell[106273, 2256, 99, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[106397, 2261, 718, 21, 77, "Input"],
Cell[107118, 2284, 477, 7, 45, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107656, 2298, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[107745, 2303, 276, 6, 92, "Subsection"],
Cell[108024, 2311, 186, 4, 45, "Text"],
Cell[108213, 2317, 775, 25, 106, "Input"],
Cell[108991, 2344, 2024, 59, 108, "Input"],
Cell[CellGroupData[{
Cell[111040, 2407, 829, 12, 46, "Input"],
Cell[111872, 2421, 2118, 59, 312, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114051, 2487, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[114140, 2492, 142, 1, 123, "Section"],
Cell[CellGroupData[{
Cell[114307, 2497, 449, 9, 46, "Input"],
Cell[114759, 2508, 3287, 97, 288, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118083, 2610, 1062, 27, 81, "Input"],
Cell[119148, 2639, 3283, 105, 401, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122468, 2749, 256, 3, 57, "Subsubsection"],
Cell[122727, 2754, 1282, 30, 76, "Input"],
Cell[CellGroupData[{
Cell[124034, 2788, 827, 15, 75, "Input"],
Cell[124864, 2805, 4288, 130, 412, "Output"]
}, Open  ]],
Cell[129167, 2938, 206, 3, 45, "Text"],
Cell[129376, 2943, 259, 5, 45, "Text"],
Cell[129638, 2950, 536, 14, 60, "Input"],
Cell[CellGroupData[{
Cell[130199, 2968, 1048, 24, 46, "Input"],
Cell[131250, 2994, 2358, 75, 307, "Output"]
}, Open  ]],
Cell[133623, 3072, 179, 4, 45, "Text"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133863, 3083, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[133952, 3088, 142, 1, 102, "Subsection"],
Cell[134097, 3091, 886, 21, 46, "Input"],
Cell[CellGroupData[{
Cell[135008, 3116, 145, 2, 46, "Input"],
Cell[135156, 3120, 1711, 42, 338, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136904, 3167, 651, 16, 46, "Input"],
Cell[137558, 3185, 843, 20, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138438, 3210, 127, 1, 57, "Subsubsection"],
Cell[CellGroupData[{
Cell[138590, 3215, 647, 16, 107, "Input"],
Cell[139240, 3233, 2836, 88, 375, "Output"]
}, Open  ]],
Cell[142091, 3324, 439, 12, 46, "Input"],
Cell[142533, 3338, 649, 19, 46, "Input"],
Cell[CellGroupData[{
Cell[143207, 3361, 243, 4, 46, "Input"],
Cell[143453, 3367, 1944, 48, 336, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145470, 3423, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[145559, 3428, 133, 3, 123, "Section"],
Cell[145695, 3433, 413, 14, 52, "Text"],
Cell[146111, 3449, 883, 25, 123, "Text"],
Cell[146997, 3476, 345, 11, 52, "Text"],
Cell[147345, 3489, 942, 30, 69, "DisplayFormula"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148336, 3525, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[148425, 3530, 113, 1, 123, "Section"],
Cell[148541, 3533, 270, 5, 75, "Text"],
Cell[148814, 3540, 134, 3, 45, "Text"],
Cell[CellGroupData[{
Cell[148973, 3547, 229, 5, 46, "Input"],
Cell[149205, 3554, 1524, 47, 85, "Output"]
}, Open  ]],
Cell[150744, 3604, 214, 4, 45, "Text"],
Cell[CellGroupData[{
Cell[150983, 3612, 1148, 31, 98, "Input"],
Cell[152134, 3645, 2258, 65, 312, "Output"]
}, Open  ]],
Cell[154407, 3713, 635, 12, 79, "Text"],
Cell[155045, 3727, 1091, 34, 81, "Input"],
Cell[156139, 3763, 882, 16, 79, "Text"],
Cell[157024, 3781, 322, 8, 60, "Input"],
Cell[CellGroupData[{
Cell[157371, 3793, 1428, 40, 72, "Input"],
Cell[158802, 3835, 694, 19, 73, "Output"]
}, Open  ]],
Cell[159511, 3857, 240, 5, 45, "Text"],
Cell[CellGroupData[{
Cell[159776, 3866, 335, 10, 46, "Input"],
Cell[160114, 3878, 416, 14, 73, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[160591, 3899, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[160680, 3904, 317, 9, 92, "Subsection"],
Cell[161000, 3915, 313, 9, 49, "Text"],
Cell[161316, 3926, 878, 29, 69, "DisplayFormula"],
Cell[162197, 3957, 1172, 26, 88, "Input"],
Cell[163372, 3985, 463, 12, 75, "Text"],
Cell[CellGroupData[{
Cell[163860, 4001, 252, 3, 57, "Subsubsection"],
Cell[CellGroupData[{
Cell[164137, 4008, 965, 28, 76, "Input"],
Cell[165105, 4038, 1475, 31, 265, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166629, 4075, 266, 3, 57, "Subsubsection"],
Cell[CellGroupData[{
Cell[166920, 4082, 621, 17, 76, "Input"],
Cell[167544, 4101, 9423, 162, 247, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177040, 4271, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[177129, 4276, 301, 10, 125, "Section"],
Cell[177433, 4288, 155, 2, 45, "Text"],
Cell[177591, 4292, 258, 7, 60, "Input"],
Cell[177852, 4301, 1461, 41, 82, "Input"],
Cell[179316, 4344, 104, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[179445, 4349, 1594, 50, 84, "Input"],
Cell[181042, 4401, 1211, 33, 192, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[182302, 4440, 303, 9, 123, "Section"],
Cell[182608, 4451, 284, 8, 45, "Text"],
Cell[CellGroupData[{
Cell[182917, 4463, 1542, 29, 46, "Input"],
Cell[184462, 4494, 562, 8, 45, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[185085, 4509, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[185174, 4514, 400, 14, 125, "Section"],
Cell[185577, 4530, 326, 6, 75, "Text"],
Cell[CellGroupData[{
Cell[185928, 4540, 452, 13, 46, "Input"],
Cell[186383, 4555, 2249, 68, 117, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188669, 4628, 945, 21, 76, "Input"],
Cell[189617, 4651, 3084, 96, 181, "Output"]
}, Open  ]],
Cell[192716, 4750, 364, 7, 45, "Text"],
Cell[CellGroupData[{
Cell[193105, 4761, 198, 4, 46, "Input"],
Cell[193306, 4767, 1060, 26, 117, "Output"]
}, Open  ]],
Cell[194381, 4796, 164, 2, 45, "Text"],
Cell[194548, 4800, 423, 12, 48, "Input"],
Cell[194974, 4814, 164, 2, 45, "Text"],
Cell[195141, 4818, 479, 12, 48, "Input"],
Cell[195623, 4832, 159, 3, 45, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195831, 4841, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[195920, 4846, 159, 2, 123, "Section"],
Cell[196082, 4850, 179, 2, 45, "Text"],
Cell[196264, 4854, 483, 13, 88, "Text"],
Cell[196750, 4869, 448, 12, 52, "Text"],
Cell[197201, 4883, 2152, 68, 152, "DisplayFormula"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199402, 4957, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[199491, 4962, 92, 1, 123, "Section"],
Cell[199586, 4965, 176, 4, 45, "Text"],
Cell[199765, 4971, 670, 19, 62, "DisplayFormula"],
Cell[200438, 4992, 467, 14, 62, "DisplayFormula"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[200954, 5012, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[201043, 5017, 142, 3, 123, "Section"],
Cell[201188, 5022, 1300, 37, 60, "DisplayFormula"],
Cell[202491, 5061, 17983, 299, 390, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[220523, 5366, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[220612, 5371, 129, 3, 123, "Section"],
Cell[220744, 5376, 100153, 1645, 440, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[320946, 7027, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[321035, 7032, 161, 2, 123, "Section"],
Cell[321199, 7036, 218, 5, 75, "Text"],
Cell[CellGroupData[{
Cell[321442, 7045, 571, 18, 51, "Input"],
Cell[322016, 7065, 234, 5, 45, "Output"]
}, Open  ]],
Cell[322265, 7073, 122, 2, 45, "Text"],
Cell[CellGroupData[{
Cell[322412, 7079, 532, 16, 82, "Input"],
Cell[322947, 7097, 242, 4, 45, "Output"]
}, Open  ]],
Cell[323204, 7104, 289, 5, 75, "Text"],
Cell[323496, 7111, 96, 1, 45, "Text"],
Cell[323595, 7114, 338, 10, 64, "Input"],
Cell[323936, 7126, 1250, 38, 81, "Input"],
Cell[325189, 7166, 671, 17, 60, "Input"],
Cell[325863, 7185, 820, 27, 83, "Input"],
Cell[326686, 7214, 953, 22, 47, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[327688, 7242, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[327777, 7247, 107, 1, 123, "Section"],
Cell[327887, 7250, 230, 5, 45, "Text"],
Cell[328120, 7257, 957, 30, 60, "DisplayFormula"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[329126, 7293, 64, 1, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[329215, 7298, 108, 1, 117, "Section"],
Cell[329326, 7301, 184, 4, 45, "Text"],
Cell[329513, 7307, 877, 29, 66, "DisplayFormula"],
Cell[330393, 7338, 302, 6, 75, "Text"],
Cell[330698, 7346, 235, 4, 75, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
