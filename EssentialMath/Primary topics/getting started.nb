(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    847954,      19847]*)
(*NotebookOutlinePosition[    885501,      21160]*)
(*  CellTagsIndexPosition[    884690,      21138]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["Getting Started", "Title",
  TextAlignment->Center,
  TextJustification->0],

Cell[TextData[{
  "from ",
  StyleBox[ButtonBox["Essential Mathematica for Students of Science",
    Active->False,
    ButtonData:>{
      URL[ 
      "http://www.physics.umd.edu/courses/CourseWare/EssentialMathematica/"], 
      None},
    Active->False,
    ButtonStyle->"Hyperlink"],
    Active->False],
  "\n\[Copyright] James J. Kelly, 1998\nLast revised: January, 2006"
}], "Author",
  Active->True,
  TextAlignment->Center,
  TextJustification->0],

Cell[TextData[StyleBox["To open a section, double click on a cell bracket at \
the right side of the screen that has a hook on its bottom end like this \
\[LeftDownTeeVector].\t\t\[DoubleLongRightArrow]",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]]], "Text"],

Cell[CellGroupData[{

Cell["Introduction", "Section"],

Cell[TextData[{
  "In this notebook we introduce enough of the features of ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " for the student to begin to perform some interesting work.  However, we \
do not provide complete descriptions of these features at this time.  Many of \
the concepts and tools will be developed more thoroughly as the course \
progresses.  The ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " system is so vast that no person can master all of its features; nor is a \
single person likely to need all of those features.  Although the learning \
curve may appear to be very steep, as you become accustomed to the ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " way of thinking you will soon find its language to be fairly natural and \
will be able to guess many of its functions and syntax without constantly \
referring to reference materials.  It is almost like learning a foreign \
language \[LongDash] you start by acquiring a minimal vocabulary and the \
rules of grammar, but struggle in forming nontrivial communication until you \
begin to think in that language without consciously translating.  The only \
way to acquire fluency is to immerse oneself in the language.  A great deal \
of effort is needed at the beginning, but communication eventually becomes \
fairly easy and natural."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  "The Structure of ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " "
}], "Section"],

Cell[TextData[{
  "The two basic parts of the ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " system are the ",
  StyleBox["front end",
    FontWeight->"Bold"],
  " and the ",
  StyleBox["kernel.  ",
    FontWeight->"Bold"],
  "The front end interacts with the user while the kernel performs \
computations.  These two parts are separate, but communicate with each other \
via the ",
  StyleBox["MathLink",
    FontSlant->"Italic"],
  " protocol."
}], "Text"],

Cell[TextData[{
  "The most common, and for most users the most convenient, type of front end \
is a ",
  StyleBox["notebook interface",
    FontWeight->"Bold"],
  ".  A notebook interface provides an interactive environment in which the \
information sent to or received from the kernel is displayed on a video \
monitor.  The editing tools exploit the full range of capabilities of both \
the keyboard and mouse, with cut-and-paste functions, shortcut keys, hot \
buttons, etc.  The interface also provides many menus and graphical tools to \
facilitate the preparation of input.  The typesetting capabilities introduced \
in Version 3 include symbolic characters which can closely mimic traditional \
scientific and mathematical notation.  Thus, ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " provides a powerful WYSIWYG (what you see is what you get) word processor \
for technical documents.  Version 4 permits graphics in a wide variety of \
formats, created by other software, to be imported into your notebook \
documents."
}], "Text"],

Cell[TextData[{
  "A ",
  StyleBox["notebook document",
    FontWeight->"Bold"],
  ", such as this, contains commands that direct the actions of the kernel, \
output from those calculations, and documentation.  A well-written notebook \
document provides a clear and structured account of your work and evolves as \
you refine your solution to a problem.  Even though a notebook might resemble \
a sheaf of scratch paper during the intermediate stages of an investigation, \
by the time your problem approaches completion it should more closely \
resemble a research paper in which the problem is clearly stated and \
introduced, and the solution is developed in a clear and orderly fashion with \
enough documentation for any informed reader to follow easily.  However, an \
important difference between a ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " notebook and either a research report or a set of notes is that the \
notebook is a live document in which improvements or extensions can be made \
without extensive rewriting."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Running the kernel", "Section"],

Cell[CellGroupData[{

Cell["Starting the kernel", "Subsection"],

Cell[TextData[{
  "The kernel does not automatically start when you run the front end.  After \
all, the front end is responsible for display and editing functions which do \
not require action by the kernel.  Although you can start the kernel \
explicitly by using the menu sequence Kernel \[RightTeeArrow] Start Kernel \
\[RightTeeArrow] Local, one normally waits until there is work for the kernel \
to do, such as an arithmetic calculation.  For example, type 2+2 into an \
input cell and then press the keystroke combination ",
  StyleBox["Shift Enter",
    FontWeight->"Bold"],
  ", which passes the input to the kernel for evaluation.  Evaluation can \
also be initiated using the ",
  StyleBox["Enter",
    FontWeight->"Bold"],
  " key on the numeric keypad.  After evaluation, the kernel passes the \
result back to the front end, which then creates an output cell containing \
the result."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(2 + 2\)], "Input"],

Cell[BoxData[
    \(4\)], "Output"]
}, Closed]],

Cell[TextData[{
  StyleBox["Note:",
    FontColor->RGBColor[0, 0, 1]],
  " You will probably notice that the first evaluation that you perform may \
require a surprisingly long time \[LongDash] why doesn't the computer perform \
the above arithmetic evaluation much faster than you could by inspection?   \
The evaluation is actually very fast, but before that evaluation is performed \
the kernel must be loaded and initialized, which is not done until an \
evaluation is requested.  Hence, practically all of the time apparently \
needed to produce the first result is actually spent on the more arduous task \
of loading the kernel.  If you are close enough to your disk drive, you will \
probably hear it churning as the kernel is loaded and initialized.  \
Reevaluation of this expression will be practically instantaneous.  Check by \
either selecting the input cell using the cell bracket or clicking within the \
cell and then repeating the keystroke combination ",
  StyleBox["Shift Enter",
    FontWeight->"Bold"],
  ".",
  "  Alternatively, the ",
  StyleBox["Enter",
    FontWeight->"Bold"],
  " key on the numeric keypad should also execute a selection."
}], "Text"],

Cell["\<\
Note that we specified the local kernel because it is possible to run the \
front end on one machine and the kernel on another.  It is also possible to \
run kernels on several machines simultaneously, but we will not use those \
more advanced techniques in this course.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Quitting the kernel", "Subsection"],

Cell[TextData[{
  "Sometimes it is necessary to interrupt or abort an evaluation or \
occasionally even to shut down the kernel completely.  Unless the system \
crashes, these operations do not affect the front end and you will not lose \
your work.  The menu sequence Kernel \[RightTeeArrow] Quit Kernel \
\[RightTeeArrow] Local shuts down the kernel.  ",
  StyleBox["Try it now; we haven't done anything important yet.",
    FontSlant->"Italic"]
}], "Text"],

Cell["\<\
Shutting down the kernel removes all symbols from memory.  When you restart \
you will probably have to execute some or all of the preceding cells before \
testing a revised version of the last command attempted in the previous \
session.  If your notebook is organized well, executing a few sections rather \
than the entire notebook may be sufficient to establish the necessary \
definitions.\
\>", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Using a notebook interface", "Section"],

Cell[CellGroupData[{

Cell["Cells", "Subsection"],

Cell[TextData[{
  "I assume that you are reading this document on a monitor coupled to a \
computer capable of running a notebook interface.  If so, you will see that \
the present document is divided into a number of sections with clearly \
identifiable section headings; some sections are also divided into \
subsections.  The details of the appearance of these headings will depend \
upon the particular computer system that you are using and perhaps upon some \
of the options that were selected when ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " was installed.  Nevertheless, the logical structure should be \
unmistakable."
}], "Text"],

Cell[TextData[{
  "The descriptive sections of this notebook assume that you are using a ",
  StyleBox["Microsoft Windows",
    FontSlant->"Italic"],
  " system.  Notebook interfaces for other systems are generally quite \
similar, but some of the shortcut keys and details of the appearance may vary \
between interfaces.  We hope that it will not take long to become accustomed \
to these differences."
}], "Text"],

Cell[TextData[{
  "Each section consists of a collection of ",
  StyleBox["cells",
    FontWeight->"Bold"],
  ", of which there are several types.  The present paragraph sits in a ",
  StyleBox["text cell. ",
    FontSlant->"Italic"],
  " Input intended for transmission to the kernel should occupy an ",
  StyleBox["input cell ",
    FontSlant->"Italic"],
  "and the results returned by the kernel will be placed in an ",
  StyleBox["output cell",
    FontSlant->"Italic"],
  ".  Depending upon the style options selected for a particular document, \
there will usually be several other cell types available, such as title, \
section, subsection, etc.  The vertical extent of a cell is generally \
delineated by a bracket that appears at the right side of the display.  The \
innermost bracket identifies an individual cell, while outer brackets \
indicate increasingly inclusive logical groupings of cells.  A cell or group \
of cells can be selected by using the mouse to click on the appropriate \
bracket, which should then change to a bolder appearance.  "
}], "Text"],

Cell[TextData[{
  "Notebooks are often saved with the cells ",
  StyleBox["closed",
    FontSlant->"Italic"],
  " \[LongDash] the logical structure of the notebook is then revealed by the \
organization of its section headings while the details are hidden.  Closed \
cells are identified by dark hooks at the base of the cell bracket.  To open \
a cell or group of cells, double click of the appropriate cell bracket.  \
Repeating that operation then closes the cell.  Alternatively, you can select \
the cell and use the keystroke sequence \[ControlKey] { to open or \
\[ControlKey] } to close all subcells within your selection.  Notice that \
many shortcuts are designed for easy memorization; in this case, an \
open-bracket opens a set of cells while a close-bracket closes the cell."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Navigation", "Subsection"],

Cell["Familiarize yourself with the cursor.", "Exercise"],

Cell["\<\
Move the cursor around with the mouse and note that its appearance depends \
upon location.  When the cursor is within a cell it should look like a \
vertical line with shorter top and bottom lines (like an error bar for \
plotting data).  If you click within a cell, an insertion marker should \
appear, usually as a blinking vertical line, where new text is inserted as \
you type.  Note that even though the insertion point may not be at the \
current location of the cursor, typing will appear at the insertion point \
rather than the cursor location.  The cursor disappears until the mouse is \
moved again.  When the cursor is between cells a horizontal line indicates \
that a new cell may be created by clicking there.  Usually the default cell \
type is \"Input\", but that can be changed using the tool bar.  If the cursor \
is near a hyperlink, an arrow indicates that a jump will occur when that link \
is clicked.  You should also see a definition of the link, probably in the \
lower left corner of the notebook window.  If the cursor is on a menu bar or \
palette item it also looks like an arrow indicating that pushing the button \
activates a command, and if the cursor hovers the corresponding command or \
character is often displayed nearby.\
\>", "ExerciseText"],

Cell[TextData[StyleBox["Dummy text cell 1",
  FontFamily->"Nueva BoldExtended",
  FontSize->16]], "Text",
  TextAlignment->Center,
  TextJustification->0],

Cell[TextData[StyleBox["Dummy text cell 2",
  FontFamily->"Nueva BoldExtended",
  FontSize->16]], "Text",
  TextAlignment->Center,
  TextJustification->0],

Cell["\<\
Locate the dummy cells above and practice the operations described here on \
those cells.\
\>", "Exercise"],

Cell["Select one of the cells using the mouse.", "ExerciseText"],

Cell["\<\
Select the Copy function from the Edit menu.  Note that the menu item also \
provides a shortcut key.\
\>", "ExerciseText"],

Cell[TextData[
"Move the mouse cursor somewhere below the dummy cells and note that its \
appearance depends upon location.  If the cursor is between cells, the short \
horizontal bar indicates that it is possible to create a new cell at that \
location.  Click with the mouse and observe that a full horizontal line \
appears \[LongDash] this indicates that the interface is ready to place input \
into a new cell.  Use the Paste function from the Edit menu to reproduce the \
dummy cell at this location.  Note the shortcut key \[LongDash] you will soon \
find it much quicker to use shortcut keystrokes than menu selections for \
common operations."], "ExerciseText"],

Cell["\<\
Move the cursor within the new cell and note its appearance.  Click the \
pointer within the cell and note the appearance of the cursor when it is \
ready to insert text.  Insert and delete some text and familiarize yourself \
with the screen editing features.  Identify the Delete, End, Home, Page Up, \
and Page Down keys and examine their actions.\
\>", "ExerciseText"],

Cell["\<\
Highlight some part a dummy text cell by holding down the left mouse button \
and dragging the cursor over a section of text.  Use the shortcut keys to \
copy, cut, and paste that text in various locations.  From the Format menu \
change a section of highlighted text to bold face or italic face, vary its \
font, size, and other features.\
\>", "ExerciseText"],

Cell["\<\
Note that the right mouse button will also produce an Edit menu when the \
cursor and insertion point are in appropriate locations.\
\>", "ExerciseText"],

Cell["Changing cell properties.", "Exercise"],

Cell["\<\
Activate the Format menu by clicking on that keyword in the main menu bar.  \
Toggle Show ToolBar on and off and note the appearance or disappearance of a \
set of icons at the top of the notebook window.  With the Tool Bar shown, \
click on the cell bracket for a text cell.  You should see the word Text \
appear.  Use the associated scroll bar to view the available cell types.  \
Click on various cell types to observe their effect.  What type of cell is \
this?\
\>", "ExerciseText"],

Cell["\<\
Click somewhere between cells and begin a new cell.  You will probably find \
that the default cell type is Input.  Select the cell and change it to a Text \
cell.  Enter several lines of text, perhaps the lyrics of your favorite song. \
 Click at the beginning of a line and choose Divide Cell from the Cell menu.  \
Your song should now be split into two text cells.  Merge these cells using \
the Cell menu.\
\>", "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Creating notebooks", "Subsection"],

Cell[TextData[{
  "One of the most attractive features of ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is its facility for handling notebook documents.  Several notebooks can \
be open simultaneously, limited only by the memory available on the computer. \
 The active notebook is indicated by the coloration of its title bar.  You \
switch between notebooks by clicking on their title bars or by using the \
Window command from the menu bar."
}], "Text"],

Cell["Create your first notebook.", "Exercise"],

Cell[TextData[
"Use File \[RightTeeArrow] New from the command menu to create a new, \
untitled notebook.  Use Format \[RightTeeArrow] Show ToolBar to activate the \
tool bar at the top of the notebook (if not already present).  Note that the \
commands on the menu bar apply to the notebook that is currently active, as \
indicated by the coloration of its title bar."], "ExerciseText"],

Cell["\<\
Insert a title, such as First Notebook, at the top.  Change the cell type to \
Title using the menu in the tool bar.  Center the title also.\
\>", "ExerciseText"],

Cell[TextData[{
  "Insert a centered subtitle, ",
  StyleBox["Mathematica Course",
    FontSlant->"Italic"],
  ", in the next cell."
}], "ExerciseText"],

Cell["Enter your name as a text cell.", "ExerciseText"],

Cell["\<\
Create a section cell, a subsection cell, etc.  Note the logical grouping of \
cells.  Type some text into these sections.\
\>", "ExerciseText"],

Cell["\<\
Create a section named Exercises.  When you are asked to do an exercise \
below, copy the text of the exercise by highlighting the cell marker and \
using either Edit \[RightTeeArrow] Copy or Ctrl-C and then paste it into your \
notebook using either Edit \[RightTeeArrow] Paste or Ctrl-V.  Then work the \
exercise below your own copy.  (There is no harm in doing them here, but you \
should get used to moving back and forth between notebooks.)\
\>", "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Saving notebooks", "Subsection"],

Cell["\<\
It is good practice with any computer program to save your work periodically, \
especially after having solved a difficult problem or having written a lot of \
text.  Also, if you are concerned that some code you have written may not \
work properly, it is wise to save your previous work in case something bad \
happens.  \
\>", "Text"],

Cell["It is good practice to save your work frequently!", "Advice"],

Cell[TextData[{
  "New notebooks are created with default names like ",
  StyleBox["untitled-1.nb",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  ", ",
  StyleBox["untitled-2.nb",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  ", etc.  Of course, you would prefer a more descriptive name and can have \
it by using File \[RightTeeArrow] Save As from the tool bar or the shortcut \
Shift Ctrl S and then filling in the dialog box that appears.  Note that this \
operation only saves the notebook that is currently active.  ",
  StyleBox["Now would be a good time to save your working notebook.",
    FontSlant->"Italic"]
}], "Text"],

Cell["Save your new notebook.", "Exercise"],

Cell[TextData[{
  "Use File \[RightTeeArrow] Save As to save ",
  StyleBox["MyFirstNotebook",
    FontSlant->"Italic"],
  StyleBox[" ",
    FontWeight->"Plain"],
  "in a subdirectory within your own disk area rather than in the shared \
space for the course materials.  Note that the name of the notebook will \
change on its title bar."
}], "ExerciseText"],

Cell[TextData[{
  "Use File \[RightTeeArrow] Save As to save a ",
  StyleBox["second",
    FontSlant->"Italic"],
  " copy with a different name, such as ",
  StyleBox["ScratchNotebook",
    FontSlant->"Italic"],
  ".  Sometimes it is useful to have a scratch copy when you are fumbling \
with development of some difficult code.  Note that the title changes again \
and that ",
  StyleBox["MyFirstNotebook",
    FontSlant->"Italic"],
  " seems to be unavailable."
}], "ExerciseText"],

Cell["\<\
Make a change in the notebook, such as its title, and then use the menu \
sequence File \[RightTeeArrow] Save or the shortcut Ctrl S to save changes to \
the notebook. \
\>", "ExerciseText"],

Cell["Window menu", "Exercise"],

Cell[TextData[{
  "The active window can be selected from the menu bar.  When you click on \
Window you should see a list of open windows including ",
  StyleBox["getting started.nb",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  StyleBox[" ",
    FontSlant->"Italic"],
  "and the name of the notebook that you created above.  Only one version of \
your notebook will appear in the list.  You may also see several names, like \
",
  StyleBox["BasicInput.nb",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  ", associated with standard ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " palettes; we will introduce palettes shortly.  The desired notebook is \
activated by clicking on its name."
}], "ExerciseText"],

Cell["Open the other version of your notebook.", "Exercise"],

Cell[TextData[
"Use File \[RightTeeArrow] Open from the menu bar and the navigation tools \
provided by your operating system to locate and open the other version of \
your notebook.  Compare the two versions to verify that the changes you made \
are present.  Verify that both versions appear in the Window list."], 
  "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Palettes", "Subsection"],

Cell[TextData[{
  "Although we will use ",
  StyleBox["palettes",
    FontSlant->"Italic"],
  " more extensively later, this is a convenient time to introduce them.  \
When ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is installed, several of the most useful palettes are usually made \
available to each new session.  The names of these palettes can then be found \
in the Window menu.  For example, activation of the ",
  StyleBox["BasicInput",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  " palette should bring to the fore a palette with several common \
mathematical functions and symbols.  If the desired palette does not appear \
in the Window list, it can be opened using File \[RightTeeArrow] Palettes."
}], "Text"],

Cell["Obtain symbols from a palette", "Exercise"],

Cell[TextData[{
  "Place the insertion point in a new Input cell and then activate the ",
  StyleBox["BasicInput",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  " palette."
}], "ExerciseText"],

Cell[TextData[{
  "Click upon ",
  Cell[BoxData[
      \(TraditionalForm\`\[SelectionPlaceholder]\^\[Placeholder]\)]],
  " symbol in the upper left corner of the palette.  Two boxes, call ",
  StyleBox["place holders",
    FontSlant->"Italic"],
  ", should appear in your input cell.  The darkened place holder is ready to \
receive input.  Now click on the ",
  Cell[BoxData[
      \(TraditionalForm\`\[ExponentialE]\)]],
  " symbol, which stands for the base of natural logarithms (",
  StyleBox["e",
    FontSlant->"Italic"],
  ") and is double-struck to differentiate that symbol from the letter ",
  StyleBox["e",
    FontSlant->"Italic"],
  "."
}], "ExerciseText"],

Cell[TextData[{
  "Next click on the empty place holder  and observe that it becomes \
darkened, indicating that the exponent is ready to receive input.  Click on \
the symbol ",
  Cell[BoxData[
      \(TraditionalForm\`\[ImaginaryI]\)]],
  ", which stands for ",
  Cell[BoxData[
      \(TraditionalForm\`\@\(-1\)\)]],
  ".  Finally, press the space bar to insert a space and click on the symbol \
",
  Cell[BoxData[
      \(TraditionalForm\`\[Pi]\)]],
  " from the palette.  (The space is needed to separate distinct symbols and \
is interpreted as multiplication.)  The net result should look like: "
}], "ExerciseText"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\[ExponentialE]\^\(\(\[ImaginaryI]\ \[Pi]\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(-1\)\)], "Output"]
}, Closed]],

Cell[TextData[{
  "This input cell can now be evaluated by pressing the keystroke combination \
",
  StyleBox["Shift Enter ",
    FontWeight->"Bold"],
  "on the normal keypad or ",
  StyleBox["Enter",
    FontWeight->"Bold"],
  " on the numeric keypad.  Is the result correct?"
}], "ExerciseText"],

Cell[TextData[{
  StyleBox[
  "You can also move from box to box in a complicated palette item using the \
Tab key.  Use the ", "ExerciseText"],
  StyleBox["BasicInput", "ExerciseText",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  StyleBox[
  " palette to reproduce the following expression.  Note that place holders \
can receive palette input that introduces additional place holders.  Finally, \
evaluate the integral.", "ExerciseText"]
}], "ExerciseText"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\[Integral]\_0\%\[Infinity]\( 
            x\/\@\(1 + x\^6\)\) \[DifferentialD]x\)], "Input"],

Cell[BoxData[
    \(\(Gamma[1\/3]\ Gamma[7\/6]\)\/\@\[Pi]\)], "Output"]
}, Closed]],

Cell["Opening a palette", "Exercise"],

Cell[TextData[{
  "There are several other standard palettes and it is possible to create or \
import additional palettes (not covered here).  If the desired palette does \
not appear in the Window list, it can be opened using File \[RightTeeArrow] \
Palettes.  Open ",
  StyleBox["InternationalCharacters",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  " and use it to write Schr\[ODoubleDot]dinger."
}], "ExerciseText"],

Cell[TextData[
"Once you become familiar with the keystroke sequences for common special \
characters, you may decide that it is easier to use those than the palettes \
\[LongDash] the choice is a matter of personal preference.  Note that many of \
the palettes will supply the keystroke sequence if you allow the mouse to \
hover over a character."], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Command completion and templates", "Subsection"],

Cell[TextData[{
  "Command completion and templates can be obtained either from the ",
  StyleBox["Input",
    FontWeight->"Bold"],
  " menu or using shortcut keys Ctrl-K or Shift-Ctrl-K, respectively.   For \
example, try typing ",
  StyleBox["Be", "InlineInput",
    FontWeight->"Bold"],
  " following by the command completion shortcut (Ctrl-K).  You should then \
see a list of possibilities, from which you could select ",
  StyleBox["BesselK", "InlineInput",
    FontWeight->"Bold"],
  " either with the mouse or arrow keys.  Then typing the template shortcut \
(Shift-Ctrl-K) will produce a dummy argument list.  Of course, you will then \
need to replace the dummy arguments to do a real calculation.  Nor do the \
command templates specify optional arguments."
}], "Text"],

Cell["\<\
Although some people like command completion, personally I consider it to be \
a useless frill.\
\>", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Help!", "Section"],

Cell[CellGroupData[{

Cell["Help Browser", "Subsection"],

Cell[TextData[{
  "Probably the most important source of help is the ",
  StyleBox["Help Browser",
    FontWeight->"Bold"],
  " provided with ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " itself.  The help browser can be accessed from the menu bar and its use \
should be self-explanatory.  Simply type the name of the function or keyword \
in the dialog box and search either the appropriate resource index, usually \
",
  StyleBox["Built-in Functions",
    FontWeight->"Bold"],
  " or ",
  StyleBox["The Mathematica Book",
    FontSlant->"Italic"],
  " itself, whose entire text of more than 1000 pages is available online."
}], "Text"],

Cell[TextData[{
  "Use the Help Browser to discover the definition of Fibonacci polynomials.  \
Obtain the ",
  Cell[BoxData[
      \(TraditionalForm\`10\^th\)]],
  " Fibonacci polynomial."
}], "Exercise"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Fibonacci[10, x]\)], "Input"],

Cell[BoxData[
    \(5\ x + 20\ x\^3 + 21\ x\^5 + 8\ x\^7 + x\^9\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Use the Help Browser to find the syntax for Integrate.  Then evaluate \na) \
",
  Cell[BoxData[
      \(TraditionalForm\`Integrate[
        x\^3/\((Exp[x] + 1)\), {x, 0, Infinity}]\)]],
  "\nb)",
  Cell[BoxData[
      \(TraditionalForm\`\[Integral]\_0\%\[Infinity]\( x\^3\/\(Exp[x] + 
                1\)\) \[DifferentialD]x\)]],
  ".  \nThe first version can be typed directly into an input cell; the \
second can be produced most easily using the BasicInput palette.  Be careful \
to distinguish between upper and lower case characters and between square \
brackets and parentheses when preparing your input."
}], "Exercise"],

Cell[TextData[{
  "Throughout the course materials, hyperlinks to either the ",
  StyleBox["Reference Guide",
    FontSlant->"Italic"],
  " or to an appropriate section of the ",
  StyleBox["Mathematica Book",
    FontSlant->"Italic"],
  " are provided whenever a new function is introduced or used in a new \
manner.  Simply clicking on the highlighted button takes you to the \
appropriate documentation for that feature.  The Help Browser will then \
provide the definition of the function, its options, and details of its \
syntax and properties.  In many cases there will also be examples provided \
and links to related information throughout the ",
  StyleBox["Mathematica Book",
    FontSlant->"Italic"],
  ".  Using this method it will not be necessary to provide such details \
within these notebooks themselves.  For example, by clicking on this \
hyperlink,  ",
  ButtonBox["Range",
    ButtonStyle->"RefGuideLink"],
  " , one finds that ",
  StyleBox["Range[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["nmin,nmax", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " produces a list of integers between ",
  StyleBox["nmin", "InlineInput"],
  " and ",
  StyleBox["nmax", "InlineInput"],
  " (Try it!).   "
}], "Text"],

Cell["\<\
Many parts of the Help Browser include statements which you can modify or \
execute without actually changing anything in your system.  Don't worry \
\[LongDash] you won't break it!  You can also copy cells from the browser \
into your own notebook.\
\>", "Text"],

Cell["\<\
Find the examples of Integrate in the reference guide.  Execute some of the \
input statements by clicking within the cell and pressing Shift Enter \
simultaneously.  The Enter key from the numeric keypad should also work.\
\>", "Exercise"],

Cell[TextData[{
  "Locate and peruse the ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " ",
  StyleBox["Tour",
    FontSlant->"Italic"],
  " in the Help Browser.  "
}], "Exercise"],

Cell[TextData[{
  StyleBox["Warning:",
    FontColor->RGBColor[1, 0, 0]],
  " some Windows 95 installations of ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " occasionally crash when the Help Browser attempts to locate information.  \
As with any interactive computer program, it is good practice to save your \
work frequently.  In particular, save your work before your first use of \
Help.  Fortunately, the problem rarely recurs for the same search twice or \
upon restarting the program.  I have not encountered the problem as \
frequently with versions later than 3.0. "
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Notebook links", "Subsection"],

Cell[TextData[{
  "Many hyperlinks to other notebooks comprising the course materials are \
provided also.  These look like links to the reference guide except that the \
extension ",
  StyleBox[".nb",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  " is included with the notebook name in the hyperlink button.  For example, \
the outline of this course and links to its notebooks may be found in the \
notebook ",
  ButtonBox["contents.nb",
    ButtonData:>{"contents.nb", None},
    ButtonStyle->"Hyperlink"],
  ", which is opened by clicking on this hyperlink.  From there you can open \
any other notebook by clicking the desired hyperlink.  The back button on the \
tool bar can be used to return to the previous notebook, provided that the \
help browser is not used in between \[LongDash] the help browser maintains \
its own link history which interferes with notebook links.  Alternatively, \
any open notebook can be activated using the Window menu on the primary menu \
bar."
}], "Text"],

Cell["\<\
Use the link above to contents.nb to open and peruse some of the application \
notebooks.\
\>", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Information escape", "Subsection"],

Cell[TextData[{
  "Quick help on a built-in function or on a symbol that you have created can \
be obtained by typing ",
  StyleBox["?symbol", "InlineInput",
    FontWeight->"Bold"],
  " or, for more information, ",
  StyleBox["??symbol", "InlineInput",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?Fibonacci\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"Fibonacci[n] gives the nth Fibonacci number. Fibonacci[n, x] \
gives the nth Fibonacci polynomial, using x as the variable.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"Fibonacci",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3348237130-5755146"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(?? Fibonacci\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"Fibonacci[n] gives the nth Fibonacci number. Fibonacci[n, x] \
gives the nth Fibonacci polynomial, using x as the variable.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"Fibonacci",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3348237133-6124066"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {\(Attributes[Fibonacci] = {Listable, NumericFunction, Protected, 
                ReadProtected}\)}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      Definition[ "Fibonacci"],
      Editable->False]], "Print",
  CellTags->"Info3348237133-6124066"]
}, Closed]],

Cell["\<\
Assuming that you already know the definition for Fibonacci numbers or \
polynomials, this method provides the information needed to use the built-in \
function.  However, if you do not know that definition, more complete \
information can be obtained using the Help Browser.  A suitable hyperlink is \
often included with the output.\
\>", "Text"],

Cell["\<\
Information about the available functions can be obtained by using wildcards. \
 Thus, we find the following symbols with names beginning with Plot.  Notice \
that clicking on any of these links provides a brief explanation of the \
function and a link to more detailed information.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?Plot*\)\)], "Input"],

Cell[BoxData[GridBox[{
        {
          StyleBox["System`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["Plot",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237136-4559545", "System`Plot"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["Plot3Matrix",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237136-4559545", 
                    "System`Plot3Matrix"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotJoined",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237136-4559545", "System`PlotJoined"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotPoints",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237136-4559545", "System`PlotPoints"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotRegion",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237136-4559545", "System`PlotRegion"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], "", "", ""},
              {
                ButtonBox[
                  StyleBox["Plot3D",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237136-4559545", "System`Plot3D"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotDivision",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237136-4559545", 
                    "System`PlotDivision"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotLabel",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237136-4559545", "System`PlotLabel"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotRange",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237136-4559545", "System`PlotRange"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotStyle",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237136-4559545", "System`PlotStyle"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], "", "", ""}
              },
            RowMinHeight->{1, 1.05}]}
        },
      RowSpacings->{2, 3},
      ColumnsEqual->True]], "Print",
  CellMargins->{{20, Inherited}, {Inherited, Inherited}},
  ShowCellLabel->False,
  CellFrameMargins->{{Inherited, Inherited}, {14, 14}},
  Background->RGBColor[0.964706, 0.929412, 0.839216],
  ButtonBoxOptions->{Active->True},
  GridBoxOptions->{ColumnAlignments->{Left}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?*Plot*\)\)], "Input"],

Cell[BoxData[GridBox[{
        {
          StyleBox["System`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["ArrayPlot",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", "System`ArrayPlot"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["ListDensityPlot",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237142-7535364", 
                    "System`ListDensityPlot"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["ParametricPlot",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237142-7535364", 
                    "System`ParametricPlot"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["Plot3Matrix",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237142-7535364", 
                    "System`Plot3Matrix"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotPoints",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", "System`PlotPoints"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], ""},
              {
                ButtonBox[
                  StyleBox["ContourPlot",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237142-7535364", 
                    "System`ContourPlot"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["ListPlot",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", "System`ListPlot"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["ParametricPlot3D",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237142-7535364", 
                    "System`ParametricPlot3D"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotDivision",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", 
                    "System`PlotDivision"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotRange",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", "System`PlotRange"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], ""},
              {
                ButtonBox[
                  StyleBox["DensityPlot",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237142-7535364", 
                    "System`DensityPlot"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["ListPlot3D",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", "System`ListPlot3D"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["Plot",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", "System`Plot"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotJoined",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", "System`PlotJoined"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotRegion",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", "System`PlotRegion"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], ""},
              {
                ButtonBox[
                  StyleBox["ListContourPlot",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237142-7535364", 
                    "System`ListContourPlot"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["MaxPlotPoints",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237142-7535364", 
                    "System`MaxPlotPoints"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["Plot3D",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", "System`Plot3D"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotLabel",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", "System`PlotLabel"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["PlotStyle",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237142-7535364", "System`PlotStyle"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], ""}
              },
            RowMinHeight->{1, 1, 1, 1.05}]}
        },
      RowSpacings->{2, 3},
      ColumnsEqual->True]], "Print",
  CellMargins->{{20, Inherited}, {Inherited, Inherited}},
  ShowCellLabel->False,
  CellFrameMargins->{{Inherited, Inherited}, {14, 14}},
  Background->RGBColor[0.964706, 0.929412, 0.839216],
  ButtonBoxOptions->{Active->True},
  GridBoxOptions->{ColumnAlignments->{Left}}]
}, Closed]],

Cell["\<\
Obtain a list of functions that modify the Form of an expression.  Read the \
brief descriptions for a few of these.  Some will have obvious function but \
others may appear somewhat obscure.   \
\>", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Web resources", "Subsection"],

Cell[TextData[{
  "You can also obtain useful information from the ",
  StyleBox[ButtonBox["Mathematica",
    ButtonData:>{
      URL[ "http://www.wolfram.com"], None},
    ButtonStyle->"Hyperlink"],
    FontSlant->"Italic"],
  " web site.  Another valuable resource is the ",
  StyleBox[ButtonBox["Mathematica Information Center",
    ButtonData:>{
      URL[ "http://library.wolfram.com/infocenter"], None},
    ButtonStyle->"Hyperlink"],
    FontSlant->"Italic"],
  " , which provides an extensive collection of applications catalogued by \
topic.  Clicking on a hyperlink to a web resource should activate a web \
browser if one is available on your system.  Notice that if you point at a \
hyperlink without clicking, the URL is displayed in the lower left corner of \
the window containing the notebook."
}], "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Input conventions", "Section"],

Cell[TextData[{
  "Any written or programming language has a set of conventions governing the \
preparation of acceptable text and ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is no exception.  "
}], "Text"],

Cell[CellGroupData[{

Cell["Symbols", "Subsection"],

Cell[CellGroupData[{

Cell["Built-in symbols", "Subsubsection"],

Cell[TextData[{
  "First note that ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is case-sensitive, meaning that a symbol named ",
  Cell[BoxData[
      \(TraditionalForm\`y\)]],
  " is distinct from a symbol named ",
  Cell[BoxData[
      \(TraditionalForm\`Y\)]],
  ".  All built-in symbols are assigned names that begin with capital \
letters.  ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " generally names its symbols quite descriptively with names closely \
related to the function of each symbol.  For example, the function designed \
to simplify algebraic expressions is called ",
  StyleBox["Simplify", "InlineInput",
    FontWeight->"Bold"],
  ".  Sometimes the names become very long, but most users find it easier to \
type a verbose name than to remember abbreviations which can be chosen almost \
arbitrarily.  To avoid confusing your variables with names reserved by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " it is good practice to choose names that begin with lowercase letters, \
but if you also choose long and descriptive variable names that is usually no \
longer necessary."
}], "Text"],

Cell[TextData[{
  "Information about a symbol can be obtained by typing ",
  StyleBox["?", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["name", "InlineInput",
    FontWeight->"Bold"],
  " where ",
  StyleBox["name", "InlineInput",
    FontWeight->"Bold"],
  " is replaced by the desired symbol and may include the wildcard character \
",
  StyleBox["*", "InlineInput"],
  " if you are uncertain of the complete name."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?Bessel*\)\)], "Input"],

Cell[BoxData[GridBox[{
        {
          StyleBox["System`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["BesselI",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237150-9922995", "System`BesselI"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["BesselJ",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237150-9922995", "System`BesselJ"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["BesselK",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237150-9922995", "System`BesselK"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["BesselY",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237150-9922995", "System`BesselY"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], "", "", "", "", "", "", "", "", ""}
              },
            RowMinHeight->1.05]}
        },
      RowSpacings->{2, 3},
      ColumnsEqual->True]], "Print",
  CellMargins->{{20, Inherited}, {Inherited, Inherited}},
  ShowCellLabel->False,
  CellFrameMargins->{{Inherited, Inherited}, {14, 14}},
  Background->RGBColor[0.964706, 0.929412, 0.839216],
  ButtonBoxOptions->{Active->True},
  GridBoxOptions->{ColumnAlignments->{Left}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?BesselJ\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"BesselJ[n, z] gives the Bessel function of the first kind \
J(n, z).\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"BesselJ",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3348237156-5926592"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rules for naming symbols", "Subsubsection"],

Cell["\<\
names must begin with a letter, but may include numbers anywhere after the \
first character\
\>", "Text",
  CellDingbat->"\[EmptySquare]",
  CellMargins->{{30, Inherited}, {Inherited, Inherited}}],

Cell["names cannot use _, +, -, /, :, ?, * or other operators", "Text",
  CellDingbat->"\[EmptySquare]",
  CellMargins->{{30, Inherited}, {Inherited, Inherited}}],

Cell["names cannot include embedded spaces", "Text",
  CellDingbat->"\[EmptySquare]",
  CellMargins->{{30, Inherited}, {Inherited, Inherited}}],

Cell[TextData[{
  "names cannot duplicate a reserved name.  For example, a common conflict \
occurs with ",
  Cell[BoxData[
      \(TraditionalForm\`N\)]],
  ", which is reserved for numerical evaluation; hence, the following \
assignment fails."
}], "Text",
  CellDingbat->"\[EmptySquare]",
  CellMargins->{{30, Inherited}, {Inherited, Inherited}}],

Cell[CellGroupData[{

Cell[BoxData[
    \(N = 2\)], "Input"],

Cell[BoxData[
    RowBox[{\(Set::"wrsym"\), \(\(:\)\(\ \)\), "\<\"Symbol \\!\\(N\\) is \
Protected. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::wrsym\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    \(2\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?N\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"N[expr] gives the numerical value of expr. N[expr, n] \
attempts to give a result with n-digit precision.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"N",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3282050797-2893695"]
}, Closed]],

Cell[TextData[{
  "names beginning with ",
  StyleBox["$", "InlineInput"],
  " indicate a default or system parameter.  For example, ",
  StyleBox["$MachinePrecision", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontWeight->"Bold"],
  "indicates the default number of decimal digits used to represent \
floating-point numbers."
}], "Text",
  CellDingbat->"\[EmptySquare]",
  CellMargins->{{30, Inherited}, {Inherited, Inherited}}],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?$MachinePrecision\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"$MachinePrecision gives the number of decimal digits of \
precision used for machine-precision numbers.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"$MachinePrecision",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3282050804-6113871"]
}, Closed]],

Cell["\<\
names may include special characters, such as Greek letters, but do not \
differentiate between fonts.\
\>", "Text",
  CellDingbat->"\[EmptySquare]",
  CellMargins->{{30, Inherited}, {Inherited, Inherited}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Reserved names", "Subsubsection"],

Cell["\<\
A brief list of the reserved names most likely to generate conflicts (at \
least for physics applications) is given here.  Other reserved names are \
longer function names which are rarely confused with user-generated \
symbols.\
\>", "Text"],

Cell[TextData[{
  "\t",
  StyleBox["N", "InlineInput",
    FontWeight->"Bold"],
  "\tnumerical evaluation, confused with number\n\t",
  StyleBox["I", "InlineInput",
    FontWeight->"Bold"],
  "\timaginary unit ",
  Cell[BoxData[
      \(TraditionalForm\`\@\(-1\)\)], "InlineFormula"],
  "\n\t",
  StyleBox["E", "InlineInput",
    FontWeight->"Bold"],
  "\texponential constant ",
  Cell[BoxData[
      \(TraditionalForm\`e\)], "InlineFormula"],
  " (base of natural logarithms), confused with energy\n\t",
  StyleBox["C", "InlineInput",
    FontWeight->"Bold"],
  "\tconstant of integration \n\t",
  StyleBox["D", "InlineInput",
    FontWeight->"Bold"],
  "\tpartial derivative"
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Special characters", "Subsubsection"],

Cell[TextData[{
  "A nice feature of the notebook interface is its ability to display most \
special characters you might desire.  For example, the built-in symbol ",
  StyleBox["Pi", "InlineInput",
    FontWeight->"Bold"],
  " can be entered using the standard alphabet"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Pi\)], "Input"],

Cell[BoxData[
    \(\[Pi]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "it is returned as a Greek character upon output.  If you prefer to enter \
\[Pi] in expressions, the ",
  StyleBox["escape sequence",
    FontSlant->"Italic"],
  " \[EscapeKey]pi\[EscapeKey] will yield the desired result \[LongDash] just \
press the escape key, the letters pi, and then another escape key."
}], "Text"],

Cell[TextData[
"Use escape keys to produce the following symbols: \[Pi], \[CapitalPi], \
\[CurlyPhi], \[Theta],\[Integral]."], "Exercise"],

Cell[TextData[{
  "Beware of characters which have the similar or identical appearances on \
screen but different internal representations.  For example, below we test \
whether the Greek letter ",
  Cell[BoxData[
      \(TraditionalForm\`\[Mu]\)]],
  ", entered as \[EscapeKey]mu\[EscapeKey], matches the symbol used to \
represent the prefix micro, entered as \[EscapeKey]mi\[EscapeKey].  "
}], "Text",
  CellDingbat->None],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatchQ[\[Mu], \[Micro]]\)], "Input"],

Cell[BoxData[
    \(False\)], "Output"]
}, Closed]],

Cell[TextData[StyleBox[
"Type the above input for yourself to get practice with special characters.",
  FontSlant->"Italic"]], "Text"],

Cell["Obtain information about MatchQ.", "Exercise"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Naming things", "Subsection"],

Cell[TextData[{
  "It is easy to assign a value to a symbol or to assign a name to a \
complicated expression or result that we may need to use again \[LongDash] \
simply use the assignment operator in the form ",
  StyleBox["name=expression", "InlineInput"],
  StyleBox[".",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  "  "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(d\  = \ 3\)], "Input"],

Cell[BoxData[
    \(3\)], "Output"]
}, Closed]],

Cell["Thus, the statement", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(d\)], "Input"],

Cell[BoxData[
    \(3\)], "Output"]
}, Closed]],

Cell[TextData[{
  "simply returns the value assigned to ",
  StyleBox["d", "InlineInput"],
  ".  Similarly, the assignment"
}], "Text"],

Cell[BoxData[
    \(\(quadratic\  = \ a\ x\^2 + b\ x\  + \ c;\)\)], "Input"],

Cell["creates a symbol that represents a quadratic expression.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(quadratic\)], "Input"],

Cell[BoxData[
    \(c + b\ x + a\ x\^2\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " function associated with this type of assignment is ",
  StyleBox["Set", "InlineInput",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[BoxData[
    \(\(Set[Joe, "\<an obnoxious fool\>"];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Joe\)], "Input"],

Cell[BoxData[
    \("an obnoxious fool"\)], "Output"]
}, Closed]],

Cell["\<\
Multiple assignments of several symbols to the same value can be performed by \
stringing together assignments.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(a = \(b = \(c = \(d = \[Pi]\^\[ImaginaryI]\)\)\)\)], "Input"],

Cell[BoxData[
    \(\[Pi]\^\[ImaginaryI]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(N[b]\)], "Input"],

Cell[BoxData[
    \(\(\(0.41329211610159433`\)\(\[InvisibleSpace]\)\) + 
      0.9105984992126147`\ \[ImaginaryI]\)], "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Name conflicts", "Subsection"],

Cell["\<\
Once a value is set it remains until reset or cleared.  A common error is to \
forget that a value has been assigned to a symbol and later to reuse that \
symbol in another expression where it should be a variable.  Therefore, it is \
good practice to clear symbols before using them or after you are finished \
with them.\
\>", "Text"],

Cell[BoxData[
    \(Clear[a, b, c, d]\)], "Input"],

Cell[TextData[{
  StyleBox["Caution: ",
    FontColor->RGBColor[1, 0, 0]],
  "symbols are associated with an entire session, not with a particular \
notebook.  When several notebooks are open, symbols defined in one are \
defined in all.  Conflicts can arise if you are not careful.  It is good \
practice to place the following statement near the beginning of each \
notebook.  If you then evaluate an entire notebook, you should get a fresh \
start free of conflicts arising from prior work on other notebooks."
}], "Text"],

Cell[BoxData[
    \(ClearAll["\<Global`*\>"]\)], "Input"],

Cell[TextData[{
  "which clears the definitions, values, and attributes of all symbols \
created by the user (technically, from the ",
  StyleBox["Global", "InlineInput",
    FontWeight->"Bold"],
  " context).  ",
  StyleBox["Remove", "InlineInput",
    FontWeight->"Bold"],
  " removes the names also, but usually is not necessary."
}], "Text"],

Cell["It is good practice to clear symbols before using them!", "Advice"],

Cell["I also like to include the statement", "Text"],

Cell[BoxData[
    \(Off[General::spell, \ General::spell1]\)], "Input"],

Cell[TextData[{
  "to suppress some annoying warning messages that occur when two symbols are \
created with names sufficiently similar that ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " worries about possible typographical errors.  On the other hand, you \
might appreciate such warnings if your typing or proofreading skills are not \
so strong; in that case, just omit this command."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Arithmetic notation", "Subsection"],

Cell[BoxData[
    StyleBox[GridBox[{
          {
            StyleBox[\(Basic\ Arithmetic\ Operators\),
              FontFamily->"Times New Roman",
              FontWeight->"Bold"]},
          {
            StyleBox[GridBox[{
                  {
                    StyleBox["operation",
                      "Text"], 
                    StyleBox["operator",
                      "Text"], 
                    StyleBox["example",
                      "Text"], 
                    StyleBox["function",
                      "Text"]},
                  {
                    StyleBox["negation",
                      "Text"], "-", \(-a\), \(Times[\(-1\), a]\)},
                  {
                    StyleBox["addition",
                      "Text"], "+", \(a + b\), \(Plus[a, b]\)},
                  {
                    StyleBox["subtraction",
                      "Text"], "-", \(a - b\), \(Plus[a, \(-b\)]\)},
                  {
                    StyleBox["multiplication",
                      "Text"], 
                    StyleBox[\(\(*\)\(\ \)\(or\)\(\ \)\(space\)\),
                      "Text"], 
                    RowBox[{"a", "*", "b", " ", 
                      StyleBox["or",
                        "Text"], " ", "a", " ", "b"}], \(Times[a, b]\)},
                  {
                    StyleBox["division",
                      
                      "Text"], \(\(\(/\)\(\ \)\(or\)\)\ \
\(\(\[ControlKey]\)\(/\)\)\), 
                    RowBox[{\(a/b\), " ", 
                      StyleBox["or",
                        "Text"], " ", \(a\/b\)}], \(Times[a, 
                      Power[b, \(-1\)]]\)},
                  {
                    StyleBox["power",
                      
                      "Text"], \(\(\(^\)\(\ \)\(or\)\)\ \
\(\(\[ControlKey]\)\(^\)\)\), 
                    RowBox[{\(a^b\), " ", 
                      StyleBox["or",
                        "Text"], " ", \(a\^b\)}], \(Power[a, b]\)},
                  {
                    StyleBox["root",
                      "Text"], " ", 
                    RowBox[{\(a^\((1/b)\)\), " ", 
                      StyleBox["or",
                        "Text"], " ", \(\@a\%b\)}], \(Power[a, 
                      Power[b, \(-1\)]]\)},
                  {
                    StyleBox["factorial",
                      "Text"], "!", \(a!\), \(Factorial[a]\)},
                  {
                    StyleBox["contraction",
                      "Text"], ".", \(a . b\), \(Dot[a, b]\)}
                  },
                ColumnAlignments->{Left, Center, Center, Left},
                GridFrame->True,
                RowLines->{True, False}],
              "Input",
              Background->None]}
          }],
      Background->RGBColor[0.500008, 0.996109, 0.996109]]], "Text",
  TextAlignment->Center,
  TextJustification->0],

Cell[TextData[{
  "The four basic arithmetic operations of addition, subtraction, \
multiplication, and division are indicated by the usual operators ",
  Cell[BoxData[
      \(TraditionalForm\`+\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`-\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`*\)]],
  ", and ",
  Cell[BoxData[
      \(TraditionalForm\`/\)]],
  ".   In addition, the power operator is ^  and the factorial operator is !. \
 These operators are summarized in the accompanying table.  The last column \
gives the function form for these operations.  Note that independent \
functions for negation, subtraction, division, and roots are not used for \
internal representation of these functions because they are actually just \
special cases of addition, multiplication, and powers. "
}], "Text"],

Cell[TextData[{
  " ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " often provides several equivalent methods for entering the same \
expression.  For example, multiplication can be entered either using the * \
operator or using a space between two variable names.  Thus, even though we \
use * to enter the following input, the output is given with a space because \
that is the form preferred by most aficionados."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(a*b\)], "Input"],

Cell[BoxData[
    \(a\ b\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Similarly, the quotient may be entered as ",
  Cell[BoxData[
      \(TraditionalForm\`a/b\)]],
  ","
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(a/b\)], "Input"],

Cell[BoxData[
    \(a\/b\)], "Output"]
}, Closed]],

Cell[TextData[{
  "but is printed in standard form as ",
  Cell[BoxData[
      \(TraditionalForm\`a\/b\)]],
  ".  The form ",
  Cell[BoxData[
      \(TraditionalForm\`a/b\)]],
  " is described as one-dimensional input because all characters occupy the \
same line, while the form ",
  Cell[BoxData[
      \(TraditionalForm\`a\/b\)]],
  " is described as two-dimensional.  To enter a two-dimensional fraction \
directly, use the sequence ",
  StyleBox["a",
    FontSlant->"Italic"],
  " \[ControlKey]/ ",
  StyleBox["b ",
    FontSlant->"Italic"],
  "instead of simply ",
  StyleBox["a",
    FontSlant->"Italic"],
  "/",
  StyleBox["b",
    FontSlant->"Italic"],
  ", where the \[ControlKey] key is held while / is pressed.  (The spaces are \
included here for typographical purposes only.)  Similarly, powers are \
obtained either as ^ or \[ControlKey]^.  To enter more complicated \
expressions in two-dimensional form, either use the ",
  StyleBox["BasicInput",
    FontWeight->"Bold"],
  " palette or highlight a complete subexpression before pressing the control \
sequence for the desired operator."
}], "Text"],

Cell[BoxData[
    \(TextForm\`Compute\ \(\(87.3\^\(-0.3\)\)\(.\)\)\)], "Exercise"],

Cell[TextData[{
  "Enter each of the following expressions using \[ControlKey] sequences: ",
  Cell[BoxData[
      \(TraditionalForm\`a\/b\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`a\^b\)]],
  ",  ",
  Cell[BoxData[
      \(TraditionalForm\`a\ b\^c\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`\(a\^b\ c\)\/\(d - e\)\)]],
  ".  (Clear variables first!)"
}], "Exercise"],

Cell[TextData[{
  "Evaluate ",
  Cell[BoxData[
      \(TraditionalForm\`\((\(-2.5\))\)\^\(1/4\)\)]],
  ".  Check your result.  Is it unique?"
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Arithmetic precedence", "Subsection"],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " evaluates numerical expressions according to standard rules of \
precedence, whereby operators of higher precedence are evaluated before those \
of lower precedence using the nearest complete subexpressions."
}], "Text"],

Cell["order of precedence:           ^    /    *    +    -", "Definition"],

Cell[TextData[
"However, even though the rules of precedence specify the meaning of any \
arithmetic expression uniquely, one is prone to error when relying on these \
rules too heavily.  Use parentheses to group terms whenever there might be \
any appearance of ambiguity \[LongDash] your input will be easier to \
interpret and your results more reliable!"], "Text"],

Cell["\<\
Evaluate 6/3*5 and explain the result using rules of precedence.\
\>", "Exercise"],

Cell[TextData[{
  "Predict the results, by hand, for each of the following expressions: { \
3^2, 3^2 3, 3/2^2, (3/2)^2, -3^2 }.  Then evaluate these expressions using ",
  StyleBox["Mathematica,",
    FontSlant->"Italic"],
  " being sure to type carefully and to respect spaces.  Explain the results \
using rules of precedence."
}], "Exercise"],

Cell["\<\
Evaluate { 2^3^4, (2^3)^4, 2^(3^4) } and explain the results using rules of \
precedence.\
\>", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Delimiters", "Subsection"],

Cell["\<\
Delimiters are punctuation marks used to group terms in an expression or to \
separate distinct subexpressions.  These delimiters are summarized in the \
accompanying table, along with simple examples. \
\>", "Text"],

Cell[BoxData[
    StyleBox[GridBox[{
          {
            StyleBox["Delimiters",
              FontFamily->"Times New Roman",
              FontWeight->"Bold"]},
          {
            StyleBox[GridBox[{
                  {
                    StyleBox["delimiter",
                      "Text"], " ", 
                    StyleBox["purpose",
                      "Text"], 
                    StyleBox["example",
                      "Text"]},
                  {
                    StyleBox["parentheses",
                      "Text"], \((\ )\), 
                    StyleBox["grouping",
                      "Text"], \(\((a + b)\)*c\)},
                  {
                    StyleBox["brackets",
                      "Text"], \([\ ]\), 
                    StyleBox["functions",
                      "Text"], \(Sqrt[a]\)},
                  {
                    StyleBox["braces",
                      "Text"], \({\ }\), 
                    StyleBox["lists",
                      "Text"], \({a, b, c}\)},
                  {
                    StyleBox[\(double\ brackets\),
                      "Text"], \(\([\([\ ]\)]\)\(\ \)\), 
                    StyleBox[\(part\ of\ expression\),
                      "Text"], 
                    RowBox[{
                      StyleBox["list",
                        FontSlant->"Italic"], "[", \([2]\), "]"}]},
                  {
                    StyleBox["comma",
                      "Text"], ",", 
                    StyleBox[\(separate\ elements\),
                      "Text"], \({a, b, c}\)},
                  {
                    StyleBox["semicolon",
                      "Text"], ";", 
                    StyleBox[\(separate\ expressions\),
                      "Text"], \(a*b; \ b - c\)},
                  {
                    StyleBox["quotes",
                      "Text"], "\"\< \>\"", 
                    StyleBox[\(text\ strings\),
                      "Text"], 
                    StyleBox["\"\<Have a nice day!\>\"",
                      "Text"]},
                  {
                    StyleBox["comment",
                      "Text"], \( (*\ *) \), 
                    StyleBox["documentation",
                      "Text"], 
                    StyleBox[\( (*\ this\ does\  ... \ *) \),
                      "Text"]}
                  },
                ColumnAlignments->{Left, Center, Left},
                GridFrame->True,
                RowLines->{True, False}],
              "Input",
              Background->None]}
          }],
      Background->RGBColor[0.500008, 0.996109, 0.996109]]], "Text",
  TextAlignment->Center,
  TextJustification->0],

Cell[CellGroupData[{

Cell["Parentheses are used to group terms", "Subsubsection"],

Cell["\<\
Standard rules of precedence require multiplication and division to be \
evaluated before addition and subtraction. Compare the following arithmetic \
expressions.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(2 + 2\ *3\  - \ 4/5\  + 1\)], "Input"],

Cell[BoxData[
    \(41\/5\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\((2 + 2\ *3\  - \ 4)\)/5 + 1\)], "Input"],

Cell[BoxData[
    \(9\/5\)], "Output"]
}, Closed]],

Cell["\<\
In the first version the multiplication and division operations were \
evaluated first, followed by the addition and subtraction operations.  In the \
second version parentheses were used to group some of the terms so that the \
grouped expression was evaluated before the division was performed.  The \
standard rules of precedence apply within the parentheses.  Also note that \
groupings may be nested to any order, with the evaluation proceeding from the \
innermost to the outermost grouping.\
\>", "Text"],

Cell[TextData[{
  "Although standard algebra permits square brackets or braces to be used for \
grouping, these delimiters are reserved by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " for other purposes.  Thus, the following expression is invalid"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[a, b, c, d];\)\), "\[IndentingNewLine]", 
    \(a\ /\ \([b - c]\)\  + \ d\)}], "Input"],

Cell[BoxData[
    RowBox[{\(Syntax::"sntxf"\), \(\(:\)\(\ \)\), "\<\"\\\"\\!\\(a/\\)\\\" \
cannot be followed by \\\"\\!\\(\\([\\(\\(b - c\\)\\)]\\)\\)\\\".\\!\\(\\\"\\\
\"\\) \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::sntxf\\\"]\\)\"\>"}]], "Message"],

Cell[BoxData[
    StyleBox[
      RowBox[{
        RowBox[{"a", "/", 
          ErrorBox[\(\([\)\(b - c\)\(]\)\)]}], "+", "d"}],
      ShowStringCharacters->True]], "Message"]
}, Closed]],

Cell["and should have been entered as", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(a\ /\ \((b - c)\)\  + \ d\)], "Input"],

Cell[BoxData[
    \(a\/\(b - c\) + d\)], "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Square brackets are used to indicate functional dependencies", \
"Subsubsection"],

Cell[TextData[{
  "Square brackets are used to contain the arguments of a function.  Although \
traditional notation uses parentheses, having the same delimiter serve two \
such different purposes would be prone to ambiguity, especially for a \
machine!  Those of you who have tried to teach algebra have probably observed \
the confusion that can arise from an expression like ",
  Cell[BoxData[
      \(TraditionalForm\`g(z + 2)\)]],
  " \[LongDash] is this equivalent to ",
  Cell[BoxData[
      \(TraditionalForm\`\((z + 2)\) g\)]],
  " or is it a function ",
  Cell[BoxData[
      \(TraditionalForm\`g(x)\)]],
  " evaluated for ",
  Cell[BoxData[
      \(TraditionalForm\`x \[Rule] z + 2\)]],
  "?  Without additional information, the intended interpretation is unclear. \
 It would difficult to teach a machine subtle rules of context when \
intelligent humans often cannot resolve such ambiguities without additional \
information."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sqrt[1.5]\)], "Input"],

Cell[BoxData[
    \(1.224744871391589`\)], "Output"]
}, Closed]],

Cell["\<\
Compare Sqrt[1.5] with Sqrt(1.5).  Explain the result with parentheses.\
\>", "Exercise"],

Cell[TextData[{
  "Note that in many of the exercises we will present mathematical \
expressions in traditional notation, but you will need to re-express those \
expressions in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " notation \[LongDash] we do this to promote familiarity with the \
ambiguity-free notation employed by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ".  We also discourage you from using cut-and-paste operations to form \
input from exercise text \[LongDash] it will be good practice to type it \
yourself. "
}], "Text"],

Cell[TextData[{
  "Evaluate ",
  Cell[BoxData[
      \(TraditionalForm\`sin(\[Pi]/4)\)]],
  " both as written here and in the correct form for ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " input."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Comments", "Subsubsection"],

Cell[TextData[{
  "Comments or explanation can be included within input cells by using \
comment delimiters ",
  StyleBox["(*", "InlineInput"],
  " and ",
  StyleBox["*)", "InlineInput"],
  " to bracket your documentation.  The bracketed text may span several \
lines.  You can even place comments within executable expressions."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ 
      The\ following\ expressions\ use\ variables\ \n\t\tto\ illustrate\ the\ \
rules\ of\ arithmetic\ \(\(precedence\)\(.\)\)\ *) \)\(\n\)\(\n\)\(\(Clear[a, 
        b, c];\)\(\n\)
    \({\n\t (*\ division\ *) \n\t\n\t\(a/b\)/c, \ \((a/b)\)/c, 
      a/\((b/c)\), \n\t\n\t (*\ powers\ *) \n\t\n\ta^\(b^c\), \ 
      a^\((b^c)\), \ \((a^b)\)^c, 
      a^\(-b\), \(-a^b\), \((\(-a\))\)\^b\n}\)\(\ \)\(\n\)\(\n\)
    \( (*\ 
      Compare\ with\ previous\ numerical\ \(\(exercises\)\(.\)\)\ *) \
\)\)\)\)], "Input"],

Cell[BoxData[
    \({a\/\(b\ c\), a\/\(b\ c\), \(a\ c\)\/b, a\^\(b\^c\), 
      a\^\(b\^c\), \((a\^b)\)\^c, 
      a\^\(-b\), \(-a\^b\), \((\(-a\))\)\^b}\)], "Output"]
}, Closed]],

Cell["\<\
For simple input it is usually better to place explanation in a separate text \
cell, but when an input cell contains a long, complicated program it is \
better to document each vital step using comment delimiters within the input \
cell itself; we will encounter these situations soon.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Several statements in the same input cell", "Subsubsection"],

Cell["\<\
An input cell may contain a single instruction or several instructions \
separated by semicolons \[LongDash] the semicolon is the delimiter used to \
separate complete expressions.  The input cell below contains three \
instructions in a single cell.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(a = \ 2;\)\), "\n", 
    \(\(b = \ 3;\)\), "\n", 
    \(a*b\)}], "Input"],

Cell[BoxData[
    \(6\)], "Output"]
}, Closed]],

Cell["\<\
Notice that the two expressions terminated by semicolons did not produce \
printed output, but were executed.  The final instruction did produce output \
because it did not end with a semicolon; if it had, that would be equivalent \
to separating that expression from an additional expression which happens to \
be blank and hence gives no output.  The following cell calculates an \
expression, but does not print output.\
\>", "Text"],

Cell[BoxData[
    \(\(c = a*b*12;\)\)], "Input"],

Cell[TextData[{
  "We can inspect that result later simply by entering the symbol ",
  StyleBox["c", "InlineInput",
    FontWeight->"Bold"],
  " in an input cell that is not terminated by a semicolon."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(c\)], "Input"],

Cell[BoxData[
    \(72\)], "Output"]
}, Closed]],

Cell["\<\
Also note that it is not necessary for these instructions to occupy different \
lines or to be completed on a given line.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(a\  = \ 2; \ b\  = 3; \ a\ b\)], "Input"],

Cell[BoxData[
    \(6\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(c\  = \n\t2; \ d\  = \ \[IndentingNewLine]\(-8\);\), "\n", 
    \(c\ d\)}], "Input"],

Cell[BoxData[
    \(\(-16\)\)], "Output"]
}, Closed]],

Cell[TextData[{
  "However, do not omit the semicolons (or use commas) because the results \
will then depend upon parsing and evaluation order and may be unpredictable.  \
Also, be careful about using explicit carriage returns before a statement is \
complete because ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " generally evaluates an expression as soon as a complete expression is \
found while scanning the input cell from the beginning to the end.  Thus, \
explicit carriage returns or multiple expressions without proper termination \
might produce complete expressions prematurely that generate unintended \
results.  For example, the following input cell is ambiguous."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(b = 2\), "\n", 
    \(a = \n\t3\), "\n", 
    \(\t\tb\)}], "Input"],

Cell[BoxData[
    \(2\)], "Output"],

Cell[BoxData[
    \(3\)], "Output"],

Cell[BoxData[
    \(2\)], "Output"]
}, Closed]],

Cell["\<\
According to the input conventions, the following cell should be equivalent \
but gives different results.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(b = 2;\)\), "\n", 
    \(a = 3  b\)}], "Input"],

Cell[BoxData[
    \(6\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Trust ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "'s automatic line-wrapping and use the proper delimiters. "
}], "Text"],

Cell[BoxData[
    \(Clear[a, b, c, d]\)], "Input"],

Cell["\<\
Some students develop the habit of including several statements in the same \
input cell, without using semicolons, so that several outputs are produced.  \
However, I would like to discourage that habit because it can be error prone \
when those statements are long and line-wrapping becomes an issue.  There is \
nothing wrong with entering several statements in the same input cell \
provided that those statements are separated by semicolons and only the last \
one, without a semicolon, is expected to produce output that we want to see.  \
I do that frequently.  However, if you want to see the output for more than \
one statement, it is better to use separate input cells for each.\
\>", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exact versus approximate numbers", "Subsection"],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " distinguishes between exact numbers, such as integers and rational \
numbers, on the one hand, and approximate real numbers on the other.  When \
presented with exact input, ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " will always endeavor to return exact output.  Thus,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(1/2\)], "Input"],

Cell[BoxData[
    \(1\/2\)], "Output"]
}, Closed]],

Cell["\<\
is returned as an exact rational number.  Similarly, an expression like \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(E\^\[Pi]\)], "Input"],

Cell[BoxData[
    \(\[ExponentialE]\^\[Pi]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "is returned unevaluated because the symbols ",
  StyleBox["E", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["\[Pi]", "InlineInput",
    FontWeight->"Bold"],
  " both represent exact, albeit irrational, numbers rather than decimal \
approximations.  Conversely, an expression like"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(1. /2. \)], "Input"],

Cell[BoxData[
    \(0.5`\)], "Output"]
}, Closed]],

Cell[TextData[{
  "is returned as an approximate real number because the numerator and/or \
denominator were entered in the form of approximate real numbers and ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " declines to interpret these as integers.  The use of decimal points in \
the input distinguishes these cases.  However, often we would prefer decimal \
output.  The built-in function ",
  ButtonBox["N",
    ButtonStyle->"RefGuideLink"],
  " stands for numerical evaluation and converts all exact numbers to \
approximate real numbers.  ",
  StyleBox["N[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["expr", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontWeight->"Bold"],
  "chooses the number of digits for itself, while ",
  StyleBox["N[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["expr,m", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " attempts to return a result with ",
  StyleBox["m-",
    FontSlant->"Italic"],
  "digit precision."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(8!\)\^2\/13\^9\)], "Input"],

Cell[BoxData[
    \(1625702400\/10604499373\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(N[\(8!\)\^2\/13\^9]\)], "Input"],

Cell[BoxData[
    \(0.15330307851582162`\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(N[\[Pi], 10]\)], "Input"],

Cell[BoxData[
    \(3.1415926535897932385`10.000000000000004\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Note that ",
  StyleBox["N[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["expr,m", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " does not necessarily print all ",
  StyleBox["m",
    FontSlant->"Italic"],
  " digits; ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " makes some aesthetic choices in printing its output.  Use ",
  StyleBox["ScientificForm", "InlineInput",
    FontWeight->"Bold"],
  " or ",
  StyleBox["NumberForm", "InlineInput",
    FontWeight->"Bold"],
  " to control the output format."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ScientificForm[N[\[ExponentialE]\^\(2  \[Pi]\)], 10]\)], "Input"],

Cell[BoxData[
    TagBox[
      InterpretationBox[\("5.354916555"\[Times]10\^"2"\),
        535.49165552476461,
        AutoDelete->True],
      (ScientificForm[ #, 10]&)]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(NumberForm[N[\[ExponentialE]\^\(2  \[Pi]\)], 10]\)], "Input"],

Cell[BoxData[
    TagBox[
      InterpretationBox["\<\"535.4916555\"\>",
        535.49165552476461,
        AutoDelete->True],
      (NumberForm[ #, 10]&)]], "Output"]
}, Closed]],

Cell[TextData[{
  "Sometimes an approximate result includes a vanishingly small residual.  \
For example, if we evaluate ",
  Cell[BoxData[
      FormBox[
        StyleBox[\(\((\(-2. \))\)\^\(1/4\)\),
          "InlineInput"], TraditionalForm]]],
  " and check the result by exponentiation, we see an imaginary term with \
vanishingly small coefficient."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(a = \((\(-2. \))\)\^\(1/4\)\)], "Input"],

Cell[BoxData[
    \(\(\(0.8408964152537145`\)\(\[InvisibleSpace]\)\) + 
      0.8408964152537145`\ \[ImaginaryI]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(a\^4\)], "Input"],

Cell[BoxData[
    \(\(-2.000000000000001`\) + 0.`\ \[ImaginaryI]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "This insignificant imaginary term arises because one can never be certain \
with finite-precision arithmetic that the imaginary part really does vanish \
exactly.  (You know it, but the machine is not that smart!)  Numerically \
insignificant terms can be removed using the function ",
  ButtonBox["Chop",
    ButtonStyle->"RefGuideLink"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Chop[a\^4]\)], "Input"],

Cell[BoxData[
    \(\(-1.9999999999999996`\)\)], "Output"]
}, Closed]],

Cell["\<\
Compute the number of seconds in a year divided by \[Pi] as a decimal number.\
\
\>", "Exercise"],

Cell[TextData[{
  "Compare ",
  Cell[BoxData[
      \(\[ImaginaryI]\^\[ImaginaryI]\)]],
  " and ",
  Cell[BoxData[
      \(\[ExponentialE]\^\(\(-\[Pi]\)/2\)\)]],
  " numerically."
}], "Exercise"],

Cell[TextData[{
  "The number ",
  Cell[BoxData[
      \(TraditionalForm\`e\^\(\[Pi] \@ 163\)\)]],
  " is very close to an integer \[LongDash] determine how many nines follow \
the decimal point.  [Hint: you will need many digits and may find Floor \
helpful.  AccountingForm is also useful.]"
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Substitutions", "Subsection"],

Cell[TextData[{
  "Suppose that we wish to substitute values for some of the parameters into \
the expression we named ",
  StyleBox["quadratic", "InlineInput",
    FontWeight->"Bold"],
  ".  Rather than use assignment (",
  StyleBox["=", "InlineInput"],
  "), which would permanently change this expression, it is usually better to \
use a replacement rule to perform such a substitution.  Thus, the result of"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(quadratic /. {a \[Rule] 1, b \[Rule] 2, c \[Rule] 3}\)], "Input"],

Cell[BoxData[
    \(3 + 2\ x + x\^2\)], "Output"]
}, Closed]],

Cell["\<\
is a quadratic with particular values for the coefficients but  \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(quadratic\)], "Input"],

Cell[BoxData[
    \(c + b\ x + a\ x\^2\)], "Output"]
}, Closed]],

Cell[TextData[{
  "remains general.  The operator ",
  StyleBox["/.", "InlineInput"],
  " indicates replacement and the list of rules is given in curly braces.  \
The basic replacement rule is written as -> while the fancier typeset version \
is obtained using \[EscapeKey]->\[EscapeKey] to obtain \[Rule];  often ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " will substitute the typeset form automatically."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Lists", "Subsection"],

Cell[CellGroupData[{

Cell["Basic syntax", "Subsubsection"],

Cell[TextData[{
  "Braces or curly brackets are used to enclose lists and the elements of a \
list are separated by commas.  For example, ",
  ButtonBox["Range",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["n", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontWeight->"Bold"],
  "produces a list of integers between 1 and ",
  Cell[BoxData[
      \(TraditionalForm\`n\)]],
  ".  Note that we prepended a lower-case letter to distinguish our symbol \
from the ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " ",
  StyleBox["List", "InlineInput",
    FontWeight->"Bold"],
  " function."
}], "Text",
  CellDingbat->None],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\ \ \)\(aList = Range[10]\)\)\)], "Input"],

Cell[BoxData[
    \({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}\)], "Output"]
}, Closed]],

Cell["\<\
A matrix is simply a list of rows, where each row is a list with the same \
length.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(aMatrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}\)], "Input"],

Cell[BoxData[
    \({{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}\)], "Output"]
}, Closed]],

Cell["\<\
Produce a list of numbers between 0.15 and 1.25 with a spacing of 0.1.\
\>", "Exercise"],

Cell["\<\
Evaluate {a,b,c}.{x,y,z} using both the operator form and the function form \
(Dot).  Explain the result.\
\>", "Exercise"],

Cell["\<\
Evaluate {{m11,m12,m13},{m21,m22,m23},{m31,m32,m33}}.{x,y,z} and interpret \
the result.\
\>", "Exercise"],

Cell[TextData[{
  "Compute the eigenvalues of the matrix",
  Cell[BoxData[
      TagBox[
        RowBox[{"(", GridBox[{
              {"1", "2", "3"},
              {"4", "5", "6"},
              {"7", "8", "9"}
              }], ")"}],
        (MatrixForm[ #]&)]]],
  " using the built-in function Eigenvalues.  "
}], "Exercise"],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " provides a large number of built-in functions to manipulate the structure \
of lists.  For example, ",
  ButtonBox["Reverse",
    ButtonStyle->"RefGuideLink"],
  " "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Reverse[aList]\)], "Input"],

Cell[BoxData[
    \({10, 9, 8, 7, 6, 5, 4, 3, 2, 1}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "simply reverses the ordering of a list and ",
  ButtonBox["Transpose",
    ButtonStyle->"RefGuideLink"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(Transpose[aMatrix]\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \({{1, 4, 7}, {2, 5, 8}, {3, 6, 9}}\)], "Output"]
}, Closed]],

Cell["transposes a matrix.  ", "Text"],

Cell[TextData[{
  "A matrix can be displayed in the traditional grid form using the function \
",
  ButtonBox["MatrixForm",
    ButtonStyle->"RefGuideLink"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatrixForm[\ Transpose[aMatrix]\ ]\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "4", "7"},
            {"2", "5", "8"},
            {"3", "6", "9"}
            }], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Closed]],

Cell[TextData[{
  "Note that an object created using ",
  StyleBox["MatrixForm", "InlineInput",
    FontWeight->"Bold"],
  " is not actually a matrix.  ",
  StyleBox["MatrixForm", "InlineInput",
    FontWeight->"Bold"],
  " is an example of a ",
  StyleBox["formatting function",
    FontSlant->"Italic"],
  " designed to print an object in a specialized output form.  Thus,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(test = MatrixForm[aMatrix]\)], "Input"],

Cell[BoxData[
    TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
            {"1", "2", "3"},
            {"4", "5", "6"},
            {"7", "8", "9"}
            }], "\[NoBreak]", ")"}],
      Function[ BoxForm`e$, 
        MatrixForm[ BoxForm`e$]]]], "Output"]
}, Closed]],

Cell["\<\
cannot be manipulated using functions which expect matrix input.  The \
expression\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Transpose[test]\)], "Input"],

Cell[BoxData[
    RowBox[{"Transpose", "[", 
      TagBox[
        RowBox[{"(", "\[NoBreak]", GridBox[{
              {"1", "2", "3"},
              {"4", "5", "6"},
              {"7", "8", "9"}
              }], "\[NoBreak]", ")"}],
        Function[ BoxForm`e$, 
          MatrixForm[ BoxForm`e$]]], "]"}]], "Output"]
}, Closed]],

Cell["\<\
is returned unevaluated because the input is not of the correct type.  To \
verify that an object is a matrix, one can use the query\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatrixQ[test]\)], "Input"],

Cell[BoxData[
    \(False\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatrixQ[aMatrix]\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]],

Cell[TextData[{
  ButtonBox["MatrixQ",
    ButtonStyle->"RefGuideLink"],
  StyleBox[" is an example of a query function, ending in the letter Q used \
to verify that an object has the desired structure.",
    FontWeight->"Plain"]
}], "Text",
  FontWeight->"Bold"],

Cell["\<\
Obtain a (partial) list of query functions ending in Q.  Try a few.\
\>", "Exercise"],

Cell["Obtain a (partial) list of formatting functions.", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Elements of a list", "Subsubsection"],

Cell[TextData[{
  "Double square brackets are used to identify parts of an expression.  Thus, \
",
  StyleBox["aList[[n]]", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ", "InlineInput"],
  "returns the ",
  Cell[BoxData[
      \(TraditionalForm\`n\^th\)]],
  " member of a list."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(aList[\([3]\)]\)], "Input"],

Cell[BoxData[
    \(3\)], "Output"]
}, Closed]],

Cell[TextData[{
  "A particular element of a matrix is obtained by specifying its row and \
column within the ",
  StyleBox["part",
    FontSlant->"Italic"],
  " specification [[",
  StyleBox["row,column",
    FontSlant->"Italic"],
  "]]."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(aMatrix[\([2, 3]\)]\)], "Input"],

Cell[BoxData[
    \(6\)], "Output"]
}, Closed]],

Cell[TextData[{
  "A more appealing version of the double bracket is obtained using the \
escape sequences \[EscapeKey][[\[EscapeKey] or \[EscapeKey]]]\[EscapeKey].  \
",
  StyleBox["Type this yourself:",
    FontSlant->"Italic"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(aMatrix\[LeftDoubleBracket]3, 1\[RightDoubleBracket]\)], "Input"],

Cell[BoxData[
    \(7\)], "Output"]
}, Closed]],

Cell["\<\
Print the second eigenvalue of aMatrix by itself using its part \
specification.\
\>", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Iterators", "Subsubsection"],

Cell[TextData[{
  "Many functions require a list of uniformly spaced input values \[LongDash] \
such lists are created by iterators.  An ",
  StyleBox["iterator",
    FontSlant->"Italic"],
  " is a list of the form ",
  StyleBox["{variable,minimum,maximum,step}", "InlineInput"],
  ".   For example, ",
  ButtonBox["Table",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["f,iterator", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " evaluates a table of expressions for each element of the iteration list.  \
The expression may have a numerical or symbolic value."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Table[x, \ {x, 1, 11, 2}]\)], "Input"],

Cell[BoxData[
    \({1, 3, 5, 7, 9, 11}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Table[BesselJ[n, x], \ {n, 0, 4}]\)], "Input"],

Cell[BoxData[
    \({BesselJ[0, x], BesselJ[1, x], BesselJ[2, x], BesselJ[3, x], 
      BesselJ[4, x]}\)], "Output"]
}, Closed]],

Cell["\<\
Several variants of the iterator notation are recognized, as summarized in \
the table below.\
\>", "Text"],

Cell[BoxData[
    StyleBox[GridBox[{
          {
            StyleBox[\(Iterator\ notation\),
              FontFamily->"Times New Roman",
              FontWeight->"Bold"]},
          {
            StyleBox[GridBox[{
                  {\({imax}\), 
                    RowBox[{
                      StyleBox["iterate",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["imax",
                        "Text",
                        FontSlant->"Italic"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["times",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["without",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox[
                        StyleBox[
                          RowBox[{
                            StyleBox["changin",
                              "Text"], "g"}]],
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["any",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["values",
                        "Text"]}]},
                  {\({i, imax}\), 
                    RowBox[{
                      StyleBox["yields",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["i",
                        "Text",
                        FontSlant->"Italic"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["between",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["1",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["and",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["imax",
                        "Text",
                        FontSlant->"Italic"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["in",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["unit",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["steps",
                        "Text"]}]},
                  {\({i, imin, imax}\), 
                    RowBox[{
                      StyleBox["yields",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["i",
                        "Text",
                        FontSlant->"Italic"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["between",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["imin",
                        "Text",
                        FontSlant->"Italic"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["and",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["imax",
                        "Text",
                        FontSlant->"Italic"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["in",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["unit",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["steps",
                        "Text"]}]},
                  {\({i, imin, imax, istep}\), 
                    RowBox[{
                      StyleBox["yields",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["i",
                        "Text",
                        FontSlant->"Italic"], 
                      StyleBox[" ",
                        "Text",
                        FontSlant->"Italic"], 
                      StyleBox["between",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["imin",
                        "Text",
                        FontSlant->"Italic"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["and",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["imax",
                        "Text",
                        FontSlant->"Italic"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["in",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["increments",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["of",
                        "Text"], 
                      StyleBox[" ",
                        "Text"], 
                      StyleBox["istep",
                        "Text",
                        FontSlant->"Italic"]}]}
                  },
                ColumnAlignments->{Left},
                GridFrame->True],
              "Input",
              Background->None]}
          }],
      Background->RGBColor[0.500008, 0.996109, 0.996109]]], "Text",
  TextAlignment->Center,
  TextJustification->0],

Cell["\<\
Produce a list of the first 10 Legendre polynomials.  Use the formatting \
function ColumnForm to improve the appearance of your output.\
\>", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Applying functions to lists", "Subsubsection"],

Cell[TextData[{
  "A very important function that facilitates computation with lists is ",
  ButtonBox["Apply",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["f,list", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " which applies a function ",
  StyleBox["f", "InlineInput"],
  " to a list of arguments.  The shortcut for this function is ",
  StyleBox["f@@list", "InlineInput",
    FontWeight->"Bold"],
  ".  For example, we can calculate the sum of even integers between 2 and \
100 by applying the ",
  StyleBox["Plus", "InlineInput",
    FontWeight->"Bold"],
  " function to a list of even integers generated by ",
  StyleBox["Range", "InlineInput",
    FontWeight->"Bold"],
  " or ",
  StyleBox["Table", "InlineInput",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Apply[Plus, Range[2, 100, 2]]\)], "Input"],

Cell[BoxData[
    \(2550\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Plus @@ Table[n, {n, 2, 100, 2}]\)], "Input"],

Cell[BoxData[
    \(2550\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Evaluate ",
  Cell[BoxData[
      FormBox[
        RowBox[{
          UnderoverscriptBox["\[Sum]", \(n = 0\), 
            StyleBox["nmax",
              FontSlant->"Italic"]], \(\((\(-\(1\/2\)\))\)\^n\)}], 
        TraditionalForm]]],
  " for ",
  StyleBox["nmax=10 ",
    FontSlant->"Italic"],
  "using Apply and a list produced by Table.  Compare with the analytical \
result (obtained with Sum) for ",
  StyleBox["nmax=\[Infinity].",
    FontSlant->"Italic"]
}], "Exercise"],

Cell[TextData[{
  "Determine the minimum number of terms needed to obtain a series \
approximation to Exp[5.] that is accurate to better than 1 part in ",
  Cell[BoxData[
      \(TraditionalForm\`10\^3\)]],
  "."
}], "Exercise"],

Cell[TextData[{
  "Closely related is the function ",
  ButtonBox["Map",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["f,list", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  ", with shortcut ",
  StyleBox["f/@list", "InlineInput",
    FontWeight->"Bold"],
  ", which maps a function onto each element of a list."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[f];\)\), "\n", 
    \(aList = Range[10]\)}], "Input"],

Cell[BoxData[
    \({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Map[Sqrt, aList]\)], "Input"],

Cell[BoxData[
    \({1, \@2, \@3, 2, \@5, \@6, \@7, 2\ \@2, 3, \@10}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(f /@ aList\)], "Input"],

Cell[BoxData[
    \({f[1], f[2], f[3], f[4], f[5], f[6], f[7], f[8], f[9], 
      f[10]}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "These examples could have been formulated using ",
  StyleBox["Table", "InlineInput",
    FontWeight->"Bold"],
  " because the elements of the list are equally spaced, but ",
  StyleBox["Map", "InlineInput",
    FontWeight->"Bold"],
  " is more useful when there is no clear relationship between members of the \
list."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f /@ {4, \[Pi], q, Exp[x]}\)], "Input"],

Cell[BoxData[
    \({f[4], f[\[Pi]], f[q], f[\[ExponentialE]\^x]}\)], "Output"]
}, Closed]],

Cell[TextData[
"Using Map and Apply compute the product of the square roots of the elements \
of the following list: {3,\[Pi],x,Sin[y]}.  Try it with both shortcut and \
function notation."], "Exercise"],

Cell[TextData[{
  "More detail about list operations can be found in ",
  ButtonBox["lists.nb",
    ButtonData:>{"lists.nb", None},
    ButtonStyle->"Hyperlink"],
  "."
}], "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Relational operators", "Subsection"],

Cell[TextData[{
  "It is useful to distinguish between two types of relational operators, \
arithmetic or logical, depending upon the nature of their arguments.  \
Arithmetic relations compare two or more numerical expressions while logical \
relations compare two or more logical statements.  In either case, the result \
is either ",
  StyleBox["True", "InlineInput",
    FontWeight->"Bold"],
  " or ",
  StyleBox["False", "InlineInput",
    FontWeight->"Bold"],
  " when it is possible to evaluate the relationship definitively or the \
expression is returned unevaluated when insufficient information is available \
for a definite evaluation.  Note that ",
  StyleBox["True", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["False", "InlineInput",
    FontWeight->"Bold"],
  " are reserved symbols.  The following tables give a description of each \
relational operator, the corresponding ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " function, the keystroke sequence, and typeset examples.  With the \
exception of ",
  StyleBox["Not", "InlineInput",
    FontWeight->"Bold"],
  ", which is a unary function that takes only a single argument, these \
functions take a sequence of two or more arguments."
}], "Text"],

Cell[CellGroupData[{

Cell["Arithmetic and algebraic relationships", "Subsubsection"],

Cell[BoxData[
    StyleBox[GridBox[{
          {
            StyleBox[\(Arithmetic\ Relational\ Operators\),
              FontFamily->"Times New Roman",
              FontWeight->"Bold"]},
          {
            StyleBox[GridBox[{
                  {
                    StyleBox["relationship",
                      "Text"], 
                    StyleBox["function",
                      "Text"], 
                    StyleBox["operator",
                      "Text"], 
                    StyleBox["example",
                      "Text"]},
                  {
                    StyleBox["equal",
                      "Text"], "Equal", 
                    RowBox[{"==", " ", 
                      RowBox[{
                        StyleBox["or",
                          "Text"], " ", "\[EscapeKey]"}], "==", 
                      "\[EscapeKey]"}], 
                    RowBox[{"p", "==", 
                      RowBox[{"q", " ", 
                        StyleBox["or",
                          "Text"], " ", "p"}], "\[Equal]", "q"}]},
                  {
                    StyleBox["unequal",
                      "Text"], "Unequal", 
                    RowBox[{"!=", " ", 
                      RowBox[{
                        StyleBox["or",
                          "Text"], " ", "\[EscapeKey]"}], "!=", 
                      "\[EscapeKey]"}], 
                    RowBox[{"p", "!=", 
                      RowBox[{"q", " ", 
                        StyleBox["or",
                          "Text"], " ", "p"}], "\[NotEqual]", "q"}]},
                  {
                    StyleBox[\(greater\ than\),
                      "Text"], "Greater", ">", \(p > q\)},
                  {
                    StyleBox[\(less\ than\),
                      "Text"], "Less", "<", 
                    RowBox[{\(p < q\), 
                      StyleBox[" ",
                        "Text"]}]},
                  {
                    RowBox[{
                      StyleBox[\(greater\ or\ equal\),
                        "Text"], " "}], 
                    "GreaterEqual", \(\(\(>=\)\(\ \)\(or\ \[EscapeKey]\)\) >= \
\[EscapeKey]\), 
                    RowBox[{"p", ">=", 
                      RowBox[{"q", " ", 
                        StyleBox["or",
                          "Text"], " ", "p"}], "\[GreaterEqual]", "q"}]},
                  {
                    StyleBox[\(less\ or\ equal\),
                      "Text"], 
                    "LessEqual", \(\(\(<=\)\(\ \)\(or\ \[EscapeKey]\)\) <= \
\[EscapeKey]\), 
                    RowBox[{"p", ">=", 
                      RowBox[{"q", " ", 
                        StyleBox["or",
                          "Text"], " ", "p"}], "\[LessEqual]", "q"}]}
                  },
                ColumnAlignments->{Left, Left, Center},
                GridFrame->True,
                RowLines->{True, False}],
              "Input",
              Background->None]}
          }],
      Background->RGBColor[0.500008, 0.996109, 0.996109]]], "Text",
  TextAlignment->Center,
  TextJustification->0],

Cell["\<\
Since each relationship in the following expression is true, the net result \
is true also.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(2*2 == 2\^2 == \@16 \[GreaterEqual] 2\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]],

Cell["\<\
However, because the truth of the next expression cannot be ascertained \
without specifying the symbols, the expression is returned in the form of an \
unevaluated equation.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[a, b];\)\), "\n", 
    \(a == b\)}], "Input"],

Cell[BoxData[
    \(a \[Equal] b\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Note that the operator that tests equality is a double-equal ",
  StyleBox["==", "InlineInput"],
  ", while ",
  StyleBox["=", "InlineInput"],
  " represents assignment of a symbol to an expression. "
}], "Text"],

Cell[TextData[{
  "Symbolic identities can also be tested using ",
  StyleBox["Equal", "InlineInput",
    FontWeight->"Bold"],
  ", but it is often necessary to employ ",
  StyleBox["Simplify", "InlineInput",
    FontWeight->"Bold"],
  " or related symbolic manipulation functions to ensure more than a \
superficial comparison between two sides of the proposed equation.  For \
example, the expression"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sin[x] Cos[x] == \(1\/2\) Sin[2  x]\)], "Input"],

Cell[BoxData[
    \(Cos[x]\ Sin[x] \[Equal] 1\/2\ Sin[2\ x]\)], "Output"]
}, Closed]],

Cell["remains unevaluated whereas", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Simplify[Sin[x] Cos[x] == \(1\/2\) Sin[2  x]]\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]],

Cell["\<\
yields a definite answer.  Without using the mathematical knowledge encoded \
in the simplification functions, it is not immediately obvious that the two \
sides of this expression agree.\
\>", "Text"],

Cell[TextData[{
  "Is ",
  Cell[BoxData[
      \(TraditionalForm\`1\/\(1 + \(tan\^2\) x\) = \(cos\^2\) x\)]],
  "?"
}], "Exercise"],

Cell[TextData[{
  "Is ",
  Cell[BoxData[
      \(TraditionalForm
      \`tan\ x\/2\  = \ \@\(\(1 - cos\ x\)\/\(1 + cos\ x\)\)\)]],
  "?  Under what conditions can a definite evaluation be made.  [Hint: there \
is a sign ambiguity in the square root.  Complications arise when handling \
multivalued functions.]"
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Logical relationships", "Subsubsection"],

Cell[BoxData[
    StyleBox[GridBox[{
          {
            StyleBox[\(Logical\ Operators\),
              FontFamily->"Times New Roman",
              FontWeight->"Bold"]},
          {
            StyleBox[GridBox[{
                  {
                    StyleBox["relationship",
                      "Text"], 
                    StyleBox["function",
                      "Text"], 
                    StyleBox["operator",
                      "Text"], 
                    StyleBox["example",
                      "Text"]},
                  {
                    StyleBox["not",
                      "Text"], 
                    StyleBox["Not",
                      "Text"], 
                    RowBox[{"!", " ", 
                      RowBox[{
                        StyleBox["or",
                          "Text"], "  ", \(\[EscapeKey]!\), 
                        "\[EscapeKey]"}]}], 
                    RowBox[{"!", 
                      RowBox[{"p", " ", 
                        StyleBox["or",
                          "Text"], " ", \(\[Not] p\)}]}]},
                  {
                    StyleBox["and",
                      "Text"], 
                    StyleBox["And",
                      "Text"], 
                    RowBox[{"&&", " ", 
                      RowBox[{
                        StyleBox["or",
                          "Text"], " ", "\[EscapeKey]"}], "&&", 
                      "\[EscapeKey]"}], 
                    RowBox[{"p", "&&", 
                      RowBox[{"q", " ", 
                        StyleBox["or",
                          "Text"], " ", "p"}], "\[And]", "q"}]},
                  {
                    StyleBox["or",
                      "Text"], 
                    StyleBox["Or",
                      "Text"], 
                    RowBox[{"||", " ", 
                      RowBox[{
                        StyleBox["or",
                          "Text"], " ", "\[EscapeKey]"}], "||", 
                      "\[EscapeKey]"}], 
                    RowBox[{"p", "||", 
                      RowBox[{"q", " ", 
                        StyleBox["or",
                          "Text"], " ", "p"}], "\[Or]", "q"}]},
                  {
                    StyleBox[\(exclusive\ or\),
                      "Text"], 
                    StyleBox["Xor",
                      "Text"], " ", 
                    StyleBox[\(\(\ \)\(Xor[p, q]\)\),
                      "Text"]},
                  {
                    StyleBox["implies",
                      "Text"], 
                    StyleBox["Implies",
                      
                      "Text"], \(\(=\)\(\(\(>\)\(\ \)\(or\ \[EscapeKey]\)\) = \
\(\(>\)\(\[EscapeKey]\)\)\)\), \(p \[Implies] q\)}
                  },
                ColumnAlignments->{Left, Left, Center},
                GridFrame->True,
                RowLines->{True, False}],
              "Input",
              Background->None]}
          }],
      Background->RGBColor[0.500008, 0.996109, 0.996109]]], "Text",
  TextAlignment->Center,
  TextJustification->0],

Cell[CellGroupData[{

Cell[BoxData[
    \({\[Not] True, \[Not] False}\)], "Input"],

Cell[BoxData[
    \({False, True}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \({True && True, True && False, False && False}\)], "Input"],

Cell[BoxData[
    \({True, False, False}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \({True || True, True || False, False || False}\)], "Input"],

Cell[BoxData[
    \({True, True, False}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \({Xor[True, True], Xor[True, False], Xor[False, False]}\)], "Input"],

Cell[BoxData[
    \({False, True, False}\)], "Output"]
}, Closed]],

Cell[TextData[{
  StyleBox["Warning:",
    FontColor->RGBColor[1, 0, 0]],
  " using the exclamation point for ",
  StyleBox["Not", "InlineInput",
    FontWeight->"Bold"],
  " causes problems on some front ends \[LongDash] use ",
  StyleBox["\[Not]", "InlineInput"],
  StyleBox["p", "InlineInput",
    FontWeight->"Bold"],
  " or ",
  StyleBox["Not[p]", "InlineInput",
    FontWeight->"Bold"],
  " instead."
}], "Text"],

Cell[TextData[
"Produce a truth table for Implies (the four results of p\[Implies]q with p \
being True or False and q being True or False).  Explain the result.  How can \
you obtain the same results using Not and Or?"], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Equations (Equal or ==)", "Subsubsection"],

Cell[TextData[{
  "An equation is represented by a double equals sign, ",
  Cell[BoxData[
      \(TraditionalForm\` == \)]],
  " or the typeset form \[EscapeKey]==\[EscapeKey].  Hence, the expression"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(eq1\  = \ x\^2 - 3  x - 4 \[Equal] 0\)], "Input"],

Cell[BoxData[
    \(\(-4\) - 3\ x + x\^2 \[Equal] 0\)], "Output"]
}, Closed]],

Cell[TextData[{
  "produces a named equation.  This simple algebraic equation can be solved \
using the built-in function ",
  StyleBox["Solve", "InlineInput",
    FontWeight->"Bold"],
  ".  The result is a list of replacement rules; we will learn more about \
rules and equation solving soon."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Solve[eq1, x]\)], "Input"],

Cell[BoxData[
    \({{x \[Rule] \(-1\)}, {x \[Rule] 4}}\)], "Output"]
}, Closed]],

Cell["\<\
An equation is simply a special case of a logical relationship between two \
expressions and uses the same relational operator as does symbolic logic.\
\>", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Strings", "Subsection"],

Cell["\<\
A string consists of text enclosed in double quotation marks and can be \
assigned a name.\
\>", "Text"],

Cell[BoxData[
    \(\(sillyString\  = \ "\<Do not imagine a blue unicorn!\>";\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(sillyString\)], "Input"],

Cell[BoxData[
    \("Do not imagine a blue unicorn!"\)], "Output"]
}, Closed]],

Cell["\<\
Such strings can be used, among other purposes, to label figures or tables.  \
Sometimes it is useful to collect a set of strings together as a list.  For \
example, a list of color names can be created and assigned a single name.\
\>", "Text"],

Cell[BoxData[
    \(\(colors\  = \ {"\<red\>", \ "\<orange\>", \ "\<yellow\>", \ \
"\<green\>", "\<blue\>", \ "\<indigo\>", \ "\<violet\>"};\)\)], "Input"],

Cell["\<\
A particular member is accessed using the double bracket notation.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(colors\[LeftDoubleBracket]3\[RightDoubleBracket]\)], "Input"],

Cell[BoxData[
    \("yellow"\)], "Output"]
}, Closed]],

Cell["\<\
Alternatively, it may be convenient to assign closely related names to the \
labels that might be used to plot various functions.\
\>", "Text"],

Cell[BoxData[{
    \(\(label[C\_V]\  = \ "\<Heat Capacity\>";\)\), "\n", 
    \(\(label[U]\  = \ "\<Internal Energy\>";\)\), "\n", 
    \(\(label[F]\  = \ "\<Helmholtz Free Energy\>";\)\), "\n", 
    \(\(label[\[Epsilon]]\  = \ "\<anything you please\>";\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?label\)\)], "Input"],

Cell["Global`label", "Print",
  CellTags->"Info3282053600-3438854"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {GridBox[{
                {\(label["Subscript"[C, V]] = "Heat Capacity"\)},
                {" "},
                {\(label[U] = "Internal Energy"\)},
                {" "},
                {\(label[F] = "Helmholtz Free Energy"\)},
                {" "},
                {\(label[\[Epsilon]] = "anything you please"\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnWidths->0.999,
              ColumnAlignments->{Left}]}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      Definition[ "label"],
      Editable->False]], "Print",
  CellTags->"Info3282053600-3438854"]
}, Closed]],

Cell["\<\
A particular label is then addressed by name rather than by its place in a \
list.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(label[F]\)], "Input"],

Cell[BoxData[
    \("Helmholtz Free Energy"\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Strings can be manipulated by functions such as ",
  StyleBox["StringTake", "InlineInput",
    FontWeight->"Bold"],
  ", ",
  StyleBox["StringDrop", "InlineInput",
    FontWeight->"Bold"],
  ", ",
  StyleBox["StringLength", "InlineInput",
    FontWeight->"Bold"],
  ", ",
  StyleBox["StringReverse", "InlineInput",
    FontWeight->"Bold"],
  ", ",
  StyleBox["StringInsert", "InlineInput",
    FontWeight->"Bold"],
  ", etc.  For example, the first letter of a particular string is also \
easily obtained."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(StringTake[colors\[LeftDoubleBracket]3\[RightDoubleBracket], \ 
      1]\)], "Input"],

Cell[BoxData[
    \("y"\)], "Output"]
}, Closed]],

Cell["\<\
Although we will not take the time now to explore all possible operations on \
strings, it is instructive to ask for a list of string functions.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?*String*\)\)], "Input"],

Cell[BoxData[GridBox[{
        {
          StyleBox["System`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["DisplayString",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`DisplayString"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["RepeatedString",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`RepeatedString"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringDrop",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237222-9480149", "System`StringDrop"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringPosition",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringPosition"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringTake",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237222-9480149", "System`StringTake"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"]},
              {
                ButtonBox[
                  StyleBox["EndOfString",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`EndOfString"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["ShowStringCharacters",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`ShowStringCharacters"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringExpression",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringExpression"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringQ",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237222-9480149", "System`StringQ"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringToStream",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringToStream"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"]},
              {
                ButtonBox[
                  StyleBox["ExportString",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`ExportString"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StartOfString",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StartOfString"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringForm",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237222-9480149", "System`StringForm"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringReplace",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringReplace"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["ToString",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237222-9480149", "System`ToString"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"]},
              {
                ButtonBox[
                  StyleBox["ImportString",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`ImportString"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["String",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237222-9480149", "System`String"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringFreeQ",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringFreeQ"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringReplaceList",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringReplaceList"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["WriteString",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`WriteString"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"]},
              {
                ButtonBox[
                  StyleBox["InputString",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`InputString"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringBreak",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringBreak"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringInsert",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringInsert"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringReplacePart",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringReplacePart"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], ""},
              {
                ButtonBox[
                  StyleBox["InputStringPacket",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`InputStringPacket"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringByteCount",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringByteCount"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringJoin",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237222-9480149", "System`StringJoin"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringReverse",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringReverse"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], ""},
              {
                ButtonBox[
                  StyleBox["InString",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237222-9480149", "System`InString"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringCases",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringCases"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringLength",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringLength"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringSkeleton",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringSkeleton"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], ""},
              {
                ButtonBox[
                  StyleBox["NumberString",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`NumberString"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringCount",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringCount"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringMatchQ",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringMatchQ"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], 
                ButtonBox[
                  StyleBox["StringSplit",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348237222-9480149", 
                    "System`StringSplit"},
                  ButtonFrame->"None",
                  ButtonNote->"System`"], ""}
              },
            RowMinHeight->{1, 1, 1, 1, 1, 1, 1, 1.05}]}
        },
      RowSpacings->{2, 3},
      ColumnsEqual->True]], "Print",
  CellMargins->{{20, Inherited}, {Inherited, Inherited}},
  ShowCellLabel->False,
  CellFrameMargins->{{Inherited, Inherited}, {14, 14}},
  Background->RGBColor[0.964706, 0.929412, 0.839216],
  ButtonBoxOptions->{Active->True},
  GridBoxOptions->{ColumnAlignments->{Left}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Internal representation", "Subsection"],

Cell[TextData[{
  "It is important to recognize that all ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " expressions have the basic form ",
  StyleBox["Head", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["expr", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " where ",
  StyleBox["Head", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontSlant->"Italic"],
  "identifies the type of expression.  The front end attempts to display the \
expression in a familiar form, but its manipulations actually employ the \
internal representation.  The internal representation is standardized and \
uniform.  In fact, the uniformity of the internal representation is largely \
responsible for the agility with which ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " manipulates symbolic expressions.  Although we postpone a detailed \
discussion of this internal representation until we are more comfortable \
using some of the basic features of the system, it is still worth examining \
the internal representations of some familiar arithmetic operations.  The \
internal representation is revealed by using the function ",
  StyleBox["FullForm[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["expr", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  ".  For example, the internal representation of addition "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[a, b];\)\), "\[IndentingNewLine]", 
    \(FullForm[a + b]\)}], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Plus[a, b]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "uses the function ",
  StyleBox["Plus", "InlineInput",
    FontWeight->"Bold"],
  " with two arguments.  Although we generally prefer operator notation over \
function notation for simple arithmetic expressions, symbolic programming is \
usually based upon the internal representation in terms of functions; \
therefore, you should be aware of the ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " functions behind arithmetic operators.  "
}], "Text"],

Cell["\<\
What is the internal representation of \[ExponentialE]?\
\>", "Exercise"],

Cell[TextData[{
  "Determine the internal representations of the following expressions:\na) \
a+b+c\t\tb) a*b*c*d\t\tc) a/b\t\td) a/b+c/d\te) ",
  Cell[BoxData[
      \(TraditionalForm\`a\^2\ /b\^c\)]]
}], "Exercise"],

Cell[TextData[{
  "Determine the internal representation of Sqrt[a].   (",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " recognizes ",
  StyleBox["Sqrt[a]",
    FontWeight->"Bold"],
  " for input but converts it to a standardized internal representation.)"
}], "Exercise"],

Cell[TextData[{
  "Enter each of the following expressions using ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " functions instead of arithmetic operators:  ",
  Cell[BoxData[
      \(TraditionalForm\`a\/b\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`a\^b\)]],
  ",  ",
  Cell[BoxData[
      \(TraditionalForm\`a\ b\^c\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`\(a\^b\ c\)\/\(d - e\)\)]],
  ".   ",
  "Compare your version with the internal representation using FullForm."
}], "Exercise"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Built-in functions", "Section"],

Cell[CellGroupData[{

Cell["Standard mathematical functions", "Subsection"],

Cell[TextData[{
  "Practically all standard mathematical functions (arithmetic, \
trigonometric, exponential, logarithmic, hyperbolic, etc.) are provided.  The \
names are capitalized and are either standard abbreviations, such as ",
  StyleBox["Sin", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[",",
    FontWeight->"Bold"],
  " or are spelled completely, such as ",
  StyleBox["Factorial", "InlineInput",
    FontWeight->"Bold"],
  ".  A brief summary of these functions is given in the accompanying table.  \
Representative argument sequences have been included for some functions, but \
we have not attempted to be exhaustive at this stage."
}], "Text"],

Cell[BoxData[
    StyleBox[GridBox[{
          {
            StyleBox[\(Standard\ Mathematical\ Functions\),
              FontFamily->"Times New Roman",
              FontWeight->"Bold"]},
          {
            StyleBox[GridBox[{
                  {
                    StyleBox["exponential",
                      "Text"], \(Exp[x]\)},
                  {
                    StyleBox[\(natural\ logarithm\),
                      "Text"], \(Log[x]\)},
                  {
                    StyleBox[\(logarithm\ to\ base\ b\),
                      "Text"], \(Log[b, x]\)},
                  {
                    StyleBox[\(\(trigonometric\)\(\ \)\),
                      "Text"], \(Sin, Cos, Tan, Sec, Csc, Cot\)},
                  {
                    StyleBox[\(\(inverse\)\(\ \)\(trig\)\(\ \)\),
                      "Text"], \(ArcSin, ArcCos, ArcTan, \)},
                  {" ", \(ArcSec, ArcCsc, ArcCot\)},
                  {
                    StyleBox[\(hyperbolic\ trig\),
                      "Text"], \(Sinh, Cosh, Tanh, Sech, Csch, Coth\)},
                  {
                    StyleBox[\(inverse\ hyperbolic\ trig\),
                      "Text"], \(ArcSinh, ArcCosh, ArcTanh, \)},
                  {" ", \(ArcSech, ArcCsch, ArcCoth\)}
                  },
                ColumnAlignments->{Left},
                GridFrame->True],
              "Input",
              Background->None]}
          }],
      Background->RGBColor[0.500008, 0.996109, 0.996109]]], "Text",
  TextAlignment->Center,
  TextJustification->0],

Cell[TextData[{
  "Compute ",
  Cell[BoxData[
      \(TraditionalForm\`\(log\_10\) e\)]],
  " and check the result."
}], "Exercise"],

Cell[TextData[{
  "Evaluate ",
  Cell[BoxData[
      \(TraditionalForm\`sin(\ \(tan\^\(-1\)\)(x)\ )\)]],
  ".  [Remember to use ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " input conventions.]"
}], "Exercise"],

Cell[TextData[{
  "By default, trigonometric functions assume that the argument is expressed \
in radians.  For those of us who think in degrees (who doesn't?), the \
built-in symbol ",
  StyleBox["Degree", "InlineInput",
    FontWeight->"Bold"],
  " converts from degrees to radians and can be included as a factor in the \
argument."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sin[30\ Degree]\)], "Input"],

Cell[BoxData[
    \(1\/2\)], "Output"]
}, Closed]],

Cell["Use Degree to obtain the number of radians in 32.5\[Degree].", \
"Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Special functions", "Subsection"],

Cell[TextData[{
  "A vast array of special functions, such as Bessel, Legendre, or \
hypergeometric functions are also provided.  The names are capitalized and \
usually consist of a family part, such as Bessel, and a flavor part \
specifying the member of the family.  For example, ",
  StyleBox["BesselJ[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["n,x", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " would be the regular Bessel function of order ",
  Cell[BoxData[
      \(TraditionalForm\`n\)]],
  ", which in traditional notation is denoted ",
  Cell[BoxData[
      \(TraditionalForm\`\(J\_n\)(x)\)]],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(Plot[BesselJ[2, x], \ {x, 0, 20}];\)\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.047619 0.245381 0.735744 [
[.2619 .23288 -3 -9 ]
[.2619 .23288 3 0 ]
[.5 .23288 -6 -9 ]
[.5 .23288 6 0 ]
[.7381 .23288 -6 -9 ]
[.7381 .23288 6 0 ]
[.97619 .23288 -6 -9 ]
[.97619 .23288 6 0 ]
[.01131 .09823 -24 -4.5 ]
[.01131 .09823 0 4.5 ]
[.01131 .39253 -18 -4.5 ]
[.01131 .39253 0 4.5 ]
[.01131 .53968 -18 -4.5 ]
[.01131 .53968 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.2619 .24538 m
.2619 .25163 L
s
[(5)] .2619 .23288 0 1 Mshowa
.5 .24538 m
.5 .25163 L
s
[(10)] .5 .23288 0 1 Mshowa
.7381 .24538 m
.7381 .25163 L
s
[(15)] .7381 .23288 0 1 Mshowa
.97619 .24538 m
.97619 .25163 L
s
[(20)] .97619 .23288 0 1 Mshowa
.125 Mabswid
.07143 .24538 m
.07143 .24913 L
s
.11905 .24538 m
.11905 .24913 L
s
.16667 .24538 m
.16667 .24913 L
s
.21429 .24538 m
.21429 .24913 L
s
.30952 .24538 m
.30952 .24913 L
s
.35714 .24538 m
.35714 .24913 L
s
.40476 .24538 m
.40476 .24913 L
s
.45238 .24538 m
.45238 .24913 L
s
.54762 .24538 m
.54762 .24913 L
s
.59524 .24538 m
.59524 .24913 L
s
.64286 .24538 m
.64286 .24913 L
s
.69048 .24538 m
.69048 .24913 L
s
.78571 .24538 m
.78571 .24913 L
s
.83333 .24538 m
.83333 .24913 L
s
.88095 .24538 m
.88095 .24913 L
s
.92857 .24538 m
.92857 .24913 L
s
.25 Mabswid
0 .24538 m
1 .24538 L
s
.02381 .09823 m
.03006 .09823 L
s
[(-0.2)] .01131 .09823 1 0 Mshowa
.02381 .39253 m
.03006 .39253 L
s
[(0.2)] .01131 .39253 1 0 Mshowa
.02381 .53968 m
.03006 .53968 L
s
[(0.4)] .01131 .53968 1 0 Mshowa
.125 Mabswid
.02381 .13502 m
.02756 .13502 L
s
.02381 .17181 m
.02756 .17181 L
s
.02381 .20859 m
.02756 .20859 L
s
.02381 .28217 m
.02756 .28217 L
s
.02381 .31896 m
.02756 .31896 L
s
.02381 .35574 m
.02756 .35574 L
s
.02381 .42932 m
.02756 .42932 L
s
.02381 .4661 m
.02756 .4661 L
s
.02381 .50289 m
.02756 .50289 L
s
.02381 .06144 m
.02756 .06144 L
s
.02381 .02466 m
.02756 .02466 L
s
.02381 .57647 m
.02756 .57647 L
s
.02381 .61325 m
.02756 .61325 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .24538 m
.02499 .24544 L
.02605 .24559 L
.02729 .24587 L
.02846 .24626 L
.03053 .24721 L
.03279 .24864 L
.03527 .25068 L
.0379 .25337 L
.04262 .25954 L
.05205 .27679 L
.06244 .30267 L
.10458 .45198 L
.12562 .52685 L
.1356 .55607 L
.14487 .57778 L
.14985 .58694 L
.15437 .59358 L
.15678 .59645 L
.15939 .599 L
.16083 .60016 L
.16215 .60107 L
.1634 .60179 L
.16474 .60241 L
.16593 .60282 L
.16701 .60309 L
.1681 .60326 L
.16912 .60332 L
.17032 .60327 L
.17143 .60311 L
.17264 .6028 L
.17393 .60233 L
.17508 .60178 L
.17631 .60106 L
.17855 .59939 L
.1812 .59682 L
.18364 .59389 L
.18838 .58666 L
.19344 .57671 L
.20256 .55322 L
.21341 .51662 L
.22326 .47626 L
.26325 .27248 L
.28156 .17865 L
.29197 .13123 L
.30171 .09269 L
.3121 .05917 L
.32159 .03632 L
.32679 .02717 L
.33173 .02078 L
Mistroke
.33444 .01824 L
.33695 .01649 L
.33839 .01576 L
.3397 .01526 L
.34043 .01505 L
.34121 .01488 L
.34195 .01477 L
.34263 .01472 L
.3439 .01473 L
.3451 .01488 L
.34617 .01513 L
.34734 .01551 L
.34862 .01608 L
.34997 .01684 L
.35239 .01862 L
.35672 .02309 L
.36149 .02989 L
.36663 .03932 L
.37216 .05176 L
.38217 .0797 L
.42336 .24005 L
.44393 .32238 L
.45395 .35705 L
.46304 .38383 L
.47254 .40616 L
.4769 .41426 L
.4815 .42127 L
.48385 .42422 L
.48643 .42696 L
.4888 .42903 L
.49096 .43052 L
.49218 .4312 L
.49351 .4318 L
.49424 .43207 L
.49492 .43228 L
.49561 .43246 L
.49625 .4326 L
.49739 .43275 L
.49865 .43281 L
.49988 .43274 L
.50057 .43265 L
.5012 .43253 L
.50247 .4322 L
.50368 .43177 L
.50593 .43066 L
.50835 .42903 L
.51099 .42675 L
.51573 .42135 L
.5201 .41492 L
.53015 .39531 L
Mistroke
.54079 .36805 L
.57865 .23996 L
.5997 .16881 L
.60969 .14019 L
.61895 .11803 L
.62847 .10048 L
.63349 .09354 L
.63606 .09064 L
.63885 .08802 L
.64151 .08601 L
.64395 .0846 L
.64516 .08405 L
.64629 .08364 L
.64747 .0833 L
.64876 .08304 L
.64993 .08291 L
.65103 .08287 L
.65202 .08291 L
.6531 .08303 L
.65427 .08325 L
.65551 .08359 L
.65657 .08396 L
.65775 .08447 L
.6601 .08576 L
.66267 .08761 L
.66785 .09266 L
.67265 .09887 L
.67711 .1059 L
.69797 .15266 L
.73703 .27268 L
.75696 .32961 L
.76745 .35379 L
.77319 .36476 L
.77855 .37341 L
.78373 .3802 L
.78847 .385 L
.79116 .38712 L
.79372 .3887 L
.79643 .38993 L
.79795 .39042 L
.79869 .39061 L
.79937 .39075 L
.80058 .39092 L
.80188 .39101 L
.80303 .39099 L
.80425 .39089 L
.80534 .39071 L
.80635 .39048 L
.80747 .39016 L
.80866 .38972 L
Mistroke
.81132 .38843 L
.81384 .38681 L
.81855 .38275 L
.82316 .37753 L
.82824 .3704 L
.83852 .35195 L
.85696 .308 L
.87798 .24844 L
.89723 .19442 L
.90673 .17067 L
.9171 .14839 L
.92689 .1317 L
.93163 .12535 L
.93599 .12057 L
.94106 .11634 L
.94373 .1147 L
.94509 .11402 L
.94655 .11341 L
.94783 .11298 L
.949 .11267 L
.95018 .11243 L
.95129 .11229 L
.95259 .11221 L
.95379 .11222 L
.9551 .11233 L
.95577 .11243 L
.9565 .11256 L
.95768 .11284 L
.95891 .11322 L
.96112 .11411 L
.9635 .11538 L
.9661 .11714 L
.97076 .12122 L
.97511 .12605 L
.97619 .12741 L
Mfstroke
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.875},
  ImageMargins->{{0.625, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00:03oool00`000000oooo0?oo
o`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?oo
o`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000
003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool0
0`000000oooo0?ooo`1k0?ooo`D00000o`3oool60?ooo`00:03oool00`000000oooo0?ooo`1j0?oo
o`8000000`3oool200000?l0oooo1@3oool002P0oooo00<000000?ooo`3oool0N@3oool00`000000
oooo0?ooo`050?ooo`030000003oool0oooo0?l0oooo0P3oool002P0oooo00<000000?ooo`3oool0
N03oool00`000000oooo0?ooo`070?ooo`800000o`3oool20?ooo`00:03oool3000007P0oooo00<0
00000?ooo`3oool0203oool00`000000oooo0?ooo`3o0?ooo`00:03oool00`000000oooo0?ooo`1g
0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0oP3oool002P0oooo00<000000?oo
o`3oool0MP3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo0?h0oooo000X0?ooo`03
0000003oool0oooo07D0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`3n0?ooo`00
:03oool00`000000oooo0?ooo`1e0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0
o@3oool002P0oooo00<000000?ooo`3oool0M03oool00`000000oooo0?ooo`0>0?ooo`030000003o
ool0oooo0?d0oooo000X0?ooo`030000003oool0oooo07@0oooo00<000000?ooo`3oool03`3oool0
0`000000oooo0?ooo`3l0?ooo`00:03oool00`000000oooo0?ooo`1c0?ooo`030000003oool0oooo
0140oooo00<000000?ooo`3oool0n`3oool002P0oooo00<000000?ooo`3oool0L`3oool00`000000
oooo0?ooo`0A0?ooo`030000003oool0oooo0?/0oooo000X0?ooo`030000003oool0oooo07<0oooo
00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`3j0?ooo`00:03oool00`000000oooo0?oo
o`1b0?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool0nP3oool002P0oooo00<00000
0?ooo`3oool0LP3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo0?T0oooo000X0?oo
o`030000003oool0oooo0780oooo00<000000?ooo`3oool0503oool00`000000oooo0?ooo`3i0?oo
o`00:03oool00`000000oooo0?ooo`1a0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3o
ool0n03oool002P0oooo00<000000?ooo`3oool0L@3oool00`000000oooo0?ooo`0F0?ooo`030000
003oool0oooo0?P0oooo000X0?ooo`<00000L@3oool00`000000oooo0?ooo`0F0?ooo`030000003o
ool0oooo0?P0oooo000X0?ooo`030000003oool0oooo0700oooo00<000000?ooo`3oool0603oool0
0`000000oooo0?ooo`3g0?ooo`00:03oool00`000000oooo0?ooo`1`0?ooo`030000003oool0oooo
01P0oooo00<000000?ooo`3oool0m`3oool002P0oooo00<000000?ooo`3oool0L03oool00`000000
oooo0?ooo`0I0?ooo`030000003oool0oooo0?H0oooo000X0?ooo`030000003oool0oooo06l0oooo
00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`3f0?ooo`00:03oool00`000000oooo0?oo
o`1_0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0mP3oool002P0oooo00<00000
0?ooo`3oool0K`3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo0?D0oooo000X0?oo
o`030000003oool0oooo06l0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`3e0?oo
o`00:03oool00`000000oooo0?ooo`1^0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3o
ool0I`3oool3000008/0oooo000X0?ooo`030000003oool0oooo06h0oooo00<000000?ooo`3oool0
703oool00`000000oooo0?ooo`1T0?ooo`<000000`3oool3000008P0oooo000X0?ooo`030000003o
ool0oooo06h0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`1R0?ooo`030000003o
ool0oooo00L0oooo00<000000?ooo`3oool0Q@3oool000/0oooo00D0okmd000000000000000007Bo
o`050?ooo`030;md0000000007Bo00<0oooo00<0oono07@000000000100000000`1d_ol0oooo0?oo
o`030?ooo`030000003oool0oooo06d0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?oo
o`1Q0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0Q03oool000/0oooo00H0W4Qd
0;ooo`3oool0oono07@0M02oool40?ooo`030;md0000000007Bo00@0oooo00<0_g@00000M02oool0
0P3oool00`3OW7@0W=oo0?ooo`040?ooo`030000003oool0oooo06d0oooo00<000000?ooo`3oool0
7P3oool00`000000oooo0?ooo`1P0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0
P`3oool000X0oooo00<0okmd001d_`3oool00P3oool00`3OW4P0B9cO0?ooo`0;0?ooo`030?noM000
04P0W=oo00P0oooo00<000000?ooo`3oool0K@3oool00`000000oooo0?ooo`0N0?ooo`030000003o
ool0oooo0600oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`220?ooo`002P3oool0
0`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo00`0oooo00<0omnL04P00018W=l01`3oool4
000006/0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`1N0?ooo`030000003oool0
oooo00d0oooo00<000000?ooo`3oool0PP3oool000030?ooo`2LB000000000@0000000D004RL0?oo
o`3oool0gia804RLg`030?ooo`030?noM000M;l0oooo00h0oooo00<0W4P004RLg`3oool01@3oool0
0`000000oooo0?ooo`1/0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0G@3oool0
0`000000oooo0?ooo`0?0?ooo`030000003oool0oooo0840oooo000:0?ooo`030=nLB018W=l0oooo
0080oooo00<0okmd001d_`3oool03`3oool00`2LB7@0_ooo0?ooo`040?ooo`030000003oool0oooo
06`0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`1L0?ooo`030000003oool0oooo
0140oooo00<000000?ooo`3oool0P03oool000X0oooo00<0okmd04RLg`3oool00P3oool00`3OW4P0
B9cO0?ooo`0:0?ooo`030=nLB01d_ol0oooo0080oooo00<0_g@007Boo`3oool0103oool00`000000
oooo0?ooo`1/0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0G03oool00`000000
oooo0?ooo`0B0?ooo`030000003oool0oooo07l0oooo000;0?ooo`0609a8001d_ol0oooo0?oOW018
07@0_ooo2`3oool01`3o_g@0001d0;ooo`3oool0okmd0000B02Lgol01@3oool00`000000oooo0?oo
o`1[0?ooo`030000003oool0oooo0280oooo00<000000?ooo`3oool0FP3oool00`000000oooo0?oo
o`0C0?ooo`030000003oool0oooo07l0oooo000;0?ooo`050?oo_`1d000000000000B02Lgol03@3o
ool01@3o_g@000000000000004P0W=oo00H0oooo00<000000?ooo`3oool0J`3oool00`000000oooo
0?ooo`0R0?ooo`030000003oool0oooo05X0oooo00<000000?ooo`3oool0503oool00`000000oooo
0?ooo`1n0?ooo`00:03oool00`000000oooo0?ooo`1[0?ooo`030000003oool0oooo0280oooo00<0
00000?ooo`3oool0F@3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo06L0oooo1P00
000A0?ooo`00:03oool00`000000oooo0?ooo`1[0?ooo`030000003oool0oooo0280oooo00<00000
0?ooo`3oool0F@3oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo06D0oooo0P000005
0?ooo`8000003`3oool002P0oooo00<000000?ooo`3oool0JP3oool00`000000oooo0?ooo`0T0?oo
o`030000003oool0oooo05L0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`1T0?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool0303oool002P0oooo00<000000?ooo`3o
ool0JP3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo05L0oooo00<000000?ooo`3o
ool0603oool00`000000oooo0?ooo`1Q0?ooo`8000002`3oool00`000000oooo0?ooo`0;0?ooo`00
:03oool00`000000oooo0?ooo`1Z0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0
EP3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo0600oooo00<000000?ooo`3oool0
303oool00`000000oooo0?ooo`0:0?ooo`00:03oool00`000000oooo0?ooo`1Z0?ooo`030000003o
ool0oooo02@0oooo00<000000?ooo`3oool0EP3oool00`000000oooo0?ooo`0I0?ooo`030000003o
ool0oooo05l0oooo00<000000?ooo`3oool03P3oool2000000X0oooo000X0?ooo`030000003oool0
oooo06T0oooo00<000000?ooo`3oool09P3oool00`000000oooo0?ooo`1E0?ooo`030000003oool0
oooo01X0oooo00<000000?ooo`3oool0G@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0
oooo00P0oooo000X0?ooo`030000003oool0oooo06T0oooo00<000000?ooo`3oool09P3oool00`00
0000oooo0?ooo`1D0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool0G@3oool00`00
0000oooo0?ooo`0K0?ooo`00:03oool00`000000oooo0?ooo`1Y0?ooo`030000003oool0oooo02H0
oooo00<000000?ooo`3oool0E03oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo05/0
oooo00<000000?ooo`3oool0703oool002P0oooo0`00001Y0?ooo`030000003oool0oooo02H0oooo
00<000000?ooo`3oool0E03oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo05X0oooo
00<000000?ooo`3oool07@3oool002P0oooo00<000000?ooo`3oool0J03oool00`000000oooo0?oo
o`0X0?ooo`030000003oool0oooo0580oooo00<000000?ooo`3oool07@3oool00`000000oooo0?oo
o`1J0?ooo`030000003oool0oooo01d0oooo000X0?ooo`030000003oool0oooo06P0oooo00<00000
0?ooo`3oool0:03oool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo01h0oooo00<00000
0?ooo`3oool0F03oool00`000000oooo0?ooo`0N0?ooo`00:03oool00`000000oooo0?ooo`1X0?oo
o`030000003oool0oooo02P0oooo00<000000?ooo`3oool0DP3oool00`000000oooo0?ooo`0N0?oo
o`030000003oool0oooo05L0oooo00<000000?ooo`3oool07`3oool002P0oooo00<000000?ooo`3o
ool0J03oool00`000000oooo0?ooo`0X0?ooo`030000003oool0oooo0540oooo00<000000?ooo`3o
ool0803oool00`000000oooo0?ooo`1F0?ooo`030000003oool0oooo01l0oooo000X0?ooo`030000
003oool0oooo06L0oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`1@0?ooo`030000
003oool0oooo0200oooo00<000000?ooo`3oool0E@3oool00`000000oooo0?ooo`0P0?ooo`00:03o
ool00`000000oooo0?ooo`1W0?ooo`030000003oool0oooo02X0oooo00<000000?ooo`3oool0D03o
ool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo05@0oooo00<000000?ooo`3oool0803o
ool002P0oooo00<000000?ooo`3oool0I`3oool00`000000oooo0?ooo`0Z0?ooo`030000003oool0
oooo04l0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`1C0?ooo`030000003oool0
oooo0240oooo000X0?ooo`030000003oool0oooo06L0oooo00<000000?ooo`3oool0:P3oool00`00
0000oooo0?ooo`1?0?ooo`030000003oool0oooo0280oooo00<000000?ooo`3oool0D`3oool00`00
0000oooo0?ooo`0Q0?ooo`00:03oool00`000000oooo0?ooo`1V0?ooo`030000003oool0oooo02`0
oooo00<000000?ooo`3oool0CP3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo0540
oooo00<000000?ooo`3oool08P3oool002P0oooo00<000000?ooo`3oool0IP3oool00`000000oooo
0?ooo`0/0?ooo`030000003oool0oooo04d0oooo00<000000?ooo`3oool0903oool00`000000oooo
0?ooo`1A0?ooo`030000003oool0oooo0280oooo000X0?ooo`030000003oool0oooo06H0oooo00<0
00000?ooo`3oool0;03oool00`000000oooo0?ooo`1=0?ooo`030000003oool0oooo02@0oooo00<0
00000?ooo`3oool0D03oool00`000000oooo0?ooo`0S0?ooo`00:03oool00`000000oooo0?ooo`1V
0?ooo`030000003oool0oooo02`0oooo00<000000?ooo`3oool0C@3oool00`000000oooo0?ooo`0U
0?ooo`030000003oool0oooo04l0oooo00<000000?ooo`3oool08`3oool002P0oooo00<000000?oo
o`3oool0I@3oool00`000000oooo0?ooo`0^0?ooo`030000003oool0oooo04/0oooo00<000000?oo
o`3oool09P3oool00`000000oooo0?ooo`1>0?ooo`030000003oool0oooo02@0oooo000X0?ooo`03
0000003oool0oooo06D0oooo00<000000?ooo`3oool0;P3oool00`000000oooo0?ooo`1;0?ooo`03
0000003oool0oooo02H0oooo00<000000?ooo`3oool0CP3oool00`000000oooo0?ooo`0T0?ooo`00
:03oool3000006D0oooo00<000000?ooo`3oool0;P3oool00`000000oooo0?ooo`1;0?ooo`030000
003oool0oooo02H0oooo00<000000?ooo`3oool0CP3oool00`000000oooo0?ooo`0T0?ooo`00:03o
ool00`000000oooo0?ooo`1U0?ooo`030000003oool0oooo02h0oooo00<000000?ooo`3oool0BP3o
ool00`000000oooo0?ooo`0X0?ooo`030000003oool0oooo04`0oooo00<000000?ooo`3oool09@3o
ool002P0oooo00<000000?ooo`3oool0I03oool00`000000oooo0?ooo`0`0?ooo`030000003oool0
oooo04T0oooo00<000000?ooo`3oool0:03oool00`000000oooo0?ooo`1<0?ooo`030000003oool0
oooo02D0oooo000X0?ooo`030000003oool0oooo06@0oooo00<000000?ooo`3oool0<03oool00`00
0000oooo0?ooo`190?ooo`030000003oool0oooo02P0oooo00<000000?ooo`3oool0B`3oool00`00
0000oooo0?ooo`0V0?ooo`00:03oool00`000000oooo0?ooo`1T0?ooo`030000003oool0oooo0300
oooo00<000000?ooo`3oool0B03oool00`000000oooo0?ooo`0Z0?ooo`030000003oool0oooo04X0
oooo00<000000?ooo`3oool09P3oool002P0oooo00<000000?ooo`3oool0I03oool00`000000oooo
0?ooo`0`0?ooo`030000003oool0oooo04P0oooo00<000000?ooo`3oool0:P3oool00`000000oooo
0?ooo`1:0?ooo`030000003oool0oooo02H0oooo000X0?ooo`030000003oool0oooo06<0oooo00<0
00000?ooo`3oool0<P3oool00`000000oooo0?ooo`170?ooo`030000003oool0oooo02X0oooo00<0
00000?ooo`3oool0B@3oool00`000000oooo0?ooo`0W0?ooo`00:03oool00`000000oooo0?ooo`1S
0?ooo`030000003oool0oooo0380oooo00<000000?ooo`3oool0AP3oool00`000000oooo0?ooo`0/
0?ooo`030000003oool0oooo04P0oooo00<000000?ooo`3oool09`3oool002P0oooo00<000000?oo
o`3oool0H`3oool00`000000oooo0?ooo`0b0?ooo`030000003oool0oooo04H0oooo00<000000?oo
o`3oool0;03oool00`000000oooo0?ooo`170?ooo`030000003oool0oooo02P0oooo000X0?ooo`03
0000003oool0oooo06<0oooo00<000000?ooo`3oool0<P3oool00`000000oooo0?ooo`160?ooo`03
0000003oool0oooo02`0oooo00<000000?ooo`3oool0A`3oool00`000000oooo0?ooo`0X0?ooo`00
:03oool00`000000oooo0?ooo`1S0?ooo`030000003oool0oooo03<0oooo00<000000?ooo`3oool0
A03oool00`000000oooo0?ooo`0^0?ooo`030000003oool0oooo04H0oooo00<000000?ooo`3oool0
:03oool002P0oooo00<000000?ooo`3oool0HP3oool00`000000oooo0?ooo`0d0?ooo`030000003o
ool0oooo04@0oooo00<000000?ooo`3oool0;P3oool00`000000oooo0?ooo`150?ooo`030000003o
ool0oooo02T0oooo000X0?ooo`030000003oool0oooo05X0oooo00D0_g@0000000000000000007Bo
o`030?ooo`030000003oool0oooo03@0oooo00<000000?ooo`3oool0603oool00`3o_g@000000000
000300000005001d_`3oool0oooo0?ooo`3o_g@00`0000000`1d_ol0oooo0?ooo`0K0?ooo`030000
003oool0oooo02h0oooo00<000000?ooo`3o_g@01@0000001@00M;l0oooo0?ooo`3oool0_g@000<0
000000<0M;oo0?ooo`3oool0=@3oool00`000000oooo0?ooo`0E0?ooo`030?oo_`1d0000000000@0
000000D0M;oo0?ooo`3oool0oooo0?noM0030000000307Boo`3oool0oooo0080oooo000X0?ooo`03
0000003oool0oooo05T0oooo00L0_g@0001d_`3oool0oooo0?oOW0180000M;oo0080oooo00<00000
0?ooo`3oool0=03oool00`000000oooo0?ooo`0K0?ooo`0309a8B02Lgol0oooo00@0oooo00H0W4Qd
0;ooo`3oool0oono07@0M02ooolK0?ooo`030000003oool0oooo0300oooo00H000000?ooo`3oool0
oooo09a8B02Lgol40?ooo`070;md0000M;l0oooo0?ooo`3ogi`0B00007Boo`0f0?ooo`030000003o
ool0oooo01H0oooo00<0_g@00000M02oool00P3oool00`3OW7@0W=oo0?ooo`020?ooo`0609a8M02o
ool0oooo0?oo_`1d07@0_ooo0`3oool002P0oooo0`00001N0?ooo`050?noM000M;l0oooo0?ooo`00
0000=`3oool00`000000oooo0?ooo`0J0?ooo`0309a8B02Lgol0oooo00<0oooo00<0okmd001d_`3o
ool00P3oool00`3OW4P0B9cO0?ooo`0J0?ooo`030000003oool0oooo0300oooo00H000000?ooo`3o
ool0oooo09a8B02Lgol90?ooo`030?noM000M;l0oooo03@0oooo00<000000?ooo`3oool0603oool0
0`3o_g@0001809cOo`050?ooo`030?noM000M;l0oooo0080oooo00<0gia804RLg`3oool00P3oool0
02P0oooo00<000000?ooo`3oool0GP3oool01@3o_g@007Bo0?ooo`3oool0000003L0oooo00<00000
0?ooo`3oool06P3oool00`2LB4P0W=oo0?ooo`030?ooo`030=nLB018W=l0oooo0080oooo00<0okmd
001d_`3oool06P3oool00`000000oooo0?ooo`0`0?ooo`060000003oool0oooo0?ooo`2LB4P0W=oo
2@3oool00`3o_g@007Bo0?ooo`0d0?ooo`030000003oool0oooo01T0oooo00<0omnL04P00018W=l0
103oool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo0080oooo000X0?ooo`030000003o
ool0oooo05h0oooo00D0W4P007Boo`3oool0oooo0000000g0?ooo`030000003oool0oooo01X0oooo
00<0W4Q809cOo`3oool00`3oool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo01X0oooo
00<000000?ooo`3oool0<03oool01P000000oooo0?ooo`3oool0W4Q809cOo`T0oooo00<0W4P007Bo
o`3oool0=03oool00`000000oooo0?ooo`0K0?ooo`0309a80018W=l0oooo0080oooo00<0gia804RL
g`3oool00P3oool00`3o_g@007Bo0?ooo`020?ooo`00:03oool00`000000oooo0?ooo`1I0?ooo`03
0?oo_`1d000000000080000000@0B9cO0?ooo`3oool00000>03oool00`000000oooo0?ooo`0J0?oo
o`0309a8B02Lgol0oooo00<0oooo00<0gia804RLg`3oool00P3oool00`3o_g@007Bo0?ooo`0I0?oo
o`030000003oool0oooo0380oooo00D000000?ooo`3oool0W4Q809cOo`040?ooo`030?oo_`1d0000
00000080000000<0B9cO0?ooo`3oool0<`3oool00`000000oooo0?ooo`0M0?ooo`0609a8M02oool0
oooo0?ooo`3OW4P0B9cO0`3oool00`3o_g@007Bo0?ooo`020?ooo`00:03oool00`000000oooo0?oo
o`1I0?ooo`030?oo_`1d07@0_ooo00D0oooo00<000000?ooo`3oool0=`3oool00`000000oooo0?oo
o`0I0?ooo`0309a8B02Lgol0oooo00<0oooo00<0okmd04RLg`3oool00P3oool00`3OW4P0B9cO0?oo
o`0I0?ooo`030000003oool0oooo0380oooo00D000000?ooo`3oool0W4Q809cOo`040?ooo`030?oo
_`1d07@0_ooo03P0oooo00<000000?ooo`3oool0603oool00`3OW4P0M;oo0?ooo`020?ooo`060;md
001d_ol0oooo0?ooo`3o_g@0B9cO0`3oool00`3OW4P0B9cO0?ooo`020?ooo`00:03oool00`000000
oooo0?ooo`1I0?ooo`030?oo_`1d07@0_ooo00D0oooo00<000000?ooo`3oool0=`3oool00`000000
oooo0?ooo`0F0?ooo`050=nLB000000004RL09a8B02Lgol01@3oool01P2LB000M;oo0?ooo`3ogi`0
B01d0;oooaX0oooo00<000000?ooo`3oool0<P3oool2000000030018W02LB4P0W=oo00@0oooo00<0
oono07@0M02oool0>03oool00`000000oooo0?ooo`0H0?ooo`070?noM00007@0_ooo0?ooo`3o_g@0
001809cOo`030?ooo`0609a8001d_ol0oooo0?oOW01807@0_ooo0`3oool002P0oooo00<000000?oo
o`3oool0F@3oool00`3ookl0M00000000002000000040000M02oool0oooo000003T0oooo00<00000
0?ooo`3oool0603oool00`3OW4P0001809cOo`050?ooo`050?oo_`1d000000000000B02Lgol06P3o
ool00`000000oooo0?ooo`0d0?ooo`040000003OW4P0001809cOo`@0oooo00<0oono07@000000000
0P0000000`0007@0_ooo0?ooo`0b0?ooo`030000003oool0oooo01X0oooo00D0okmd000000000000
001809cOo`040?ooo`050?oo_`1d000000000000B02Lgol0103oool002P0oooo00<000000?ooo`3o
ool0H@3oool00`000000oooo0?ooo`0g0?ooo`030000003oool0oooo03l0oooo00<000000?ooo`3o
ool0=03oool00`000000oooo0?ooo`0o0?ooo`030000003oool0oooo02`0oooo000X0?ooo`030000
003oool0oooo0600oooo00<000000?ooo`3oool0>@3oool00`000000oooo0?ooo`0n0?ooo`030000
003oool0oooo03@0oooo00<000000?ooo`3oool0?`3oool00`000000oooo0?ooo`0/0?ooo`00:03o
ool00`000000oooo0?ooo`1P0?ooo`030000003oool0oooo03T0oooo00<000000?ooo`3oool0?@3o
ool00`000000oooo0?ooo`0f0?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3oool0;@3o
ool002P0oooo00<000000?ooo`3oool0H03oool00`000000oooo0?ooo`0i0?ooo`030000003oool0
oooo03d0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`0m0?ooo`030000003oool0
oooo02d0oooo000X0?ooo`030000003oool0oooo0600oooo00<000000?ooo`3oool0>@3oool00`00
0000oooo0?ooo`0m0?ooo`030000003oool0oooo03H0oooo00<000000?ooo`3oool0?@3oool00`00
0000oooo0?ooo`0]0?ooo`00:03oool00`000000oooo0?ooo`1P0?ooo`030000003oool0oooo03X0
oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`0h0?ooo`030000003oool0oooo03/0
oooo00<000000?ooo`3oool0;P3oool002P0oooo00<000000?ooo`3oool0G`3oool00`000000oooo
0?ooo`0k0?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0>03oool00`000000oooo
0?ooo`0k0?ooo`030000003oool0oooo02h0oooo000X0?ooo`030000003oool0oooo05l0oooo00<0
00000?ooo`3oool0>`3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo03P0oooo00<0
00000?ooo`3oool0>`3oool00`000000oooo0?ooo`0^0?ooo`007`3ooooo0000094000000@3oool0
02P0oooo00<000000?ooo`0000000P00000?0?ooo`030000003oool0oooo0100oooo00<000000?oo
o`3oool0403oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo0100oooo00<000000?oo
o`000000403oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo0100oooo00<000000?oo
o`3oool01@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0100oooo00<000000?oo
o`3oool0403oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00D0oooo00<000000?oo
o`3oool0403oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo00`0oooo00D000000?oo
o`3oool0oooo0000000B0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool03`3oool2
00000180oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`080?ooo`00:03oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0403oool00`00
0000oooo0?ooo`0@0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0403oool00`00
0000oooo0000000@0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0403oool00`00
0000oooo0?ooo`050?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0403oool00`00
0000oooo0?ooo`0@0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01@3oool00`00
0000oooo0?ooo`0@0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0303oool01@00
0000oooo0?ooo`3oool000000180oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0?
0?ooo`8000004P3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo00P0oooo000X0?oo
o`030000003oool0oooo00<0oooo00<000000?ooo`3oool0E`3oool00`000000oooo0000000n0?oo
o`030000003oool0oooo01/0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`0j0?oo
o`050000003oool0oooo0?ooo`000000=P3oool00`000000oooo0?ooo`0U0?ooo`030000003oool0
oooo00P0oooo000X0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0E`3oool00`00
0000oooo0?ooo`0m0?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3oool0?03oool00`00
0000oooo0?ooo`0g0?ooo`030000003oool0oooo0300oooo000X0?ooo`030000003oool0oooo00@0
oooo00<000000?ooo`3oool0E`3oool00`000000oooo0?ooo`0n0?ooo`030000003oool0oooo03L0
oooo00<000000?ooo`3oool0?03oool00`000000oooo0?ooo`0f0?ooo`030000003oool0oooo0340
oooo000X0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0EP3oool00`000000oooo
0?ooo`0n0?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3oool0?03oool00`000000oooo
0?ooo`0f0?ooo`030000003oool0oooo0340oooo000X0?ooo`030000003oool0oooo00H0oooo00<0
00000?ooo`3oool0E@3oool00`000000oooo0?ooo`0n0?ooo`030000003oool0oooo03H0oooo00<0
00000?ooo`3oool0?P3oool00`000000oooo0?ooo`0e0?ooo`030000003oool0oooo0340oooo000X
0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0E@3oool00`000000oooo0?ooo`0n
0?ooo`030000003oool0oooo03H0oooo00<000000?ooo`3oool0?P3oool00`000000oooo0?ooo`0d
0?ooo`030000003oool0oooo0380oooo000X0?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool0D`3oool00`000000oooo0?ooo`100?ooo`030000003oool0oooo03D0oooo00<000000?oo
o`3oool0?P3oool00`000000oooo0?ooo`0d0?ooo`030000003oool0oooo0380oooo000X0?ooo`03
0000003oool0oooo00L0oooo00<000000?ooo`3oool0D`3oool00`000000oooo0?ooo`100?ooo`03
0000003oool0oooo03@0oooo00<000000?ooo`3oool0@03oool00`000000oooo0?ooo`0c0?ooo`03
0000003oool0oooo0380oooo000X0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0
DP3oool00`000000oooo0?ooo`100?ooo`030000003oool0oooo03@0oooo00<000000?ooo`3oool0
@03oool00`000000oooo0?ooo`0b0?ooo`030000003oool0oooo03<0oooo000X0?ooo`030000003o
ool0oooo00P0oooo00<000000?ooo`3oool0DP3oool00`000000oooo0?ooo`100?ooo`030000003o
ool0oooo03@0oooo00<000000?ooo`3oool0@03oool00`000000oooo0?ooo`0b0?ooo`030000003o
ool0oooo03<0oooo000X0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0D@3oool0
0`000000oooo0?ooo`110?ooo`030000003oool0oooo03<0oooo00<000000?ooo`3oool0@@3oool0
0`000000oooo0?ooo`0`0?ooo`030000003oool0oooo03@0oooo000X0?ooo`030000003oool0oooo
00T0oooo00<000000?ooo`3oool0D03oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo
0380oooo00<000000?ooo`3oool0@P3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo
03@0oooo000X0?ooo`<000002P3oool00`000000oooo0?ooo`1?0?ooo`030000003oool0oooo0480
oooo00<000000?ooo`3oool0<P3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo0300
oooo00<000000?ooo`3oool0=03oool002P0oooo00<000000?ooo`3oool02P3oool00`000000oooo
0?ooo`1?0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0<P3oool00`000000oooo
0?ooo`130?ooo`030000003oool0oooo02h0oooo00<000000?ooo`3oool0=@3oool002P0oooo00<0
00000?ooo`3oool02`3oool00`000000oooo0?ooo`1>0?ooo`030000003oool0oooo04<0oooo00<0
00000?ooo`3oool0<03oool00`000000oooo0?ooo`140?ooo`030000003oool0oooo02h0oooo00<0
00000?ooo`3oool0=@3oool002P0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`1>
0?ooo`030000003oool0oooo04<0oooo00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`14
0?ooo`030000003oool0oooo02h0oooo00<000000?ooo`3oool0=@3oool002P0oooo00<000000?oo
o`3oool02`3oool00`000000oooo0?ooo`1=0?ooo`030000003oool0oooo04@0oooo00<000000?oo
o`3oool0<03oool00`000000oooo0?ooo`150?ooo`030000003oool0oooo02`0oooo00<000000?oo
o`3oool0=P3oool002P0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`1<0?ooo`03
0000003oool0oooo04@0oooo00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`150?ooo`03
0000003oool0oooo02`0oooo00<000000?ooo`3oool0=P3oool002P0oooo00<000000?ooo`3oool0
303oool00`000000oooo0?ooo`1<0?ooo`030000003oool0oooo04D0oooo00<000000?ooo`3oool0
;P3oool00`000000oooo0?ooo`160?ooo`030000003oool0oooo02/0oooo00<000000?ooo`3oool0
=`3oool002P0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`1;0?ooo`030000003o
ool0oooo04D0oooo00<000000?ooo`3oool0;P3oool00`000000oooo0?ooo`170?ooo`030000003o
ool0oooo02X0oooo00<000000?ooo`3oool0=`3oool002P0oooo00<000000?ooo`3oool03@3oool0
0`000000oooo0?ooo`1;0?ooo`030000003oool0oooo04D0oooo00<000000?ooo`3oool0;P3oool0
0`000000oooo0?ooo`170?ooo`030000003oool0oooo02X0oooo00<000000?ooo`3oool0=`3oool0
02P0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`1:0?ooo`030000003oool0oooo
04H0oooo00<000000?ooo`3oool0;@3oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo
02P0oooo00<000000?ooo`3oool0>03oool002P0oooo00<000000?ooo`3oool03P3oool00`000000
oooo0?ooo`190?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3oool0;03oool00`000000
oooo0?ooo`190?ooo`030000003oool0oooo02P0oooo00<000000?ooo`3oool0>03oool002P0oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo04L0oooo
00<000000?ooo`3oool0;03oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo02P0oooo
00<000000?ooo`3oool0>03oool002P0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`190?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3oool0:`3oool00`000000oooo0?oo
o`1;0?ooo`030000003oool0oooo02H0oooo00<000000?ooo`3oool0>@3oool002P0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`190?ooo`030000003oool0oooo04L0oooo00<00000
0?ooo`3oool0:`3oool00`000000oooo0?ooo`1;0?ooo`030000003oool0oooo02H0oooo00<00000
0?ooo`3oool0>@3oool002P0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`170?oo
o`030000003oool0oooo04T0oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`1;0?oo
o`030000003oool0oooo02D0oooo00<000000?ooo`3oool0>P3oool002P0oooo0`00000?0?ooo`03
0000003oool0oooo04L0oooo00<000000?ooo`3oool0B@3oool00`000000oooo0?ooo`0Z0?ooo`03
0000003oool0oooo04`0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0j0?ooo`00
:03oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3oool0
B@3oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0oooo04d0oooo00<000000?ooo`3oool0
903oool00`000000oooo0?ooo`0j0?ooo`00:03oool00`000000oooo0?ooo`0@0?ooo`030000003o
ool0oooo04H0oooo00<000000?ooo`3oool0B@3oool00`000000oooo0?ooo`0Y0?ooo`030000003o
ool0oooo04d0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0k0?ooo`00:03oool0
0`000000oooo0?ooo`0@0?ooo`030000003oool0oooo04H0oooo00<000000?ooo`3oool0BP3oool0
0`000000oooo0?ooo`0X0?ooo`030000003oool0oooo04h0oooo00<000000?ooo`3oool08P3oool0
0`000000oooo0?ooo`0k0?ooo`00:03oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo
04D0oooo00<000000?ooo`3oool0B`3oool00`000000oooo0?ooo`0W0?ooo`030000003oool0oooo
04l0oooo00<000000?ooo`3oool08@3oool00`000000oooo0?ooo`0l0?ooo`00:03oool00`000000
oooo0?ooo`0@0?ooo`030000003oool0oooo04D0oooo00<000000?ooo`3oool0B`3oool00`000000
oooo0?ooo`0W0?ooo`030000003oool0oooo0500oooo00<000000?ooo`3oool0803oool00`000000
oooo0?ooo`0l0?ooo`00:03oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo04@0oooo
00<000000?ooo`3oool0B`3oool00`000000oooo0?ooo`0W0?ooo`030000003oool0oooo0500oooo
00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0l0?ooo`00:03oool00`000000oooo0?oo
o`0A0?ooo`030000003oool0oooo04@0oooo00<000000?ooo`3oool0C03oool00`000000oooo0?oo
o`0V0?ooo`030000003oool0oooo0540oooo00<000000?ooo`3oool07P3oool00`000000oooo0?oo
o`0m0?ooo`00:03oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo04@0oooo00<00000
0?ooo`3oool0C03oool00`000000oooo0?ooo`0U0?ooo`030000003oool0oooo0580oooo00<00000
0?ooo`3oool07P3oool00`000000oooo0?ooo`0m0?ooo`00:03oool00`000000oooo0?ooo`0B0?oo
o`030000003oool0oooo0480oooo00<000000?ooo`3oool0C@3oool00`000000oooo0?ooo`0U0?oo
o`030000003oool0oooo05<0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`0m0?oo
o`00:03oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3o
ool0CP3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo05<0oooo00<000000?ooo`3o
ool0703oool00`000000oooo0?ooo`0n0?ooo`00:03oool00`000000oooo0?ooo`0B0?ooo`030000
003oool0oooo0480oooo00<000000?ooo`3oool0CP3oool00`000000oooo0?ooo`0S0?ooo`030000
003oool0oooo05D0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`0n0?ooo`00:03o
ool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3oool0CP3o
ool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo05D0oooo00<000000?ooo`3oool06P3o
ool00`000000oooo0?ooo`0o0?ooo`00:03oool00`000000oooo0?ooo`0C0?ooo`030000003oool0
oooo0440oooo00<000000?ooo`3oool0CP3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0
oooo05H0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0o0?ooo`00:03oool30000
01<0oooo00<000000?ooo`3oool0@03oool00`000000oooo0?ooo`1@0?ooo`030000003oool0oooo
0240oooo00<000000?ooo`3oool0E`3oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo
0400oooo000X0?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool0@03oool00`000000
oooo0?ooo`1@0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool0F03oool00`000000
oooo0?ooo`0G0?ooo`030000003oool0oooo0400oooo000X0?ooo`030000003oool0oooo01@0oooo
00<000000?ooo`3oool0?`3oool00`000000oooo0?ooo`1@0?ooo`030000003oool0oooo0240oooo
00<000000?ooo`3oool0F03oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo0440oooo
000X0?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3oool0?`3oool00`000000oooo0?oo
o`1A0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0F@3oool00`000000oooo0?oo
o`0E0?ooo`030000003oool0oooo0440oooo000X0?ooo`030000003oool0oooo01@0oooo00<00000
0?ooo`3oool0?`3oool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo01l0oooo00<00000
0?ooo`3oool0FP3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo0480oooo000X0?oo
o`030000003oool0oooo01@0oooo00<000000?ooo`3oool0?P3oool00`000000oooo0?ooo`1C0?oo
o`030000003oool0oooo01h0oooo00<000000?ooo`3oool0F`3oool00`000000oooo0?ooo`0C0?oo
o`030000003oool0oooo0480oooo000X0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3o
ool0?@3oool00`000000oooo0?ooo`1C0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3o
ool0F`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo04<0oooo000X0?ooo`030000
003oool0oooo01D0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`1C0?ooo`030000
003oool0oooo01d0oooo00<000000?ooo`3oool0G@3oool00`000000oooo0?ooo`0@0?ooo`030000
003oool0oooo04@0oooo000X0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool0?@3o
ool00`000000oooo0?ooo`1D0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool0GP3o
ool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo04@0oooo000X0?ooo`030000003oool0
oooo01D0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`1D0?ooo`030000003oool0
oooo01`0oooo00<000000?ooo`3oool0GP3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0
oooo04D0oooo000X0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool0?03oool00`00
0000oooo0?ooo`1E0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0H03oool00`00
0000oooo0?ooo`0<0?ooo`030000003oool0oooo04H0oooo000;0?ooo`050?noM000000000000000
001d_ol01@3oool00`2oM0000000001d_`030?ooo`030?oo_`1d0000000000@0000000<0M;oo0?oo
o`3oool00`3oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo03/0oooo00<000000?oo
o`3oool0EP3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo0640oooo00<000000?oo
o`3oool02P3oool00`000000oooo0?ooo`170?ooo`002`3oool01P2LB7@0_ooo0?ooo`3ookl0M01d
0;ooo`@0oooo00<0_g@000000000M;l0103oool00`2oM000001d0;ooo`020?ooo`030=nLM02Lgol0
oooo00@0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`0k0?ooo`030000003oool0
oooo05H0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`1S0?ooo`030000003oool0
oooo00P0oooo00<000000?ooo`3oool0B03oool000X0oooo00<0okmd001d_`3oool00P3oool00`3O
W4P0B9cO0?ooo`0;0?ooo`030?noM00004P0W=oo00P0oooo00<000000?ooo`3oool05`3oool00`00
0000oooo0?ooo`0j0?ooo`030000003oool0oooo05L0oooo00<000000?ooo`3oool0603oool00`00
0000oooo0?ooo`1T0?ooo`8000001P3oool2000004/0oooo000:0?ooo`030=nLB018W=l0oooo0080
oooo00<0okmd001d_`3oool0303oool00`3ogi`0B00004RLg`070?ooo`030000003oool0oooo01L0
oooo00<000000?ooo`3oool0>P3oool00`000000oooo0?ooo`1G0?ooo`030000003oool0oooo01P0
oooo00<000000?ooo`3oool0IP3oool6000004d0oooo000:0?ooo`030=nLB018W=l0oooo0080oooo
00<0okmd001d_`3oool03P3oool00`2LB000B9cO0?ooo`050?ooo`@000005P3oool00`000000oooo
0?ooo`0j0?ooo`030000003oool0oooo05P0oooo00<000000?ooo`3oool05P3oool00`000000oooo
0?ooo`2j0?ooo`002P3oool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo00l0oooo00<0
W4Qd0;ooo`3oool0103oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo03T0oooo00<0
00000?ooo`3oool0F@3oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo0;X0oooo000:
0?ooo`030?noM018W=l0oooo0080oooo00<0gia804RLg`3oool02P3oool00`3OW4P0M;oo0?ooo`02
0?ooo`030;md001d_ol0oooo00@0oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`0h
0?ooo`030000003oool0oooo05X0oooo00<000000?ooo`3oool0503oool00`000000oooo0?ooo`2k
0?ooo`002`3oool01P2LB000M;oo0?ooo`3ogi`0B01d0;ooo`/0oooo00L0okmd0000M02oool0oooo
0?noM00004P0W=oo00D0oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`0h0?ooo`03
0000003oool0oooo05X0oooo00<000000?ooo`3oool0503oool00`000000oooo0?ooo`2k0?ooo`00
2`3oool01@3ookl0M0000000000004P0W=oo00d0oooo00D0okmd000000000000001809cOo`060?oo
o`030000003oool0oooo01P0oooo00<000000?ooo`3oool0>03oool00`000000oooo0?ooo`1K0?oo
o`030000003oool0oooo0180oooo00<000000?ooo`3oool0_03oool002P0oooo00<000000?ooo`3o
ool06@3oool00`000000oooo0?ooo`0g0?ooo`030000003oool0oooo05/0oooo00<000000?ooo`3o
ool04P3oool00`000000oooo0?ooo`2l0?ooo`00:03oool00`000000oooo0?ooo`0I0?ooo`030000
003oool0oooo03H0oooo00<000000?ooo`3oool0G03oool00`000000oooo0?ooo`0A0?ooo`030000
003oool0oooo0;d0oooo000X0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool0=P3o
ool00`000000oooo0?ooo`1M0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0_@3o
ool002P0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0f0?ooo`030000003oool0
oooo05d0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`2n0?ooo`00:03oool00`00
0000oooo0?ooo`0J0?ooo`030000003oool0oooo03D0oooo00<000000?ooo`3oool0GP3oool00`00
0000oooo0?ooo`0>0?ooo`030000003oool0oooo0;h0oooo000X0?ooo`030000003oool0oooo01X0
oooo00<000000?ooo`3oool0=@3oool00`000000oooo0?ooo`1N0?ooo`030000003oool0oooo00d0
oooo00<000000?ooo`3oool0_`3oool002P0oooo00<000000?ooo`3oool06P3oool00`000000oooo
0?ooo`0d0?ooo`030000003oool0oooo0600oooo00<000000?ooo`3oool02`3oool00`000000oooo
0?ooo`300?ooo`00:03oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo03<0oooo00<0
00000?ooo`3oool0H03oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo0<40oooo000X
0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool0<`3oool00`000000oooo0?ooo`1Q
0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0`@3oool002P0oooo00<000000?oo
o`3oool06`3oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo0680oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`320?ooo`00:03oool3000001/0oooo00<000000?ooo`3o
ool0<`3oool00`000000oooo0?ooo`1S0?ooo`<00000103oool200000<D0oooo000X0?ooo`030000
003oool0oooo01`0oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`1V0?ooo`D00000
a`3oool002P0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`0a0?ooo`030000003o
ool0oooo0?l0oooo<`3oool002P0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`0a
0?ooo`030000003oool0oooo0?l0oooo<`3oool002P0oooo00<000000?ooo`3oool07@3oool00`00
0000oooo0?ooo`0`0?ooo`030000003oool0oooo0?l0oooo<`3oool002P0oooo00<000000?ooo`3o
ool07@3oool00`000000oooo0?ooo`0`0?ooo`030000003oool0oooo0?l0oooo<`3oool002P0oooo
00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo0?l0oooo
=03oool002P0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`0_0?ooo`030000003o
ool0oooo0?l0oooo=03oool002P0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0^
0?ooo`030000003oool0oooo0?l0oooo=03oool002P0oooo00<000000?ooo`3oool07P3oool00`00
0000oooo0?ooo`0^0?ooo`030000003oool0oooo0?l0oooo=03oool002P0oooo00<000000?ooo`3o
ool07P3oool00`000000oooo0?ooo`0^0?ooo`030000003oool0oooo0?l0oooo=03oool002P0oooo
00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo0?l0oooo
=@3oool002P0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0/0?ooo`030000003o
ool0oooo0?l0oooo=@3oool002P0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0/
0?ooo`030000003oool0oooo0?l0oooo=@3oool002P0oooo0`00000O0?ooo`030000003oool0oooo
02`0oooo00<000000?ooo`3oool0o`3ooole0?ooo`00:03oool00`000000oooo0?ooo`0P0?ooo`03
0000003oool0oooo02/0oooo00<000000?ooo`3oool0o`3ooole0?ooo`00:03oool00`000000oooo
0?ooo`0P0?ooo`030000003oool0oooo02X0oooo00<000000?ooo`3oool0o`3ooolf0?ooo`00:03o
ool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo02X0oooo00<000000?ooo`3oool0o`3o
oolf0?ooo`00:03oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo02X0oooo00<00000
0?ooo`3oool0o`3ooolf0?ooo`00:03oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo
02T0oooo00<000000?ooo`3oool0o`3ooolf0?ooo`00:03oool00`000000oooo0?ooo`0Q0?ooo`03
0000003oool0oooo02T0oooo00<000000?ooo`3oool0o`3ooolf0?ooo`00:03oool00`000000oooo
0?ooo`0Q0?ooo`030000003oool0oooo02P0oooo00<000000?ooo`3oool0o`3ooolg0?ooo`00:03o
ool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo02P0oooo00<000000?ooo`3oool0o`3o
oolg0?ooo`00:03oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo02L0oooo00<00000
0?ooo`3oool0o`3ooolg0?ooo`00:03oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo
02L0oooo00<000000?ooo`3oool0o`3ooolg0?ooo`00:03oool00`000000oooo0?ooo`0R0?ooo`03
0000003oool0oooo02H0oooo00<000000?ooo`3oool0o`3ooolh0?ooo`00:03oool00`000000oooo
0?ooo`0S0?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3oool0o`3ooolh0?ooo`00:03o
ool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3oool0o`3o
oolh0?ooo`00:03oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02D0oooo00<00000
0?ooo`3oool0o`3ooolh0?ooo`00:03oool3000002<0oooo00<000000?ooo`3oool0903oool00`00
0000oooo0?ooo`3o0?ooocT0oooo000X0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3o
ool08`3oool00`000000oooo0?ooo`3o0?ooocT0oooo000X0?ooo`030000003oool0oooo02@0oooo
00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`3o0?ooocT0oooo000X0?ooo`030000003o
ool0oooo02@0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`3o0?ooocT0oooo000X
0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`3o
0?ooocX0oooo000X0?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3oool08@3oool00`00
0000oooo0?ooo`3o0?ooocX0oooo000X0?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3o
ool08@3oool00`000000oooo0?ooo`3o0?ooocX0oooo000X0?ooo`030000003oool0oooo02D0oooo
00<000000?ooo`3oool08@3oool00`000000oooo0?ooo`3o0?ooocX0oooo000X0?ooo`030000003o
ool0oooo02D0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`3o0?oooc/0oooo000X
0?ooo`030000003oool0oooo02H0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`3o
0?oooc/0oooo000X0?ooo`030000003oool0oooo02H0oooo00<000000?ooo`3oool07`3oool00`00
0000oooo0?ooo`3o0?oooc/0oooo000;0?ooo`050?noM000000000000000001d_ol01@3oool00`2o
M0000000001d_`060?ooo`050?oOW018000000000000001d_ol01@3oool00`000000oooo0?ooo`0V
0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0o`3ooolk0?ooo`002`3oool01P2L
B7@0_ooo0?ooo`3ookl0M01d0;ooo`@0oooo00<0_g@000000000M;l0203oool00`2oM000M;oo0?oo
o`050?ooo`030000003oool0oooo02L0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?oo
o`3o0?oooc`0oooo000:0?ooo`030?noM000M;l0oooo0080oooo00<0gia804RLg`3oool03P3oool0
0`2oM000M;oo0?ooo`050?ooo`030000003oool0oooo02L0oooo00<000000?ooo`3oool07@3oool0
0`000000oooo0?ooo`3o0?oooc`0oooo000:0?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d
_`3oool02P3oool00`3OW4P00000000000030000000307Boo`3oool0oooo00<0oooo00<000000?oo
o`3oool09`3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo0?l0oooo?03oool000X0
oooo00<0gia804RLg`3oool00P3oool00`3o_g@007Bo0?ooo`0:0?ooo`060?noM00007@0_ooo0?oo
o`2oM000M;oo1P3oool4000002L0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`3o
0?ooocd0oooo000:0?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool02`3oool01@3O
W4P007Bo0?ooo`2oM000M;oo00H0oooo00<000000?ooo`3oool0:03oool00`000000oooo0?ooo`0K
0?ooo`030000003oool0oooo0?l0oooo?@3oool000X0oooo00<0okmd04RLg`3oool00P3oool00`3O
W4P0B9cO0?ooo`0<0?ooo`0409a80018W=l0_g@007Boo`H0oooo00<000000?ooo`3oool0:@3oool0
0`000000oooo0?ooo`0J0?ooo`030000003oool0oooo0?l0oooo?@3oool000/0oooo00H0W4P007Bo
o`3oool0omnL04P0M02oool=0?ooo`040?oOW01804P0B4P007Boo`H0oooo00<000000?ooo`3oool0
:@3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo0?l0oooo?@3oool000/0oooo00D0
oono07@000000000001809cOo`0?0?ooo`030?noM0000000M;oo00H0oooo00<000000?ooo`3oool0
:@3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo0?l0oooo?P3oool002P0oooo00<0
00000?ooo`3oool0:P3oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo0?l0oooo?P3o
ool002P0oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`0H0?ooo`030000003oool0
oooo0?l0oooo?P3oool002P0oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`0G0?oo
o`030000003oool0oooo0?l0oooo?`3oool002P0oooo00<000000?ooo`3oool0:`3oool00`000000
oooo0?ooo`0F0?ooo`030000003oool0oooo0?l0oooo?`3oool002P0oooo00<000000?ooo`3oool0
:`3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo0?l0oooo@03oool002P0oooo00<0
00000?ooo`3oool0;03oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo0?l0oooo@03o
ool002P0oooo00<000000?ooo`3oool0;03oool00`000000oooo0?ooo`0D0?ooo`030000003oool0
oooo0?l0oooo@03oool002P0oooo00<000000?ooo`3oool0;@3oool00`000000oooo0?ooo`0B0?oo
o`030000003oool0oooo0?l0oooo@@3oool002P0oooo00<000000?ooo`3oool0;@3oool00`000000
oooo0?ooo`0B0?ooo`030000003oool0oooo0?l0oooo@@3oool002P0oooo0`00000^0?ooo`030000
003oool0oooo0100oooo00<000000?ooo`3oool0o`3ooom20?ooo`00:03oool00`000000oooo0?oo
o`0^0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0o`3ooom20?ooo`00:03oool0
0`000000oooo0?ooo`0^0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0o`3ooom3
0?ooo`00:03oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00h0oooo00<000000?oo
o`3oool0o`3ooom30?ooo`00:03oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00d0
oooo00<000000?ooo`3oool0o`3ooom40?ooo`00:03oool00`000000oooo0?ooo`0`0?ooo`030000
003oool0oooo00`0oooo00<000000?ooo`3oool0o`3ooom40?ooo`00:03oool00`000000oooo0?oo
o`0a0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0o`3ooom50?ooo`00:03oool0
0`000000oooo0?ooo`0b0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0o`3ooom6
0?ooo`00:03oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo00H0oooo00<000000?oo
o`3oool0o`3ooom70?ooo`00:03oool00`000000oooo0?ooo`0d0?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool0o`3ooom70?ooo`00:03oool00`000000oooo0?ooo`0d0?ooo`800000
103oool200000?l0ooooBP3oool002P0oooo00<000000?ooo`3oool0=@3oool600000?l0ooooB`3o
ool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?oo
ohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo0`00003o0?ooohH0oooo
000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon6
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 431}, {265.813, 0}} -> {-2.15489, -0.365664, \
0.0788458, 0.00510307}}]
}, Closed]],

Cell["\<\
A brief summary of some of the more common special functions is given in the \
accompanying table.  In some cases we have included representative argument \
sequences but have not attempted to cover all available variations.  \
Similarly, some families of special functions, such as the hypergeometric \
functions, contain many more members than listed here.  Suffice it to say \
that practically any special function that appears more than once in the \
mathematical literature is available and can be found relatively quickly \
using the Help Browser.\
\>", "Text"],

Cell[BoxData[
    StyleBox[GridBox[{
          {
            StyleBox[\(Common\ Special\ Functions\),
              FontFamily->"Times New Roman",
              FontWeight->"Bold"]},
          {
            StyleBox[GridBox[{
                  {
                    StyleBox["Gamma",
                      "Text"], \(Gamma[z], \ Gamma[a, z]\)},
                  {
                    StyleBox["error",
                      "Text"], \(Erf[z], \ Erfc[a, z], Erfi[z]\)},
                  {
                    StyleBox[\(Fresnel\ integrals\),
                      "Text"], \(FresnelS, \ FresnelC\)},
                  {
                    StyleBox[\(sine, \ cos\ integrals\),
                      "Text"], \(SinIntegral, \ CosIntegral\)},
                  {
                    StyleBox["Legendre",
                      "Text"], \(LegendreP[n, x], \ LegendreQ\)},
                  {
                    StyleBox[\(spherical\ harmonics\),
                      "Text"], \(SphericalHarmonicY[\[Lambda], 
                      m, \[Theta], \[Phi]]\)},
                  {
                    StyleBox["Bessel",
                      "Text"], \(BesselJ[n, z], BesselY\)},
                  {
                    StyleBox[\(modified\ Bessel\),
                      "Text"], \(BesselK[n, z], BesselI\)},
                  {
                    StyleBox["Laguerre",
                      "Text"], "LaguerreL"},
                  {
                    StyleBox["Hermite",
                      "Text"], \(HermiteH[n, x]\)},
                  {
                    StyleBox["hypergeometric",
                      "Text"], "HypergeometricPFQ"}
                  },
                ColumnAlignments->{Left},
                GridFrame->True],
              "Input",
              Background->None]}
          }],
      Background->RGBColor[0.500008, 0.996109, 0.996109]]], "Text",
  TextAlignment->Center,
  TextJustification->0],

Cell["\<\
Display the first 10 Hermite polynomials.  Use TableForm to obtain pleasing \
output.\
\>", "Exercise"],

Cell["Plot FresnelS[x] for {x,-4,4}.", "Exercise"],

Cell["Which types of Mathieu functions are available?", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting", "Subsection"],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " provides a vast array of plotting and graphics tools, but for now it is \
sufficient to introduce only the most basic.  A basic plot of a function of a \
single variable is produced by the command"
}], "Text"],

Cell[TextData[{
  ButtonBox["Plot",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput"],
  StyleBox["f[x],{x,xmin,xmax}", "InlineInput"],
  StyleBox["]", "InlineInput"]
}], "Text",
  TextAlignment->Center,
  TextJustification->0,
  FontWeight->"Bold"],

Cell[TextData[{
  "where ",
  StyleBox["f[x]", "InlineInput"],
  " is any built-in or user-defined function which evaluates to a real number \
given a numerical argument ",
  StyleBox["x", "InlineInput"],
  " between ",
  StyleBox["xmin", "InlineInput"],
  " and ",
  StyleBox["xmax", "InlineInput"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(Plot[ArcSin[x], {x, \(-1\), 1}];\)\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.476191 0.309017 0.187407 [
[.02381 .29652 -6 -9 ]
[.02381 .29652 6 0 ]
[.2619 .29652 -12 -9 ]
[.2619 .29652 12 0 ]
[.7381 .29652 -9 -9 ]
[.7381 .29652 9 0 ]
[.97619 .29652 -3 -9 ]
[.97619 .29652 3 0 ]
[.4875 .02791 -24 -4.5 ]
[.4875 .02791 0 4.5 ]
[.4875 .12161 -12 -4.5 ]
[.4875 .12161 0 4.5 ]
[.4875 .21531 -24 -4.5 ]
[.4875 .21531 0 4.5 ]
[.4875 .40272 -18 -4.5 ]
[.4875 .40272 0 4.5 ]
[.4875 .49642 -6 -4.5 ]
[.4875 .49642 0 4.5 ]
[.4875 .59013 -18 -4.5 ]
[.4875 .59013 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 .30902 m
.02381 .31527 L
s
[(-1)] .02381 .29652 0 1 Mshowa
.2619 .30902 m
.2619 .31527 L
s
[(-0.5)] .2619 .29652 0 1 Mshowa
.7381 .30902 m
.7381 .31527 L
s
[(0.5)] .7381 .29652 0 1 Mshowa
.97619 .30902 m
.97619 .31527 L
s
[(1)] .97619 .29652 0 1 Mshowa
.125 Mabswid
.07143 .30902 m
.07143 .31277 L
s
.11905 .30902 m
.11905 .31277 L
s
.16667 .30902 m
.16667 .31277 L
s
.21429 .30902 m
.21429 .31277 L
s
.30952 .30902 m
.30952 .31277 L
s
.35714 .30902 m
.35714 .31277 L
s
.40476 .30902 m
.40476 .31277 L
s
.45238 .30902 m
.45238 .31277 L
s
.54762 .30902 m
.54762 .31277 L
s
.59524 .30902 m
.59524 .31277 L
s
.64286 .30902 m
.64286 .31277 L
s
.69048 .30902 m
.69048 .31277 L
s
.78571 .30902 m
.78571 .31277 L
s
.83333 .30902 m
.83333 .31277 L
s
.88095 .30902 m
.88095 .31277 L
s
.92857 .30902 m
.92857 .31277 L
s
.25 Mabswid
0 .30902 m
1 .30902 L
s
.5 .02791 m
.50625 .02791 L
s
[(-1.5)] .4875 .02791 1 0 Mshowa
.5 .12161 m
.50625 .12161 L
s
[(-1)] .4875 .12161 1 0 Mshowa
.5 .21531 m
.50625 .21531 L
s
[(-0.5)] .4875 .21531 1 0 Mshowa
.5 .40272 m
.50625 .40272 L
s
[(0.5)] .4875 .40272 1 0 Mshowa
.5 .49642 m
.50625 .49642 L
s
[(1)] .4875 .49642 1 0 Mshowa
.5 .59013 m
.50625 .59013 L
s
[(1.5)] .4875 .59013 1 0 Mshowa
.125 Mabswid
.5 .04665 m
.50375 .04665 L
s
.5 .06539 m
.50375 .06539 L
s
.5 .08413 m
.50375 .08413 L
s
.5 .10287 m
.50375 .10287 L
s
.5 .14035 m
.50375 .14035 L
s
.5 .15909 m
.50375 .15909 L
s
.5 .17783 m
.50375 .17783 L
s
.5 .19657 m
.50375 .19657 L
s
.5 .23405 m
.50375 .23405 L
s
.5 .25279 m
.50375 .25279 L
s
.5 .27154 m
.50375 .27154 L
s
.5 .29028 m
.50375 .29028 L
s
.5 .32776 m
.50375 .32776 L
s
.5 .3465 m
.50375 .3465 L
s
.5 .36524 m
.50375 .36524 L
s
.5 .38398 m
.50375 .38398 L
s
.5 .42146 m
.50375 .42146 L
s
.5 .4402 m
.50375 .4402 L
s
.5 .45894 m
.50375 .45894 L
s
.5 .47768 m
.50375 .47768 L
s
.5 .51516 m
.50375 .51516 L
s
.5 .53391 m
.50375 .53391 L
s
.5 .55265 m
.50375 .55265 L
s
.5 .57139 m
.50375 .57139 L
s
.5 .00917 m
.50375 .00917 L
s
.5 .60887 m
.50375 .60887 L
s
.25 Mabswid
.5 0 m
.5 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .01472 m
.02499 .02781 L
.02605 .03284 L
.02846 .04084 L
.03279 .05108 L
.04262 .06749 L
.05281 .08038 L
.06244 .09065 L
.10458 .1254 L
.14299 .15017 L
.18386 .17296 L
.22321 .19277 L
.26105 .2105 L
.30133 .22836 L
.34011 .24484 L
.38133 .26182 L
.42104 .2778 L
.45923 .29295 L
.49988 .30897 L
.53901 .32439 L
.58059 .34089 L
.62066 .35702 L
.65921 .3729 L
.70021 .39034 L
.7397 .40787 L
.77767 .42569 L
.81809 .44611 L
.857 .46787 L
.89836 .49473 L
.91906 .51065 L
.93821 .52804 L
.95662 .54949 L
.96592 .56441 L
.96847 .56961 L
.97122 .57629 L
.97248 .57999 L
.97381 .58466 L
.97495 .58986 L
.97619 .60332 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.875},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oe`3oool0
0`000000oooo0?ooo`3F0?ooo`00e`3oool00`000000oooo0?ooo`3F0?ooo`00e`3oool00`000000
oooo0?ooo`3F0?ooo`00e`3oool00`000000oooo0?ooo`3F0?ooo`00e`3oool300000=H0oooo003G
0?ooo`030000003oool0oooo0=H0oooo000:0?ooo`030000003oool0oooo0<X0oooo00<000000?oo
o`3oool0eP3oool000X0oooo00<000000?ooo`3oool0bP3oool00`000000oooo0?ooo`3F0?ooo`00
2P3oool00`000000oooo0?ooo`2[0?ooo`030?noM0000000000000<0000000<007Bo0?ooo`3oool0
0P3oool00`2oM0000000001d_`050?ooo`050;md0000000000000000001d_ol01`3oool00`000000
oooo0?ooo`3F0?ooo`002P3oool00`000000oooo0?ooo`2^0?ooo`0309a8B02Lgol0oooo00D0oooo
00<0_g@000000000M;l0103oool01`2oM00007Bo0?ooo`3oool0omnL04P0001d_ol01P3oool00`00
0000oooo0?ooo`3F0?ooo`002`3oool00`000000oooo0?ooo`2]0?ooo`0309a8B02Lgol0oooo0140
oooo00<0okmd001d_`3oool01@3oool00`000000oooo0?ooo`3F0?ooo`002`3oool00`000000oooo
0?ooo`2]0?ooo`0309a8B02Lgol0oooo0140oooo00<0okmd001d_`3oool01@3oool00`000000oooo
0?ooo`3F0?ooo`002`3oool00`000000oooo0?ooo`2Q0?ooo`0309a800000000000000<0000000<0
04RL0?ooo`3oool00`3oool00`2LB4P0W=oo0?ooo`0A0?ooo`0309a8001d_ol0oooo00D0oooo1000
003E0?ooo`002`3oool00`000000oooo0?ooo`2]0?ooo`0309a8B02Lgol0oooo00`0oooo00<0oono
07@0000000000P0000000`18W=l0oooo0?ooo`050?ooo`030000003oool0oooo0=H0oooo000;0?oo
o`030000003oool0oooo0:d0oooo00<0W4Q809cOo`3oool0303oool00`3ookl0M01d0;ooo`0:0?oo
o`030000003oool0oooo0=H0oooo000;0?ooo`030000003oool0oooo0:X0oooo00D0gia800000000
B9`0W4Q809cOo`0=0?ooo`030?oo_`1d07@0_ooo00X0oooo00<000000?ooo`3oool0eP3oool000`0
oooo00<000000?ooo`3oool0Z`3oool00`3OW4P0001809cOo`0=0?ooo`030?oo_`1d000000000080
000000<0001d0;ooo`3oool01@3oool00`000000oooo0?ooo`3F0?ooo`00303oool00`000000oooo
0?ooo`380?ooo`030000003oool0oooo0=H0oooo000<0?ooo`030000003oool0oooo0<P0oooo00<0
00000?ooo`3oool0eP3oool000d0oooo00<000000?ooo`3oool0a`3oool00`000000oooo0?ooo`3F
0?ooo`003@3oool00`000000oooo0?ooo`370?ooo`<00000eP3oool000h0oooo00<000000?ooo`3o
ool0aP3oool00`000000oooo0?ooo`3F0?ooo`003P3oool00`000000oooo0?ooo`360?ooo`030000
003oool0oooo0=H0oooo000?0?ooo`030000003oool0oooo0<D0oooo00<000000?ooo`3oool0eP3o
ool000l0oooo00<000000?ooo`3oool0a@3oool00`000000oooo0?ooo`3F0?ooo`00403oool00`00
0000oooo0?ooo`340?ooo`030000003oool0oooo0=H0oooo000@0?ooo`030000003oool0oooo0<@0
oooo00<000000?ooo`3oool0eP3oool00140oooo00<000000?ooo`3oool0``3oool00`000000oooo
0?ooo`3F0?ooo`004@3oool00`000000oooo0?ooo`330?ooo`<00000eP3oool00180oooo00<00000
0?ooo`3oool0`P3oool00`000000oooo0?ooo`3F0?ooo`004`3oool00`000000oooo0?ooo`310?oo
o`030000003oool0oooo0=H0oooo000D0?ooo`030000003oool0oooo0<00oooo00<000000?ooo`3o
ool0eP3oool001D0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`3F0?ooo`005P3o
ool00`000000oooo0?ooo`2n0?ooo`030000003oool0oooo0=H0oooo000G0?ooo`030000003oool0
oooo0;d0oooo00<000000?ooo`3oool0eP3oool001P0oooo00<000000?ooo`3oool0_03oool00`00
0000oooo0?ooo`3F0?ooo`006@3oool00`000000oooo0?ooo`2k0?ooo`<00000eP3oool001T0oooo
00<000000?ooo`3oool0^`3oool00`000000oooo0?ooo`3F0?ooo`006P3oool00`000000oooo0?oo
o`2j0?ooo`030000003oool0oooo0=H0oooo000K0?ooo`030000003oool0oooo0;T0oooo00<00000
0?ooo`3oool0eP3oool001`0oooo00<000000?ooo`3oool0^03oool00`000000oooo0?ooo`3F0?oo
o`007@3oool00`000000oooo0?ooo`2g0?ooo`030000003oool0oooo0=H0oooo000N0?ooo`800000
]`3oool00`000000oooo0?ooo`3F0?ooo`00803oool00`000000oooo0?ooo`2d0?ooo`030000003o
ool0oooo0=H0oooo000Q0?ooo`030000003oool0oooo0;<0oooo0`00003F0?ooo`008P3oool00`00
0000oooo0?ooo`2b0?ooo`030000003oool0oooo0=H0oooo000S0?ooo`030000003oool0oooo0;40
oooo00<000000?ooo`3oool0eP3oool002@0oooo0P00002a0?ooo`030000003oool0oooo0=H0oooo
000V0?ooo`030000003oool0oooo0:40oooo00<0okmd0000000000000`0000000`00M;l0oooo0?oo
o`040?ooo`030000003oool0oooo0=H0oooo000W0?ooo`030000003oool0oooo0:<0oooo00<0W4Q8
09cOo`3oool01`3oool00`000000oooo0?ooo`3F0?ooo`00:03oool00`000000oooo0?ooo`2R0?oo
o`0309a8B02Lgol0oooo00L0oooo00<000000?ooo`3oool0eP3oool002T0oooo00<000000?ooo`3o
ool0X@3oool00`2LB4P0W=oo0?ooo`070?ooo`030000003oool0oooo0=H0oooo000Z0?ooo`800000
U@3oool00`2LB000000000000003000000030018W03oool0oooo00<0oooo00<0W4Q809cOo`3oool0
1`3oool400000=D0oooo000/0?ooo`030000003oool0oooo09h0oooo00<0W4Q809cOo`3oool01`3o
ool00`000000oooo0?ooo`3F0?ooo`00;@3oool00`000000oooo0?ooo`2M0?ooo`0309a8B02Lgol0
oooo00L0oooo00<000000?ooo`3oool0eP3oool002h0oooo0P00002J0?ooo`050=nLB000000004RL
09a8B02Lgol0203oool00`000000oooo0?ooo`3F0?ooo`00<03oool00`000000oooo0?ooo`2I0?oo
o`030=nLB00004P0W=oo00P0oooo00<000000?ooo`3oool0eP3oool00340oooo0P00002T0?ooo`03
0000003oool0oooo0=H0oooo000c0?ooo`800000XP3oool00`000000oooo0?ooo`3F0?ooo`00=@3o
ool00`000000oooo0?ooo`2O0?ooo`030000003oool0oooo0=H0oooo000f0?ooo`800000W`3oool3
00000=H0oooo000h0?ooo`030000003oool0oooo09`0oooo00<000000?ooo`3oool0eP3oool003T0
oooo0P00002L0?ooo`030000003oool0oooo0=H0oooo000k0?ooo`800000VP3oool00`000000oooo
0?ooo`3F0?ooo`00?@3oool00`000000oooo0?ooo`2G0?ooo`030000003oool0oooo0=H0oooo000n
0?ooo`800000U`3oool00`000000oooo0?ooo`3F0?ooo`00@03oool2000009D0oooo00<000000?oo
o`3oool0eP3oool00480oooo0P00002C0?ooo`030000003oool0oooo0=H0oooo00140?ooo`800000
T@3oool300000=H0oooo00160?ooo`030000003oool0oooo08h0oooo00<000000?ooo`3oool0eP3o
ool004L0oooo0P00002>0?ooo`030000003oool0oooo0=H0oooo00190?ooo`800000S03oool00`00
0000oooo0?ooo`3F0?ooo`00B`3oool2000008X0oooo00<000000?ooo`3oool0eP3oool004d0oooo
0P0000280?ooo`030000003oool0oooo0=H0oooo001?0?ooo`030000003oool0oooo08D0oooo00<0
00000?ooo`3oool0eP3oool00500oooo0P0000250?ooo`030000003oool0oooo0=H0oooo001B0?oo
o`800000P`3oool300000=H0oooo001D0?ooo`800000P@3oool00`000000oooo0?ooo`3F0?ooo`00
EP3oool2000007l0oooo00<000000?ooo`3oool0eP3oool005P0oooo0P00001m0?ooo`030000003o
ool0oooo0=H0oooo001J0?ooo`800000N`3oool00`000000oooo0?ooo`3F0?ooo`00G03oool20000
07T0oooo00<000000?ooo`3oool0eP3oool005h0oooo0P00001g0?ooo`030000003oool0oooo0=H0
oooo001P0?ooo`800000M@3oool00`000000oooo0?ooo`3F0?ooo`00HP3oool2000007<0oooo0`00
003F0?ooo`00I03oool200000740oooo00<000000?ooo`3oool0eP3oool006H0oooo0P00001_0?oo
o`030000003oool0oooo0=H0oooo001X0?ooo`<00000K03oool00`000000oooo0?ooo`3F0?ooo`00
J`3oool2000006X0oooo00<000000?ooo`3oool0eP3oool006d0oooo0P00001:0?ooo`050?noM000
000000000000001d_ol01@3oool00`2oM0000000001d_`050?ooo`050;md0000000000000000001d
_ol01`3oool00`000000oooo0?ooo`3F0?ooo`00K`3oool3000004L0oooo00H0W4Qd0;ooo`3oool0
oono07@0M02oool40?ooo`030;md0000000007Bo00@0oooo00L0_g@0001d_`3oool0oooo0?oOW018
0000M;oo00H0oooo00<000000?ooo`3oool0eP3oool00780oooo0P0000140?ooo`030?noM000M;l0
oooo0080oooo00<0gia804RLg`3oool03`3oool00`3o_g@007Bo0?ooo`050?ooo`030000003oool0
oooo0=H0oooo001d0?ooo`800000@P3oool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo
00l0oooo00<0okmd001d_`3oool01@3oool400000=D0oooo001f0?ooo`800000=`3oool00`2LB000
000000000003000000050018W03oool0oooo0=nLB018W=l00`3oool00`3o_g@007Bo0?ooo`0?0?oo
o`0309a8001d_ol0oooo00D0oooo00<000000?ooo`3oool0eP3oool007P0oooo0`00000m0?ooo`03
0=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool02P3oool00`3ookl0M0000000000200000003
04RLg`3oool0oooo00D0oooo00<000000?ooo`3oool0eP3oool007/0oooo0P00000k0?ooo`030?no
M018W=l0oooo0080oooo00<0gia804RLg`3oool02P3oool00`3ookl0M01d0;ooo`0:0?ooo`030000
003oool0oooo0=H0oooo001m0?ooo`800000>P3oool01P2LB000M;oo0?ooo`3ogi`0B01d0;ooo`/0
oooo00<0oono07@0M02oool02P3oool00`000000oooo0?ooo`3F0?ooo`00O`3oool2000003P0oooo
00D0oono07@000000000001809cOo`0<0?ooo`030?oo_`1d000000000080000000<0001d0;ooo`3o
ool01@3oool00`000000oooo0?ooo`3F0?ooo`00P@3oool3000005<0oooo00<000000?ooo`3oool0
eP3oool008@0oooo0P00001A0?ooo`030000003oool0oooo0=H0oooo00260?ooo`800000C`3oool3
00000=H0oooo00280?ooo`800000C@3oool00`000000oooo0?ooo`3F0?ooo`00RP3oool3000004X0
oooo00<000000?ooo`3oool0eP3oool008d0oooo0P0000180?ooo`030000003oool0oooo0=H0oooo
002?0?ooo`800000AP3oool00`000000oooo0?ooo`3F0?ooo`00T@3oool3000004<0oooo00<00000
0?ooo`3oool0eP3oool009@0oooo0P0000110?ooo`030000003oool0oooo0=H0oooo002F0?ooo`<0
0000?P3oool00`000000oooo0?ooo`3F0?ooo`00V@3oool2000003`0oooo0`00003F0?ooo`00V`3o
ool3000003T0oooo00<000000?ooo`3oool0eP3oool009h0oooo0`00000f0?ooo`030000003oool0
oooo0=H0oooo002Q0?ooo`800000=03oool00`000000oooo0?ooo`3F0?ooo`00X`3oool300000340
oooo00<000000?ooo`3oool0eP3oool00:H0oooo0P00000_0?ooo`030000003oool0oooo0=H0oooo
002X0?ooo`<00000;03oool00`000000oooo0?ooo`3F0?ooo`002`3oool00`3o_g@0000000000003
00000003001d_`3oool0oooo05H0oooo00D0okmd000000000000000007Boo`050?ooo`030;md0000
000007Bo00D0oooo00D0_g@0000000000000000007Boo`0Z0?ooo`800000:P3oool00`000000oooo
0?ooo`1H0?ooo`050?noM000000000000000001d_ol01@3oool00`2oM0000000001d_`050?ooo`05
0;md0000000000000000001d_ol0E`3oool00`3o_g@000000000000300000003001d_`3oool0oooo
00L0oooo000>0?ooo`0309a8B02Lgol0oooo05T0oooo00H0W4Qd0;ooo`3oool0oono07@0M02oool4
0?ooo`030;md0000000007Bo00@0oooo00L0_g@0001d_`3oool0oooo0?oOW0180000M;oo02/0oooo
0P00000X0?ooo`<00000F03oool01P2LB7@0_ooo0?ooo`3ookl0M01d0;ooo`@0oooo00<0_g@00000
0000M;l0103oool01`2oM00007Bo0?ooo`3oool0omnL04P0001d_ol0F@3oool00`2LB4P0W=oo0?oo
o`0:0?ooo`003P3oool00`2LB4P0W=oo0?ooo`1H0?ooo`030?noM000M;l0oooo0080oooo00<0gia8
04RLg`3oool03`3oool00`3o_g@007Bo0?ooo`0/0?ooo`<000009@3oool00`000000oooo0?ooo`1G
0?ooo`030?noM000M;l0oooo0080oooo00<0gia804RLg`3oool03`3oool00`3o_g@007Bo0?ooo`1H
0?ooo`0309a8B02Lgol0oooo00X0oooo000>0?ooo`0309a8B02Lgol0oooo05P0oooo00<0gia804RL
g`3oool00P3oool00`3o_g@007Bo0?ooo`0?0?ooo`030?noM000M;l0oooo02l0oooo0P00000S0?oo
o`030000003oool0oooo05L0oooo00<0gia804RLg`3oool00P3oool00`3o_g@007Bo0?ooo`0?0?oo
o`030?noM000M;l0oooo05P0oooo00<0W4Q809cOo`3oool02P3oool00080oooo00<0W4P000000000
00000`0000000`00B9`0oooo0?ooo`030?ooo`0309a8B02Lgol0oooo04l0oooo00<0W4P000000000
00000`0000001@00B9`0oooo0?ooo`3OW4P0B9cO00<0oooo00<0okmd001d_`3oool03`3oool00`2L
B000M;oo0?ooo`0a0?ooo`<00000803oool00`000000oooo0?ooo`1G0?ooo`030=nLB018W=l0oooo
0080oooo00<0okmd001d_`3oool03`3oool00`2LB000M;oo0?ooo`1H0?ooo`0309a8B02Lgol0oooo
00X0oooo000>0?ooo`0309a8B02Lgol0oooo05P0oooo00<0gia804RLg`3oool00P3oool00`3o_g@0
07Bo0?ooo`0:0?ooo`030?oo_`1d000000000080000000<0B9cO0?ooo`3oool0=03oool2000001h0
oooo00<000000?ooo`3oool0E`3oool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo00X0
oooo00<0oono07@0000000000P0000000`18W=l0oooo0?ooo`1H0?ooo`0309a8B02Lgol0oooo00X0
oooo000>0?ooo`0309a8B02Lgol0oooo05P0oooo00<0okmd04RLg`3oool00P3oool00`3OW4P0B9cO
0?ooo`0:0?ooo`030?oo_`1d07@0_ooo03/0oooo0P00000L0?ooo`030000003oool0oooo05L0oooo
00<0okmd04RLg`3oool00P3oool00`3OW4P0B9cO0?ooo`0:0?ooo`030?oo_`1d07@0_ooo05d0oooo
00<0W4Q809cOo`3oool02P3oool000/0oooo00D0gia800000000B9`0W4Q809cOo`1J0?ooo`0609a8
001d_ol0oooo0?oOW01807@0_ooo2`3oool00`3ookl0M01d0;ooo`0m0?ooo`8000006P3oool00`00
0000oooo0?ooo`1H0?ooo`0609a8001d_ol0oooo0?oOW01807@0_ooo2`3oool00`3ookl0M01d0;oo
o`1J0?ooo`050=nLB000000004RL09a8B02Lgol02`3oool000d0oooo00<0gia80000B02Lgol0FP3o
ool01@3ookl0M0000000000004P0W=oo00`0oooo00<0oono07@0000000000P0000000`0007@0_ooo
0?ooo`0j0?ooo`<000005`3oool00`000000oooo0?ooo`1H0?ooo`050?oo_`1d000000000000B02L
gol0303oool00`3ookl0M00000000002000000030000M02oool0oooo05L0oooo00<0gia80000B02L
gol02`3oool00<00oooo0P00000E0?ooo`030000003oool0oooo0=H0oooo00320?ooo`8000004`3o
ool300000=H0oooo00340?ooo`<00000403oool00`000000oooo0?ooo`3F0?ooo`00a`3oool20000
00h0oooo00<000000?ooo`3oool0eP3oool00<T0oooo0`00000;0?ooo`030000003oool0oooo0=H0
oooo003<0?ooo`8000002@3oool00`000000oooo0?ooo`3F0?ooo`00cP3oool3000000H0oooo00<0
00000?ooo`3oool0eP3oool00=40oooo0`0000030?ooo`030000003oool0oooo0=H0oooo003D0?oo
o`80000000<0oooo0000003oool0e`3oool00?l00000/00000010?ooo`002P3oool00`000000oooo
0?ooo`0B0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool04P3oool00`000000oooo
0?ooo`0A0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool04@3oool00`000000oooo
0?ooo`0B0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool04P3oool00`000000oooo
0?ooo`0A0?ooo`030000003oool00000008000003`3oool00`000000oooo0?ooo`0B0?ooo`030000
003oool0oooo0140oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0A0?ooo`030000
003oool0oooo0180oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0B0?ooo`030000
003oool0oooo0140oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`090?ooo`002P3o
ool00`000000oooo0?ooo`1T0?ooo`030000003oool0oooo06<0oooo00<000000?ooo`3oool00P3o
ool3000005h0oooo00<000000?ooo`3oool0I03oool00`000000oooo0?ooo`090?ooo`00e`3oool0
0`000000oooo0?ooo`050?ooo`800000c`3oool00=L0oooo00<000000?ooo`3oool01`3oool30000
0<`0oooo003G0?ooo`030000003oool0oooo00X0oooo0`0000390?ooo`00e`3oool00`000000oooo
0?ooo`0=0?ooo`<00000aP3oool00=L0oooo00<000000?ooo`3oool0403oool200000<@0oooo003G
0?ooo`<000004P3oool300000<40oooo003G0?ooo`030000003oool0oooo01D0oooo0P00002o0?oo
o`00e`3oool00`000000oooo0?ooo`0G0?ooo`<00000_03oool00=L0oooo00<000000?ooo`3oool0
6P3oool300000;T0oooo003G0?ooo`030000003oool0oooo01d0oooo0P00002g0?ooo`00e`3oool0
0`000000oooo0?ooo`0O0?ooo`<00000]03oool00=L0oooo00<000000?ooo`3oool08P3oool20000
0;80oooo003G0?ooo`030000003oool0oooo02@0oooo0`00002_0?ooo`00e`3oool3000002L0oooo
0P00002]0?ooo`00e`3oool00`000000oooo0?ooo`0Y0?ooo`800000Z`3oool00=L0oooo00<00000
0?ooo`3oool0:`3oool300000:P0oooo003G0?ooo`030000003oool0oooo02h0oooo0P00002V0?oo
o`00e`3oool00`000000oooo0?ooo`0`0?ooo`<00000X`3oool00=L0oooo00<000000?ooo`3oool0
<`3oool200000:40oooo003G0?ooo`030000003oool0oooo03D0oooo0P00002O0?ooo`00e`3oool0
0`000000oooo0?ooo`0g0?ooo`800000W@3oool00=L0oooo0`00000i0?ooo`<00000VP3oool00=L0
oooo00<000000?ooo`3oool0?03oool2000009P0oooo003G0?ooo`030000003oool0oooo03h0oooo
0P00002F0?ooo`00e`3oool00`000000oooo0?ooo`100?ooo`<00000T`3oool00=L0oooo00<00000
0?ooo`3oool0@`3oool200000940oooo003G0?ooo`030000003oool0oooo04D0oooo0P00002?0?oo
o`00e`3oool00`000000oooo0?ooo`170?ooo`800000S@3oool00=L0oooo00<000000?ooo`3oool0
B@3oool3000008X0oooo003G0?ooo`<00000C03oool2000008P0oooo003G0?ooo`030000003oool0
oooo04h0oooo0P0000260?ooo`00e`3oool00`000000oooo0?ooo`1@0?ooo`800000Q03oool00=L0
oooo00<000000?ooo`3oool0DP3oool300000840oooo002i0?ooo`050?noM000000000000000001d
_ol01@3oool00`2oM0000000001d_`050?ooo`050;md0000000000000000001d_ol01`3oool00`00
0000oooo0?ooo`1E0?ooo`800000O`3oool00;T0oooo00H0W4Qd0;ooo`3oool0oono07@0M02oool4
0?ooo`030;md0000000007Bo00@0oooo00L0_g@0001d_`3oool0oooo0?oOW0180000M;oo00H0oooo
00<000000?ooo`3oool0E`3oool3000007`0oooo002h0?ooo`030?noM000M;l0oooo0080oooo00<0
gia804RLg`3oool03`3oool00`3o_g@007Bo0?ooo`050?ooo`030000003oool0oooo05X0oooo0P00
001j0?ooo`00^03oool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo00l0oooo00<0okmd
001d_`3oool01@3oool00`000000oooo0?ooo`1L0?ooo`800000N03oool00;P0oooo00<0gia804RL
g`3oool00P3oool00`3o_g@007Bo0?ooo`0?0?ooo`0309a8001d_ol0oooo00D0oooo1000001M0?oo
o`<00000M@3oool00;P0oooo00<0gia804RLg`3oool00P3oool00`3o_g@007Bo0?ooo`0:0?ooo`03
0?oo_`1d000000000080000000<0B9cO0?ooo`3oool01@3oool00`000000oooo0?ooo`1Q0?ooo`80
0000L`3oool00;P0oooo00<0okmd04RLg`3oool00P3oool00`3OW4P0B9cO0?ooo`0:0?ooo`030?oo
_`1d07@0_ooo00X0oooo00<000000?ooo`3oool0H`3oool200000740oooo002i0?ooo`0609a8001d
_ol0oooo0?oOW01807@0_ooo2`3oool00`3ookl0M01d0;ooo`0:0?ooo`030000003oool0oooo06D0
oooo0P00001_0?ooo`00^@3oool01@3ookl0M0000000000004P0W=oo00`0oooo00<0oono07@00000
00000P0000000`0007@0_ooo0?ooo`050?ooo`030000003oool0oooo06L0oooo0P00001]0?ooo`00
e`3oool00`000000oooo0?ooo`1Y0?ooo`800000J`3oool00=L0oooo00<000000?ooo`3oool0J`3o
ool2000006T0oooo003G0?ooo`030000003oool0oooo06d0oooo0P00001W0?ooo`00e`3oool30000
06l0oooo0P00001U0?ooo`00e`3oool00`000000oooo0?ooo`1a0?ooo`800000H`3oool00=L0oooo
00<000000?ooo`3oool0L`3oool200000640oooo003G0?ooo`030000003oool0oooo07D0oooo0P00
001O0?ooo`00e`3oool00`000000oooo0?ooo`1g0?ooo`800000G@3oool00=L0oooo00<000000?oo
o`3oool0N@3oool2000005/0oooo003G0?ooo`030000003oool0oooo07/0oooo0P00001I0?ooo`00
e`3oool00`000000oooo0?ooo`1m0?ooo`800000E`3oool00=L0oooo0`00001o0?ooo`800000E@3o
ool00=L0oooo00<000000?ooo`3oool0P@3oool2000005<0oooo003G0?ooo`030000003oool0oooo
08<0oooo0P00001A0?ooo`00e`3oool00`000000oooo0?ooo`250?ooo`800000C`3oool00=L0oooo
00<000000?ooo`3oool0Q`3oool2000004d0oooo003G0?ooo`030000003oool0oooo08T0oooo0P00
001;0?ooo`00e`3oool00`000000oooo0?ooo`2;0?ooo`800000B@3oool00=L0oooo00<000000?oo
o`3oool0S@3oool2000004L0oooo003G0?ooo`<00000S`3oool2000004D0oooo003G0?ooo`030000
003oool0oooo0940oooo0P0000130?ooo`00e`3oool00`000000oooo0?ooo`2C0?ooo`800000@@3o
ool00=L0oooo00<000000?ooo`3oool0U@3oool2000003l0oooo003G0?ooo`030000003oool0oooo
09L0oooo00<000000?ooo`3oool0?03oool00=L0oooo00<000000?ooo`3oool0V03oool2000003`0
oooo003G0?ooo`030000003oool0oooo09X0oooo00<000000?ooo`3oool0>@3oool00=L0oooo00<0
00000?ooo`3oool0V`3oool2000003T0oooo003G0?ooo`<00000W@3oool00`000000oooo0?ooo`0f
0?ooo`00e`3oool00`000000oooo0?ooo`2N0?ooo`800000=P3oool00=L0oooo00<000000?ooo`3o
ool0X03oool2000003@0oooo003G0?ooo`030000003oool0oooo0:80oooo00<000000?ooo`3oool0
<@3oool00=L0oooo00<000000?ooo`3oool0X`3oool200000340oooo003:0?ooo`030?noM0000000
000000<0000000<007Bo0?ooo`3oool0103oool00`000000oooo0?ooo`2U0?ooo`030000003oool0
oooo02h0oooo003=0?ooo`0309a8B02Lgol0oooo00L0oooo00<000000?ooo`3oool0YP3oool20000
02h0oooo003=0?ooo`0309a8B02Lgol0oooo00L0oooo00<000000?ooo`3oool0Z03oool00`000000
oooo0?ooo`0[0?ooo`00c@3oool00`2LB4P0W=oo0?ooo`070?ooo`@00000Z03oool00`000000oooo
0?ooo`0Z0?ooo`00c@3oool00`2LB4P0W=oo0?ooo`070?ooo`030000003oool0oooo0:X0oooo0P00
000Z0?ooo`00c@3oool00`2LB4P0W=oo0?ooo`070?ooo`030000003oool0oooo0:`0oooo00<00000
0?ooo`3oool09`3oool00<d0oooo00<0W4Q809cOo`3oool01`3oool00`000000oooo0?ooo`2]0?oo
o`030000003oool0oooo02H0oooo003:0?ooo`050=nLB000000004RL09a8B02Lgol0203oool00`00
0000oooo0?ooo`2^0?ooo`8000009P3oool00<`0oooo00<0gia80000B02Lgol0203oool00`000000
oooo0?ooo`2`0?ooo`030000003oool0oooo02<0oooo003G0?ooo`030000003oool0oooo0;40oooo
00<000000?ooo`3oool08P3oool00=L0oooo00<000000?ooo`3oool0/P3oool00`000000oooo0?oo
o`0Q0?ooo`00e`3oool300000;<0oooo00<000000?ooo`3oool0803oool00=L0oooo00<000000?oo
o`3oool0]03oool00`000000oooo0?ooo`0O0?ooo`00e`3oool00`000000oooo0?ooo`2e0?ooo`03
0000003oool0oooo01h0oooo003G0?ooo`030000003oool0oooo0;H0oooo00<000000?ooo`3oool0
7@3oool00=L0oooo00<000000?ooo`3oool0]`3oool00`000000oooo0?ooo`0L0?ooo`00e`3oool0
0`000000oooo0?ooo`2h0?ooo`030000003oool0oooo01/0oooo003G0?ooo`030000003oool0oooo
0;T0oooo00<000000?ooo`3oool06P3oool00=L0oooo00<000000?ooo`3oool0^P3oool00`000000
oooo0?ooo`0I0?ooo`00e`3oool300000;/0oooo00<000000?ooo`3oool0603oool00=L0oooo00<0
00000?ooo`3oool0_03oool00`000000oooo0?ooo`0G0?ooo`00e`3oool00`000000oooo0?ooo`2m
0?ooo`030000003oool0oooo01H0oooo003G0?ooo`030000003oool0oooo0;d0oooo00<000000?oo
o`3oool05P3oool00=L0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`0E0?ooo`00
e`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo01@0oooo003G0?ooo`030000003o
ool0oooo0<00oooo00<000000?ooo`3oool04`3oool00=L0oooo00<000000?ooo`3oool0`@3oool0
0`000000oooo0?ooo`0B0?ooo`00e`3oool300000<80oooo00<000000?ooo`3oool04@3oool00=L0
oooo00<000000?ooo`3oool0`P3oool00`000000oooo0?ooo`0A0?ooo`00e`3oool00`000000oooo
0?ooo`330?ooo`030000003oool0oooo0100oooo003G0?ooo`030000003oool0oooo0<@0oooo00<0
00000?ooo`3oool03`3oool00=L0oooo00<000000?ooo`3oool0a03oool00`000000oooo0?ooo`0?
0?ooo`00e`3oool00`000000oooo0?ooo`350?ooo`030000003oool0oooo00h0oooo003G0?ooo`03
0000003oool0oooo0<D0oooo00<000000?ooo`3oool03P3oool00=L0oooo00<000000?ooo`3oool0
aP3oool00`000000oooo0?ooo`0=0?ooo`00e`3oool300000<H0oooo00<000000?ooo`3oool03@3o
ool00=L0oooo00<000000?ooo`3oool0a`3oool00`000000oooo0?ooo`0<0?ooo`00e`3oool00`00
0000oooo0?ooo`370?ooo`030000003oool0oooo00`0oooo003G0?ooo`030000003oool0oooo0<P0
oooo00<000000?ooo`3oool02`3oool00=L0oooo00<000000?ooo`3oool0b03oool00`000000oooo
0?ooo`0;0?ooo`00^03oool00`3o_g@000000000000300000003001d_`3oool0oooo0080oooo00<0
_g@000000000M;l01@3oool01@2oM0000000000000000000M;oo00L0oooo00<000000?ooo`3oool0
b03oool00`000000oooo0?ooo`0;0?ooo`00^`3oool00`2LB4P0W=oo0?ooo`050?ooo`030;md0000
000007Bo00@0oooo00L0_g@0001d_`3oool0oooo0?oOW0180000M;oo00H0oooo00<000000?ooo`3o
ool0b@3oool00`000000oooo0?ooo`0:0?ooo`00^`3oool00`2LB4P0W=oo0?ooo`0A0?ooo`030?no
M000M;l0oooo00D0oooo00<000000?ooo`3oool0b@3oool00`000000oooo0?ooo`0:0?ooo`00^`3o
ool00`2LB4P0W=oo0?ooo`0A0?ooo`030?noM000M;l0oooo00D0oooo100000380?ooo`030000003o
ool0oooo00X0oooo002k0?ooo`0309a8B02Lgol0oooo0140oooo00<0W4P007Boo`3oool01@3oool0
0`000000oooo0?ooo`390?ooo`030000003oool0oooo00X0oooo002k0?ooo`0309a8B02Lgol0oooo
00`0oooo00<0oono07@0000000000P0000000`18W=l0oooo0?ooo`050?ooo`030000003oool0oooo
0<T0oooo00<000000?ooo`3oool02P3oool00;/0oooo00<0W4Q809cOo`3oool0303oool00`3ookl0
M01d0;ooo`0:0?ooo`030000003oool0oooo0<T0oooo00<000000?ooo`3oool02P3oool00;P0oooo
00D0gia800000000B9`0W4Q809cOo`0=0?ooo`030?oo_`1d07@0_ooo00X0oooo00<000000?ooo`3o
ool0bP3oool00`000000oooo0?ooo`090?ooo`00^P3oool00`3OW4P0001809cOo`0=0?ooo`030?oo
_`1d000000000080000000<0001d0;ooo`3oool01@3oool00`000000oooo0?ooo`3:0?ooo`030000
003oool0oooo00T0oooo003G0?ooo`030000003oool0oooo0<X0oooo00<000000?ooo`3oool02@3o
ool00=L0oooo00<000000?ooo`3oool0eP3oool00=L0oooo00<000000?ooo`3oool0eP3oool00=L0
oooo0`00003F0?ooo`00e`3oool00`000000oooo0?ooo`3F0?ooo`00e`3oool00`000000oooo0?oo
o`3F0?ooo`00e`3oool00`000000oooo0?ooo`3F0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 431}, {265.813, 0}} -> {-1.0522, -1.64891, \
0.00732393, 0.0186097}}]
}, Closed]],

Cell[TextData[{
  "It is often necessary to wrap user-defined functions inside the ",
  ButtonBox["Evaluate",
    ButtonStyle->"RefGuideLink"],
  " command to ensure that proper numerical results are obtained for \
plotting.  For example, the ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " function ",
  ButtonBox["D",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["f[x],x", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " evaluates the partial derivative of ",
  StyleBox["f", "InlineInput"],
  " with respect to ",
  StyleBox["x", "InlineInput"],
  ", where ",
  StyleBox["f[x]", "InlineInput"],
  " is any expression involving ",
  StyleBox["x", "InlineInput"],
  ".  The ",
  StyleBox["Evaluate", "InlineInput",
    FontWeight->"Bold"],
  " command is used in the following example to ensure that the derivative is \
evaluated before substitution of ",
  StyleBox["x", "InlineInput"],
  StyleBox[".  ",
    FontSlant->"Italic"],
  "(See what happens if ",
  StyleBox["Evaluate", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontSlant->"Italic"],
  "is removed!)"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[f];\)\), "\n", 
    \(\(f[x] = D[ArcSin[x], x];\)\), "\n", 
    \(\(Plot[Evaluate[f[x]], {x, \(-1\), 1}];\)\)}], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.476191 0.0147151 0.0543735 [
[.02381 .00222 -6 -9 ]
[.02381 .00222 6 0 ]
[.2619 .00222 -12 -9 ]
[.2619 .00222 12 0 ]
[.7381 .00222 -9 -9 ]
[.7381 .00222 9 0 ]
[.97619 .00222 -3 -9 ]
[.97619 .00222 3 0 ]
[.4875 .12346 -6 -4.5 ]
[.4875 .12346 0 4.5 ]
[.4875 .23221 -6 -4.5 ]
[.4875 .23221 0 4.5 ]
[.4875 .34096 -6 -4.5 ]
[.4875 .34096 0 4.5 ]
[.4875 .4497 -6 -4.5 ]
[.4875 .4497 0 4.5 ]
[.4875 .55845 -12 -4.5 ]
[.4875 .55845 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 .01472 m
.02381 .02097 L
s
[(-1)] .02381 .00222 0 1 Mshowa
.2619 .01472 m
.2619 .02097 L
s
[(-0.5)] .2619 .00222 0 1 Mshowa
.7381 .01472 m
.7381 .02097 L
s
[(0.5)] .7381 .00222 0 1 Mshowa
.97619 .01472 m
.97619 .02097 L
s
[(1)] .97619 .00222 0 1 Mshowa
.125 Mabswid
.07143 .01472 m
.07143 .01847 L
s
.11905 .01472 m
.11905 .01847 L
s
.16667 .01472 m
.16667 .01847 L
s
.21429 .01472 m
.21429 .01847 L
s
.30952 .01472 m
.30952 .01847 L
s
.35714 .01472 m
.35714 .01847 L
s
.40476 .01472 m
.40476 .01847 L
s
.45238 .01472 m
.45238 .01847 L
s
.54762 .01472 m
.54762 .01847 L
s
.59524 .01472 m
.59524 .01847 L
s
.64286 .01472 m
.64286 .01847 L
s
.69048 .01472 m
.69048 .01847 L
s
.78571 .01472 m
.78571 .01847 L
s
.83333 .01472 m
.83333 .01847 L
s
.88095 .01472 m
.88095 .01847 L
s
.92857 .01472 m
.92857 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
.5 .12346 m
.50625 .12346 L
s
[(2)] .4875 .12346 1 0 Mshowa
.5 .23221 m
.50625 .23221 L
s
[(4)] .4875 .23221 1 0 Mshowa
.5 .34096 m
.50625 .34096 L
s
[(6)] .4875 .34096 1 0 Mshowa
.5 .4497 m
.50625 .4497 L
s
[(8)] .4875 .4497 1 0 Mshowa
.5 .55845 m
.50625 .55845 L
s
[(10)] .4875 .55845 1 0 Mshowa
.125 Mabswid
.5 .0419 m
.50375 .0419 L
s
.5 .06909 m
.50375 .06909 L
s
.5 .09628 m
.50375 .09628 L
s
.5 .15065 m
.50375 .15065 L
s
.5 .17784 m
.50375 .17784 L
s
.5 .20502 m
.50375 .20502 L
s
.5 .2594 m
.50375 .2594 L
s
.5 .28658 m
.50375 .28658 L
s
.5 .31377 m
.50375 .31377 L
s
.5 .36814 m
.50375 .36814 L
s
.5 .39533 m
.50375 .39533 L
s
.5 .42252 m
.50375 .42252 L
s
.5 .47689 m
.50375 .47689 L
s
.5 .50408 m
.50375 .50408 L
s
.5 .53126 m
.50375 .53126 L
s
.5 .58564 m
.50375 .58564 L
s
.5 .61282 m
.50375 .61282 L
s
.25 Mabswid
.5 0 m
.5 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02584 .61803 m
.02605 .5753 L
.02729 .4653 L
.02846 .40487 L
.02954 .36638 L
.03053 .33945 L
.03279 .29608 L
.03396 .27949 L
.03506 .26638 L
.03756 .24264 L
.04 .22505 L
.04262 .21012 L
.04793 .18777 L
.05297 .17252 L
.0575 .16189 L
.06244 .15252 L
.07302 .13753 L
.08429 .12619 L
.09493 .11814 L
.10458 .1123 L
.12383 .10339 L
.14465 .0964 L
.16458 .09132 L
.18565 .0871 L
.22362 .08149 L
.24313 .07929 L
.26405 .07731 L
.30541 .07429 L
.34525 .07221 L
.38358 .07079 L
.40336 .07024 L
.42436 .06979 L
.43373 .06962 L
.44383 .06947 L
.4533 .06935 L
.46211 .06926 L
.47169 .06918 L
.47675 .06915 L
.48215 .06913 L
.48488 .06912 L
.48784 .06911 L
.49063 .0691 L
.49196 .0691 L
.49321 .06909 L
.49442 .06909 L
.49553 .06909 L
.49676 .06909 L
.49744 .06909 L
.49809 .06909 L
.49937 .06909 L
Mistroke
.50056 .06909 L
.50186 .06909 L
.50259 .06909 L
.50325 .06909 L
.50446 .06909 L
.50559 .06909 L
.50814 .0691 L
.51064 .0691 L
.5133 .06911 L
.51814 .06913 L
.52254 .06915 L
.53324 .06922 L
.54337 .06932 L
.56332 .06958 L
.58175 .06991 L
.60046 .07034 L
.62107 .07094 L
.66133 .07251 L
.70007 .07463 L
.74126 .07778 L
.76183 .07981 L
.78094 .08206 L
.8191 .08797 L
.83959 .09228 L
.85819 .09723 L
.87742 .10389 L
.88733 .10819 L
.89823 .11388 L
.90784 .12005 L
.91814 .12835 L
.92903 .14003 L
.93431 .14731 L
.9392 .15542 L
.94352 .16408 L
.94829 .17594 L
.95309 .19143 L
.95575 .2023 L
.95819 .21435 L
.96032 .22709 L
.96265 .24438 L
.965 .26699 L
.96629 .28279 L
.96747 .30013 L
.96852 .31881 L
.96965 .34396 L
.97085 .37886 L
.97199 .42477 L
.97305 .48874 L
.97417 .60595 L
Mfstroke
.97417 .60595 m
.97422 .61803 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.875},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oo`3ooona
0?ooo`005@3oool00`3o_g@000000000000300000003001d_`3oool0oooo0500oooo00D0okmd0000
00000000000007Boo`050?ooo`030;md0000000007Bo00D0oooo00D0_g@0000000000000000007Bo
o`2X0?ooo`050?noM000000000000000001d_ol01@3oool00`2oM0000000001d_`050?ooo`050;md
0000000000000000001d_ol0D`3oool00`3o_g@000000000000300000003001d_`3oool0oooo0100
oooo000H0?ooo`0309a8B02Lgol0oooo05<0oooo00H0W4Qd0;ooo`3oool0oono07@0M02oool40?oo
o`030;md0000000007Bo00@0oooo00L0_g@0001d_`3oool0oooo0?oOW0180000M;oo0:L0oooo00H0
W4Qd0;ooo`3oool0oono07@0M02oool40?ooo`030;md0000000007Bo00@0oooo00L0_g@0001d_`3o
ool0oooo0?oOW0180000M;oo05D0oooo00<0W4Q809cOo`3oool04`3oool001P0oooo00<0W4Q809cO
o`3oool0DP3oool00`3o_g@007Bo0?ooo`020?ooo`030=nLB018W=l0oooo00l0oooo00<0okmd001d
_`3oool0Y@3oool00`3o_g@007Bo0?ooo`020?ooo`030=nLB018W=l0oooo00l0oooo00<0okmd001d
_`3oool0E03oool00`2LB4P0W=oo0?ooo`0C0?ooo`00603oool00`2LB4P0W=oo0?ooo`1B0?ooo`03
0=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool03`3oool00`3o_g@007Bo0?ooo`2U0?ooo`03
0=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool03`3oool00`3o_g@007Bo0?ooo`1D0?ooo`03
09a8B02Lgol0oooo01<0oooo000<0?ooo`0309a800000000000000<0000000<004RL0?ooo`3oool0
0`3oool00`2LB4P0W=oo0?ooo`190?ooo`0309a800000000000000<0000000D004RL0?ooo`3oool0
gia804RLg`030?ooo`030?noM000M;l0oooo00l0oooo00<0W4P007Boo`3oool0Y@3oool00`3OW4P0
B9cO0?ooo`020?ooo`030?noM000M;l0oooo00l0oooo00<0W4P007Boo`3oool0E03oool00`2LB4P0
W=oo0?ooo`0C0?ooo`00603oool00`2LB4P0W=oo0?ooo`1B0?ooo`030=nLB018W=l0oooo0080oooo
00<0okmd001d_`3oool02P3oool00`3ookl0M000000000020000000304RLg`3oool0oooo0:D0oooo
00<0gia804RLg`3oool00P3oool00`3o_g@007Bo0?ooo`0:0?ooo`030?oo_`1d0000000000800000
00<0B9cO0?ooo`3oool0E03oool00`2LB4P0W=oo0?ooo`0C0?ooo`00603oool00`2LB4P0W=oo0?oo
o`1B0?ooo`030?noM018W=l0oooo0080oooo00<0gia804RLg`3oool02P3oool00`3ookl0M01d0;oo
o`2Z0?ooo`030?noM018W=l0oooo0080oooo00<0gia804RLg`3oool02P3oool00`3ookl0M01d0;oo
o`1I0?ooo`0309a8B02Lgol0oooo01<0oooo000E0?ooo`050=nLB000000004RL09a8B02Lgol0E03o
ool01P2LB000M;oo0?ooo`3ogi`0B01d0;ooo`/0oooo00<0oono07@0M02oool0Z`3oool01P2LB000
M;oo0?ooo`3ogi`0B01d0;ooo`/0oooo00<0oono07@0M02oool0EP3oool01@3OW4P000000018W02L
B4P0W=oo01@0oooo000G0?ooo`030=nLB00004P0W=oo05@0oooo00D0oono07@000000000001809cO
o`0<0?ooo`030?oo_`1d000000000080000000<0001d0;ooo`3oool0YP3oool01@3ookl0M0000000
000004P0W=oo00`0oooo00<0oono07@0000000000P0000000`0007@0_ooo0?ooo`1C0?ooo`030=nL
B00004P0W=oo01@0oooo003o0?oook40oooo003o0?oook40oooo003G0?ooo`030000003oool0oooo
0=H0oooo003G0?ooo`030000003oool0oooo0=H0oooo003G0?ooo`030000003oool0oooo0=H0oooo
003G0?ooo`030000003oool0oooo0=H0oooo003G0?ooo`030000003oool0oooo0=H0oooo003G0?oo
o`030000003oool0oooo0=H0oooo000:0?ooool00000W000000;0?ooo`00503oool00`000000oooo
0?ooo`0@0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0403oool00`000000oooo
0?ooo`0A0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool04@3oool00`000000oooo
0?ooo`0@0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0403oool00`000000oooo
0?ooo`0A0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0403oool00`000000oooo
0?ooo`0A0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool04@3oool00`000000oooo
0?ooo`0@0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0403oool00`000000oooo
0?ooo`0A0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool04`3oool001@0oooo00<0
00000?ooo`3oool0403oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0100oooo00<0
00000?ooo`3oool04@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo0140oooo00<0
00000?ooo`3oool0403oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0100oooo00<0
00000?ooo`3oool04@3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0100oooo00<0
00000?ooo`3oool04@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo0140oooo00<0
00000?ooo`3oool0403oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0100oooo00<0
00000?ooo`3oool04@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo01<0oooo000D
0?ooo`030000003oool0oooo05h0oooo00<000000?ooo`3oool0G`3oool00`000000oooo0?ooo`1O
0?ooo`030000003oool0oooo05h0oooo00<000000?ooo`3oool04`3oool00=L0oooo00<000000?oo
o`3oool0eP3oool00=L0oooo00<000000?ooo`3oool0eP3oool00=L0oooo00<000000?ooo`3oool0
eP3oool00=L0oooo00<000000?ooo`3oool0eP3oool00=L0oooo00<000000?ooo`3oool0eP3oool0
0=L0oooo00<000000?ooo`3oool0eP3oool00=L0oooo00<000000?ooo`3oool0eP3oool00=L0oooo
0`00003F0?ooo`00e`3oool00`000000oooo0?ooo`3F0?ooo`00e`3oool00`000000oooo0?ooo`3F
0?ooo`00e`3oool00`000000oooo0?ooo`3F0?ooo`00e`3oool00`000000oooo0?ooo`3F0?ooo`00
e`3oool00`000000oooo0?ooo`3F0?ooo`00e`3oool00`000000oooo0?ooo`3F0?ooo`00e`3oool0
0`000000oooo0?ooo`3F0?ooo`00e`3oool00`000000oooo0?ooo`3F0?ooo`00e`3oool00`000000
oooo0?ooo`3F0?ooo`00e`3oool00`000000oooo0?ooo`3F0?ooo`00e`3oool00`000000oooo0?oo
o`3F0?ooo`00X03oooma000009l0oooo002@0?oooa000000=`3oool00`000000oooo0?ooo`0g0?oo
oa000000S`3oool007l0oooo4@0000170?ooo`030000003oool0oooo04L0oooo4@00001n0?ooo`00
L`3oool<000005P0oooo00<000000?ooo`3oool0F03oool<00000780oooo001[0?ooo`P00000I03o
ool00`000000oooo0?ooo`1T0?ooo`P00000JP3oool006<0oooo2000001/0?ooo`030000003oool0
oooo06`0oooo2000001R0?ooo`00F`3oool8000007@0oooo00<000000?ooo`3oool0M03oool80000
05X0oooo001E0?ooo`H00000O03oool00`000000oooo0?ooo`1l0?ooo`H00000E03oool00540oooo
100000220?ooo`030000003oool0oooo0880oooo1000001@0?ooo`00C03oool5000008H0oooo00<0
00000?ooo`3oool0QP3oool4000004`0oooo00180?ooo`@00000R`3oool00`000000oooo0?ooo`2:
0?ooo`@00000B03oool004@0oooo1000002?0?ooo`<00000SP3oool4000004@0oooo00120?ooo`80
0000T`3oool00`000000oooo0?ooo`2B0?ooo`800000@P3oool003l0oooo0`00002E0?ooo`030000
003oool0oooo09@0oooo0`00000o0?ooo`00?03oool3000009P0oooo00<000000?ooo`3oool0U`3o
ool2000003d0oooo000j0?ooo`800000V`3oool00`000000oooo0?ooo`2I0?ooo`800000>`3oool0
03L0oooo0`00002M0?ooo`030000003oool0oooo09/0oooo0P00000i0?ooo`00=@3oool200000:00
oooo00<000000?ooo`3oool0W@3oool2000003L0oooo000d0?ooo`030000003oool0oooo0980oooo
00<0oono07@000000000100000000`1d_ol0oooo0?ooo`040?ooo`030000003oool0oooo09l0oooo
0P00000e0?ooo`00<P3oool2000009H0oooo00<0_g@00000M02oool00P3oool00`3OW7@0W=oo0?oo
o`050?ooo`030000003oool0oooo0:40oooo0P00000c0?ooo`00<@3oool00`000000oooo0?ooo`2G
0?ooo`030?noM00004P0W=oo00T0oooo00<000000?ooo`3oool0X`3oool200000340oooo000`0?oo
o`030000003oool0oooo09T0oooo00<0omnL04P00018W=l0203oool00`000000oooo0?ooo`2U0?oo
o`030000003oool0oooo02h0oooo000^0?ooo`800000WP3oool00`2LB000B9cO0?ooo`060?ooo`@0
0000Y@3oool00`000000oooo0?ooo`0]0?ooo`00;@3oool00`000000oooo0?ooo`2O0?ooo`0309a8
M02oool0oooo00D0oooo00<000000?ooo`3oool0Y`3oool00`000000oooo0?ooo`0/0?ooo`00;03o
ool00`000000oooo0?ooo`2K0?ooo`030=nLB01d_ol0oooo0080oooo00<0_g@007Boo`3oool01@3o
ool00`000000oooo0?ooo`2X0?ooo`030000003oool0oooo02/0oooo000[0?ooo`030000003oool0
oooo09`0oooo00L0okmd0000M02oool0oooo0?noM00004P0W=oo00H0oooo00<000000?ooo`3oool0
Z@3oool00`000000oooo0?ooo`0Z0?ooo`00:P3oool00`000000oooo0?ooo`2N0?ooo`050?noM000
000000000000B02Lgol01`3oool00`000000oooo0?ooo`2Z0?ooo`030000003oool0oooo02T0oooo
000Y0?ooo`030000003oool0oooo0:/0oooo00<000000?ooo`3oool0Z`3oool00`000000oooo0?oo
o`0X0?ooo`00:03oool00`000000oooo0?ooo`2/0?ooo`030000003oool0oooo0:`0oooo00<00000
0?ooo`3oool09`3oool002L0oooo00<000000?ooo`3oool0[@3oool00`000000oooo0?ooo`2]0?oo
o`030000003oool0oooo02H0oooo000W0?ooo`030000003oool0oooo0:d0oooo00<000000?ooo`3o
ool0[P3oool00`000000oooo0?ooo`0U0?ooo`009P3oool00`000000oooo0?ooo`2^0?ooo`030000
003oool0oooo0:h0oooo00<000000?ooo`3oool09@3oool002D0oooo00<000000?ooo`3oool0[`3o
ool00`000000oooo0?ooo`2_0?ooo`030000003oool0oooo02@0oooo000U0?ooo`030000003oool0
oooo0:l0oooo0`00002`0?ooo`030000003oool0oooo02<0oooo000T0?ooo`030000003oool0oooo
0;00oooo00<000000?ooo`3oool0/03oool00`000000oooo0?ooo`0S0?ooo`008`3oool00`000000
oooo0?ooo`2a0?ooo`030000003oool0oooo0;40oooo00<000000?ooo`3oool08P3oool002<0oooo
00<000000?ooo`3oool0/@3oool00`000000oooo0?ooo`2a0?ooo`030000003oool0oooo0280oooo
000R0?ooo`030000003oool0oooo0;80oooo00<000000?ooo`3oool0/P3oool00`000000oooo0?oo
o`0Q0?ooo`008P3oool00`000000oooo0?ooo`2b0?ooo`030000003oool0oooo0;80oooo00<00000
0?ooo`3oool08@3oool00240oooo00<000000?ooo`3oool0/`3oool00`000000oooo0?ooo`2c0?oo
o`030000003oool0oooo0200oooo000Q0?ooo`030000003oool0oooo0;<0oooo00<000000?ooo`3o
ool0/`3oool00`000000oooo0?ooo`0P0?ooo`00803oool00`000000oooo0?ooo`2d0?ooo`030000
003oool0oooo0;@0oooo00<000000?ooo`3oool07`3oool00200oooo00<000000?ooo`3oool0]03o
ool00`000000oooo0?ooo`2d0?ooo`030000003oool0oooo01l0oooo000P0?ooo`030000003oool0
oooo0;@0oooo00<000000?ooo`3oool0]@3oool00`000000oooo0?ooo`0N0?ooo`007`3oool00`00
0000oooo0?ooo`2e0?ooo`<00000]@3oool00`000000oooo0?ooo`0N0?ooo`007`3oool00`000000
oooo0?ooo`2e0?ooo`030000003oool0oooo0;H0oooo00<000000?ooo`3oool07@3oool001l0oooo
00<000000?ooo`3oool0]@3oool00`000000oooo0?ooo`2f0?ooo`030000003oool0oooo01d0oooo
000N0?ooo`030000003oool0oooo0;H0oooo00<000000?ooo`3oool0]P3oool00`000000oooo0?oo
o`0M0?ooo`007P3oool00`000000oooo0?ooo`2f0?ooo`030000003oool0oooo0;H0oooo00<00000
0?ooo`3oool07@3oool001h0oooo00<000000?ooo`3oool0]P3oool00`000000oooo0?ooo`2g0?oo
o`030000003oool0oooo01`0oooo000N0?ooo`030000003oool0oooo0;H0oooo00<000000?ooo`3o
ool0]`3oool00`000000oooo0?ooo`0L0?ooo`007@3oool00`000000oooo0?ooo`2g0?ooo`030000
003oool0oooo0;L0oooo00<000000?ooo`3oool0703oool001d0oooo00<000000?ooo`3oool0]`3o
ool00`000000oooo0?ooo`2g0?ooo`030000003oool0oooo01`0oooo000M0?ooo`030000003oool0
oooo0;L0oooo00<000000?ooo`3oool0^03oool00`000000oooo0?ooo`0K0?ooo`007@3oool00`00
0000oooo0?ooo`2g0?ooo`030000003oool0oooo0;P0oooo00<000000?ooo`3oool06`3oool001`0
oooo00<000000?ooo`3oool0^03oool300000;P0oooo00<000000?ooo`3oool06`3oool001`0oooo
00<000000?ooo`3oool0^03oool00`000000oooo0?ooo`2h0?ooo`030000003oool0oooo01/0oooo
000L0?ooo`030000003oool0oooo0;P0oooo00<000000?ooo`3oool0^@3oool00`000000oooo0?oo
o`0J0?ooo`00703oool00`000000oooo0?ooo`2h0?ooo`030000003oool0oooo0;T0oooo00<00000
0?ooo`3oool06P3oool001`0oooo00<000000?ooo`3oool0^03oool00`000000oooo0?ooo`2i0?oo
o`030000003oool0oooo01X0oooo000K0?ooo`030000003oool0oooo0;T0oooo00<000000?ooo`3o
ool0^@3oool00`000000oooo0?ooo`0J0?ooo`006`3oool00`000000oooo0?ooo`2i0?ooo`030000
003oool0oooo0;T0oooo00<000000?ooo`3oool06P3oool001/0oooo00<000000?ooo`3oool0^@3o
ool00`000000oooo0?ooo`2j0?ooo`030000003oool0oooo01T0oooo000K0?ooo`030000003oool0
oooo0:h0oooo00D0omnL04P000000000000007Boo`060?ooo`030000003oool0oooo0;X0oooo00<0
00000?ooo`3oool06@3oool001/0oooo00<000000?ooo`3oool0/03oool00`2oM000M;oo0?ooo`06
0?ooo`030000003oool0oooo0;X0oooo00<000000?ooo`3oool06@3oool001/0oooo00<000000?oo
o`3oool0/03oool00`2oM000M;oo0?ooo`060?ooo`030000003oool0oooo0;X0oooo00<000000?oo
o`3oool06@3oool001/0oooo00<000000?ooo`3oool0[03oool00`3OW4P000000000000300000003
07Boo`3oool0oooo00@0oooo1000002i0?ooo`030000003oool0oooo01T0oooo000J0?ooo`030000
003oool0oooo0:d0oooo00H0okmd0000M02oool0oooo0;md001d_ol70?ooo`030000003oool0oooo
0;X0oooo00<000000?ooo`3oool06@3oool001X0oooo00<000000?ooo`3oool0[P3oool01@3OW4P0
07Bo0?ooo`2oM000M;oo00L0oooo00<000000?ooo`3oool0^`3oool00`000000oooo0?ooo`0H0?oo
o`006P3oool00`000000oooo0?ooo`2_0?ooo`0409a80018W=l0_g@007Boo`L0oooo00<000000?oo
o`3oool0^`3oool00`000000oooo0?ooo`0H0?ooo`006P3oool00`000000oooo0?ooo`2_0?ooo`04
0?oOW01804P0B4P007Boo`L0oooo00<000000?ooo`3oool0^`3oool00`000000oooo0?ooo`0H0?oo
o`006P3oool00`000000oooo0?ooo`2`0?ooo`030?noM0000000M;oo00L0oooo00<000000?ooo`3o
ool0^`3oool00`000000oooo0?ooo`0H0?ooo`006P3oool00`000000oooo0?ooo`2j0?ooo`030000
003oool0oooo0;/0oooo00<000000?ooo`3oool0603oool001X0oooo00<000000?ooo`3oool0^P3o
ool00`000000oooo0?ooo`2k0?ooo`030000003oool0oooo01P0oooo000J0?ooo`030000003oool0
oooo0;X0oooo00<000000?ooo`3oool0^`3oool00`000000oooo0?ooo`0H0?ooo`006P3oool00`00
0000oooo0?ooo`2j0?ooo`030000003oool0oooo0;/0oooo00<000000?ooo`3oool0603oool001T0
oooo00<000000?ooo`3oool0^`3oool00`000000oooo0?ooo`2k0?ooo`030000003oool0oooo01P0
oooo000I0?ooo`030000003oool0oooo0;/0oooo00<000000?ooo`3oool0_03oool00`000000oooo
0?ooo`0G0?ooo`006@3oool00`000000oooo0?ooo`2k0?ooo`<00000_03oool00`000000oooo0?oo
o`0G0?ooo`006@3oool00`000000oooo0?ooo`2k0?ooo`030000003oool0oooo0;`0oooo00<00000
0?ooo`3oool05`3oool001T0oooo00<000000?ooo`3oool0^`3oool00`000000oooo0?ooo`2l0?oo
o`030000003oool0oooo01L0oooo000I0?ooo`030000003oool0oooo0;/0oooo00<000000?ooo`3o
ool0_03oool00`000000oooo0?ooo`0G0?ooo`006@3oool00`000000oooo0?ooo`2k0?ooo`030000
003oool0oooo0;`0oooo00<000000?ooo`3oool05`3oool001P0oooo00<000000?ooo`3oool0_03o
ool00`000000oooo0?ooo`2l0?ooo`030000003oool0oooo01L0oooo000H0?ooo`030000003oool0
oooo0;`0oooo00<000000?ooo`3oool0_03oool00`000000oooo0?ooo`0G0?ooo`00603oool00`00
0000oooo0?ooo`2l0?ooo`030000003oool0oooo0;`0oooo00<000000?ooo`3oool05`3oool001P0
oooo00<000000?ooo`3oool0_03oool00`000000oooo0?ooo`2l0?ooo`030000003oool0oooo01L0
oooo000H0?ooo`030000003oool0oooo0;`0oooo00<000000?ooo`3oool0_03oool00`000000oooo
0?ooo`0G0?ooo`00603oool00`000000oooo0?ooo`2l0?ooo`030000003oool0oooo0;`0oooo00<0
00000?ooo`3oool05`3oool001P0oooo00<000000?ooo`3oool0_03oool300000;`0oooo00<00000
0?ooo`3oool05`3oool001P0oooo00<000000?ooo`3oool0_03oool00`000000oooo0?ooo`2l0?oo
o`030000003oool0oooo01L0oooo000H0?ooo`030000003oool0oooo0;`0oooo00<000000?ooo`3o
ool0_@3oool00`000000oooo0?ooo`0F0?ooo`00603oool00`000000oooo0?ooo`2l0?ooo`030000
003oool0oooo0;d0oooo00<000000?ooo`3oool05P3oool001P0oooo00<000000?ooo`3oool0_03o
ool00`000000oooo0?ooo`2m0?ooo`030000003oool0oooo01H0oooo000H0?ooo`030000003oool0
oooo0;`0oooo00<000000?ooo`3oool0_@3oool00`000000oooo0?ooo`0F0?ooo`00603oool00`00
0000oooo0?ooo`2l0?ooo`030000003oool0oooo0;d0oooo00<000000?ooo`3oool05P3oool001P0
oooo00<000000?ooo`3oool0_03oool00`000000oooo0?ooo`2m0?ooo`030000003oool0oooo01H0
oooo000H0?ooo`030000003oool0oooo0;`0oooo00<000000?ooo`3oool0_@3oool00`000000oooo
0?ooo`0F0?ooo`00603oool00`000000oooo0?ooo`2l0?ooo`030000003oool0oooo0;d0oooo00<0
00000?ooo`3oool05P3oool001P0oooo00<000000?ooo`3oool0_03oool00`000000oooo0?ooo`2m
0?ooo`030000003oool0oooo01H0oooo000H0?ooo`030000003oool0oooo0;`0oooo0`00002m0?oo
o`030000003oool0oooo01H0oooo000H0?ooo`030000003oool0oooo0;`0oooo00<000000?ooo`3o
ool0_@3oool00`000000oooo0?ooo`0F0?ooo`005`3oool00`000000oooo0?ooo`2m0?ooo`030000
003oool0oooo0;d0oooo00<000000?ooo`3oool05P3oool001L0oooo00<000000?ooo`3oool0_@3o
ool00`000000oooo0?ooo`2m0?ooo`030000003oool0oooo01H0oooo000G0?ooo`030000003oool0
oooo0;d0oooo00<000000?ooo`3oool0_@3oool00`000000oooo0?ooo`0F0?ooo`005`3oool00`00
0000oooo0?ooo`2m0?ooo`030000003oool0oooo0;d0oooo00<000000?ooo`3oool05P3oool001L0
oooo00<000000?ooo`3oool0_@3oool00`000000oooo0?ooo`2m0?ooo`030000003oool0oooo01H0
oooo000G0?ooo`030000003oool0oooo0;80oooo00D0_g@0000000000000001d0;ooo`060?ooo`03
0000003oool0oooo0;d0oooo00<000000?ooo`3oool05P3oool001L0oooo00<000000?ooo`3oool0
/@3oool01P3OW4P007Bo0?ooo`3oool0okmd001d_`H0oooo00<000000?ooo`3oool0_@3oool00`00
0000oooo0?ooo`0F0?ooo`005`3oool00`000000oooo0?ooo`2`0?ooo`030?oo_`1d0000M;oo0080
oooo00<0oono07A8W03oool01@3oool00`000000oooo0?ooo`2m0?ooo`030000003oool0oooo01H0
oooo000G0?ooo`030000003oool0oooo0;00oooo00L0okmd0018B01d07@0_ooo0?ooo`3OW4P007Bo
00H0oooo00<000000?ooo`3oool0_@3oool00`000000oooo0?ooo`0F0?ooo`005`3oool00`000000
oooo0?ooo`2`0?ooo`030?oOW018B9`0okmd0080000000<004RL0?ooo`3oool01@3oool400000;`0
oooo00<000000?ooo`3oool05P3oool001L0oooo00<000000?ooo`3oool0/03oool00`3ookl0M01d
0;ooo`0:0?ooo`030000003oool0oooo0;d0oooo00<000000?ooo`3oool05P3oool001L0oooo00<0
00000?ooo`3oool0/@3oool00`2oM000B9cO0?ooo`090?ooo`030000003oool0oooo0;d0oooo00<0
00000?ooo`3oool05P3oool001L0oooo00<000000?ooo`3oool0/@3oool00`3ookl0M000001d_`09
0?ooo`030000003oool0oooo0;d0oooo00<000000?ooo`3oool05P3oool001L0oooo00<000000?oo
o`3oool0/`3oool0102oM000000000000000B9`60?ooo`030000003oool0oooo0;d0oooo00<00000
0?ooo`3oool05P3oool001H0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`2m0?oo
o`030000003oool0oooo01H0oooo000F0?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3o
ool0_@3oool00`000000oooo0?ooo`0F0?ooo`005P3oool00`000000oooo0?ooo`2n0?ooo`030000
003oool0oooo0;d0oooo00<000000?ooo`3oool05P3oool001H0oooo00<000000?ooo`3oool0_P3o
ool00`000000oooo0?ooo`2m0?ooo`030000003oool0oooo01H0oooo000F0?ooo`030000003oool0
oooo0;h0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`0E0?ooo`005P3oool00`00
0000oooo0?ooo`2n0?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3oool05@3oool001H0
oooo00<000000?ooo`3oool0_P3oool300000;h0oooo00<000000?ooo`3oool05@3oool001H0oooo
00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`2n0?ooo`030000003oool0oooo01D0oooo
000F0?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?oo
o`0E0?ooo`005P3oool00`000000oooo0?ooo`2n0?ooo`030000003oool0oooo0;h0oooo00<00000
0?ooo`3oool05@3oool001H0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`2n0?oo
o`030000003oool0oooo01D0oooo000F0?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3o
ool0_P3oool00`000000oooo0?ooo`0E0?ooo`005P3oool00`000000oooo0?ooo`2n0?ooo`030000
003oool0oooo0;h0oooo00<000000?ooo`3oool05@3oool001H0oooo00<000000?ooo`3oool0_P3o
ool00`000000oooo0?ooo`2n0?ooo`030000003oool0oooo01D0oooo000F0?ooo`030000003oool0
oooo0;h0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`0E0?ooo`005P3oool00`00
0000oooo0?ooo`2n0?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3oool05@3oool001H0
oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`2n0?ooo`030000003oool0oooo01D0
oooo000F0?ooo`030000003oool0oooo0;h0oooo0`00002n0?ooo`030000003oool0oooo01D0oooo
000F0?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?oo
o`0E0?ooo`005P3oool00`000000oooo0?ooo`2n0?ooo`030000003oool0oooo0;h0oooo00<00000
0?ooo`3oool05@3oool001H0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`2n0?oo
o`030000003oool0oooo01D0oooo000F0?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3o
ool0_P3oool00`000000oooo0?ooo`0E0?ooo`005P3oool00`000000oooo0?ooo`2n0?ooo`030000
003oool0oooo0;h0oooo00<000000?ooo`3oool05@3oool001H0oooo00<000000?ooo`3oool0_P3o
ool00`000000oooo0?ooo`2n0?ooo`030000003oool0oooo01D0oooo000F0?ooo`030000003oool0
oooo0;h0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`0E0?ooo`005P3oool00`00
0000oooo0?ooo`2n0?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3oool05@3oool001H0
oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`2n0?ooo`030000003oool0oooo01D0
oooo000F0?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3oool0_P3oool00`000000oooo
0?ooo`0E0?ooo`005P3oool00`000000oooo0?ooo`2n0?ooo`<00000_P3oool00`000000oooo0?oo
o`0E0?ooo`005P3oool00`000000oooo0?ooo`2n0?ooo`030000003oool0oooo0;h0oooo00<00000
0?ooo`3oool05@3oool001H0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`2n0?oo
o`030000003oool0oooo01D0oooo000F0?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3o
ool0_P3oool00`000000oooo0?ooo`0E0?ooo`005P3oool00`000000oooo0?ooo`2n0?ooo`030000
003oool0oooo0;h0oooo00<000000?ooo`3oool05@3oool001H0oooo00<000000?ooo`3oool0_P3o
ool00`000000oooo0?ooo`2n0?ooo`030000003oool0oooo01D0oooo000E0?ooo`030000003oool0
oooo0;l0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`0E0?ooo`005@3oool00`00
0000oooo0?ooo`2o0?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3oool05@3oool001D0
oooo00<000000?ooo`3oool0/`3oool01@2oM000000000000000000007Bo00L0oooo00<000000?oo
o`3oool0_P3oool00`000000oooo0?ooo`0E0?ooo`005@3oool00`000000oooo0?ooo`2b0?ooo`03
0?noM000M;l0oooo0080oooo00<0_gA809cOo`3oool01@3oool00`000000oooo0?ooo`2n0?ooo`03
0000003oool0oooo01D0oooo000E0?ooo`030000003oool0oooo0;80oooo00<0gia804RLg`3oool0
0P3oool00`2oM000M;oo0?ooo`050?ooo`030000003oool0oooo0;h0oooo00<000000?ooo`3oool0
5@3oool001D0oooo00<000000?ooo`3oool0/P3oool00`3o_g@004RL0?ooo`020?ooo`0309a8B02L
gol0oooo00D0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`0E0?ooo`005@3oool0
0`000000oooo0?ooo`2c0?ooo`050=nLB0000000000000000018W=l01`3oool400000;d0oooo00<0
00000?ooo`3oool05@3oool001D0oooo00<000000?ooo`3oool0/P3oool00`3ookl0M4RL0?ooo`02
0?ooo`0309a8M02oool0oooo00D0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`0E
0?ooo`005@3oool00`000000oooo0?ooo`2b0?ooo`030?noM018W=l0oooo0080oooo00<0_g@007Bo
o`3oool01@3oool00`000000oooo0?ooo`2n0?ooo`030000003oool0oooo01D0oooo000E0?ooo`03
0000003oool0oooo0;80oooo00L0omnL04P0M02oool0oooo0?oOW01807@0_ooo00H0oooo00<00000
0?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2c0?oo
o`050?noM000000000000000B02Lgol01`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0
oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0_`3oool00`00
0000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0;l0
oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?ooo`3oool0_`3oool00`000000oooo
0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<0
00000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o
0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?oo
o`3oool0_`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`03
0000003oool0oooo0;l0oooo0`00002o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`030000
003oool0oooo0;l0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`005@3o
ool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0503o
ool001D0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0
oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0_`3oool00`00
0000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0;l0
oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?ooo`3oool0_`3oool00`000000oooo
0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<0
00000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o
0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?oo
o`3oool0_`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`03
0000003oool0oooo0;l0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`00
5@3oool00`000000oooo0?ooo`2o0?ooo`<00000_`3oool00`000000oooo0?ooo`0D0?ooo`005@3o
ool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0503o
ool001D0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0
oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0_`3oool00`00
0000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0;l0
oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?ooo`3oool0_`3oool00`000000oooo
0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<0
00000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o
0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?oo
o`3oool0_`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`03
0000003oool0oooo0;l0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`00
5@3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0
503oool001D0oooo00<000000?ooo`3oool0_`3oool300000;l0oooo00<000000?ooo`3oool0503o
ool001D0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0
oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0_`3oool00`00
0000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0;l0
oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?ooo`3oool0_`3oool00`000000oooo
0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<0
00000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o
0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?oo
o`3oool0_`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`03
0000003oool0oooo0:T0oooo00<0okmd0000000000000`0000001@00M;l0oooo0?ooo`3oool0okmd
00<0000000<0M;oo0?ooo`3oool01@3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo
01@0oooo000E0?ooo`030000003oool0oooo0:`0oooo00<0W4Q809cOo`3oool0103oool01P2LB7@0
_ooo0?ooo`3ookl0M01d0;ooo`H0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D
0?ooo`005@3oool00`000000oooo0?ooo`2/0?ooo`0309a8B02Lgol0oooo00<0oooo00<0okmd001d
_`3oool00P3oool00`3OW4P0B9cO0?ooo`050?ooo`030000003oool0oooo0;l0oooo00<000000?oo
o`3oool0503oool001D0oooo00<000000?ooo`3oool0[03oool00`2LB4P0W=oo0?ooo`030?ooo`03
0=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool01@3oool400000;h0oooo00<000000?ooo`3o
ool0503oool001D0oooo00<000000?ooo`3oool0[03oool00`2LB4P0W=oo0?ooo`030?ooo`030=nL
B018W=l0oooo0080oooo00<0okmd001d_`3oool01@3oool00`000000oooo0?ooo`2o0?ooo`030000
003oool0oooo01@0oooo000E0?ooo`030000003oool0oooo0:`0oooo00<0W4Q809cOo`3oool00`3o
ool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo00D0oooo00<000000?ooo`3oool0_`3o
ool00`000000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2/0?ooo`0309a8B02Lgol0
oooo00<0oooo00<0okmd04RLg`3oool00P3oool00`3OW4P0B9cO0?ooo`050?ooo`030000003oool0
oooo0;l0oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?ooo`3oool0Z@3oool01@3O
W4P000000018W02LB4P0W=oo00D0oooo00H0W4P007Boo`3oool0omnL04P0M02oool60?ooo`030000
003oool0oooo0;l0oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?ooo`3oool0Z`3o
ool00`3OW4P0001809cOo`050?ooo`050?oo_`1d000000000000B02Lgol01`3oool00`000000oooo
0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<0
00000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o
0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?oo
o`3oool0_`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`03
0000003oool0oooo0;l0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`00
5@3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0
503oool001D0oooo00<000000?ooo`3oool0_`3oool300000;l0oooo00<000000?ooo`3oool0503o
ool001D0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0
oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0_`3oool00`00
0000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0;l0
oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?ooo`3oool0_`3oool00`000000oooo
0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<0
00000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o
0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0503oool001D0oooo00<000000?oo
o`3oool0_`3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo01@0oooo000E0?ooo`03
0000003oool0oooo0;l0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`0D0?ooo`00
5@3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0
503oool001D0oooo00<000000?ooo`3oool0_`3oool00`000000oooo0?ooo`2o0?ooo`030000003o
ool0oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo0`00002o0?ooo`030000003oool0
oooo01@0oooo000E0?ooo`030000003oool0oooo0;l0oooo00<000000?ooo`3oool0_`3oool00`00
0000oooo0?ooo`0D0?ooo`005@3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0;l0
oooo00<000000?ooo`3oool0503oool00001\
\>"],
  ImageRangeCache->{{{0, 431}, {265.813, 0}} -> {-1.10453, -0.835839, \
0.00768816, 0.0673312}}]
}, Closed]],

Cell[TextData[{
  "A list of functions is plotted by providing that list to ",
  StyleBox["Plot", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[".",
    FontWeight->"Bold"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(Plot[
        Evaluate[Table[Sin[2  n\ \[Pi]\ x], {n, 1, 4}]], {x, 0, 
          1}];\)\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.952381 0.309017 0.294302 [
[.21429 .29652 -9 -9 ]
[.21429 .29652 9 0 ]
[.40476 .29652 -9 -9 ]
[.40476 .29652 9 0 ]
[.59524 .29652 -9 -9 ]
[.59524 .29652 9 0 ]
[.78571 .29652 -9 -9 ]
[.78571 .29652 9 0 ]
[.97619 .29652 -3 -9 ]
[.97619 .29652 3 0 ]
[.01131 .01471 -12 -4.5 ]
[.01131 .01471 0 4.5 ]
[.01131 .16187 -24 -4.5 ]
[.01131 .16187 0 4.5 ]
[.01131 .45617 -18 -4.5 ]
[.01131 .45617 0 4.5 ]
[.01131 .60332 -6 -4.5 ]
[.01131 .60332 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.21429 .30902 m
.21429 .31527 L
s
[(0.2)] .21429 .29652 0 1 Mshowa
.40476 .30902 m
.40476 .31527 L
s
[(0.4)] .40476 .29652 0 1 Mshowa
.59524 .30902 m
.59524 .31527 L
s
[(0.6)] .59524 .29652 0 1 Mshowa
.78571 .30902 m
.78571 .31527 L
s
[(0.8)] .78571 .29652 0 1 Mshowa
.97619 .30902 m
.97619 .31527 L
s
[(1)] .97619 .29652 0 1 Mshowa
.125 Mabswid
.07143 .30902 m
.07143 .31277 L
s
.11905 .30902 m
.11905 .31277 L
s
.16667 .30902 m
.16667 .31277 L
s
.2619 .30902 m
.2619 .31277 L
s
.30952 .30902 m
.30952 .31277 L
s
.35714 .30902 m
.35714 .31277 L
s
.45238 .30902 m
.45238 .31277 L
s
.5 .30902 m
.5 .31277 L
s
.54762 .30902 m
.54762 .31277 L
s
.64286 .30902 m
.64286 .31277 L
s
.69048 .30902 m
.69048 .31277 L
s
.7381 .30902 m
.7381 .31277 L
s
.83333 .30902 m
.83333 .31277 L
s
.88095 .30902 m
.88095 .31277 L
s
.92857 .30902 m
.92857 .31277 L
s
.25 Mabswid
0 .30902 m
1 .30902 L
s
.02381 .01471 m
.03006 .01471 L
s
[(-1)] .01131 .01471 1 0 Mshowa
.02381 .16187 m
.03006 .16187 L
s
[(-0.5)] .01131 .16187 1 0 Mshowa
.02381 .45617 m
.03006 .45617 L
s
[(0.5)] .01131 .45617 1 0 Mshowa
.02381 .60332 m
.03006 .60332 L
s
[(1)] .01131 .60332 1 0 Mshowa
.125 Mabswid
.02381 .04414 m
.02756 .04414 L
s
.02381 .07357 m
.02756 .07357 L
s
.02381 .10301 m
.02756 .10301 L
s
.02381 .13244 m
.02756 .13244 L
s
.02381 .1913 m
.02756 .1913 L
s
.02381 .22073 m
.02756 .22073 L
s
.02381 .25016 m
.02756 .25016 L
s
.02381 .27959 m
.02756 .27959 L
s
.02381 .33845 m
.02756 .33845 L
s
.02381 .36788 m
.02756 .36788 L
s
.02381 .39731 m
.02756 .39731 L
s
.02381 .42674 m
.02756 .42674 L
s
.02381 .4856 m
.02756 .4856 L
s
.02381 .51503 m
.02756 .51503 L
s
.02381 .54446 m
.02756 .54446 L
s
.02381 .57389 m
.02756 .57389 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .30902 m
.06244 .38322 L
.10458 .45852 L
.14415 .51889 L
.18221 .56357 L
.20178 .58047 L
.21267 .58793 L
.22272 .59354 L
.23293 .59796 L
.23832 .59976 L
.24402 .60127 L
.24641 .60178 L
.24897 .60225 L
.25119 .60258 L
.25361 .60288 L
.25507 .60302 L
.25643 .60313 L
.25773 .60321 L
.2584 .60324 L
.25912 .60327 L
.25983 .60329 L
.26048 .60331 L
.26176 .60332 L
.26293 .60331 L
.26416 .60329 L
.26538 .60324 L
.26607 .60321 L
.26671 .60317 L
.26912 .60299 L
.27131 .60275 L
.27364 .60244 L
.27847 .60156 L
.2838 .60025 L
.29326 .59705 L
.30213 .59301 L
.32232 .58025 L
.34082 .56432 L
.38045 .51781 L
.41855 .45965 L
.45912 .38744 L
.49816 .31259 L
.53966 .23289 L
.57964 .1614 L
.61811 .10221 L
.63759 .07707 L
.65902 .05386 L
.67938 .03652 L
.69843 .02473 L
.70884 .02018 L
.71396 .01844 L
Mistroke
.71872 .01712 L
.72301 .01617 L
.72758 .01542 L
.7302 .01511 L
.73148 .01499 L
.73266 .0149 L
.73371 .01484 L
.73487 .01478 L
.73603 .01474 L
.73725 .01472 L
.73856 .01472 L
.73977 .01473 L
.7404 .01475 L
.7411 .01477 L
.74251 .01484 L
.74375 .01492 L
.74508 .01503 L
.74748 .01528 L
.74985 .0156 L
.75235 .01601 L
.7568 .01695 L
.76198 .01836 L
.7668 .01998 L
.77773 .02472 L
.78828 .0307 L
.79823 .03757 L
.81683 .05353 L
.85534 .09846 L
.89632 .16101 L
.93577 .23146 L
.97371 .3042 L
.97619 .30902 L
Mfstroke
.02381 .30902 m
.06244 .45263 L
.08255 .51497 L
.0932 .54236 L
.10458 .56657 L
.11009 .57624 L
.11531 .58409 L
.12038 .59047 L
.12507 .59525 L
.12951 .59877 L
.13178 .60018 L
.13422 .60141 L
.13549 .60193 L
.13666 .60234 L
.13784 .60268 L
.13895 .60293 L
.14022 .60314 L
.1409 .60322 L
.14161 .60328 L
.1423 .60331 L
.14295 .60332 L
.14415 .60328 L
.14531 .60316 L
.14656 .60297 L
.14773 .60271 L
.14881 .60241 L
.15143 .60144 L
.15392 .60019 L
.15886 .59679 L
.16423 .59169 L
.17383 .57909 L
.1827 .56357 L
.20137 .51989 L
.22197 .45702 L
.26217 .30798 L
.30086 .16432 L
.32051 .10346 L
.3309 .0766 L
.342 .05274 L
.35275 .03485 L
.35784 .0283 L
.36253 .02337 L
.36724 .01952 L
.36972 .01794 L
.37235 .01661 L
.37463 .01574 L
.37573 .01541 L
.37677 .01516 L
.37799 .01494 L
.37911 .0148 L
Mistroke
.38031 .01472 L
.38162 .01473 L
.38227 .01476 L
.38296 .01482 L
.38419 .01498 L
.38551 .01525 L
.38695 .01564 L
.38955 .01661 L
.39197 .01782 L
.39649 .02088 L
.40134 .02529 L
.40698 .0319 L
.41232 .03956 L
.42232 .05748 L
.44227 .1059 L
.4607 .16316 L
.50002 .3091 L
.53782 .44987 L
.55884 .51523 L
.56803 .53913 L
.57808 .56136 L
.58722 .57774 L
.59696 .59091 L
.60236 .59621 L
.60726 .59976 L
.60962 .60104 L
.61086 .6016 L
.61218 .60211 L
.61333 .60248 L
.61459 .60281 L
.61574 .60304 L
.61682 .60319 L
.61808 .60329 L
.61871 .60332 L
.61941 .60332 L
.62065 .60325 L
.62181 .60312 L
.62248 .60302 L
.62318 .60288 L
.62443 .60258 L
.62578 .60216 L
.62725 .6016 L
.62973 .6004 L
.63238 .59878 L
.63715 .59497 L
.64214 .58976 L
.64686 .58372 L
.6557 .56958 L
.67568 .52489 L
.69413 .47033 L
Mistroke
.7335 .32685 L
.77136 .18397 L
.79241 .1157 L
.81166 .06613 L
.82118 .04724 L
.8262 .0389 L
.83155 .03133 L
.8367 .02536 L
.84136 .02107 L
.84361 .01939 L
.84604 .01787 L
.84835 .01669 L
.85045 .01586 L
.85159 .0155 L
.85283 .01519 L
.85414 .01495 L
.85538 .01479 L
.85653 .01472 L
.85776 .01472 L
.85881 .01479 L
.85997 .01492 L
.86063 .01503 L
.86132 .01516 L
.86256 .01547 L
.86535 .01644 L
.86777 .0176 L
.87041 .01921 L
.87569 .02348 L
.88133 .02957 L
.89148 .0444 L
.90173 .06419 L
.91284 .09067 L
.933 .15022 L
.97393 .30026 L
.97619 .30902 L
Mfstroke
.02381 .30902 m
.04262 .41606 L
.06244 .51276 L
.07286 .5519 L
.08255 .57915 L
.08813 .59036 L
.09076 .59448 L
.0932 .5976 L
.096 .60036 L
.09748 .60145 L
.09824 .60191 L
.09905 .60234 L
.09976 .60265 L
.10041 .60288 L
.10168 .60319 L
.10239 .60328 L
.10317 .60332 L
.1039 .60329 L
.10458 .60321 L
.10587 .6029 L
.10651 .60268 L
.10722 .60237 L
.10848 .6017 L
.10966 .6009 L
.11231 .59853 L
.11515 .59509 L
.12035 .58647 L
.1251 .57604 L
.13466 .54801 L
.14371 .51358 L
.18204 .31193 L
.20142 .20156 L
.21172 .14833 L
.22282 .09846 L
.23339 .06036 L
.23801 .04701 L
.24307 .03492 L
.24787 .02599 L
.25234 .01998 L
.25481 .01761 L
.25705 .01607 L
.25829 .01547 L
.259 .0152 L
.25964 .01501 L
.26083 .01478 L
.26209 .01472 L
.2633 .01483 L
.26462 .01514 L
.26586 .01562 L
.26702 .01622 L
Mistroke
.2692 .01778 L
.27152 .02003 L
.27427 .02348 L
.27684 .02749 L
.28166 .03693 L
.29046 .06049 L
.29997 .09438 L
.31995 .1885 L
.34103 .30762 L
.36093 .42068 L
.37905 .50916 L
.3891 .54783 L
.3986 .57578 L
.40382 .58716 L
.40863 .59506 L
.41115 .59815 L
.41392 .60072 L
.41532 .60169 L
.41605 .60211 L
.41682 .60248 L
.41749 .60275 L
.41823 .60299 L
.41953 .60325 L
.42017 .60331 L
.42086 .60332 L
.42208 .6032 L
.42339 .60288 L
.42414 .60261 L
.42483 .6023 L
.42724 .6008 L
.4286 .59967 L
.42983 .59846 L
.43463 .5921 L
.43918 .58372 L
.44922 .55747 L
.46014 .51783 L
.47989 .42306 L
.50089 .30381 L
.52056 .19252 L
.53861 .10537 L
.54802 .06955 L
.55794 .04079 L
.56309 .02985 L
.56789 .02228 L
.57065 .01909 L
.57315 .01694 L
.57454 .01605 L
.57527 .01568 L
.57605 .01535 L
.57672 .01512 L
Mistroke
.57747 .01492 L
.57878 .01473 L
.58007 .01474 L
.58127 .01492 L
.58259 .01531 L
.58332 .01562 L
.58399 .01594 L
.58653 .01767 L
.58893 .01997 L
.59339 .02597 L
.59821 .03494 L
.6035 .04765 L
.60909 .06418 L
.61909 .10109 L
.65708 .29942 L
.67824 .41987 L
.69753 .51344 L
.70711 .54968 L
.71216 .56538 L
.71752 .57926 L
.7222 .58887 L
.72468 .59301 L
.72736 .5967 L
.72981 .59937 L
.73088 .60032 L
.73205 .60122 L
.73309 .60188 L
.7342 .60244 L
.73537 .60289 L
.73645 .60316 L
.73769 .60331 L
.73839 .60331 L
.73905 .60327 L
.73974 .60316 L
.74037 .60302 L
.7411 .6028 L
.74179 .60253 L
.74301 .60193 L
.74414 .60121 L
.74671 .59905 L
.74953 .59581 L
.75209 .5921 L
.75782 .58118 L
.76281 .5688 L
.7682 .55259 L
.77797 .51632 L
.81905 .29977 L
.83953 .18454 L
.84952 .13458 L
.85861 .09497 L
Mistroke
.86742 .06317 L
.87699 .03711 L
.88224 .02689 L
.88455 .02336 L
.88709 .02016 L
.88949 .01781 L
.89173 .01621 L
.89297 .01557 L
.8941 .01514 L
.89541 .01483 L
.89665 .01472 L
.89789 .01478 L
.89859 .01489 L
.89924 .01505 L
.90042 .01546 L
.90168 .01607 L
.90385 .01755 L
.90623 .0198 L
.90878 .02291 L
.91151 .02706 L
.91645 .03663 L
.92606 .06263 L
.93483 .09413 L
.95391 .18339 L
.97467 .30013 L
.97619 .30902 L
Mfstroke
.02381 .30902 m
.04262 .44916 L
.0522 .50944 L
.06244 .55973 L
.0679 .57923 L
.07286 .59214 L
.07525 .59664 L
.07651 .59855 L
.07784 .60023 L
.07901 .6014 L
.08029 .60237 L
.08146 .60296 L
.08255 .60326 L
.08326 .60332 L
.08391 .60328 L
.08463 .60315 L
.08539 .60288 L
.08612 .60252 L
.08681 .60208 L
.0881 .601 L
.08936 .5996 L
.09053 .59803 L
.09317 .59347 L
.09581 .58751 L
.09872 .5794 L
.10458 .55826 L
.11478 .50764 L
.12409 .44889 L
.145 .29235 L
.15504 .21602 L
.1657 .14215 L
.17558 .08532 L
.18041 .06279 L
.18485 .04565 L
.18912 .03255 L
.19129 .02722 L
.19362 .02255 L
.19596 .01894 L
.197 .01768 L
.19813 .01656 L
.19882 .01601 L
.19946 .01559 L
.20072 .015 L
.20186 .01474 L
.20307 .01476 L
.20431 .0151 L
.20545 .01568 L
.20677 .01668 L
.20802 .01796 L
.21023 .02101 L
Mistroke
.21264 .02544 L
.21811 .03971 L
.22318 .05794 L
.23377 .11006 L
.24374 .17329 L
.26236 .31256 L
.28078 .4496 L
.29122 .51467 L
.29632 .54105 L
.30096 .56143 L
.30559 .57798 L
.31061 .59141 L
.31337 .59669 L
.31458 .59853 L
.31592 .60021 L
.31718 .60147 L
.31836 .60235 L
.3196 .60298 L
.3203 .60319 L
.32094 .60329 L
.32217 .60326 L
.32349 .60288 L
.32473 .6022 L
.32585 .60132 L
.32718 .59994 L
.32861 .59805 L
.33122 .59356 L
.33395 .5874 L
.33684 .57931 L
.34202 .56093 L
.35148 .51552 L
.36163 .45265 L
.37996 .31673 L
.39975 .16897 L
.41019 .10383 L
.41591 .07442 L
.42129 .05165 L
.42601 .03589 L
.42845 .02942 L
.43111 .02366 L
.43386 .01918 L
.43537 .01738 L
.43609 .01669 L
.43677 .01612 L
.43808 .0153 L
.43928 .01486 L
.44056 .01472 L
.44129 .01478 L
.44196 .01494 L
.44306 .0154 L
Mistroke
.44424 .01617 L
.44536 .01716 L
.44638 .01828 L
.44888 .02192 L
.45125 .02654 L
.45596 .03895 L
.4611 .05724 L
.47143 .10755 L
.48079 .16612 L
.50177 .32273 L
.51192 .4001 L
.52265 .47463 L
.53258 .53202 L
.53743 .55471 L
.54185 .57189 L
.54641 .58588 L
.54851 .59097 L
.55073 .59543 L
.55186 .59732 L
.5531 .5991 L
.55424 .60046 L
.55529 .60148 L
.55652 .60239 L
.55717 .60275 L
.55785 .60303 L
.55899 .60329 L
.56024 .60327 L
.5609 .60313 L
.56161 .60287 L
.56289 .60216 L
.56415 .60113 L
.5653 .59991 L
.56792 .59612 L
.5707 .59061 L
.57533 .57808 L
.58042 .55968 L
.5906 .50981 L
.59989 .45158 L
.62078 .29555 L
.63079 .2193 L
.64143 .14512 L
.65063 .09116 L
.65546 .06775 L
.66056 .04732 L
.66314 .03879 L
.66596 .03086 L
.66855 .02494 L
.67092 .0207 L
.67335 .0175 L
.67469 .01626 L
Mistroke
.67595 .01542 L
.67712 .01493 L
.67821 .01473 L
.67939 .01478 L
.68065 .01516 L
.68177 .01576 L
.6828 .01655 L
.68399 .01771 L
.68511 .01909 L
.68711 .02216 L
.6893 .02643 L
.69424 .03952 L
.69883 .05577 L
.70939 .10679 L
.71934 .16924 L
.73795 .30786 L
.75632 .44513 L
.76674 .51092 L
.77184 .5378 L
.77648 .55872 L
.78109 .57576 L
.7861 .58983 L
.78885 .59548 L
.79006 .59748 L
.7914 .59936 L
.79257 .60071 L
.79383 .60185 L
.79452 .60234 L
.79516 .6027 L
.79641 .60317 L
.79764 .60332 L
.79895 .60314 L
.80019 .60264 L
.80131 .60192 L
.80263 .60074 L
.80407 .59907 L
.80667 .59496 L
.8094 .58921 L
.81229 .58153 L
.81748 .56383 L
.82691 .51971 L
.83704 .45792 L
.85535 .32293 L
.87509 .17479 L
.88551 .10869 L
.89123 .07855 L
.89661 .05497 L
.90182 .03703 L
.90474 .02916 L
.90744 .0234 L
Mistroke
.90971 .01966 L
.91102 .01798 L
.9122 .01675 L
.91346 .01577 L
.91415 .01536 L
.91481 .01507 L
.91597 .01476 L
.91724 .01475 L
.91842 .01503 L
.91953 .01555 L
.92075 .01642 L
.92206 .01769 L
.92473 .02135 L
.92718 .02596 L
.93165 .03743 L
.93636 .05358 L
.94593 .09818 L
.95613 .16043 L
.97451 .29598 L
.97619 .30902 L
Mfstroke
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.875},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00:03oool00`000000oooo0?oo
o`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?oo
o`3oool0o`3ooon60?ooo`00703oool00`3o_g@000000000000300000003001d_`3oool0oooo00<0
oooo00<000000?ooo`3oool0o`3ooon60?ooo`007`3oool00`2LB4P0W=oo0?ooo`060?ooo`030000
003oool0oooo0?l0ooooQP3oool001l0oooo00<0W4Q809cOo`3oool01P3oool00`000000oooo0?oo
o`3o0?ooohH0oooo000O0?ooo`0309a8B02Lgol0oooo00H0oooo100000130?ooo`<00000503oool4
000002/0oooo1P00000C0?ooo`<00000=03oool4000002@0oooo0`00000B0?ooo`X000009`3oool6
000000/0oooo100000040?ooo`<000008@3oool001<0oooo00<0W4P00000000000000`0000000`00
B9`0oooo0?ooo`030?ooo`0309a8B02Lgol0oooo00H0oooo00<000000?ooo`3oool0@`3oool01@00
0000oooo0?ooo`3oool000000180oooo0P0000030?ooo`8000009`3oool2000000H0oooo0P00000@
0?ooo`030000003oool0oooo00800000<P3oool200000080oooo0P00000R0?ooo`8000000P3oool0
0`000000oooo0?ooo`0;0?ooo`@000002P3oool400000240oooo0P0000060?ooo`8000001`3oool2
000000<0oooo0P0000020?ooo`050000003oool0oooo0?ooo`000000803oool001l0oooo00<0W4Q8
09cOo`3oool01P3oool00`000000oooo0?ooo`120?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool03`3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo02@0oooo00<00000
0?ooo`3oool0203oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool0;`3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01h0oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`060?ooo`@000004P3oool3000001d0oooo00<00000
0?ooo`3oool0203oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00D0oooo0P000004
0?ooo`030000003oool0oooo01h0oooo000O0?ooo`0309a8B02Lgol0oooo00H0oooo00<000000?oo
o`3oool0@@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00d0oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`0Q0?ooo`800000303oool00`000000oooo0?ooo`0:0?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool0;@3oool00`000000oooo0?ooo`060?oo
o`030000003oool0oooo01`0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`040?oo
o`8000006@3oool2000001X0oooo00<000000?ooo`3oool02P3oool01@000000oooo0?ooo`3oool0
000000T0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0M0?ooo`00703oool01@3O
W4P000000018W02LB4P0W=oo00L0oooo00<000000?ooo`3oool0@03oool00`000000oooo0?ooo`06
0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0O
0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo02`0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0L
0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool00P3oool2000001d0oooo0P00000F
0?ooo`8000003P3oool00`000000oooo000000090?ooo`8000001@3oool00`000000oooo0?ooo`0M
0?ooo`007P3oool00`3OW4P0001809cOo`070?ooo`030000003oool0oooo0400oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00T0oooo00<000000?oo
o`3oool07@3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`0[0?ooo`030000003oool0oooo00P0oooo00<000000?oo
o`3oool06P3oool00`000000oooo0?ooo`060?ooo`040000003oool0000000000240oooo0P00000C
0?ooo`030000003oool0oooo00l0oooo0P0000090?ooo`030000003oool0000000D0oooo00<00000
0?ooo`3oool0703oool002P0oooo00<000000?ooo`3oool0@03oool00`000000oooo0?ooo`070?oo
o`030000003oool0oooo00T0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0L0?oo
o`030000003oool0oooo0140oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`060?oo
o`030000003oool0oooo02X0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0I0?oo
o`030000003oool0oooo00H0oooo0P00000U0?ooo`8000004@3oool00`000000oooo0?ooo`0?0?oo
o`800000203oool010000000oooo0?ooo`0000050?ooo`030000003oool0oooo01`0oooo000X0?oo
o`030000003oool0oooo0400oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`090?oo
o`030000003oool0oooo00/0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`0B0?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0X0?oo
o`030000003oool0oooo00/0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`050?oo
o`<000009`3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo0100oooo00<000000?oo
o`0000001`3oool01@000000oooo0?ooo`3oool0000000D0oooo00<000000?ooo`3oool06`3oool0
02P0oooo00<000000?ooo`3oool0@03oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo
01@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo
02P0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo
00@0oooo0P0000020?ooo`030000003oool0oooo02H0oooo0P00000<0?ooo`030000003oool0oooo
0100oooo00@000000?ooo`3oool000001P3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool06`3oool002P0oooo00<000000?ooo`3oool0?`3oool00`00
0000oooo0?ooo`090?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool03@3oool00`00
0000oooo0?ooo`0H0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`090?ooo`030000003oool0oooo02H0oooo00<000000?ooo`3oool03@3oool00`00
0000oooo0?ooo`0G0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`0W0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0403oool01@00
0000oooo0?ooo`3oool0000000D0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo01X0oooo000X0?ooo`030000003oool0oooo03l0oooo00<000000?oo
o`3oool02@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00h0oooo00<000000?oo
o`3oool0603oool00`000000oooo0?ooo`0F0?ooo`050000003oool0oooo0?ooo`000000303oool0
0`000000oooo0?ooo`0V0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool05P3oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0:03oool0
0`000000oooo0?ooo`070?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00`3oool0
0`000000oooo0?ooo`0J0?ooo`00:03oool00`000000oooo0?ooo`0n0?ooo`030000003oool0oooo
00X0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo
01H0oooo00<000000?ooo`3oool0603oool010000000oooo0?ooo`00000<0?ooo`030000003oool0
oooo02H0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0F0?ooo`050000003oool0
oooo0?ooo`0000001`3oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0oooo00D0oooo00<0
00000?ooo`3oool04@3oool00`000000oooo0?ooo`030?ooo`050000003oool0oooo0?ooo`000000
1`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo01T0oooo000X0?ooo`<00000?P3o
ool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0403o
ool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo01P0oooo00@000000?ooo`3oool00000
3@3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0
503oool01@000000oooo0?ooo`3oool0000000T0oooo00<000000?ooo`3oool0:@3oool00`000000
oooo0?ooo`040?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0103oool010000000
oooo0?ooo`0000070?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool06@3oool002P0
oooo00<000000?ooo`3oool0?P3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00@0
oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo01X0
oooo00<000000?ooo`0000003@3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo0100
oooo00<000000?ooo`3oool0503oool010000000oooo00000000000:0?ooo`030000003oool0oooo
02X0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo
00@0oooo00@000000?ooo`3oool00000203oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo01T0oooo000X0?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3oool0303oool00`00
0000oooo0?ooo`040?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0503oool00`00
0000oooo0?ooo`0J0?ooo`8000003P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo
0100oooo00<000000?ooo`3oool0503oool2000000`0oooo00<000000?ooo`3oool0:`3oool01000
0000oooo0?ooo`00000D0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`000000203oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo01T0oooo000X0?ooo`030000003oool0oooo
03d0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
0180oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo
00`0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo
0180oooo0P00000>0?ooo`030000003oool0oooo02/0oooo00<000000?ooo`000000503oool00`00
0000oooo0?ooo`060?ooo`8000002@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
01P0oooo000X0?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool04P3oool00`000000
oooo0?ooo`0M0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool08P3oool00`000000
oooo0?ooo`0B0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`0/0?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool01`3oool00`000000
oooo0?ooo`080?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0603oool002P0oooo
00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`0=0?ooo`050000003oool0oooo0?ooo`00
00005P3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo01d0oooo0P00000>0?ooo`03
0000003oool0oooo0280oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0A0?ooo`80
00003`3oool00`000000oooo0?ooo`0/0?ooo`800000503oool00`000000oooo0?ooo`070?ooo`03
0000003oool0oooo00P0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0H0?ooo`00
:03oool00`000000oooo0?ooo`0l0?ooo`030000003oool0oooo00h0oooo00D000000?ooo`3oool0
oooo0000000F0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool07@3oool00`000000
oooo0000000>0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool04`3oool00`000000
oooo0?ooo`0@0?ooo`030000003oool0000000l0oooo00<000000?ooo`3oool0:`3oool010000000
oooo0?ooo`00000B0?ooo`030000003oool0oooo00P0oooo0P00000:0?ooo`050000003oool0oooo
0?ooo`0000006P3oool002P0oooo00<000000?ooo`3oool0?03oool00`000000oooo0?ooo`0>0?oo
o`050000003oool0oooo0?ooo`0000005P3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0
oooo01d0oooo00@000000?ooo`3oool000003@3oool00`000000oooo0?ooo`0Q0?ooo`030000003o
ool0oooo01@0oooo00<000000?ooo`3oool03P3oool00`000000oooo0000000A0?ooo`030000003o
ool0oooo02X0oooo00D000000?ooo`3oool0oooo0000000A0?ooo`030000003oool0oooo00L0oooo
00<000000?ooo`0000002P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01L0oooo
000X0?ooo`030000003oool0oooo03`0oooo00<000000?ooo`3oool03`3oool00`000000oooo0000
000H0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool07P3oool010000000oooo0?oo
o`00000>0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0503oool00`000000oooo
0?ooo`0=0?ooo`040000003oool0oooo00000140oooo00<000000?ooo`3oool0:@3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool01`3oool010000000
oooo0?ooo`0000090?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool05`3oool002P0
oooo00<000000?ooo`3oool0?03oool00`000000oooo0?ooo`0?0?ooo`030000003oool0000001P0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0N0?ooo`050000003oool0oooo0?oo
o`0000003@3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01D0oooo00<000000?oo
o`3oool03@3oool010000000oooo0?ooo`00000A0?ooo`030000003oool0oooo02T0oooo00<00000
0?ooo`3oool0103oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo00P0oooo00@00000
0?ooo`3oool000002@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01L0oooo000X
0?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0403oool00`000000oooo0000000H
0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0F
0?ooo`030000003oool0oooo00/0oooo00D000000?ooo`3oool0oooo0000000A0?ooo`030000003o
ool0oooo02T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0;0?ooo`030000003o
ool0oooo00P0oooo00D000000?ooo`3oool0oooo000000090?ooo`050000003oool0oooo0?ooo`00
00006@3oool002P0oooo00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`0@0?ooo`030000
003oool0000001P0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0N0?ooo`030000
003oool0oooo00<0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo01H0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo00l0oooo00<000000?ooo`3oool0:03oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo00X0oooo00<000000?ooo`3oool0203oool01@000000oooo0?ooo`3oool0000000T0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0F0?ooo`00:03oool3000003/0oooo
00<000000?ooo`3oool0403oool2000001X0oooo00<000000?ooo`3oool02`3oool00`000000oooo
0?ooo`0O0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02P3oool00`000000oooo
0?ooo`0N0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool09`3oool00`000000oooo
0?ooo`080?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0203oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`0F0?ooo`00:03oool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo0140oooo00<0
00000?ooo`3oool0603oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo01l0oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo01d0oooo00<0
00000?ooo`3oool05`3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool04@3oool00`000000oooo0?ooo`0W0?ooo`030000003oool0oooo00P0oooo00<0
00000?ooo`3oool0203oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool01P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01H0oooo000X
0?ooo`030000003oool0oooo03X0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0H
0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`0H
0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0A
0?ooo`030000003oool0oooo02H0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`07
0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`06
0?ooo`050000003oool0oooo0?ooo`000000603oool002P0oooo00<000000?ooo`3oool0>P3oool0
0`000000oooo0?ooo`0B0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool02@3oool0
0`000000oooo0?ooo`0O0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02P3oool0
0`000000oooo0?ooo`0M0?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3oool01@3oool0
0`000000oooo0?ooo`050?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool09P3oool0
0`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0203oool0
0`000000oooo0?ooo`040?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`0E0?ooo`00:03oool00`000000oooo0?ooo`0j0?ooo`030000003oool0oooo
0140oooo0P00000K0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool07`3oool00`00
0000oooo0?ooo`060?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0703oool00`00
0000oooo0?ooo`0I0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool01@3oool00`00
0000oooo0?ooo`0A0?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3oool03@3oool00`00
0000oooo0?ooo`040?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`00
0000oooo0?ooo`050?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool05@3oool002P0
oooo00<000000?ooo`3oool0>P3oool00`000000oooo0?ooo`0A0?ooo`8000006`3oool00`000000
oooo0?ooo`080?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool01P3oool00`000000
oooo0?ooo`090?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool06@3oool00`000000
oooo0?ooo`040?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool04P3oool00`000000
oooo0?ooo`0U0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`080?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01@3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo01D0oooo000X0?ooo`030000003oool0oooo03X0oooo
00<000000?ooo`3oool04@3oool2000001/0oooo00<000000?ooo`3oool0203oool00`000000oooo
0?ooo`0P0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02P3oool00`000000oooo
0?ooo`0K0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool0903oool00`000000oooo
0?ooo`0?0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0203oool00`000000oooo
0?ooo`070?ooo`030000003oool0oooo00D0oooo00D000000?ooo`3oool0oooo0000000G0?ooo`00
:03oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo0180oooo00<000000?ooo`000000
6`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0
1`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0
6`3oool01@000000oooo0?ooo`3oool0000000T0oooo00<000000?ooo`3oool04`3oool00`000000
oooo0?ooo`0S0?ooo`030000003oool0oooo0140oooo00@000000?ooo`3oool000002`3oool00`00
0000oooo0?ooo`070?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`0D0?ooo`00:03oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo0140
oooo00@000000?ooo`3oool000006`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo
0240oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
01X0oooo00<000000?ooo`3oool06`3oool010000000oooo0?ooo`00000:0?ooo`030000003oool0
oooo01<0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0
000000/0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`040?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool0503oool002P0oooo00<000000?ooo`3oool0>@3oool00`00
0000oooo0?ooo`0A0?ooo`040000003oool0oooo000001/0oooo00<000000?ooo`3oool01P3oool0
0`000000oooo0?ooo`0P0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0203oool0
0`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01/0oooo00@000000?ooo`3oool000002P3o
ool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool04`3o
ool2000000/0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool0503oool002P0oooo00<000000?ooo`3oool0>@3oool0
0`000000oooo0?ooo`0A0?ooo`040000003oool0oooo000001/0oooo00<000000?ooo`3oool01@3o
ool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0203o
ool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01`0oooo0P00000:0?ooo`030000003o
ool0oooo01@0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`0D0?ooo`8000002`3o
ool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`0D0?ooo`00:03oool3000003T0oooo00<000000?ooo`3oool04@3oool0
10000000oooo0?ooo`00000L0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool08@3o
ool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0603o
ool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool05@3o
ool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo01@0oooo0P00000:0?ooo`030000003o
ool0oooo00X0oooo00<000000?ooo`3oool0103oool01@000000oooo0?ooo`3oool0000001H0oooo
000X0?ooo`030000003oool0oooo03T0oooo00<000000?ooo`3oool0403oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool0103oool00`000000oooo0?oo
o`0Q0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0203oool00`000000oooo0?oo
o`0H0?ooo`030000003oool0oooo01`0oooo0P00000;0?ooo`030000003oool0oooo01D0oooo00<0
00000?ooo`3oool0803oool00`000000oooo0?ooo`0E0?ooo`030000003oool0000000T0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`040?ooo`050000003oool0oooo0?ooo`000000
5P3oool002P0oooo00<000000?ooo`3oool0>03oool00`000000oooo0?ooo`0A0?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo0280oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`080?ooo`030000003o
ool0oooo01P0oooo00<000000?ooo`3oool0703oool2000000/0oooo00<000000?ooo`3oool05@3o
ool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo01D0oooo00@000000?ooo`3oool00000
203oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0
0P3oool00`000000oooo0?ooo`0C0?ooo`00:03oool00`000000oooo0?ooo`0h0?ooo`030000003o
ool0oooo0140oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0I0?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`0;0?ooo`030000003o
ool0oooo00L0oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`0K0?ooo`040000003o
ool0oooo000000X0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`0P0?ooo`030000
003oool0oooo01@0oooo00D000000?ooo`3oool0oooo000000080?ooo`030000003oool0oooo00/0
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01<0
oooo000X0?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3oool04@3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`0R0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool01`3oool00`000000oooo
0?ooo`0G0?ooo`030000003oool0oooo01/0oooo00D000000?ooo`3oool0oooo000000090?ooo`03
0000003oool0oooo01H0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`0E0?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0;0?ooo`03
0000003oool0oooo00@0oooo00D000000?ooo`3oool0oooo0000000E0?ooo`00:03oool00`000000
oooo0?ooo`0h0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`0J0?ooo`050000003oool0oooo0?ooo`000000903oool00`000000oooo0?ooo`0<0?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0K0?oo
o`050000003oool0oooo0?ooo`0000002@3oool00`000000oooo0?ooo`0F0?ooo`030000003oool0
oooo01l0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00D0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`040?ooo`050000003oool0
oooo0?ooo`0000005@3oool002P0oooo00<000000?ooo`3oool0>03oool00`000000oooo0?ooo`0@
0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool06P3oool01@000000oooo0?ooo`3o
ool0000002@0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`070?ooo`030000003o
ool0oooo01H0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo00L0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0N0?ooo`030000003o
ool0oooo01D0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo00`0oooo00<000000?ooo`3oool00`3oool01@000000oooo0?ooo`3oool0000001D0oooo
000X0?ooo`030000003oool0oooo03P0oooo00<000000?ooo`3oool0403oool00`000000oooo0?oo
o`040?ooo`030000003oool0oooo01T0oooo00D000000?ooo`3oool0oooo0000000T0?ooo`030000
003oool0oooo00d0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0F0?ooo`030000
003oool0oooo01X0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo01L0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`0E0?ooo`030000
003oool0oooo00D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0=0?ooo`030000
003oool0oooo00<0oooo00D000000?ooo`3oool0oooo0000000E0?ooo`00:03oool00`000000oooo
0?ooo`0g0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool0103oool00`000000oooo
0?ooo`0I0?ooo`040000003oool0oooo000002D0oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`070?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool06@3oool00`000000
oooo0?ooo`040?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool05`3oool00`000000
oooo0?ooo`0M0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool01@3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0103oool01@000000
oooo0?ooo`3oool0000001@0oooo000X0?ooo`030000003oool0oooo03L0oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01X0oooo00<000000?ooo`00
00009@3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3o
ool05@3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3o
ool01P3oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3o
ool05@3oool00`000000oooo0?ooo`060?ooo`050000003oool0oooo0?ooo`000000403oool00`00
0000oooo0?ooo`030?ooo`050000003oool0oooo0?ooo`000000503oool002P0oooo00<000000?oo
o`3oool0=`3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo00@0oooo00<000000?oo
o`3oool06P3oool00`000000oooo0000000U0?ooo`030000003oool0oooo00h0oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo01T0oooo00<000000?oo
o`3oool01@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo01P0oooo00<000000?oo
o`3oool0703oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo00L0oooo00@000000?oo
o`3oool00000403oool00`000000oooo0?ooo`030?ooo`050000003oool0oooo0?ooo`000000503o
ool002P0oooo00<000000?ooo`3oool0=`3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0
oooo00D0oooo00<000000?ooo`3oool06P3oool2000002D0oooo00<000000?ooo`3oool03`3oool0
0`000000oooo0?ooo`060?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool0603oool0
0`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0603oool0
0`000000oooo0?ooo`0L0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool0203oool0
10000000oooo0?ooo`00000@0?ooo`030000003oool0oooo00<0oooo00D000000?ooo`3oool0oooo
0000000D0?ooo`00:03oool3000003L0oooo00<000000?ooo`3oool0403oool00`000000oooo0?oo
o`050?ooo`030000003oool0oooo01X0oooo0P00000U0?ooo`030000003oool0oooo00l0oooo00<0
00000?ooo`3oool01`3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo01L0oooo00<0
00000?ooo`3oool01`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo01T0oooo00<0
00000?ooo`3oool06`3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00T0oooo00<0
00000?ooo`0000004@3oool00`000000oooo0?ooo`020?ooo`050000003oool0oooo0?ooo`000000
503oool002P0oooo00<000000?ooo`3oool0=`3oool00`000000oooo0?ooo`0@0?ooo`030000003o
ool0oooo00H0oooo00<000000?ooo`3oool06@3oool2000002D0oooo00<000000?ooo`3oool0403o
ool00`000000oooo0?ooo`060?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3oool05`3o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool06@3o
ool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool02P3o
ool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo00<0oooo00@000000?ooo`3oool00000
503oool002P0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?ooo`0A0?ooo`030000003o
ool0oooo00H0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0S0?ooo`030000003o
ool0oooo0100oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0C0?ooo`030000003o
ool0oooo01L0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo01T0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0F0?ooo`030000003o
ool0oooo00X0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`030?ooo`050000003o
ool0oooo0?ooo`0000004`3oool002P0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?oo
o`0A0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool06@3oool2000002D0oooo00<0
00000?ooo`3oool0403oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo01<0oooo00<0
00000?ooo`3oool05`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool06P3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01H0oooo00<0
00000?ooo`3oool02P3oool200000180oooo00<000000?ooo`3oool00P3oool01@000000oooo0?oo
o`3oool0000001<0oooo000X0?ooo`030000003oool0oooo03H0oooo00<000000?ooo`3oool0403o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo01T0oooo0P00000U0?ooo`030000003o
ool0oooo0140oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0C0?ooo`030000003o
ool0oooo01H0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo01X0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0F0?ooo`030000003o
ool0oooo00/0oooo00<000000?ooo`0000004@3oool00`000000oooo0?ooo`020?ooo`050000003o
ool0oooo0?ooo`0000004`3oool002P0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?oo
o`0@0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool06@3oool2000002D0oooo00<0
00000?ooo`3oool04@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo01<0oooo00<0
00000?ooo`3oool05@3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<0
00000?ooo`3oool06P3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo01H0oooo00<0
00000?ooo`3oool02`3oool00`000000oooo0000000A0?ooo`030000003oool0oooo00<0oooo00@0
00000?ooo`3oool000004`3oool002P0oooo00<000000?ooo`3oool0=P3oool00`000000oooo0?oo
o`0@0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0603oool010000000oooo0?oo
o`00000S0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool01P3oool00`000000oooo
0?ooo`0B0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool02`3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool0603oool00`000000oooo
0?ooo`0F0?ooo`030000003oool0oooo00/0oooo00@000000?ooo`3oool000004@3oool00`000000
oooo0?ooo`020?ooo`040000003oool0oooo000001<0oooo000X0?ooo`030000003oool0oooo03H0
oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo01L0
oooo00@000000?ooo`3oool000008`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo
00H0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo
00d0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo
01L0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0;0?ooo`040000003oool0oooo
00000140oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`00000C0?ooo`002`3oool0
1@3o_g@00000000000000000M;oo00D0oooo00<0_g@000000000M;l01@3oool01@2oM00000000000
00000000M;oo00H0oooo00<000000?ooo`3oool0=@3oool00`000000oooo0?ooo`0A0?ooo`030000
003oool0oooo00P0oooo00<000000?ooo`3oool05`3oool010000000oooo0?ooo`00000S0?ooo`03
0000003oool0oooo01<0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0A0?ooo`03
0000003oool0oooo01@0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo01/0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0G0?ooo`03
0000003oool0oooo00X0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0>0?ooo`03
0000003oool0oooo0080oooo00D000000?ooo`3oool0oooo0000000B0?ooo`002`3oool01P2LB7@0
_ooo0?ooo`3ookl0M01d0;ooo`@0oooo00<0_g@000000000M;l0103oool01`2oM00007Bo0?ooo`3o
ool0omnL04P0001d_ol01@3oool00`000000oooo0?ooo`0e0?ooo`030000003oool0oooo0100oooo
00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0F0?ooo`050000003oool0oooo0?ooo`00
00008`3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo00h0oooo00D000000?ooo`3o
ool0oooo0000000N0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool05P3oool00`00
0000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool03P3oool01@00
0000oooo0?ooo`3oool0000000<0oooo00<000000?ooo`3oool0403oool000X0oooo00<0okmd001d
_`3oool00P3oool00`3OW4P0B9cO0?ooo`0?0?ooo`030?noM000M;l0oooo00@0oooo00<000000?oo
o`3oool0=@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo00T0oooo00<000000?oo
o`3oool05P3oool01@000000oooo0?ooo`3oool0000002<0oooo00<000000?ooo`3oool04`3oool0
0`000000oooo0?ooo`050?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool04`3oool0
0`000000oooo0?ooo`0?0?ooo`050000003oool0oooo0?ooo`0000007P3oool00`000000oooo0?oo
o`0G0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool00P3oool010000000oooo0?oo
o`00000B0?ooo`002P3oool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo00l0oooo00<0
okmd001d_`3oool0103oool00`000000oooo0?ooo`0e0?ooo`030000003oool0oooo0100oooo00<0
00000?ooo`3oool02@3oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool0803oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo00@0oooo00<0
00000?ooo`3oool04@3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo00l0oooo00D0
00000?ooo`3oool0oooo0000000N0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool0
5`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0
3@3oool00`000000oooo0?ooo`020?ooo`040000003oool0oooo00000180oooo00000`3oool0W4P0
00000004000000050018W03oool0oooo0=nLB018W=l00`3oool00`3o_g@007Bo0?ooo`0?0?ooo`03
09a8001d_ol0oooo00@0oooo1000000d0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool07`3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3o
ool03`3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo0140oooo00@000000?ooo`3o
ool000007`3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo01L0oooo00<000000?oo
o`3oool02`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00`0oooo00<000000?oo
o`3oool00P3oool010000000oooo0?ooo`00000B0?ooo`002P3oool00`3OW4P0B9cO0?ooo`020?oo
o`030?noM000M;l0oooo00X0oooo00<0oono07@0000000000P0000000`18W=l0oooo0?ooo`040?oo
o`030000003oool0oooo03D0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0;0?oo
o`030000003oool0oooo01@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0O0?oo
o`030000003oool0oooo01D0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0?0?oo
o`030000003oool0oooo0180oooo00<000000?ooo`3oool04P3oool010000000oooo0?ooo`00000O
0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0;
0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool03@3oool01@000000oooo0?ooo`3o
ool000000080oooo00<000000?ooo`3oool0403oool000X0oooo00<0okmd04RLg`3oool00P3oool0
0`3OW4P0B9cO0?ooo`0:0?ooo`030?oo_`1d07@0_ooo00T0oooo00<000000?ooo`3oool0=@3oool0
0`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0503oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool05P3oool0
0`000000oooo0?ooo`040?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool04P3oool0
0`000000oooo0?ooo`0B0?ooo`040000003oool0oooo000001l0oooo00<000000?ooo`3oool0503o
ool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool01`3o
ool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`0000004P3o
ool000/0oooo00H0W4P007Boo`3oool0omnL04P0M02oool;0?ooo`030?oo_`1d07@0_ooo00T0oooo
00<000000?ooo`3oool0=03oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo00/0oooo
00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01l0oooo
00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00l0oooo
00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0C0?ooo`040000003oool0oooo000001l0
oooo00<000000?ooo`3oool0503oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00/0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0080
oooo00@000000?ooo`3oool000004@3oool000/0oooo00D0oono07@000000000001809cOo`0<0?oo
o`030?oo_`1d000000000080000000<0001d0;ooo`3oool0103oool00`000000oooo0?ooo`0d0?oo
o`030000003oool0oooo0100oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0C0?oo
o`030000003oool0oooo00D0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0F0?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0A0?oo
o`030000003oool0oooo01<0oooo00@000000?ooo`3oool000007`3oool00`000000oooo0?ooo`0D
0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`08
0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool00P3oool010000000oooo0?ooo`00
000A0?ooo`00:03oool00`000000oooo0?ooo`0d0?ooo`030000003oool0oooo00l0oooo00<00000
0?ooo`3oool0303oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo00D0oooo00<00000
0?ooo`3oool07P3oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo00@0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo01D0oooo0P00000P
0?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`0;
0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0303oool01@000000oooo0?ooo`3o
ool000000080oooo00<000000?ooo`3oool03`3oool002P0oooo00<000000?ooo`3oool0=03oool0
0`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool04`3oool0
0`000000oooo0?ooo`050?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool05`3oool0
0`000000oooo0?ooo`040?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool04@3oool0
0`000000oooo0?ooo`0E0?ooo`800000803oool00`000000oooo0?ooo`0C0?ooo`030000003oool0
oooo01P0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`090?ooo`030000003oool0
oooo00/0oooo00<000000?ooo`3oool00P3oool00`000000oooo0000000A0?ooo`00:03oool00`00
0000oooo0?ooo`0d0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0303oool00`00
0000oooo0?ooo`0B0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool07@3oool00`00
0000oooo0?ooo`0H0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool03@3oool00`00
0000oooo0?ooo`0@0?ooo`030000003oool0oooo01H0oooo0P00000Q0?ooo`030000003oool0oooo
0180oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo
00T0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`020?ooo`030000003oool00000
0140oooo000X0?ooo`030000003oool0oooo03@0oooo00<000000?ooo`3oool03`3oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool01`3oool00`000000
oooo0?ooo`0L0?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3oool0103oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool05`3oool200000240
oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo00`0
oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`0000004@3oool002P0oooo00<000000?ooo`3oool0=03oool00`000000oooo
0?ooo`0?0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool04@3oool00`000000oooo
0?ooo`070?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool0603oool00`000000oooo
0?ooo`040?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool03`3oool00`000000oooo
0?ooo`0G0?ooo`8000008@3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo01P0oooo
00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo00X0oooo
00L000000?ooo`3oool0oooo0000003oool000000140oooo000X0?ooo`030000003oool0oooo03@0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0140
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo01T0
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo00l0
oooo00<000000?ooo`3oool0603oool200000240oooo00<000000?ooo`3oool04@3oool00`000000
oooo0?ooo`0H0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0:0?ooo`070000003oool0oooo0?ooo`000000oooo0000000A0?ooo`00:03oool00`00
0000oooo0?ooo`0c0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool03P3oool00`00
0000oooo0?ooo`0@0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0703oool00`00
0000oooo0?ooo`0I0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0303oool00`00
0000oooo0?ooo`0?0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool07`3oool00`00
0000oooo0?ooo`0@0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool02`3oool00`00
0000oooo0?ooo`0=0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0000000@0?ooo`00:03oool3000003<0oooo00<000000?ooo`3oool03`3oool00`000000
oooo0?ooo`0>0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0203oool00`000000
oooo0?ooo`0L0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool06@3oool200000240
oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo00`0
oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0:0?ooo`070000003oool0oooo0?oo
o`000000oooo0000000@0?ooo`00:03oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo
00l0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool0703oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo
01T0oooo0P00000Q0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0603oool00`00
0000oooo0?ooo`0<0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool02@3oool01`00
0000oooo0?ooo`3oool000000?ooo`000000403oool002P0oooo00<000000?ooo`3oool0<`3oool0
0`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0403oool0
0`000000oooo0?ooo`090?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool06P3oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool03@3oool0
0`000000oooo0?ooo`0J0?ooo`8000008P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0
oooo01P0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0>0?ooo`030000003oool0
oooo00T0oooo00L000000?ooo`3oool0oooo0000003oool000000100oooo000X0?ooo`030000003o
ool0oooo03<0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0@0?ooo`030000003o
ool0oooo00h0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0J0?ooo`030000003o
ool0oooo01/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0:0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool06`3oool200000280oooo00<000000?ooo`3oool03P3o
ool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool03`3o
ool00`000000oooo0?ooo`080?ooo`070000003oool0oooo0?ooo`000000oooo0000000@0?ooo`00
:03oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0
403oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
6P3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`000000
8@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool0
303oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00T0oooo00H000000?ooo`3oool0
00000?ooo`00000@0?ooo`00:03oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo00h0
oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00X0
oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo01`0
oooo00<000000?ooo`0000008@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo01T0
oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo00P0
oooo00@000000?ooo`3oool0oooo0P00000@0?ooo`00:03oool00`000000oooo0?ooo`0b0?ooo`03
0000003oool0oooo00l0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0>0?ooo`03
0000003oool0oooo00X0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0L0?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0<0?ooo`03
0000003oool0oooo01`0oooo00<000000?ooo`0000008@3oool00`000000oooo0?ooo`0>0?ooo`03
0000003oool0oooo01P0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0A0?ooo`03
0000003oool0oooo00P0oooo00@000000?ooo`3oool0oooo0P00000@0?ooo`00:03oool00`000000
oooo0?ooo`0b0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0403oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool06P3oool00`000000
oooo0?ooo`0L0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool02P3oool00`000000
oooo0?ooo`0;0?ooo`030000003oool0oooo01d0oooo00<000000?ooo`0000008@3oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0B0?ooo`030000003oool0oooo00L0oooo00L000000?ooo`3oool0oooo0000003oool0
000000l0oooo000X0?ooo`030000003oool0oooo0380oooo00<000000?ooo`3oool03P3oool00`00
0000oooo0?ooo`0A0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0303oool00`00
0000oooo0?ooo`0I0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`0:0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0703oool01000
0000oooo0?ooo`00000Q0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool06@3oool0
0`000000oooo0?ooo`0<0?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool01`3oool0
1P000000oooo0?ooo`000000oooo000000l0oooo000X0?ooo`030000003oool0oooo0380oooo00<0
00000?ooo`3oool03P3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo00d0oooo00<0
00000?ooo`3oool0303oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo01d0oooo00D0
00000?ooo`3oool0oooo0000000;0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0
7@3oool01@000000oooo0?ooo`3oool000000240oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0I0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool04`3oool00`000000
oooo0?ooo`070?ooo`060000003oool0oooo0000003oool000003`3oool002P0oooo00<000000?oo
o`3oool0<P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0180oooo00<000000?oo
o`3oool02`3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo01P0oooo00<000000?oo
o`3oool07P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00P0oooo00<000000?oo
o`3oool02P3oool00`000000oooo0?ooo`0N0?ooo`050000003oool0oooo0?ooo`0000008@3oool0
0`000000oooo0?ooo`0<0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool0303oool0
0`000000oooo0?ooo`0D0?ooo`030000003oool0oooo00H0oooo00H000000?ooo`3oool000000?oo
o`00000?0?ooo`00:03oool300000380oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0B0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?oo
o`0H0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`080?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool07P3oool01@000000oooo0?oo
o`3oool000000240oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0J0?ooo`030000
003oool0oooo00`0oooo00<000000?ooo`3oool0503oool00`000000oooo0?ooo`060?ooo`040000
003oool0oooo0?ooo`8000003`3oool002P0oooo00<000000?ooo`3oool0<P3oool00`000000oooo
0?ooo`0>0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool02`3oool00`000000oooo
0?ooo`0=0?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3oool07`3oool01@000000oooo
0?ooo`3oool0000000X0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0O0?ooo`05
0000003oool0oooo0?ooo`0000008@3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo
01T0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo
00H0oooo00<000000?ooo`3oool00P00000?0?ooo`00:03oool00`000000oooo0?ooo`0a0?ooo`03
0000003oool0oooo00l0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0;0?ooo`03
0000003oool0oooo00d0oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`0O0?ooo`05
0000003oool0oooo0?ooo`0000002P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
01l0oooo00D000000?ooo`3oool0oooo0000000Q0?ooo`030000003oool0oooo00/0oooo00<00000
0?ooo`3oool06@3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo01H0oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`02000000l0oooo000X0?ooo`030000003oool0oooo
0340oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo
00X0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo
01l0oooo00D000000?ooo`3oool0oooo0000000:0?ooo`030000003oool0oooo00P0oooo00<00000
0?ooo`3oool0803oool01@000000oooo0?ooo`3oool000000240oooo00<000000?ooo`3oool02`3o
ool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool05`3o
ool00`000000oooo0?ooo`050?ooo`030000003oool0oooo008000003`3oool002P0oooo00<00000
0?ooo`3oool0<@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo01<0oooo00<00000
0?ooo`3oool02P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo01L0oooo00<00000
0?ooo`3oool07`3oool01@000000oooo0?ooo`3oool0000000T0oooo00<000000?ooo`3oool02@3o
ool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool07P3o
ool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0303o
ool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00H0oooo00D000000?ooo`000000oooo
0000000>0?ooo`00:03oool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo00h0oooo00<0
00000?ooo`3oool04`3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00l0oooo00<0
00000?ooo`3oool05`3oool00`000000oooo0?ooo`0P0?ooo`040000003oool0oooo000000T0oooo
00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo01X0oooo
00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo00D0oooo
00D000000?ooo`000000oooo0000000>0?ooo`00:03oool00`000000oooo0?ooo`0a0?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool0503oool00`000000oooo0?ooo`090?ooo`030000
003oool0oooo00l0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`0Q0?ooo`040000
003oool0oooo000000T0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0Q0?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo01X0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0I0?ooo`03
0000003oool0oooo00@0oooo00<000000?ooo`3oool00P00000>0?ooo`00:03oool00`000000oooo
0?ooo`0a0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0503oool00`000000oooo
0?ooo`080?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool05P3oool00`000000oooo
0?ooo`0Q0?ooo`050000003oool0oooo0?ooo`000000203oool00`000000oooo0?ooo`070?ooo`03
0000003oool0oooo0240oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0O0?ooo`03
0000003oool0oooo00P0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0=0?ooo`03
0000003oool0oooo01T0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`02000000h0
oooo000X0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`0D0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0403oool00`000000oooo
0?ooo`0F0?ooo`030000003oool0oooo0240oooo00D000000?ooo`3oool0oooo000000080?ooo`03
0000003oool0oooo00H0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`030?ooo`03
0000003oool0oooo01l0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0J0?ooo`03
0000003oool0oooo00`0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`040?ooo`04
0000003oool00000000000h0oooo000X0?ooo`030000003oool0oooo0340oooo00<000000?ooo`3o
ool03@3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo0280oooo00@000000?ooo`3o
ool000001`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0280oooo00<000000?oo
o`3oool0103oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo00P0oooo00<000000?oo
o`3oool06P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo01/0oooo00<000000?oo
o`3oool0103oool010000000oooo00000000000>0?ooo`00:03oool00`000000oooo0?ooo`0`0?oo
o`030000003oool0oooo00h0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`080?oo
o`030000003oool0oooo0140oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`0R0?oo
o`040000003oool0oooo000000L0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0S
0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`08
0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0L
0?ooo`030000003oool0oooo00<0oooo00@000000?ooo`00000000003P3oool002P0oooo00<00000
0?ooo`3oool0<03oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo01D0oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo01D0oooo00<00000
0?ooo`3oool08P3oool010000000oooo0?ooo`0000070?ooo`030000003oool0oooo00H0oooo00<0
00000?ooo`3oool08`3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01l0oooo00<0
00000?ooo`3oool01P3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo00`0oooo00<0
00000?ooo`3oool0703oool00`000000oooo0?ooo`030?ooo`050000003oool000000?ooo`000000
3@3oool002P0oooo0`00000`0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool05@3o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool05@3o
ool00`000000oooo0?ooo`0R0?ooo`040000003oool0oooo000000L0oooo00<000000?ooo`3oool0
1@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0
7`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0
3@3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo00<0oooo00@000000?ooo`000000
00003@3oool002P0oooo00<000000?ooo`3oool0<03oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo01H0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0B0?ooo`030000
003oool0oooo01D0oooo00<000000?ooo`3oool08`3oool00`000000oooo000000070?ooo`030000
003oool0oooo00D0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`050?ooo`030000
003oool0oooo01l0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0J0?ooo`030000
003oool0oooo00d0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`030?ooo`040000
003oool00000000000d0oooo000X0?ooo`030000003oool0oooo0300oooo00<000000?ooo`3oool0
3P3oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0
4P3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo02@0oooo00@000000?ooo`3oool0
00001P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3o
ool01P3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3o
ool06P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3o
ool00P3oool010000000oooo00000000000=0?ooo`00:03oool00`000000oooo0?ooo`0`0?ooo`03
0000003oool0oooo00d0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`050?ooo`03
0000003oool0oooo01@0oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`0T0?ooo`04
0000003oool0oooo000000D0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0T0?oo
o`030000003oool0oooo00H0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`050?oo
o`030000003oool0oooo01/0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0N0?oo
o`030000003oool0oooo0080oooo00@000000?ooo`00000000003@3oool002P0oooo00<000000?oo
o`3oool0<03oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo01L0oooo00<000000?oo
o`3oool01@3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo01<0oooo00<000000?oo
o`3oool09@3oool00`000000oooo000000050?ooo`030000003oool0oooo00@0oooo00<000000?oo
o`3oool09@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo01h0oooo00<000000?oo
o`3oool01@3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo00`0oooo00<000000?oo
o`3oool0803oool00`000000oooo0?ooo`020?ooo`<000003@3oool002P0oooo00<000000?ooo`3o
ool0<03oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3o
ool01@3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3o
ool09@3oool00`000000oooo000000050?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3o
ool09@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3o
ool01@3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3o
ool0803oool00`000000oooo0?ooo`020?ooo`<000003@3oool002P0oooo00<000000?ooo`3oool0
;`3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool0
103oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool0
9@3oool00`000000oooo000000050?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0
9P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool0
103oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0
8@3oool01`000000oooo0?ooo`3oool000000?ooo`0000003@3oool002P0oooo00<000000?ooo`3o
ool0;`3oool00`000000oooo0?ooo`0<0?ooo`050?noM000000000000000001d_ol01@3oool00`2o
M0000000001d_`030?ooo`030?oo_`1d0000000000@0000000<0M;oo0?ooo`3oool00P3oool00`00
0000oooo0?ooo`040?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool03P3oool01P3o
_g@00000000000000000M;oo000000@0oooo00<0_g@000000000M;l01P3oool01@3ogi`0B0000000
00000000M;oo01D0oooo00<000000?ooo`0000001@3oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo00h0oooo00D0okmd000000000000000007Boo`050?ooo`030;md0000000007Bo00H0
oooo00D0_g@0000000000000001d0000000:0?ooo`030000003oool0oooo01h0oooo00<000000?oo
o`3oool00`3oool010000000oooo0?ooo`3o_g@30000000307Boo`3oool0oooo00<0oooo00<0_g@0
00000000M;l01@3oool01@2oM000000000000000000007Bo00@0oooo00<000000?ooo`3oool03@3o
ool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo0080oooo1P0000000`00M;l0oooo0?oo
o`060?ooo`00:03oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00`0oooo00H0W4Qd
0;ooo`000000oono07@0M02oool40?ooo`030;md0000000007Bo00@0oooo00<0_g@00000M02oool0
0P3oool00`3OW7@0W=oo0?ooo`040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0
5@3oool00`000000oooo0?ooo`0>0?ooo`0609a8M02oool0oooo0?oo_`1d07@00000103oool00`2o
M0000000001d_`080?ooo`030;md001d_ol0oooo01H0oooo0P0000040?ooo`030000003oool0oooo
00<0oooo00<000000?ooo`3oool03`3oool01P2LB7@0_ooo0?ooo`3ookl0M01d0;ooo`@0oooo00<0
_g@000000000M;l01@3oool01P3OW4P007Bo0?ooo`3oool0okmd000000X0oooo00<000000?ooo`3o
ool07P3oool00`000000oooo0?ooo`030?ooo`090000003oool0oooo09a8M02oool0oooo0?oo_`1d
07@0_ooo00@0oooo00<0_g@000000000M;l0103oool00`3o_g@007Bo0?ooo`020?ooo`030;mdB02L
gol0oooo0080oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0R0?ooo`040000003o
ool0oooo0?ooo`<0000000<0W4Q809cOo`3oool02@3oool002P0oooo00<000000?ooo`3oool0;`3o
ool00`000000oooo0?ooo`0;0?ooo`070?noM000M;l0oooo0000003oool0gia804RLg`0<0?ooo`03
0?noM00004P0W=oo00P0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0F0?ooo`03
0000003oool0oooo00`0oooo00<0okmd001d_`3oool00P3oool00`000000B9cO0?ooo`0>0?ooo`03
0;md001d_ol0oooo01H0oooo0P0000040?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool03`3oool00`3o_g@007Bo0?ooo`020?ooo`030=nLB018W=l0oooo00X0oooo00<0oono07@0001d
_ol00P3oool00`3ookl000000?ooo`090?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3o
ool00`3oool010000000oooo0?noM000M;l30?ooo`030=nLB018W=l0oooo00X0oooo00<0gia804RL
g`3oool00P3oool00`2oM000M;oo0?ooo`020?ooo`030000003oool0oooo00d0oooo00<000000?oo
o`3oool08P3oool010000000oooo0?ooo`3oool30000000309a8B02Lgol0oooo00T0oooo000X0?oo
o`030000003oool0oooo02l0oooo00<000000?ooo`3oool02`3oool00`3OW4P0B9cO000000020?oo
o`030?noM000M;l0oooo00`0oooo00<0omnL04P00018W=l01`3oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo01L0oooo00<000000?ooo`3oool0303oool00`3OW4P0B9cO0?ooo`020?oo
o`0300000000M;l0oooo00X0oooo00<0gia80000000000000`0000000`1d_ol0oooo0?ooo`0D0?oo
o`030000003oool0000000<0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0?0?oo
o`030=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool02P3oool01`3o_g@004Q807@0M02oool0
oooo0=nLB00000002P3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo00<0oooo00@0
00000?ooo`3OW4P0B9cO0`3oool00`3o_g@007Bo0?ooo`0:0?ooo`030?noM000B9`0oooo0080oooo
00<0W4Q809cOo`3oool00P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo02<0oooo
00<000000?ooo`3oool00`0000000`2LB4P0W=oo0?ooo`090?ooo`00:03oool00`000000oooo0?oo
o`0_0?ooo`030000003oool0oooo00/0oooo00<0gia804RLg`0000000P3oool00`3o_g@007Bo0?oo
o`0>0?ooo`0309a80018W=l0oooo00D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`0G0?ooo`030000003oool0oooo00`0oooo00<0gia804RLg`3oool00P3oool00`00000007Bo0?oo
o`0:0?ooo`060?noM00007@0_ooo0?ooo`2oM000M;oo5`3oool00`000000oooo000000030?ooo`05
0000003oool0oooo0?ooo`0000004P3oool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo
00X0oooo00<0omnL04Q8W03o_g@00P0000000`00B9`000000?ooo`090?ooo`030000003oool0oooo
01h0oooo00<000000?ooo`3oool00P3oool01@000000oooo0?ooo`3OW4P0B9cO00<0oooo00<0okmd
001d_`3oool02`3oool01@3OW4P00000000000000000B9cO00@0oooo00<000000?ooo`3oool0303o
ool00`000000oooo0?ooo`0T0?ooo`040000003oool0oooo0?ooo`80000000<0W4Q809cOo`3oool0
2@3oool002P0oooo0`00000_0?ooo`030000003oool0oooo00/0oooo00<0gia804RLg`0000000P3o
ool00`3o_g@007Bo0?ooo`0?0?ooo`0309a8M02oool0oooo00@0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00`0oooo00<0gia804RLg`3oool00P3o
ool00`00000007Bo0?ooo`0;0?ooo`050=nLB000M;l0oooo0;md001d_ol0603oool2000000<0oooo
00D000000?ooo`3oool0oooo0000000B0?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d_`3o
ool02P3oool00`3ookl0M01d0;ooo`030?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3o
ool07P3oool00`000000oooo0?ooo`020?ooo`050000003oool0oooo0=nLB018W=l00`3oool00`3o
_g@007Bo0?ooo`0:0?ooo`030?oo_`1dB9`0oooo0080oooo00D0W4Qd0;ooo`3oool0oooo0000000?
0?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3oool00P0000000`2LB4P0W=oo0?ooo`09
0?ooo`00:03oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo00/0oooo00<0okmd04RL
g`0000000P3oool00`3OW4P0B9cO0?ooo`0:0?ooo`030=nLB01d_ol0oooo0080oooo00<0_g@007Bo
o`3oool0103oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01L0oooo00<000000?oo
o`3oool0303oool00`3o_g@0B9cO0?ooo`020?ooo`0300000018W=l0oooo00`0oooo00@0W4P004RL
g`2oM000M;oo603oool2000000<0oooo00@000000?ooo`3oool000004`3oool00`3o_g@0B9cO0?oo
o`020?ooo`030=nLB018W=l0oooo00/0oooo00<0_g@004RLg`3oool00P3oool00`000000oooo0?oo
o`090?ooo`030000003oool0oooo01h0oooo00D000000?ooo`3oool0oooo000000020?ooo`030?no
M018W=l0oooo0080oooo00<0gia804RLg`3oool02P3oool00`3o_g@0B9cO0?ooo`020?ooo`050;md
001d_ol0oooo0?ooo`0000003`3oool00`000000oooo0?ooo`0U0?ooo`030000003oool0oooo0080
000000<0W4Q809cOo`3oool02@3oool002P0oooo00<000000?ooo`3oool0;P3oool00`000000oooo
0?ooo`0=0?ooo`0609a800000000oooo0?oOW01807@0_ooo2`3oool01`3o_g@0001d0;ooo`3oool0
okmd0000B02Lgol01@3oool01@000000oooo0?ooo`3oool0000001X0oooo00<000000?ooo`3oool0
3@3oool01P2LB000M;oo0?ooo`3ogi`000000;ooo`d0oooo00@0omnL04P0B018B000M;oo603oool2
00000080oooo00D000000?ooo`3oool0oooo0000000D0?ooo`0609a8001d_ol0oooo0?oOW01807@0
_ooo303oool00`3ookl0M000001d_`020?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3o
ool07P3oool010000000oooo0?ooo`0000040?ooo`0609a8001d_ol0oooo0?oOW01807@0_ooo2`3o
ool01`3ogi`0B01d0;ooo`3oool0omnL04P0M02oool00P3oool00`000000oooo0?ooo`0=0?ooo`03
0000003oool0oooo02H0oooo00H000000=nLB0000000000009a8B02Lgol:0?ooo`00:03oool00`00
0000oooo0?ooo`0^0?ooo`030000003oool0oooo00d0oooo00D0oono000000000000001809cOo`0=
0?ooo`050?noM000000000000000B02Lgol01`3oool010000000oooo0?ooo`00000K0?ooo`030000
003oool0oooo00`0oooo00D0oono07@00000000000180000000?0?ooo`030?noM0000000M;oo01T0
oooo00@000000?ooo`3oool000000P3oool00`000000oooo0?ooo`0C0?ooo`050?oo_`1d00000000
0000B02Lgol03`3oool0102oM000000000000000B9`;0?ooo`030000003oool0oooo01h0oooo00@0
00000?ooo`3oool00000103oool01@3ookl0M0000000000004P0W=oo00d0oooo00D0okmd00000000
0000001809cOo`030?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool09P3oool00`00
0000oooo0?ooo`020000000309cOo`3oool0oooo00P0oooo000X0?ooo`030000003oool0oooo02h0
oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0K0?ooo`040000003oool0oooo0000
01/0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0Z0?ooo`040000003oool0oooo
00000080oooo00<000000?ooo`3oool0:@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0
oooo01h0oooo00@000000?ooo`3oool000007P3oool00`000000oooo0?ooo`0=0?ooo`030000003o
ool0oooo02L0oooo00@000000?ooo`00000000002`3oool002P0oooo00<000000?ooo`3oool0;P3o
ool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo01/0oooo00@000000?ooo`3oool00000
6`3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo02X0oooo00H000000?ooo`3oool0
00000?ooo`00000/0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool07P3oool01000
0000oooo0?ooo`00000N0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool09`3oool0
10000000oooo00000000000;0?ooo`00:03oool00`000000oooo0?ooo`0^0?ooo`030000003oool0
oooo00d0oooo00<000000?ooo`3oool06`3oool00`000000oooo0000000L0?ooo`030000003oool0
oooo00l0oooo00<000000?ooo`3oool0:P3oool2000000040?ooo`000000oooo000002`0oooo00<0
00000?ooo`3oool02`3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0000001h0oooo00<0
00000?ooo`3oool03@3oool00`000000oooo0?ooo`0Y0?ooo`<000002`3oool002P0oooo00<00000
0?ooo`3oool0;P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo01/0oooo00<00000
0?ooo`000000703oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo02/0oooo00@00000
0?ooo`0000000000;@3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo01d0oooo00<0
00000?ooo`0000007P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo02T0oooo00<0
00000?ooo`0000002`3oool002P0oooo00<000000?ooo`3oool0;P3oool00`000000oooo0?ooo`0=
0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`000000703oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo02/0oooo0P0000000`3oool000000?ooo`0/0?ooo`030000003oool0
oooo00/0oooo00<000000?ooo`3oool07P3oool2000001h0oooo00<000000?ooo`3oool03@3oool0
0`000000oooo0?ooo`0Z0?ooo`8000002`3oool002P0oooo00<000000?ooo`3oool0;@3oool00`00
0000oooo0?ooo`0>0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`0000007@3oool00`00
0000oooo0?ooo`0>0?ooo`030000003oool0oooo02/0oooo0`00000^0?ooo`030000003oool0oooo
00/0oooo00<000000?ooo`3oool07P3oool2000001h0oooo00<000000?ooo`3oool03@3oool00`00
0000oooo0?ooo`0Z0?ooo`8000002`3oool002P0oooo00<000000?ooo`3oool0;@3oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3oool0703oool00`000000
oooo0?ooo`0>0?ooo`030000003oool0oooo02/0oooo0`00000]0?ooo`030000003oool0oooo00`0
oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo00d0
oooo00<000000?ooo`3oool0:`3oool2000000X0oooo000X0?ooo`030000003oool0oooo02d0oooo
00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo01`0oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0[0?ooo`800000;P3oool00`000000oooo
0?ooo`0=0?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3oool0703oool00`000000oooo
0?ooo`0>0?ooo`030000003oool0oooo02/0oooo0P00000:0?ooo`007`3ooooo0000094000000@3o
ool002P0oooo0P00000B0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool01P3oool0
0`000000oooo0?ooo`070?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02P3oool0
0`000000oooo0?ooo`0?0?ooo`8000004P3oool00`000000oooo0?ooo`090?ooo`030000003oool0
oooo00@0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`070?ooo`030000003oool0
oooo0100oooo00<000000?ooo`3oool03`3oool200000180oooo00<000000?ooo`3oool0403oool0
0`000000oooo0?ooo`060?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool00`3oool0
0`000000oooo0?ooo`0:0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0403oool0
0`000000oooo0?ooo`090?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool01`3oool0
0`000000oooo0?ooo`060?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0403oool0
0`000000oooo0?ooo`080?ooo`00:03oool2000002h0oooo00<000000?ooo`3oool03@3oool00`00
0000oooo0?ooo`0:0?ooo`030000003oool0oooo00l0oooo0P00000O0?ooo`030000003oool0oooo
00`0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0Q0?ooo`@00000903oool00`00
0000oooo0?ooo`060?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0703oool20000
0180oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo
02d0oooo00<000000?ooo`3oool0203oool002P0oooo0`00000]0?ooo`030000003oool0oooo00d0
oooo00<000000?ooo`3oool0703oool2000001l0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0[0?ooo`@00000;@3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo01`0
oooo00<000000?ooo`0000007@3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo03P0
oooo000X0?ooo`<00000;@3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo01d0oooo
0P00000O0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0:P3oool00`000000oooo
00000002000002d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0L0?ooo`030000
003oool0000001d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0h0?ooo`00:03o
ool2000000030?ooo`000000oooo02X0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?oo
o`0L0?ooo`040000003oool0oooo000001h0oooo00<000000?ooo`3oool0303oool00`000000oooo
0?ooo`0Z0?ooo`030000003oool0000000800000;@3oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo01/0oooo00<000000?ooo`000000703oool00`000000oooo0?ooo`0>0?ooo`030000
003oool0oooo03P0oooo000X0?ooo`@00000:`3oool00`000000oooo0?ooo`0=0?ooo`030000003o
ool0oooo01`0oooo00@000000?ooo`3oool000007P3oool00`000000oooo0?ooo`0<0?ooo`030000
003oool0oooo02T0oooo00<000000?ooo`3oool00P0000000`3oool000000?ooo`0Z0?ooo`030000
003oool0oooo00l0oooo00<000000?ooo`3oool06P3oool010000000oooo0?ooo`00000L0?ooo`03
0000003oool0oooo00h0oooo00<000000?ooo`3oool0>03oool002P0oooo0`0000000`3oool00000
0?ooo`0Y0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0703oool010000000oooo
0?ooo`00000N0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0:P3oool01`000000
oooo0000003oool000000?ooo`000000:`3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0
oooo01X0oooo00@000000?ooo`3oool00000703oool00`000000oooo0?ooo`0>0?ooo`030000003o
ool0oooo03P0oooo000X0?ooo`<0000000<0oooo0000003oool0:@3oool00`000000oooo0?ooo`0=
0?ooo`030000003oool0oooo01`0oooo00@000000?ooo`3oool000007`3oool00`000000oooo0?oo
o`0:0?ooo`030000003oool0oooo02T0oooo00P000000?ooo`3oool000000?ooo`000000oooo0000
02/0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0J0?ooo`040000003oool0oooo
000001`0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0h0?ooo`00:03oool40000
00030?ooo`000000oooo02P0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0L0?oo
o`050000003oool0oooo0?ooo`0000007`3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0
oooo02T0oooo00@000000?ooo`3oool000000P3oool2000002/0oooo00<000000?ooo`3oool03`3o
ool00`000000oooo0?ooo`0I0?ooo`050000003oool0oooo0?ooo`000000703oool00`000000oooo
0?ooo`0=0?ooo`030000003oool0oooo03T0oooo000X0?ooo`@000000P3oool00`000000oooo0?oo
o`0V0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0703oool01@000000oooo0?oo
o`3oool0000001l0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0X0?ooo`050000
003oool0oooo0?ooo`0000000P3oool00`000000oooo0000000Z0?ooo`030000003oool0oooo0100
oooo00<000000?ooo`3oool0603oool01@000000oooo0?ooo`3oool0000001/0oooo00<000000?oo
o`3oool03P3oool00`000000oooo0?ooo`0i0?ooo`00:03oool400000080oooo00<000000?ooo`3o
ool09P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo01`0oooo00D000000?ooo`3o
ool0oooo0000000O0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0:03oool01@00
0000oooo0?ooo`3oool000000080oooo00<000000?ooo`000000:P3oool00`000000oooo0?ooo`0@
0?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0H
0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0>@3oool002P0oooo00@000000?oo
o`00000000000`3oool00`000000oooo0?ooo`0U0?ooo`030000003oool0oooo00`0oooo00<00000
0?ooo`3oool0703oool01@000000oooo0?ooo`3oool0000001l0oooo00<000000?ooo`3oool02P3o
ool00`000000oooo0?ooo`0W0?ooo`030000003oool0oooo0080oooo00H000000?ooo`3oool00000
0?ooo`00000Z0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0603oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3oool03P3oool00`000000
oooo0?ooo`0i0?ooo`00:03oool01@000000oooo0000003oool000000080oooo00<000000?ooo`3o
ool0903oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool09`3oool01@000000oooo0?ooo`3oool0000000<0oooo00<000000?ooo`000000:P3oool00`00
0000oooo0?ooo`0@0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`0H0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0>@3oool002P0
oooo00<000000?ooo`0000000P0000030?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3o
ool0303oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool07@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo02L0oooo00<000000?ooo`3o
ool00P3oool01@000000oooo0?ooo`3oool000000080oooo00<000000?ooo`3oool09P3oool00`00
0000oooo0?ooo`0A0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`0H0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0>@3oool002P0
oooo00<000000?ooo`0000000P0000030?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3o
ool0303oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool07@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo02L0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0000002P0oooo00<000000?ooo`3o
ool04P3oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool05`3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo03T0oooo000X0?ooo`030000
003oool0000000800000103oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo00`0oooo
00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01d0oooo
00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0V0?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0000000X0?ooo`030000003oool0oooo0180oooo
00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01L0oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0j0?ooo`00:03oool01P000000oooo0000
00000000oooo000000<0oooo00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`0<0?ooo`03
0000003oool0oooo01/0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0M0?ooo`03
0000003oool0oooo00P0oooo00<000000?ooo`3oool09@3oool00`000000oooo0?ooo`040?ooo`03
0000003oool0oooo0080oooo00@000000?ooo`3oool000009`3oool00`000000oooo0?ooo`0B0?oo
o`030000003oool0oooo01D0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0G0?oo
o`030000003oool0oooo00h0oooo00<000000?ooo`3oool0>P3oool002P0oooo00H000000?ooo`3o
ool000000?ooo`0000040?ooo`030000003oool0oooo0240oooo00<000000?ooo`3oool0303oool0
0`000000oooo0?ooo`0K0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool07@3oool0
0`000000oooo0?ooo`080?ooo`030000003oool0oooo02D0oooo00<000000?ooo`3oool0103oool0
0`000000oooo0?ooo`020?ooo`040000003oool0oooo000002L0oooo00<000000?ooo`3oool04P3o
ool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool05`3o
ool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo03X0oooo000X0?ooo`030000003oool0
oooo00<00000103oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo00/0oooo00<00000
0?ooo`3oool0703oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01h0oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo00@0oooo00<00000
0?ooo`3oool00`3oool010000000oooo0?ooo`00000W0?ooo`030000003oool0oooo0180oooo00<0
00000?ooo`3oool05@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo01H0oooo00<0
00000?ooo`3oool03P3oool00`000000oooo0?ooo`0j0?ooo`00:03oool00`000000oooo0?ooo`02
000000030?ooo`000000oooo00<0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0;
0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0N
0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool09@3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo00<0oooo00@000000?ooo`3oool000009`3oool00`000000oooo0?oo
o`0B0?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?oo
o`0F0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0>P3oool002P0oooo00<00000
0?ooo`3oool00P0000000`3oool000000?ooo`040?ooo`030000003oool0oooo01h0oooo00<00000
0?ooo`3oool0303oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool07@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo02@0oooo00<00000
0?ooo`3oool01@3oool00`000000oooo0?ooo`040?ooo`040000003oool0oooo000002H0oooo00<0
00000?ooo`3oool04`3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo00H0oooo00<0
00000?ooo`3oool05@3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo03X0oooo000X
0?ooo`030000003oool0oooo0080000000<0oooo0000003oool0103oool00`000000oooo0?ooo`0N
0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`06
0?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0T
0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0103oool010000000oooo0?ooo`00
000U0?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3oool04`3oool00`000000oooo0?oo
o`060?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0k0?ooo`00:03oool5000000030?ooo`000000oooo00D0oooo00<000000?ooo`3oool07@3oool0
0`000000oooo0?ooo`0<0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool01P3oool0
0`000000oooo0?ooo`0M0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool08`3oool0
0`000000oooo0?ooo`060?ooo`030000003oool0oooo00@0oooo00@000000?ooo`3oool000009@3o
ool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool01P3o
ool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0>`3o
ool002P0oooo00P000000?ooo`3oool000000?ooo`000000oooo000000D0oooo00<000000?ooo`3o
ool07@3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3o
ool01`3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3o
ool08`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00@0oooo00@000000?ooo`3o
ool000009@3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo0180oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00h0oooo00<000000?oo
o`3oool0>`3oool002P0oooo00@000000?ooo`3oool0oooo0P0000000`3oool000000?ooo`050?oo
o`030000003oool0oooo01`0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0K0?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`050?oo
o`030000003oool0oooo0280oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`050?oo
o`050000003oool0oooo0?ooo`000000903oool00`000000oooo0?ooo`0D0?ooo`030000003oool0
oooo0180oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0
oooo00h0oooo00<000000?ooo`3oool0>`3oool002P0oooo00@000000?ooo`3oool0oooo0P000000
0`3oool000000?ooo`050?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool02`3oool0
0`000000oooo0?ooo`0K0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool07P3oool0
0`000000oooo0?ooo`050?ooo`030000003oool0oooo0280oooo00<000000?ooo`3oool01P3oool0
0`000000oooo0?ooo`050?ooo`050000003oool0oooo0?ooo`000000903oool00`000000oooo0?oo
o`0E0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool01`3oool00`000000oooo0?oo
o`0D0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0>`3oool002P0oooo00@00000
0?ooo`3oool0oooo0P0000020?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool06`3o
ool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool01`3o
ool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool08P3o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo00@000000?ooo`3oool00000
903oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0
>`3oool002P0oooo00@000000?ooo`3oool0oooo0P0000020?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo01X0oooo
00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool08P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo
00@000000?ooo`3oool00000903oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo0100
oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo00l0
oooo00<000000?ooo`3oool0>`3oool002P0oooo00T000000?ooo`3oool0oooo0000003oool00000
0?ooo`0000001`3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo00/0oooo00<00000
0?ooo`3oool06`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo01d0oooo00<00000
0?ooo`3oool0103oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo00P0oooo00<00000
0?ooo`3oool01P3oool01@000000oooo0?ooo`3oool0000002<0oooo00<000000?ooo`3oool05@3o
ool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool04`3o
ool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo03`0oooo000X0?ooo`090000003oool0
oooo0?ooo`000000oooo0000003oool0000000P0oooo00<000000?ooo`3oool0603oool00`000000
oooo0?ooo`0;0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool02@3oool00`000000
oooo0?ooo`0N0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool08@3oool00`000000
oooo0?ooo`080?ooo`030000003oool0oooo00H0oooo00D000000?ooo`3oool0oooo0000000R0?oo
o`030000003oool0oooo01H0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`090?oo
o`030000003oool0oooo01<0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0l0?oo
o`00:03oool01`000000oooo0?ooo`3oool000000?ooo`0000000P3oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0J
0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`07
0?ooo`050000003oool0oooo0?ooo`0000008P3oool00`000000oooo0?ooo`0G0?ooo`030000003o
ool0oooo00h0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0B0?ooo`030000003o
ool0oooo00l0oooo00<000000?ooo`3oool0?03oool002P0oooo00<000000?ooo`3oool00P3oool2
00000080oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0G0?ooo`030000003oool0
oooo00/0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0
oooo01h0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0
oooo00T0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo01l0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0
oooo00X0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0
oooo03`0oooo000X0?ooo`030000003oool0oooo0080oooo0P0000020?ooo`030000003oool0oooo
00H0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo
01X0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo
00<0oooo00<000000?ooo`3oool07`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
00P0oooo00D000000?ooo`3oool0oooo0000000Q0?ooo`030000003oool0oooo01L0oooo00<00000
0?ooo`3oool03P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo0180oooo00<00000
0?ooo`3oool03`3oool00`000000oooo0?ooo`0l0?ooo`00:03oool00`000000oooo0?ooo`020?oo
o`8000000`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo01H0oooo00<000000?oo
o`3oool02P3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo00X0oooo00<000000?oo
o`3oool07P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01l0oooo00<000000?oo
o`3oool02P3oool00`000000oooo0?ooo`080?ooo`050000003oool0oooo0?ooo`0000008@3oool0
0`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool02`3oool0
0`000000oooo0?ooo`0B0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0?03oool0
02P0oooo0`0000020?ooo`030000003oool000000080oooo00<000000?ooo`3oool01P3oool00`00
0000oooo0?ooo`0F0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool06P3oool00`00
0000oooo0?ooo`0;0?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`0O0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0203oool01@00
0000oooo0?ooo`3oool000000240oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0=
0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0?
0?ooo`030000003oool0oooo03`0oooo000X0?ooo`030000003oool0oooo0080oooo00<000000?oo
o`0000000P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo01@0oooo00<000000?oo
o`3oool02`3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo00/0oooo00<000000?oo
o`3oool07`3oool01@000000oooo0?ooo`3oool000000200oooo00<000000?ooo`3oool02`3oool0
0`000000oooo0?ooo`080?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool07P3oool0
0`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0303oool0
0`000000oooo0?ooo`0A0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0?@3oool0
02P0oooo00<000000?ooo`3oool00P3oool00`000000oooo000000020?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo
01X0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0N0?ooo`050000003oool0oooo
0?ooo`000000803oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00T0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo01P0oooo00<00000
0?ooo`3oool0303oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0100oooo00<00000
0?ooo`3oool03`3oool00`000000oooo0?ooo`0m0?ooo`00:03oool00`000000oooo0?ooo`020?oo
o`030000003oool0000000<0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0C0?oo
o`030000003oool0oooo00/0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0<0?oo
o`030000003oool0oooo01h0oooo00D000000?ooo`3oool0oooo0000000O0?ooo`030000003oool0
oooo00/0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo01d0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0
oooo00d0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0?0?ooo`030000003oool0
oooo03d0oooo000X0?ooo`030000003oool0oooo00<0oooo0P0000030?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo
01X0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0N0?ooo`050000003oool0oooo
0?ooo`0000007`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00T0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo01T0oooo00<00000
0?ooo`3oool02`3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo0100oooo00<00000
0?ooo`3oool03`3oool00`000000oooo0?ooo`0m0?ooo`00:03oool00`000000oooo0?ooo`030?oo
o`030000003oool000000080oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0B0?oo
o`030000003oool0oooo00X0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`0=0?oo
o`030000003oool0oooo01h0oooo00D000000?ooo`3oool0oooo0000000N0?ooo`030000003oool0
oooo00`0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo01`0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0
oooo00d0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0?0?ooo`030000003oool0
oooo03d0oooo000X0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`0000000`3oool00`00
0000oooo0?ooo`080?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool02P3oool00`00
0000oooo0?ooo`0J0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool07P3oool01000
0000oooo0?ooo`00000N0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool02P3oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool06@3oool0
0`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0403oool0
0`000000oooo0?ooo`0?0?ooo`030000003oool0oooo03d0oooo000X0?ooo`030000003oool0oooo
00<0oooo00<000000?ooo`0000000`3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo
0140oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo
00d0oooo00<000000?ooo`3oool07`3oool00`000000oooo0000000N0?ooo`030000003oool0oooo
00d0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo
01`0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
00h0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo
03d0oooo000X0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`0000000`3oool00`000000
oooo0?ooo`090?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool02P3oool00`000000
oooo0?ooo`0I0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool07`3oool00`000000
oooo0000000M0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool02`3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool06P3oool00`000000
oooo0?ooo`090?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool03P3oool00`000000
oooo0?ooo`0?0?ooo`030000003oool0oooo03h0oooo000X0?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`0000000`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00l0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo00h0oooo
00<000000?ooo`3oool07`3oool00`000000oooo0000000M0?ooo`030000003oool0oooo00d0oooo
00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo01/0oooo
00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00l0oooo
00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo03h0oooo
000X0?ooo`030000003oool0oooo00<0oooo00@000000?ooo`3oool000000`3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool02P3oool00`000000oooo
0?ooo`0J0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool07P3oool00`000000oooo
0000000L0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool02`3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool06P3oool00`000000oooo
0?ooo`080?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`0?0?ooo`030000003oool0oooo03h0oooo000X0?ooo`030000003oool0oooo00@0oooo00<0
00000?ooo`0000000`3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00d0oooo00<0
00000?ooo`3oool02P3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo0100oooo00<0
00000?ooo`3oool07P3oool00`000000oooo0000000L0?ooo`030000003oool0oooo00h0oooo00<0
00000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo01X0oooo00<0
00000?ooo`3oool06`3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0100oooo00<0
00000?ooo`3oool03P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo03h0oooo000X
0?ooo`<00000103oool00`000000oooo000000030?ooo`030000003oool0oooo00X0oooo00<00000
0?ooo`3oool03@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo01T0oooo00<00000
0?ooo`3oool0403oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01X0oooo00<00000
0?ooo`3oool03`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00@0oooo00<00000
0?ooo`3oool06@3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool0403oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo00l0oooo00<00000
0?ooo`3oool0?P3oool002P0oooo00<000000?ooo`3oool0103oool00`000000oooo000000030?oo
o`030000003oool0oooo00/0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`0:0?oo
o`030000003oool0oooo01T0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0O0?oo
o`030000003oool0oooo01X0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0=0?oo
o`030000003oool0oooo00<0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0L0?oo
o`030000003oool0oooo00H0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0=0?oo
o`030000003oool0oooo0100oooo00<000000?ooo`3oool0?P3oool002P0oooo00<000000?ooo`3o
ool0103oool00`000000oooo000000040?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool0303oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3o
ool0403oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3o
ool03`3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool06@3oool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3o
ool0?`3oool002P0oooo00<000000?ooo`3oool0103oool010000000oooo0?ooo`0000030?ooo`03
0000003oool0oooo00/0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo01T0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0O0?ooo`03
0000003oool0oooo01T0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0=0?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0L0?ooo`03
0000003oool0oooo00H0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0=0?ooo`03
0000003oool0oooo00l0oooo00<000000?ooo`3oool0?`3oool002P0oooo00<000000?ooo`3oool0
103oool010000000oooo0?ooo`0000030?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3o
ool02`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3o
ool0403oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3o
ool0603oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3o
ool04P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3o
ool0?`3oool002P0oooo00<000000?ooo`3oool0103oool010000000oooo0?ooo`0000040?ooo`03
0000003oool0oooo00/0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0:0?ooo`03
0000003oool0oooo01T0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0O0?ooo`80
0000603oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3o
ool0103oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3o
ool0103oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3o
ool03`3oool00`000000oooo0?ooo`0o0?ooo`00:03oool00`000000oooo0?ooo`050?ooo`030000
003oool0000000@0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`080?ooo`030000
003oool0oooo00X0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0B0?ooo`030000
003oool0oooo01h0oooo0P00000H0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0
3P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3oool0
7@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool0
2`3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo03l0oooo000X0?ooo`030000003o
ool0oooo00D0oooo00<000000?ooo`000000103oool00`000000oooo0?ooo`0<0?ooo`030000003o
ool0oooo00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0I0?ooo`030000003o
ool0oooo01<0oooo00<000000?ooo`3oool07@3oool00`000000oooo0000000G0?ooo`030000003o
ool0oooo0140oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo01L0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo01<0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0@0?ooo`030000003o
ool0oooo03l0oooo000;0?ooo`050?noM000000000000000001d_ol01@3oool00`2oM0000000001d
_`050?ooo`050;md0000000000000000001d_ol01P3oool00`000000oooo0?ooo`050?ooo`040000
003oool0oooo000000<0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`070?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0C0?ooo`03
0000003oool0oooo01d0oooo00<000000?ooo`0000005`3oool00`000000oooo0?ooo`0A0?ooo`03
0000003oool0oooo00l0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0F0?ooo`03
0000003oool0oooo01h0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0C0?ooo`03
0000003oool0oooo00/0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0o0?ooo`00
2`3oool01P2LB7@0_ooo0?ooo`3ookl0M01d0;ooo`@0oooo00<0_g@000000000M;l0103oool01`2o
M00007Bo0?ooo`3oool0omnL04P0001d_ol01@3oool00`000000oooo0?ooo`050?ooo`040000003o
ool0oooo000000@0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo00T0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0C0?ooo`030000
003oool0oooo01d0oooo00<000000?ooo`0000005P3oool00`000000oooo0?ooo`0B0?ooo`030000
003oool0oooo00l0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0F0?ooo`030000
003oool0oooo01l0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0D0?ooo`030000
003oool0oooo00/0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`100?ooo`002P3o
ool00`3o_g@007Bo0?ooo`020?ooo`030=nLB018W=l0oooo00l0oooo00<0okmd001d_`3oool0103o
ool00`000000oooo0?ooo`050?ooo`040000003oool0oooo000000@0oooo00<000000?ooo`3oool0
3@3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
6@3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo01d0oooo00@000000?ooo`3oool0
00005@3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3o
ool0103oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3o
ool03`3oool00`000000oooo0?ooo`100?ooo`002P3oool00`3OW4P0B9cO0?ooo`020?ooo`030?no
M000M;l0oooo00l0oooo00<0okmd001d_`3oool0103oool4000000@0oooo00@000000?ooo`3oool0
0000103oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3o
ool07@3oool010000000oooo0?ooo`00000D0?ooo`030000003oool0oooo0180oooo00<000000?oo
o`3oool0403oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo01D0oooo00<000000?oo
o`3oool07`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01D0oooo00<000000?oo
o`3oool02@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo0400oooo000:0?ooo`03
0=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool03`3oool00`2LB000M;oo0?ooo`040?ooo`03
0000003oool0oooo00D0oooo00@000000?ooo`3oool000001@3oool00`000000oooo0?ooo`0=0?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0I0?oo
o`030000003oool0oooo01@0oooo00<000000?ooo`3oool07@3oool010000000oooo0?ooo`00000D
0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool07`3oool01@000000oooo0?ooo`3o
ool0000001P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0@0?ooo`030000003o
ool0oooo0400oooo000:0?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool02P3oool0
0`3ookl0M000000000020000000304RLg`3oool0oooo00@0oooo00<000000?ooo`3oool01P3oool0
10000000oooo0?ooo`0000040?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool00`3o
ool00`000000oooo0?ooo`090?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool05@3o
ool00`000000oooo0?ooo`0L0?ooo`040000003oool0oooo000001<0oooo00<000000?ooo`3oool0
4`3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0
503oool00`000000oooo0?ooo`0P0?ooo`050000003oool0oooo0?ooo`000000603oool00`000000
oooo0?ooo`090?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0@03oool000X0oooo
00<0okmd04RLg`3oool00P3oool00`3OW4P0B9cO0?ooo`0:0?ooo`030?oo_`1d07@0_ooo00T0oooo
00<000000?ooo`3oool01P3oool010000000oooo0?ooo`0000040?ooo`030000003oool0oooo00h0
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo01P0
oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`0K0?ooo`050000003oool0oooo0?oo
o`0000004P3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo0100oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo0240oooo00@000000?oo
o`3oool00000603oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo0100oooo00<00000
0?ooo`3oool0@03oool000/0oooo00H0W4P007Boo`3oool0omnL04P0M02oool;0?ooo`030?oo_`1d
07@0_ooo00T0oooo00<000000?ooo`3oool01P3oool010000000oooo0?ooo`0000050?ooo`030000
003oool0oooo00h0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`090?ooo`030000
003oool0oooo01P0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`0K0?ooo`050000
003oool0oooo0?ooo`0000004P3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo0140
oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo0240
oooo00@000000?ooo`3oool00000603oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
0100oooo00<000000?ooo`3oool0@03oool000/0oooo00D0oono07@000000000001809cOo`0<0?oo
o`030?oo_`1d000000000080000000<0001d0;ooo`3oool0103oool00`000000oooo0?ooo`060?oo
o`040000003oool0oooo000000D0oooo00<000000?ooo`3oool03`3oool01@000000oooo0?ooo`3o
ool0000000/0oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`0F0?ooo`030000003o
ool0oooo01/0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0>0?ooo`030000003o
ool0oooo01@0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`050?ooo`030000003o
ool0oooo01<0oooo00<000000?ooo`3oool08@3oool00`000000oooo0000000I0?ooo`030000003o
ool0oooo00T0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`110?ooo`00:03oool0
0`000000oooo0?ooo`060?ooo`050000003oool0oooo0?ooo`000000103oool00`000000oooo0?oo
o`0?0?ooo`040000003oool0oooo000000/0oooo00<000000?ooo`3oool0603oool00`000000oooo
0?ooo`0G0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`0=0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool04P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool08@3oool00`000000oooo
0000000J0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0403oool00`000000oooo
0?ooo`110?ooo`00:03oool00`000000oooo0?ooo`060?ooo`050000003oool0oooo0?ooo`000000
1@3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0000000/0oooo00<000000?ooo`3oool0
603oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo01/0oooo00<000000?ooo`3oool0
0P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool0
4P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0
8P3oool2000001X0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0@0?ooo`030000
003oool0oooo0440oooo000X0?ooo`030000003oool0oooo00L0oooo00@000000?ooo`3oool00000
1@3oool00`000000oooo0?ooo`0@0?ooo`8000002`3oool00`000000oooo0?ooo`0G0?ooo`030000
003oool0oooo01T0oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo00`0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`0B0?ooo`030000
003oool0oooo00H0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0S0?ooo`030000
003oool0oooo01T0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0@0?ooo`030000
003oool0oooo0440oooo000X0?ooo`030000003oool0oooo00L0oooo00@000000?ooo`3oool00000
1@3oool00`000000oooo0?ooo`0@0?ooo`8000002`3oool00`000000oooo0?ooo`0G0?ooo`030000
003oool0oooo01T0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo00/0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`0C0?ooo`030000
003oool0oooo00H0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0S0?ooo`030000
003oool0oooo01T0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0@0?ooo`030000
003oool0oooo0440oooo000X0?ooo`030000003oool0oooo00L0oooo00@000000?ooo`3oool00000
1P3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
5`3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool0
103oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool0
4`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0
8`3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0
403oool00`000000oooo0?ooo`110?ooo`00:03oool00`000000oooo0?ooo`070?ooo`050000003o
ool0oooo0?ooo`0000001@3oool00`000000oooo0?ooo`0@0?ooo`8000002@3oool00`000000oooo
0?ooo`0G0?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool06@3oool00`000000oooo
0?ooo`040?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool05`3oool00`000000oooo
0?ooo`0D0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0403oool00`000000oooo
0?ooo`0R0?ooo`8000006`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo0100oooo
00<000000?ooo`3oool0@P3oool002P0oooo0`0000070?ooo`050000003oool0oooo0?ooo`000000
1@3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0000000T0oooo00<000000?ooo`3oool0
5`3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool0
103oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3oool0
503oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0
8P3oool00`000000oooo0000000J0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0
403oool00`000000oooo0?ooo`120?ooo`00:03oool00`000000oooo0?ooo`070?ooo`050000003o
ool0oooo0?ooo`0000001@3oool00`000000oooo0?ooo`0?0?ooo`040000003oool0oooo000000P0
oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo01T0
oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo01P0
oooo00<000000?ooo`3oool0503oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00l0
oooo00<000000?ooo`3oool08P3oool00`000000oooo0000000K0?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`120?ooo`00:03oool00`000000oooo
0?ooo`080?ooo`040000003oool0oooo000000H0oooo00<000000?ooo`3oool03P3oool01@000000
oooo0?ooo`3oool0000000L0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`0K0?oo
o`030000003oool0oooo01T0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`070?oo
o`030000003oool0oooo01P0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`070?oo
o`030000003oool0oooo00h0oooo00<000000?ooo`3oool08P3oool010000000oooo0?ooo`00000K
0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`12
0?ooo`00:03oool00`000000oooo0?ooo`080?ooo`040000003oool0oooo000000H0oooo00<00000
0?ooo`3oool03P3oool01@000000oooo0?ooo`3oool0000000L0oooo00<000000?ooo`3oool05P3o
ool00`000000oooo0?ooo`0L0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool01P3o
ool00`000000oooo0?ooo`060?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3oool05@3o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool08P3o
ool010000000oooo0?ooo`00000K0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0
403oool00`000000oooo0?ooo`120?ooo`00:03oool00`000000oooo0?ooo`080?ooo`050000003o
ool0oooo0?ooo`0000001@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo01`0oooo
00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool06@3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00P0oooo
00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0R0?ooo`040000003oool0oooo000001/0
oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0480
oooo000X0?ooo`030000003oool0oooo00P0oooo00D000000?ooo`3oool0oooo000000060?ooo`03
0000003oool0oooo00d0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo01H0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`0G0?ooo`03
0000003oool0oooo00H0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0J0?ooo`03
0000003oool0oooo01H0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0=0?ooo`03
0000003oool0oooo0240oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0H0?ooo`03
0000003oool0oooo00@0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`130?ooo`00
:03oool00`000000oooo0?ooo`080?ooo`050000003oool0oooo0?ooo`0000001P3oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`0F0?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3oool05`3oool00`000000
oooo0?ooo`060?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool06@3oool00`000000
oooo0?ooo`0G0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`0Q0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0603oool00`000000
oooo0?ooo`040?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool0@`3oool002P0oooo
00<000000?ooo`3oool0203oool01@000000oooo0?ooo`3oool0000000H0oooo00<000000?ooo`3o
ool0303oool00`000000oooo0?ooo`050?ooo`050000003oool0oooo0?ooo`000000603oool00`00
0000oooo0?ooo`0M0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool01P3oool00`00
0000oooo0?ooo`030?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool05`3oool00`00
0000oooo0?ooo`070?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool08@3oool00`00
0000oooo0?ooo`020?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`0@0?ooo`030000003oool0oooo04<0oooo000X0?ooo`030000003oool0oooo00T0
oooo00@000000?ooo`3oool000001`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo
00H0oooo00@000000?ooo`3oool000005`3oool00`000000oooo0?ooo`0N0?ooo`030000003oool0
oooo01L0oooo00<000000?ooo`3oool01`3oool01@000000oooo0?ooo`3oool0000001d0oooo00<0
00000?ooo`3oool05`3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00/0oooo00<0
00000?ooo`3oool08P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01T0oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo04<0oooo000X
0?ooo`030000003oool0oooo00T0oooo00D000000?ooo`3oool0oooo000000060?ooo`030000003o
ool0oooo00/0oooo00<000000?ooo`3oool01P3oool00`000000oooo0000000H0?ooo`030000003o
ool0oooo01l0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`080?ooo`050000003o
ool0oooo0?ooo`0000007@3oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00P0oooo
00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool0603oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0100oooo
00<000000?ooo`3oool0@`3oool002P0oooo00<000000?ooo`3oool02@3oool01@000000oooo0?oo
o`3oool0000000H0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`070?ooo`800000
5`3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool0
203oool010000000oooo0?ooo`00000N0?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3o
ool0203oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo0240oooo00<000000?ooo`3o
ool0103oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool04@3oool00`000000oooo0?ooo`130?ooo`00:03oool00`000000oooo0?ooo`090?ooo`050000
003oool0oooo0?ooo`0000001`3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00P0
oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo01D0
oooo00<000000?ooo`3oool0203oool00`000000oooo0000000N0?ooo`030000003oool0oooo01T0
oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo0240
oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0H0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`140?ooo`00:03oool3000000T0oooo
00D000000?ooo`3oool0oooo000000070?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3o
ool05@3oool00`000000oooo0?ooo`090?ooo`8000007P3oool00`000000oooo0?ooo`0I0?ooo`03
0000003oool0oooo00P0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0P0?ooo`03
0000003oool0oooo00D0oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo0100oooo00<000000?ooo`3oool0A03oool002P0oooo00<000000?ooo`3oool0
2P3oool010000000oooo0?ooo`0000070?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3o
ool02@3oool2000001D0oooo00<000000?ooo`3oool08@3oool00`000000oooo0?ooo`0E0?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool07@3oool00`000000oooo0?ooo`0I0?ooo`03
0000003oool0oooo00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0Q0?ooo`03
0000003oool0oooo00D0oooo00<000000?ooo`3oool06@3oool01@000000oooo0?ooo`3oool00000
0180oooo00<000000?ooo`3oool0A03oool002P0oooo00<000000?ooo`3oool02P3oool01@000000
oooo0?ooo`3oool0000000L0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`080?oo
o`040000003oool0oooo000001@0oooo00<000000?ooo`3oool08@3oool00`000000oooo0?ooo`0E
0?ooo`030000003oool0oooo00P0oooo0P00000O0?ooo`030000003oool0oooo01T0oooo00<00000
0?ooo`3oool02@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0240oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`0H0?ooo`040000003oool0oooo000001<0oooo00<0
00000?ooo`3oool0A03oool002P0oooo00<000000?ooo`3oool02P3oool01@000000oooo0?ooo`3o
ool0000000L0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`080?ooo`050000003o
ool0oooo0?ooo`0000004`3oool00`000000oooo0?ooo`0R0?ooo`030000003oool0oooo01<0oooo
00<000000?ooo`3oool0203oool00`000000oooo0000000N0?ooo`030000003oool0oooo01X0oooo
00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0200oooo
00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0H0?ooo`040000003oool0oooo000001<0
oooo00<000000?ooo`3oool0A03oool002P0oooo00<000000?ooo`3oool02P3oool01@000000oooo
0?ooo`3oool0000000L0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`080?ooo`05
0000003oool0oooo0?ooo`0000004P3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo
01<0oooo00<000000?ooo`3oool01`3oool01@000000oooo0?ooo`3oool0000001d0oooo00<00000
0?ooo`3oool06P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool0803oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo01P0oooo00@00000
0?ooo`3oool000004`3oool00`000000oooo0?ooo`140?ooo`00:03oool00`000000oooo0?ooo`0:
0?ooo`050000003oool0oooo0?ooo`000000203oool00`000000oooo0?ooo`060?ooo`030000003o
ool0oooo00T0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0?0?ooo`030000003o
ool0oooo02<0oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`070?ooo`050000003o
ool0oooo0?ooo`0000007@3oool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo00T0oooo
00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo00L0oooo
00<000000?ooo`3oool0603oool010000000oooo0?ooo`00000B0?ooo`030000003oool0oooo04D0
oooo000X0?ooo`030000003oool0oooo00/0oooo00D000000?ooo`3oool0oooo000000070?ooo`03
0000003oool0oooo00H0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`040?ooo`03
0000003oool0oooo00d0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0C0?ooo`03
0000003oool0oooo00H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0J0?ooo`03
0000003oool0oooo01`0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`060?ooo`03
0000003oool0oooo0200oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0H0?ooo`03
0000003oool0000001<0oooo00<000000?ooo`3oool0A@3oool002P0oooo00<000000?ooo`3oool0
2`3oool01@000000oooo0?ooo`3oool0000000P0oooo00<000000?ooo`3oool01@3oool00`000000
oooo0?ooo`080?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0T0?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool01@3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool0703oool00`000000
oooo0?ooo`0:0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0803oool00`000000
oooo0?ooo`090?ooo`030000003oool0oooo01P0oooo0P00000C0?ooo`030000003oool0oooo04D0
oooo000X0?ooo`030000003oool0oooo00/0oooo00D000000?ooo`3oool0oooo000000080?ooo`03
0000003oool0oooo00D0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`060?ooo`03
0000003oool0oooo00/0oooo00<000000?ooo`3oool09@3oool00`000000oooo0?ooo`0B0?ooo`03
0000003oool0oooo00@0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0I0?ooo`03
0000003oool0oooo01`0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`050?ooo`03
0000003oool0oooo01l0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0H0?ooo`80
00004`3oool00`000000oooo0?ooo`150?ooo`00:03oool00`000000oooo0?ooo`0;0?ooo`050000
003oool0oooo0?ooo`000000203oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00P0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo02H0
oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo00/0
oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo00X0
oooo00<000000?ooo`3oool0603oool2000001<0oooo00<000000?ooo`3oool0A@3oool002P0oooo
00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00L0oooo
00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0V0?ooo`030000003oool0oooo0140oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo01P0oooo
00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo01P0oooo
00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`150?ooo`00:03oool00`000000oooo0?oo
o`0<0?ooo`050000003oool0oooo0?ooo`000000203oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo02L0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo00L0oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`0N0?ooo`030000
003oool0oooo00X0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo00/0oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`0A0?ooo`030000
003oool0oooo04H0oooo000X0?ooo`<00000303oool01@000000oooo0?ooo`3oool0000000T0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0W0?ooo`030000003oool0oooo0140oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo01L0oooo
00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo01L0oooo
0P00000B0?ooo`030000003oool0oooo04H0oooo000X0?ooo`030000003oool0oooo00`0oooo00D0
00000?ooo`3oool0oooo000000090?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
203oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0
:@3oool00`000000oooo0?ooo`0@0?ooo`050000003oool0oooo0?ooo`000000303oool00`000000
oooo0?ooo`0F0?ooo`030000003oool0oooo01l0oooo00<000000?ooo`3oool02`3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo01h0oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`0G0?ooo`8000004P3oool00`000000oooo0?ooo`160?ooo`00:03oool00`000000oooo
0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool01`3oool01@000000oooo
0?ooo`3oool0000000X0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`030?ooo`03
0000003oool0oooo02T0oooo00<000000?ooo`3oool0403oool010000000oooo0?ooo`00000=0?oo
o`030000003oool0oooo01H0oooo00<000000?ooo`3oool0803oool00`000000oooo0?ooo`0;0?oo
o`050000003oool0oooo0?ooo`000000803oool00`000000oooo0?ooo`0=0?ooo`030000003oool0
oooo01H0oooo00<000000?ooo`0000004P3oool00`000000oooo0?ooo`160?ooo`00:03oool00`00
0000oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool01`3oool01000
0000oooo0?ooo`00000:0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`0Y0?ooo`030000003oool0oooo00l0oooo00@000000?ooo`3oool000003`3o
ool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo0200oooo00<000000?ooo`3oool02`3o
ool01@000000oooo0?ooo`3oool0000001l0oooo00<000000?ooo`3oool03P3oool00`000000oooo
0?ooo`0F0?ooo`030000003oool000000180oooo00<000000?ooo`3oool0AP3oool002P0oooo00<0
00000?ooo`3oool03@3oool01@000000oooo0?ooo`3oool0000000X0oooo00<000000?ooo`000000
2P3oool00`000000oooo0?ooo`0>0?ooo`050000003oool0oooo0?ooo`000000;03oool00`000000
oooo0?ooo`0?0?ooo`030000003oool000000100oooo00<000000?ooo`3oool0503oool00`000000
oooo0?ooo`0Q0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`000000803oool00`000000
oooo0?ooo`0?0?ooo`030000003oool0oooo01D0oooo00@000000?ooo`3oool000004@3oool00`00
0000oooo0?ooo`160?ooo`00:03oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool01`3oool00`000000oooo0000000:0?ooo`030000003oool0oooo00l0
oooo00@000000?ooo`3oool00000;@3oool00`000000oooo0?ooo`0>0?ooo`030000003oool00000
0100oooo00<000000?ooo`3oool0503oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0oooo
00`0oooo00<000000?ooo`0000007`3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo
01@0oooo00D000000?ooo`3oool0oooo0000000@0?ooo`030000003oool0oooo04L0oooo000X0?oo
o`030000003oool0oooo00d0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`080?oo
o`8000002@3oool00`000000oooo0?ooo`0A0?ooo`800000;P3oool00`000000oooo0?ooo`0>0?oo
o`8000004P3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo0240oooo00<000000?oo
o`3oool03@3oool2000001l0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0C0?oo
o`050000003oool0oooo0?ooo`000000403oool00`000000oooo0?ooo`170?ooo`00:03oool00`00
0000oooo0?ooo`0=0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0203oool00`00
0000oooo0?ooo`080?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0;03oool00`00
0000oooo0?ooo`0>0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool04P3oool00`00
0000oooo0?ooo`0R0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool0703oool00`00
0000oooo0?ooo`0B0?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool00P3oool00`00
0000oooo0?ooo`0=0?ooo`030000003oool0oooo04L0oooo000X0?ooo`030000003oool0oooo00d0
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`070?ooo`800000203oool00`000000
oooo0?ooo`0B0?ooo`030000003oool0000002h0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0C0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool08`3oool00`000000
oooo0?ooo`0<0?ooo`8000007P3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo0140
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0=0?ooo`030000003oool0oooo04L0
oooo000X0?ooo`030000003oool0oooo00h0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`070?ooo`800000203oool00`000000oooo0?ooo`0B0?ooo`040000003oool0oooo000002d0
oooo00<000000?ooo`3oool02`3oool2000001D0oooo00<000000?ooo`3oool0403oool00`000000
oooo0?ooo`0T0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`000000703oool00`000000
oooo0?ooo`0D0?ooo`030000003oool0oooo0140oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo04P0oooo000X0?ooo`030000003oool0oooo00h0oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`050?ooo`040000003oool0oooo000000L0
oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo02X0
oooo00<000000?ooo`3oool02P3oool00`000000oooo0000000E0?ooo`030000003oool0oooo0100
oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0<0?ooo`030000003oool0000001`0
oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo00<0
oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`180?ooo`00:03oool3000000h0oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`050?ooo`040000003oool0oooo000000H0
oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`040?ooo`800000:P3oool00`000000
oooo0?ooo`080?ooo`8000000P3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo00l0
oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0<0?ooo`040000003oool0oooo0000
01X0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo
00D0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`180?ooo`00:03oool00`000000
oooo0?ooo`0>0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool01@3oool01@000000
oooo0?ooo`3oool0000000D0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`060?oo
o`030000003oool0oooo02P0oooo00<000000?ooo`3oool01P3oool01@000000oooo0?ooo`3oool0
000001L0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`0U0?ooo`030000003oool0
oooo00/0oooo00D000000?ooo`3oool0oooo0000000I0?ooo`030000003oool0oooo01L0oooo00<0
00000?ooo`3oool03`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00/0oooo00<0
00000?ooo`3oool0B03oool002P0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool00`3oool01@000000oooo0?ooo`3o
ool0000001<0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0W0?ooo`030000003o
ool0oooo00D0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0E0?ooo`030000003o
ool0oooo00h0oooo00<000000?ooo`3oool09P3oool00`000000oooo0?ooo`0:0?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`0H0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0:0?ooo`030000003o
ool0oooo04T0oooo000X0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool00`3oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo00<0oooo00D000000?ooo`3oool0oooo0000
000B0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool09P3oool00`000000oooo0?oo
o`040?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?oo
o`0<0?ooo`030000003oool0oooo02L0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3oool06@3oool00`000000oooo0?oo
o`0=0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?oo
o`190?ooo`00:03oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00<0oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`040?ooo`030000003oool0000001<0oooo00<00000
0?ooo`3oool02`3oool00`000000oooo0?ooo`0V0?ooo`040000003oool0oooo0?ooo`8000001@3o
ool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0:03o
ool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool04`3o
ool00`000000oooo0?ooo`0K0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0203o
ool00`000000oooo0?ooo`080?ooo`030000003oool0oooo04X0oooo000X0?ooo`030000003oool0
oooo0100oooo00<000000?ooo`3oool00`3oool01@000000oooo0?ooo`3oool0000000P0oooo0P00
000B0?ooo`030000003oool0oooo00d0oooo0P00000V0?ooo`040000003oool0oooo000000L0oooo
00<000000?ooo`3oool0603oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo02P0oooo
00<000000?ooo`3oool0203oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0180oooo
00<000000?ooo`3oool06`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00P0oooo
00<000000?ooo`3oool0203oool00`000000oooo0?ooo`1:0?ooo`00:03oool00`000000oooo0?oo
o`0@0?ooo`030000003oool0oooo00<0oooo00D000000?ooo`3oool0oooo000000080?ooo`030000
003oool0oooo0140oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0T0?ooo`800000
1`3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
:@3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0
4@3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo04/0oooo000X0?ooo`030000003o
ool0oooo0140oooo00<000000?ooo`3oool00`3oool00`000000oooo000000090?ooo`8000004@3o
ool00`000000oooo0?ooo`0A0?ooo`8000008P3oool3000000L0oooo00<000000?ooo`3oool06`3o
ool00`000000oooo0?ooo`090?ooo`030000003oool0oooo02X0oooo00<000000?ooo`3oool01P3o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool07@3o
ool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool01P3o
ool00`000000oooo0?ooo`1;0?ooo`00:03oool00`000000oooo0?ooo`0A0?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`000000203oool010000000oooo0?ooo`00000@0?ooo`030000003o
ool0oooo01<0oooo0P00000O0?ooo`040000003oool0oooo000000L0oooo00<000000?ooo`3oool0
6`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo02X0oooo00<000000?ooo`3oool0
1@3oool00`000000oooo0?ooo`090?ooo`8000003`3oool00`000000oooo0?ooo`0O0?ooo`030000
003oool0oooo00L0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`050?ooo`030000
003oool0oooo04`0oooo000L0?ooo`030?noM0000000000000<0000000<007Bo0?ooo`3oool00`3o
ool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool01`3o
ool01@000000oooo0?ooo`3oool0000000d0oooo0P00000H0?ooo`8000006`3oool2000000@0oooo
00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo00L0oooo
00<000000?ooo`3oool0;03oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00/0oooo
00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`0P0?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo04`0oooo
000O0?ooo`0309a8B02Lgol0oooo00H0oooo00<000000?ooo`3oool04P3oool2000000@0oooo0P00
00070?ooo`030000003oool0oooo00<0oooo0P00000:0?ooo`030000003oool0oooo01X0oooo0P00
000F0?ooo`<000001P3oool2000000@0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?oo
o`050?ooo`030000003oool0oooo02d0oooo0P0000040?ooo`030000003oool0oooo00d0oooo00<0
00000?ooo`3oool0203oool2000002@0oooo00<000000?ooo`3oool0103oool00`000000oooo0?oo
o`0?0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0C@3oool001l0oooo00<0W4Q8
09cOo`3oool01P3oool00`000000oooo0?ooo`0C0?ooo`8000000P3oool2000000030?ooo`000000
000000@0oooo00<000000?ooo`3oool01P3oool2000000D0oooo0`00000O0?ooo`@000003@3oool5
000000X0oooo0P0000020?ooo`8000008@3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo02l0oooo0P0000020?ooo`800000403oool2000000H0oooo0P00000W0?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool0403oool2000000<0oooo00<000000?ooo`3oool0C@3oool0
01l0oooo00<0W4Q809cOo`3oool01P3oool4000001<0oooo100000030?ooo`D000002P3oool60000
02H0oooo3@00000@0?ooo`@000008`3oool5000003<0oooo1000000C0?ooo`H00000:P3oool50000
01<0oooo1000001@0?ooo`007`3oool00`2LB4P0W=oo0?ooo`060?ooo`030000003oool0oooo0?l0
ooooQP3oool001l0oooo00<0W4Q809cOo`3oool01P3oool00`000000oooo0?ooo`3o0?ooohH0oooo
000O0?ooo`0309a8B02Lgol0oooo00H0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00703oool0
1@3OW4P000000018W02LB4P0W=oo00L0oooo00<000000?ooo`3oool0o`3ooon60?ooo`007P3oool0
0`3OW4P0001809cOo`070?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?oo
o`3oool0o`3ooon60?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 431}, {265.813, 0}} -> {-0.107744, -1.13037, \
0.00394228, 0.0127575}}]
}, Closed]],

Cell[TextData[{
  "Note that ",
  StyleBox["Evaluate", "InlineInput",
    FontWeight->"Bold"],
  " is needed to construct the list before attempting to plot."
}], "Text"],

Cell["Plot the hyperbolic tangent for arguments between -5 and 5.", "Exercise"],

Cell["\<\
Plot the positive branch of the inverse hyperbolic secant function over its \
entire domain.\
\>", "Exercise"],

Cell["\<\
Plot the Airy function (AiryAi) for an illustrative range of real \
arguments.\
\>", "Exercise"],

Cell["\<\
Plot the first four Bessel functions, BesselJ[n,x], for {x,0,10} together. \
\>", "Exercise"],

Cell[TextData[{
  "Considerably more detail about plotting commands is provided in the \
notebook ",
  ButtonBox["plotting.nb",
    ButtonData:>{"Primary topics/plotting.nb", None},
    ButtonStyle->"Hyperlink"],
  "."
}], "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Using functions", "Section"],

Cell[CellGroupData[{

Cell["Postfix, Prefix, Infix", "Subsection"],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " provides a vast library of functions and you will soon create many of \
your own.  There are several methods for supplying input to functions.  The \
most obvious method, which was used above, is to use the form ",
  StyleBox["function[args,opts]", "InlineInput"],
  " where ",
  StyleBox["args", "InlineInput"],
  " represents the list of positional arguments and ",
  StyleBox["opts", "InlineInput"],
  " represents a subset of the available options.  Positional arguments are \
interpreted according to the order they appear in the function definition and \
must agree in type.  Options may follow the positional arguments, but are \
optional (in other words, they may be omitted).  Omitted options will be \
assigned default values.  "
}], "Text"],

Cell[TextData[{
  "For example, ",
  StyleBox["Expand", "InlineInput",
    FontWeight->"Bold"],
  " expands an algebraic expression. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(ClearAll["\<Global`*\>"];\)\), "\n", 
    \(Expand[\ \((a + b\ x)\) \((c\ x\  - \ d\ x\^2)\)\ \((e\  + \ f\  + \ 
            g)\)\ ]\)}], "Input"],

Cell[BoxData[
    \(a\ c\ e\ x + a\ c\ f\ x + a\ c\ g\ x + b\ c\ e\ x\^2 - a\ d\ e\ x\^2 + 
      b\ c\ f\ x\^2 - a\ d\ f\ x\^2 + b\ c\ g\ x\^2 - a\ d\ g\ x\^2 - 
      b\ d\ e\ x\^3 - b\ d\ f\ x\^3 - b\ d\ g\ x\^3\)], "Output"]
}, Closed]],

Cell["\<\
However, the expression we wish to expand often arises as the result of an \
earlier evaluation.  If we then want to use this method to apply another \
operation to that result, we would need to wrap a new function around the \
previous result.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Factor[\ 
      Expand[\ \((a + b\ x)\) \((c\ x\  - \ d\ x\^2)\)\ \((e\  + \ f\  + \ 
              g)\)\ ]\ ]\)], "Input"],

Cell[BoxData[
    \(\((e + f + g)\)\ x\ \((a + b\ x)\)\ \((c - d\ x)\)\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Although this obviously works, complicated algebraic manipulations may \
require many steps.  It then becomes difficult to read nested functions from \
the inside out.  I prefer to use the ",
  StyleBox["Postfix", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontWeight->"Bold"],
  "form in which ",
  Cell[BoxData[
      \(TraditionalForm\`f[x]\)]],
  " is represented by ",
  StyleBox["x//f", "InlineInput"],
  " where ",
  StyleBox["//", "InlineInput"],
  " is referred to as the postfix operator. ",
  StyleBox[" ",
    FontColor->RGBColor[1, 0, 1]],
  "For the example, above we pass an expression first into ",
  StyleBox["Expand", "InlineInput",
    FontWeight->"Bold"],
  " and then into ",
  StyleBox["Factor", "InlineInput",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\((a + b\ x)\) \((c\ x\  - \ d\ x\^2)\)\ \((e\  + \ f\  + \ g)\)\  // 
        Expand\) // Factor\)], "Input"],

Cell[BoxData[
    \(\((e + f + g)\)\ x\ \((a + b\ x)\)\ \((c - d\ x)\)\)], "Output"]
}, Closed]],

Cell["\<\
As we develop our calculation, we may attach other functions or replacement \
rules at the end until we achieve the desired final form.  Postfix form is \
especially convenient for tacking numerical evaluation, simplification, or \
formatting functions onto the end of an expression.  I find this style easier \
to read and to understand than the nested representation, but of course that \
is merely a matter of taste.\
\>", "Text"],

Cell[TextData[{
  "Alternatively, it is sometimes useful to employ the ",
  StyleBox["Prefix", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontWeight->"Bold"],
  "form based upon the prefix operator ",
  StyleBox["@", "InlineInput"],
  ", such that ",
  Cell[BoxData[
      \(TraditionalForm\`f[x]\)]],
  " is represented by ",
  StyleBox["f@x", "InlineInput"],
  ".  The example above would then be expressed as"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(Factor\ @\ \(Expand@\((a + b\ x)\)\)\) \((c\ x\  - \ 
          d\ x\^2)\)\(\ \)\((e\  + \ f\  + \ g)\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\((e + f + g)\)\ \((a + b\ x)\)\ \((c\ x - d\ x\^2)\)\)], "Output"]
}, Closed]],

Cell["\<\
An important consideration in the use of postfix versus prefix notation is \
the precedence of operators.  The postfix operator is assigned a very low \
precedence so that the entire preceding expression is treated as single \
entity that is to be passed into the function.\
\>", "Text"],

Cell[BoxData[
    \(Clear[f]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(x + y // f\)], "Input"],

Cell[BoxData[
    \(f[x + y]\)], "Output"]
}, Closed]],

Cell["\<\
Because arithmetic and logical operators take precedence over postfix, the \
sum becomes the argument rather than the last term.  This behavior is to be \
contrasted with the prefix operator, which is assigned a higher precedence \
than arithmetic or logical operations.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f\ @\ x + y\)], "Input"],

Cell[BoxData[
    \(y + f[x]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Thus, with prefix notation the first term becomes the argument.  Note that \
",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " has its own rules for ordering the terms upon output.  ",
  StyleBox["Therefore, one must be very careful to consider precedence when \
using prefix notation.",
    FontColor->RGBColor[1, 0, 1]],
  "  I find the prefix form to be more prone to error than the postfix form.  \
However, even with postfix operations it is often necessary to use \
parentheses to ensure that the evaluation proceeds in the proper sequence."
}], "Text"],

Cell["Use explicit grouping (parentheses) to avoid mistakes.", "Advice"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f@\((x + y)\)\)], "Input"],

Cell[BoxData[
    \(f[x + y]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Finally, ",
  StyleBox["Infix", "InlineInput",
    FontWeight->"Bold"],
  " notation can be used for functions which take two arguments.  In this \
case, ",
  Cell[BoxData[
      \(TraditionalForm\`f[x, y]\)]],
  " is represented as ",
  Cell[BoxData[
      \(TraditionalForm\`x~f~y\)]],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(x~f~y\)], "Input"],

Cell[BoxData[
    \(f[x, y]\)], "Output"]
}, Closed]],

Cell["\<\
Infix notation also takes precedence over arithmetic or logical operators.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(a + b~f~c + d\)], "Input"],

Cell[BoxData[
    \(a + d + f[b, c]\)], "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Listable functions", "Subsection"],

Cell[TextData[{
  "Many functions are listable; that is, they can be applied to each member \
of a list.  As we will soon discover, this feature can often be used to \
perform calculations much more efficiently than by using traditional loop \
commands, such as ",
  StyleBox["Do", "InlineInput",
    FontWeight->"Bold"],
  ".  "
}], "Text"],

Cell[TextData[{
  "For example, ",
  StyleBox["Prime[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["n", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " returns the ",
  Cell[BoxData[
      \(TraditionalForm\`n\^th\)]],
  " prime number and can be applied to a list to give a list of primes."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(primeList\  = \ Prime[\ Range[100]\ ]\)], "Input"],

Cell[BoxData[
    \({2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 
      67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 
      139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 
      223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 
      293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 
      383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 
      463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541}\)], "Output"]
}, Closed]],

Cell["\<\
A list of the first 10 square roots is obtained from the following command.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sqrt[Range[10]]\)], "Input"],

Cell[BoxData[
    \({1, \@2, \@3, 2, \@5, \@6, \@7, 2\ \@2, 3, \@10}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Listable functions with two arguments, such as ",
  StyleBox["Plus", "InlineInput",
    FontWeight->"Bold"],
  ", can receive either a scalar and a list or two lists of the same \
structure.  Given a scalar and a list, a listable function of two arguments \
is evaluated for each element of the list paired with the scalar.  Given two \
lists of the same dimensions, a listable function of two arguments is \
evaluated using corresponding members of the two lists.  In both cases the \
output is a list of results."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(1 + Sqrt[Range[10]]\)], "Input"],

Cell[BoxData[
    \({2, 1 + \@2, 1 + \@3, 3, 1 + \@5, 1 + \@6, 1 + \@7, 1 + 2\ \@2, 4, 
      1 + \@10}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sqrt[Range[10]]\ Range[10]\)], "Input"],

Cell[BoxData[
    \({1, 2\ \@2, 3\ \@3, 8, 5\ \@5, 6\ \@6, 7\ \@7, 16\ \@2, 27, 
      10\ \@10}\)], "Output"]
}, Closed]],

Cell["Display the first 20 powers of 2.", "Exercise"],

Cell["\<\
Evaluate the following expressions and explain the results.  (Clear variables \
first!)
a) x {a, b, c, d}\t\tb) x^{a, b, c, d}\t
c) {a, b, c, d}  {e, f, g, h}\td) {a, b, c, d} / {e, f, g, h}\
\>", "Exercise"],

Cell[TextData[{
  "Revelation 13.18: \"Let him that hath understanding count the number of \
the beast, for it is the number of a man and his number is 666.\"  Show that \
the sum of the squares of the first seven primes is the ",
  StyleBox["beast number",
    FontSlant->"Italic"],
  "."
}], "Exercise"],

Cell["\<\
Create a list of reciprocals for the first 10 square roots.  Then multiply \
this list with the square roots themselves.\
\>", "Exercise"],

Cell["\<\
Evaluate the following expressions and explain the results.
a) BesselJ[Range[0,4],x]\t
b) Plot[Evaluate[BesselJ[Range[0,4],x]],{x,0,10}]\
\>", "Exercise"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Creating functions", "Section"],

Cell[TextData[{
  "We will soon need to create our own functions that accept input, perform \
some calculations or manipulations, and return results.  The efficient design \
of functions, or program modules, involves many considerations and it will \
take considerable time to become proficient at this task.  The notebook ",
  ButtonBox["functions.nb",
    ButtonData:>{"Primary topics/functions.nb", None},
    ButtonStyle->"Hyperlink"],
  StyleBox[" ",
    FontWeight->"Bold"],
  "develops many important ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " programming skills at much greater depth, but it is useful at this stage \
to introduce some of the basic concepts."
}], "Text"],

Cell[CellGroupData[{

Cell["Labels that masquerade as functions", "Subsection"],

Cell["\<\
Suppose that we assign to some expression a name that looks like a function.  \
For example, the assignment\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[f, x];\)\), "\n", 
    \(f[x] = 2\ x\^2 - \ x\  + \ 1\)}], "Input"],

Cell[BoxData[
    \(1 - x + 2\ x\^2\)], "Output"]
}, Closed]],

Cell["\<\
appears to create a simple quadratic function.  However, although we can use \
this definition verbatim in other expressions\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[x]\^2\)], "Input"],

Cell[BoxData[
    \(\((1 - x + 2\ x\^2)\)\^2\)], "Output"]
}, Closed]],

Cell["\<\
we soon find that this definition is quite limited.  When we give this \
function a numerical argument,\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[2]\)], "Input"],

Cell[BoxData[
    \(f[2]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "it fails to return a numerical result; in fact, it remains unevaluated.  \
The problem is that we supplied a definition for the expression ",
  StyleBox["f[x]", "InlineInput",
    FontWeight->"Bold"],
  ","
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?f\)\)], "Input"],

Cell["Global`f", "Print",
  CellTags->"Info3282055231-7910126"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {GridBox[{
                {\(f[x] = 1 - x + 2\ x\^2\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnWidths->0.999,
              ColumnAlignments->{Left}]}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      Definition[ "f"],
      Editable->False]], "Print",
  CellTags->"Info3282055231-7910126"]
}, Closed]],

Cell[TextData[{
  "but did not supply a definition for ",
  StyleBox["f[2]", "InlineInput",
    FontWeight->"Bold"],
  ".  ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " evaluates expressions by matching patterns and does not automatically \
assume that ",
  StyleBox["f[2]", "InlineInput",
    FontWeight->"Bold"],
  " matches the pattern ",
  StyleBox["f[x]", "InlineInput",
    FontWeight->"Bold"],
  ".  In this sense, ",
  StyleBox["f[x]", "InlineInput",
    FontWeight->"Bold"],
  " behaves more like a symbolic name than like a function; it is a symbol \
that masquerades as a function."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatchQ[f[2], f[x]]\)], "Input"],

Cell[BoxData[
    \(False\)], "Output"]
}, Closed]],

Cell[TextData[{
  "In fact, we are free to give independent definitions for ",
  StyleBox["f[2]", "InlineInput",
    FontWeight->"Bold"],
  " or ",
  StyleBox["f[y]", "InlineInput",
    FontWeight->"Bold"],
  " which need not have any relationship to the definition for ",
  StyleBox["f[x]", "InlineInput",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[2] = "\<The sun will rise tomorrow.\>"\)], "Input"],

Cell[BoxData[
    \("The sun will rise tomorrow."\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[y] = Exp[y]\)], "Input"],

Cell[BoxData[
    \(\[ExponentialE]\^y\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The symbol ",
  StyleBox["f", "InlineInput",
    FontWeight->"Bold"],
  " is now associated with a collection of assignments that may or may not be \
related."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?f\)\)], "Input"],

Cell["Global`f", "Print",
  CellTags->"Info3282055233-8569190"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {GridBox[{
                {\(f[x] = 1 - x + 2\ x\^2\)},
                {" "},
                {\(f[2] = "The sun will rise tomorrow."\)},
                {" "},
                {\(f[y] = \[ExponentialE]\^y\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnWidths->0.999,
              ColumnAlignments->{Left}]}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      Definition[ "f"],
      Editable->False]], "Print",
  CellTags->"Info3282055233-8569190"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Patterns as dummy arguments", "Subsection"],

Cell[TextData[{
  "If we want ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " to recognize ",
  StyleBox["f[2]", "InlineInput",
    FontWeight->"Bold"],
  " or ",
  StyleBox["f[y]", "InlineInput",
    FontWeight->"Bold"],
  " as examples of a more general function ",
  StyleBox["f[x]", "InlineInput",
    FontWeight->"Bold"],
  ", we must define our function using a ",
  StyleBox["pattern argument",
    FontSlant->"Italic"],
  ", as follows."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[g];\)\), "\n", 
    \(g[x_] = 2\ x\^2 - \ x\  + \ 1\)}], "Input"],

Cell[BoxData[
    \(1 - x + 2\ x\^2\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The additional underscore attached to the argument ",
  StyleBox["x_", "InlineInput",
    FontWeight->"Bold"],
  " is used on the ",
  StyleBox["lhs",
    FontSlant->"Italic"],
  " to indicate that any expression can be used as the argument of this \
function and that the argument will be named ",
  StyleBox["x", "InlineInput",
    FontWeight->"Bold"],
  " for the purpose of evaluating the ",
  StyleBox["rhs",
    FontSlant->"Italic"],
  ". In other words, ",
  StyleBox["x", "InlineInput",
    FontWeight->"Bold"],
  " is a dummy argument.  However, the underscore is not used on the ",
  StyleBox["rhs",
    FontSlant->"Italic"],
  " \[LongDash] once the argument is given, it is referred to as ",
  StyleBox["x", "InlineInput",
    FontWeight->"Bold"],
  " in the subsequent definition of the function.  With this version of the \
function, any argument is substituted for ",
  StyleBox["x_", "InlineInput",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \({g[2], g[y], g[z\^2], g[p + q]}\)], "Input"],

Cell[BoxData[
    \({7, 1 - y + 2\ y\^2, 1 - z\^2 + 2\ z\^4, 
      1 - p - q + 2\ \((p + q)\)\^2}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "In ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " jargon, the underscore refers to a ",
  StyleBox["blank pattern",
    FontSlant->"Italic"],
  " which matches any expression; attaching a pattern to a symbol in the form \
",
  StyleBox["x_", "InlineInput",
    FontWeight->"Bold"],
  " names the pattern ",
  StyleBox["x", "InlineInput",
    FontWeight->"Bold"],
  " for later use."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatchQ[2, x_]\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatchQ["\<Physics is Phun\>", x_]\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Create the function ",
  Cell[BoxData[
      \(TraditionalForm\`\(e\^\(-x\)\) sin\ x\)]],
  " using a pattern argument."
}], "Exercise"],

Cell["\<\
Write a function with two arbitrary arguments which returns the ratio between \
their difference and their sum as a percentage.  Be sure to test it!\
\>", "Exercise"],

Cell["\<\
Sometimes it is advantageous to use patterns for one or more arguments and \
explicit labels for others.  In the following example, a pattern is used for \
a numerical argument, which can assume arbitrary values, while an explicit \
symbol is used to identify the system of units, of which there are only a \
small number of choices.\
\>", "Text"],

Cell["\<\
Write a function which converts between Fahrenheit and Celsius temperature.  \
The input should identify its scale and the output should be the other scale \
\[LongDash] in other words, the same function should operate in both \
directions depending upon the input presented.  [Hint: create a function with \
two arguments, a value and a unit.  The numerical value should be a dummy \
argument.  Two definitions of the function should be given for the cases \
where the unit is either Fahrenheit or Celsius.]  Be sure to test the \
function.  Verify that it is listable with respect to temperature. \
\>", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Virtues of procrastination", "Subsection"],

Cell[TextData[{
  "Another very useful technique for creating functions is provided by the ",
  ButtonBox["SetDelayed",
    ButtonStyle->"RefGuideLink"],
  " function or the ",
  StyleBox[":=", "InlineInput"],
  StyleBox[" ",
    FontWeight->"Bold"],
  "operator.  The right-hand side ",
  StyleBox["rhs",
    FontSlant->"Italic"],
  " of a delayed assignment of the form ",
  StyleBox["lhs", "InlineInput"],
  StyleBox[":=", "InlineInput"],
  StyleBox["rhs", "InlineInput"],
  " is not actually evaluated until the left-hand side ",
  Cell[BoxData[
      FormBox[
        StyleBox["lhs",
          FontSlant->"Italic"], TraditionalForm]]],
  " is requested.  Consider the following functions."
}], "Text"],

Cell[BoxData[{
    \(\(Clear[f, g];\)\), "\n", 
    \(\(g[x_]\  = \ Expand[x\^2 - 1];\)\), "\n", 
    \(f[x_]\  := \ Expand[x\^2 - 1]\)}], "Input"],

Cell[TextData[{
  "Both functions are defined using pattern or dummy arguments, but ",
  StyleBox["f", "InlineInput",
    FontWeight->"Bold"],
  " uses delayed and ",
  StyleBox["g", "InlineInput",
    FontWeight->"Bold"],
  " immediate assignment.  Both functions give the same results for many \
arguments"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \({g[y], f[y]}\)], "Input"],

Cell[BoxData[
    \({\(-1\) + y\^2, \(-1\) + y\^2}\)], "Output"]
}, Closed]],

Cell["\<\
but different behavior is observed for more complicated arguments.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \({g[x + y], f[x + y]}\)], "Input"],

Cell[BoxData[
    \({\(-1\) + \((x + y)\)\^2, \(-1\) + x\^2 + 2\ x\ y + y\^2}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The difference arises from the evaluation schemes for the two functions.  \
Although we included ",
  StyleBox["Expand", "InlineInput",
    FontWeight->"Bold"],
  " in the definition of ",
  StyleBox["g", "InlineInput",
    FontWeight->"Bold"],
  ", it has no effect because ",
  StyleBox["rhs",
    FontSlant->"Italic"],
  " is evaluated immediately and is already expanded as much as its \
definition permits.  Thus, ",
  StyleBox["Expand", "InlineInput",
    FontWeight->"Bold"],
  " no longer appears in the definition stored for ",
  StyleBox["g", "InlineInput",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?g\)\)], "Input"],

Cell["Global`g", "Print",
  CellTags->"Info3282055294-7199752"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {GridBox[{
                {\(g[x_] = \(-1\) + x\^2\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnWidths->0.999,
              ColumnAlignments->{Left}]}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      Definition[ "g"],
      Editable->False]], "Print",
  CellTags->"Info3282055294-7199752"]
}, Closed]],

Cell[TextData[{
  "Conversely, when delayed evaluation is employed, the ",
  StyleBox["rhs",
    FontSlant->"Italic"],
  " remains unevaluated until an argument is presented.  Thus, ",
  StyleBox["Expand", "InlineInput",
    FontWeight->"Bold"],
  " remains within the definition of ",
  StyleBox["f", "InlineInput",
    FontWeight->"Bold"],
  " and can act upon the argument."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?f\)\)], "Input"],

Cell["Global`f", "Print",
  CellTags->"Info3282055297-8178872"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {GridBox[{
                {\(f[x_] := Expand[x\^2 - 1]\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnWidths->0.999,
              ColumnAlignments->{Left}]}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      Definition[ "f"],
      Editable->False]], "Print",
  CellTags->"Info3282055297-8178872"]
}, Closed]],

Cell[TextData[{
  "Although the difference between ",
  StyleBox["Set", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["SetDelayed", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontWeight->"Bold"],
  "may",
  StyleBox[" ",
    FontWeight->"Bold"],
  "appear trivial for these simple functions, it is often crucial to the \
proper behavior of a function.  The best choice often depends upon the \
intended behavior of the function, but I find that delayed assignment is \
usually better."
}], "Text"],

Cell[TextData[{
  "The built-in function ",
  Cell[BoxData[
      \(TraditionalForm\`D[f, x]\  = \[PartialD]f\/\[PartialD]x\)]],
  " evaluates partial derivatives.  Write and test a function which evaluates \
",
  Cell[BoxData[
      \(TraditionalForm\`\[PartialD]\((1/f)\)\/\[PartialD]x\)]],
  " for any ",
  StyleBox["f",
    FontSlant->"Italic"],
  " and ",
  StyleBox["x",
    FontSlant->"Italic"],
  ".  Compare delayed with immediate assignment and comment."
}], "Exercise"],

Cell["\<\
Write a function which tests whether a string is a palindrome (same backwards \
as forwards).  A famous long palindrome reads \"Able was I ere I saw Elba\".  \
Your function will need to be case insensitive to respond correctly to this \
input.\
\>", "Exercise"],

Cell[TextData[{
  "Create a function that transforms a pair of Cartesian coordinates ",
  Cell[BoxData[
      \(TraditionalForm\`{x, y}\)]],
  " to polar form ",
  Cell[BoxData[
      \(TraditionalForm\`{r, \[Theta]}\)]],
  " using a quadrant-sensitive form of ArcTan that accepts two arguments.  \
Test your function on a list of points, such as {{1,2},{-2,-3}, \
{0,1},{-3,0}}?  Define another function which performs the inverse \
transformation and test it also."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Nested functions", "Subsection"],

Cell[TextData[{
  "We can even ",
  StyleBox["nest",
    FontSlant->"Italic"],
  " function calls using the ",
  ButtonBox["Nest",
    ButtonStyle->"RefGuideLink"],
  " function.  ",
  StyleBox["Nest[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["f,x,n", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"],
  " produces an expression with ",
  StyleBox["f", "InlineInput"],
  " nested ",
  StyleBox["n", "InlineInput"],
  " times with innermost argument ",
  StyleBox["x", "InlineInput"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[f, x];\)\), "\n", 
    \(Nest[f, x, 3]\)}], "Input"],

Cell[BoxData[
    \(f[f[f[x]]]\)], "Output"]
}, Closed]],

Cell["\<\
For example, the Golden Ratio can be represented as a continued fraction of \
the form \
\>", "Text"],

Cell[BoxData[
    \(1 + 
      1\/\(1 + 1\/\(1 + 1\/\(1 + 1\/\(1 + \[CenterEllipsis]\)\)\)\)\)], \
"InlineInput",
  Evaluatable->False,
  TextAlignment->Center,
  TextJustification->0],

Cell[BoxData[{
    \(\(Clear[f];\)\), "\n", 
    \(f[x_] := 1 + 1\/x\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Nest[f, x, 4]\)], "Input"],

Cell[BoxData[
    \(1 + 1\/\(1 + 1\/\(1 + 1\/\(1 + 1\/x\)\)\)\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Similarly,  ",
  ButtonBox["NestList",
    ButtonStyle->"RefGuideLink"],
  " produces a list of nested functions by order.  "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(NestList[f, 1, 10]\)], "Input"],

Cell[BoxData[
    \({1, 2, 3\/2, 5\/3, 8\/5, 13\/8, 21\/13, 34\/21, 55\/34, 89\/55, 
      144\/89}\)], "Output"]
}, Closed]],

Cell["\<\
Because division and numerical evaluation are listable, the convergence of \
this algorithm can be tested easily.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(N[\ GoldenRatio/NestList[f, 1, 10]\ ]\)], "Input"],

Cell[BoxData[
    \({1.618033988749895`, 0.8090169943749475`, 1.0786893258332633`, 
      0.9708203932499369`, 1.0112712429686843`, 0.9957132238460892`, 
      1.0016400882737444`, 0.9993739342278763`, 1.0002391930453896`, 
      0.999908644733081`, 1.000034895824588`}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Alternatively, ",
  ButtonBox["FixedPoint",
    ButtonStyle->"RefGuideLink"],
  " reports the final value for a convergent iteration"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FixedPoint[f, 1. ]\)], "Input"],

Cell[BoxData[
    \(1.618033988749895`\)], "Output"]
}, Closed]],

Cell["\<\
Note that one should be careful to employ approximate real numbers to avoid \
unlimited symbolic iteration. \
\>", "Text"],

Cell[TextData[{
  "Show that several randomly selected values of ",
  Cell[BoxData[
      \(TraditionalForm\`0 < x < 1\)]],
  " produce the same fixed point of the iteration ",
  Cell[BoxData[
      \(TraditionalForm\`x\_\(n + 1\) = \[Mu]\ \(\(x\_n\)(1 - x\_n)\)\)]],
  " for some ",
  Cell[BoxData[
      \(TraditionalForm\`\[Mu] < 3\)]],
  ".\nDon't start with ",
  Cell[BoxData[
      \(TraditionalForm\`\[Mu]\)]],
  " too close to 3.  What happens if ",
  Cell[BoxData[
      \(TraditionalForm\`\[Mu]\)]],
  " is near 3?"
}], "Exercise"],

Cell[TextData[{
  "The closely related functions ",
  ButtonBox["Fold",
    ButtonStyle->"RefGuideLink"],
  " and ",
  ButtonBox["FoldList",
    ButtonStyle->"RefGuideLink"],
  " evaluate a function of two arguments recursively."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[f, x, a, b, c, d];\)\), "\n", 
    \(FoldList[f, x, {a, b, c, d}]\)}], "Input"],

Cell[BoxData[
    \({x, f[x, a], f[f[x, a], b], f[f[f[x, a], b], c], 
      f[f[f[f[x, a], b], c], d]}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Although ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " provides the usual loop structures, such as ",
  StyleBox["Do", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["While", "InlineInput",
    FontWeight->"Bold"],
  ", functional programming using ",
  StyleBox["Nest", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["Fold", "InlineInput",
    FontWeight->"Bold"],
  " is usually much more efficient in terms of both code and speed."
}], "Text"],

Cell["\<\
Generate 100 terms of the sequence {1,2,4,7,11,\[CenterEllipsis]} using \
FoldList.\
\>", "Exercise"],

Cell[TextData[{
  "Produce a list of partial sums for ",
  Cell[BoxData[
      \(TraditionalForm\`\[Sum]\+\(n = 1\)\%20\((\(-1\))\)\^n\/n\^2\)]],
  " using FoldList.  Compare with the symbolic result for the infinite sum.  \
Use ListPlot to display the convergence of the sequence of partial sums."
}], "Exercise"],

Cell[TextData[{
  "If you know something about Julia sets, you might be interested in jumping \
ahead a little and reading ",
  ButtonBox["JuliaIIM.nb",
    ButtonData:>{"Applications/JuliaIIM.nb", None},
    ButtonStyle->"Hyperlink"],
  StyleBox[" ",
    FontWeight->"Bold",
    FontSlant->"Italic"],
  StyleBox[",",
    FontSlant->"Italic"],
  " which uses ",
  StyleBox["Nest", "InlineInput",
    FontWeight->"Bold"],
  " or ",
  StyleBox["NestList", "InlineInput",
    FontWeight->"Bold"],
  " to create Julia sets.  Very little code is needed to create some \
beautiful fractal images.  Those less familiar with the mathematics of these \
sets should probably wait until ",
  ButtonBox["Julia.nb",
    ButtonData:>{"Applications/Julia.nb", None},
    ButtonStyle->"Hyperlink"],
  " is presented; although that notebook discusses more of the mathematics, \
the ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " programming is a little more involved.  "
}], "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Replacement rules", "Section"],

Cell[CellGroupData[{

Cell["Basic syntax", "Subsection"],

Cell[TextData[{
  "One of the most powerful features of a symbolic manipulator is its ability \
to replace one expression with another using replacement rules defined by the \
user.  A replacement rule is given in the form ",
  StyleBox["OldExpression->NewExpression", "InlineInput"],
  "; a prettier version of the arrow, ",
  Cell[BoxData[
      \(TraditionalForm\` \[Rule] \)]],
  ", is entered as \[EscapeKey]->\[EscapeKey].  Note that ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " will often substitute the pretty version even if you do not use \
\[EscapeKey].  The usual syntax for applying a replacement rule to an \
expression is to use the replacement operator ",
  StyleBox["/.", "InlineInput"],
  " after an expression as follows:\n\t",
  StyleBox["expr/.rule", "InlineInput"],
  StyleBox["\n",
    FontSlant->"Italic"],
  "Alternatively, we could used the function syntax\n\t",
  ButtonBox["ReplaceAll",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[", "InlineInput",
    FontWeight->"Bold"],
  StyleBox["expr,rule", "InlineInput"],
  StyleBox["]", "InlineInput",
    FontWeight->"Bold"]
}], "Text"],

Cell[TextData[{
  "For example, we can a define rule, named ",
  StyleBox["rule1", "InlineInput"],
  ", which replaces the symbol ",
  Cell[BoxData[
      \(TraditionalForm\`a\)]],
  " by its square as follows."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(rule1\  = \ a \[Rule] a\^2\)], "Input"],

Cell[BoxData[
    \(a \[Rule] a\^2\)], "Output"]
}, Closed]],

Cell["The effect of this rule is illustrated below.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(5  a\  /. \ rule1\)], "Input"],

Cell[BoxData[
    \(5\ a\^2\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Exp[a]\  /. rule1\)], "Input"],

Cell[BoxData[
    \(\[ExponentialE]\^\(a\^2\)\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(ReplaceAll[Exp[a], rule1]\)], "Input"],

Cell[BoxData[
    \(\[ExponentialE]\^\(a\^2\)\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Be aware, though, that ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " will apply your rules whether or not they make sense."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(badRule\  = \ Sin[x] \[Rule] 2\)], "Input"],

Cell[BoxData[
    \(Sin[x] \[Rule] 2\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(a\  + \ b\ Sin[x]\^2\  /. badRule\)], "Input"],

Cell[BoxData[
    \(a + 4\ b\)], "Output"]
}, Closed]],

Cell[TextData[{
  "(Actually, there is nothing wrong with ",
  StyleBox["badRule", "InlineInput"],
  " if ",
  Cell[BoxData[
      \(TraditionalForm\`x\)]],
  " is complex.)"
}], "Text"],

Cell[TextData[{
  "Perform the change of variables ",
  Cell[BoxData[
      \(TraditionalForm\`x \[Rule] y\^\(-1\)\)]],
  " on the following expression: ",
  Cell[BoxData[
      \(TraditionalForm\`\(x\^2\) Exp[\(-x\^\(-2\)\)]\)]],
  "."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rules using patterns", "Subsection"],

Cell[TextData[{
  "Let us reconsider ",
  StyleBox["rule1", "InlineInput"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(rule1\)], "Input"],

Cell[BoxData[
    \(a \[Rule] a\^2\)], "Output"]
}, Closed]],

Cell[TextData[{
  "This is fine is we only need to replace ",
  Cell[BoxData[
      \(TraditionalForm\`a\)]],
  " by ",
  Cell[BoxData[
      \(TraditionalForm\`a\^2\)]],
  ", but what if we want to replace ",
  Cell[BoxData[
      \(TraditionalForm\`b\)]],
  " or ",
  Cell[BoxData[
      \(TraditionalForm\`c\)]],
  "?  This can be accomplished by expressing the replacement rule in terms of \
patterns rather than explicit expressions.  The pattern ",
  StyleBox["x_", "InlineInput",
    FontWeight->"Bold"],
  " stands for any expression."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(rule2\  = \ x_\  \[Rule] x\^2\)], "Input"],

Cell[BoxData[
    \(x_ \[Rule] x\^2\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(q\  /. rule2\)], "Input"],

Cell[BoxData[
    \(q\^2\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Sin[q]\  /. rule2\)], "Input"],

Cell[BoxData[
    \(Sin[q]\^2\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(a\ x\^2 + \ b\ x\  + \ c\  /. rule2\)], "Input"],

Cell[BoxData[
    \(\((c + b\ x + a\ x\^2)\)\^2\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Define a rule which expresses exponential functions in terms of hyperbolic \
sine and cosine functions (note: Exp[x]=Sinh[x] +Cosh[x]).   Test your rule \
on the expression ",
  Cell[BoxData[
      \(TraditionalForm\`x\ Exp[\(-y\^2\)]\)]],
  "."
}], "Exercise"],

Cell["\<\
Define a rule which transforms a pair of Cartesian coordinates {x_,y_} into \
polar form {r,\[Theta]} using a quadrant-sensitive form of ArcTan that \
accepts two arguments.  Test your function on a list of points, such as \
{{1,2},{-2,-3}, {0,1},{-3,0}}?  Define another rule which performs the \
inverse transformation and test. \
\>", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Lists of rules", "Subsection"],

Cell["\<\
We can collect a set of rules in the form of a list and assign a name to that \
set.  For example, the following rules can be used to manipulate expressions \
involving logarithmic functions.  The first replaces the log of a product of \
two factors by the sum of their logs.  The second pulls an exponent outside.  \
To completely simplify all possible logarithmic expressions, we would need to \
produce a more complete set of rules using other features of pattern \
matching, but this simple set will suffice to illustrate the principle.\
\>", "Text"],

Cell[BoxData[
    \(\(myRules\  = \ {Log[a_\ b_] \[Rule] Log[a] + Log[b], 
          Log[a_^n_] \[Rule] n\ Log[a]};\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Log[x\ y]\  /. myRules\)], "Input"],

Cell[BoxData[
    \(Log[x] + Log[y]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Log[x\^2]\  /. myRules\)], "Input"],

Cell[BoxData[
    \(2\ Log[x]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Perform the change of variables x\[Rule]Sin[\[Theta]] on the following \
expression: ",
  Cell[BoxData[
      \(TraditionalForm\`\(x\ \[DifferentialD]x\)\/\(1 - x\^2\)\)]],
  ".  Be sure to make the corresponding replacement of the differential in \
the numerator also, and simplify the result."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Repeated replacement", "Subsection"],

Cell["\<\
Since our rules for simplifying logarithms seem to work on the most basic \
examples, let's try something a little more interesting.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Log[x\ y\ z]\  /. myRules\)], "Input"],

Cell[BoxData[
    \(Log[x] + Log[y\ z]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Log[x\ y\ z\^2]\  /. myRules\)], "Input"],

Cell[BoxData[
    \(Log[x] + Log[y\ z\^2]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Log[x\^2\ y\ z\^2]\  /. myRules\)], "Input"],

Cell[BoxData[
    \(Log[x\^2] + Log[y\ z\^2]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Log[x/y] /. myRules\)], "Input"],

Cell[BoxData[
    \(Log[x] + Log[1\/y]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Unfortunately, none of these expressions was expanded completely.  The \
problem is that ",
  StyleBox["ReplaceAll", "InlineInput",
    FontWeight->"Bold"],
  " examines each subexpression, applies the first relevant rule to that \
subexpression, and then moves on to the next subexpression.  However, we \
often encounter situations in which several rules are pertinent to a \
particular subexpression, or another rule pertains to the result of an \
earlier rule acting on a subexpression.  Although one could apply the rules \
several times, it is often more efficient to employ ",
  ButtonBox["ReplaceRepeated",
    ButtonStyle->"RefGuideLink"],
  ", with the ",
  StyleBox["//.", "InlineInput",
    FontWeight->"Bold"],
  " operator notation."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Log[x\ y\ z]\  //. myRules\)], "Input"],

Cell[BoxData[
    \(Log[x] + Log[y] + Log[z]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Log[x\ \(y\^2\) z\^3]\  //. myRules\)], "Input"],

Cell[BoxData[
    \(Log[x] + 2\ Log[y] + 3\ Log[z]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Log[x/y] //. myRules\)], "Input"],

Cell[BoxData[
    \(Log[x] - Log[y]\)], "Output"]
}, Closed]],

Cell[TextData[{
  StyleBox["ReplaceRepeated", "InlineInput",
    FontWeight->"Bold"],
  " applies all pertinent rules to each subexpression until the result stops \
changing.  In this manner we achieve more complete expansion of these more \
complicated expressions."
}], "Text"],

Cell[TextData[{
  "However, one must be careful to ensure that a set of rules is not circular \
or infinitely recursive or else ",
  StyleBox["ReplaceRepeated",
    FontWeight->"Bold"],
  " might produce an endless loop requiring manual abortion."
}], "Caution"],

Cell[CellGroupData[{

Cell[BoxData[
    \(a\  //. x_ \[Rule] x\^2\)], "Input",
  Evaluatable->False],

Cell[BoxData[
    \($Aborted\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Notice that we used the ",
  StyleBox["Cell Properties",
    FontWeight->"Bold"],
  " menu to specify that the input cell above cannot be evaluated.  If it \
were, the evaluation would not terminate and we would have to abort the \
evaluation manually, resulting in the output value ",
  StyleBox["$Aborted", "InlineInput",
    FontWeight->"Bold"],
  " indicated above."
}], "Text"],

Cell[TextData[{
  "Stirling's approximation suggests Log[n!]\[TildeTilde]n Log[n]-n.  Use \
this approximation, together with rules for logarithms, to evaluate  ",
  Cell[BoxData[
      \(TraditionalForm\`Log[\(n!\)\/\(\(m!\) \(\((n - m)\)!\)\)]\)]],
  "."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Delayed rules", "Subsection"],

Cell["\<\
As with assignments, it is sometimes better to delay the application of a \
rule until after an explicit argument is provided.  For example,\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(TrigFactor[Sin[a\/b] + Sin[b\/a]]\)], "Input"],

Cell[BoxData[
    \(2\ Cos[a\/\(2\ b\) - b\/\(2\ a\)]\ Sin[
        a\/\(2\ b\) + b\/\(2\ a\)]\)], "Output"]
}, Closed]],

Cell["\<\
produces an expression whose arguments are not simplified.  One might try to \
simplify those arguments using\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(TrigFactor[
        Sin[a\/b] + Sin[b\/a]] /. {f_[x_] \[Rule] f[Together[x]]}\)], "Input"],

Cell[BoxData[
    \(2\ Cos[a\/\(2\ b\) - b\/\(2\ a\)]\ Sin[
        a\/\(2\ b\) + b\/\(2\ a\)]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "but the rule is applied too early.  The solution is to use a delayed rule, \
indicated by ",
  StyleBox[":>", "InlineInput"],
  " or \[EscapeKey]:>\[EscapeKey], so that ",
  StyleBox["TrigFactor", "InlineInput",
    FontWeight->"Bold"],
  " is performed before the replacement is applied.  Also, note that ",
  StyleBox["Simplify", "InlineInput",
    FontWeight->"Bold"],
  " does not have the desired effect; it would undo the result of ",
  StyleBox["TrigFactor", "InlineInput",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(TrigFactor[
        Sin[a\/b] + Sin[b\/a]] /. {f_[x_] \[RuleDelayed] 
          f[Together[x]]}\)], "Input"],

Cell[BoxData[
    \(2\ Cos[\(a\^2 - b\^2\)\/\(2\ a\ b\)]\ Sin[\(a\^2 + b\^2\)\/\(2\ a\ b\)]\
\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The phenomenon of ",
  StyleBox["beats",
    FontSlant->"Italic"],
  " occurs when two waves of comparable amplitude and slightly different \
frequencies are added together.  Let ",
  Cell[BoxData[
      \(TraditionalForm\`\[Psi] = 
        Cos[\(\[Omega]\_1\) t] + Cos[\(\[Omega]\_2\) t]\)]],
  ".  Use TrigFactor to transform the expression for ",
  Cell[BoxData[
      \(TraditionalForm\`\[Psi]\)]],
  " into the product of two terms and a delayed rule to simplify the \
arguments.  Identify the carrier frequency and the beat (modulation) \
frequency."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions defined as rules", "Subsection"],

Cell["\<\
You might have noticed that the use of patterns in rules can sometimes \
produce overly aggressive transformations.  Let\
\>", "Text"],

Cell[BoxData[
    \(\(expr[x_]\  = \ \(x\ \[DifferentialD]x\)\/\(1 - x\^2\);\)\)], "Input"],

Cell["such that", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(expr[y]\)], "Input"],

Cell[BoxData[
    \(\(y\ DifferentialD[y]\)\/\(1 - y\^2\)\)], "Output"]
}, Closed]],

Cell[TextData[{
  "is a similar expression involving ",
  StyleBox["y",
    FontSlant->"Italic"],
  " instead of ",
  StyleBox["x.  ",
    FontSlant->"Italic"],
  "If we defined our transformation rule in terms of ",
  StyleBox["x",
    FontSlant->"Italic"],
  " "
}], "Text"],

Cell[BoxData[
    \(\(xrule\  = \ {x \[Rule] Sin[\[Theta]], \ \[DifferentialD]x \[Rule] 
            Cos[\[Theta]] \[DifferentialD]\[Theta]};\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(expr[x] /. xrule // Simplify\)], "Input"],

Cell[BoxData[
    \(DifferentialD[\[Theta]]\ Tan[\[Theta]]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "it would have the desired effect on ",
  StyleBox["expr[x]", "InlineInput"],
  StyleBox[",",
    FontSlant->"Italic"],
  " but has no effect on the corresponding expression in terms of ",
  StyleBox["y", "InlineInput"],
  ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(expr[y] /. xrule\)], "Input"],

Cell[BoxData[
    \(\(y\ DifferentialD[y]\)\/\(1 - y\^2\)\)], "Output"]
}, Closed]],

Cell["Hasty use of a pattern ", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(expr[
        y]\  /. \ {x_ \[Rule] Sin[\[Theta]], \ \[DifferentialD]x_ \[Rule] 
          Cos[\[Theta]] \[DifferentialD]\[Theta]}\)], "Input"],

Cell[BoxData[
    \(Sin[\[Theta]]\)], "Output"]
}, Closed]],

Cell["\<\
is also unsuccessful because it replaces the entire expression, as specified \
by the first rule, without recognizing the intended variable.\
\>", "Text"],

Cell[TextData[{
  "The solution is to define a function whose arguments specify the old and \
new variables as patterns that can be used in the transformation rules.  \
Thus, the first argument of ",
  StyleBox["ChangeVariable", "InlineInput",
    FontWeight->"Bold"],
  " specifies the old variable and the second specifies either a new variable \
or a function of a new variable.  Two definitions are given to accommodate \
this degree of flexibility.  "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(ChangeVariable[
          x_, \[Xi]_] = {x \[Rule] \[Xi], \[DifferentialD]x \[Rule] \
\[DifferentialD]\[Xi]};\)\), "\n", 
    \(ChangeVariable[x_, 
        f_[\[Xi]_]] = {x \[Rule] f[\[Xi]], \[DifferentialD]x \[Rule] 
          D[f[\[Xi]], \[Xi]] \[DifferentialD]\[Xi]}\)}], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{\(x \[Rule] f[\[Xi]]\), ",", 
        RowBox[{\(DifferentialD[x]\), "\[Rule]", 
          RowBox[{\(DifferentialD[\[Xi]]\), " ", 
            RowBox[{
              SuperscriptBox["f", "\[Prime]",
                MultilineFunction->None], "[", "\[Xi]", "]"}]}]}]}], 
      "}"}]], "Output"]
}, Closed]],

Cell["\<\
We now check that this function performs both types of transformation \
correctly.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(expr[y] /. ChangeVariable[y, q]\)], "Input"],

Cell[BoxData[
    \(\(q\ DifferentialD[q]\)\/\(1 - q\^2\)\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(expr[y] /. ChangeVariable[y, Sin[\[Theta]]] // Simplify\)], "Input"],

Cell[BoxData[
    \(DifferentialD[\[Theta]]\ Tan[\[Theta]]\)], "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Results given as rules", "Subsection"],

Cell[TextData[{
  "Many functions report their output in the form of replacement rules. For \
example, the function ",
  ButtonBox["Solve",
    ButtonStyle->"RefGuideLink"],
  " returns the solution to an equation or system of equations in the form of \
replacement rules."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(solutions = Solve[a\ x\^2 + b\ x\  + \ c == 0, x]\)], "Input"],

Cell[BoxData[
    \({{x \[Rule] \(\(-b\) - \@\(b\^2 - 4\ a\ c\)\)\/\(2\ a\)}, {x \[Rule] \(\
\(-b\) + \@\(b\^2 - 4\ a\ c\)\)\/\(2\ a\)}}\)], "Output"]
}, Closed]],

Cell["Particular cases are then evaluated using replacement rules.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(x\  /. solutions\) /. {a \[Rule] 1, b \[Rule] 2, 
        c \[Rule] \(-1\)}\)], "Input"],

Cell[BoxData[
    \({1\/2\ \((\(-2\) - 2\ \@2)\), 1\/2\ \((\(-2\) + 2\ \@2)\)}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Compute Exp[x] for the negative solution to the equation ",
  Cell[BoxData[
      \(TraditionalForm\`x\^3 - 2  x\^2 + 1 \[Equal] 0\)]],
  ". "
}], "Exercise"],

Cell[TextData[{
  "Evaluate and simplify the product of the roots of the quadratic equation \
",
  Cell[BoxData[
      \(TraditionalForm\`a\ x\^2 + b\ x + c \[Equal] 0\)]],
  "."
}], "Exercise"],

Cell[TextData[{
  "Gauss's version of the ",
  StyleBox["lensmaker's formula",
    FontSlant->"Italic"],
  " reads ",
  Cell[BoxData[
      \(TraditionalForm\`1\/s\_i + 1\/s\_o \[Equal] 1\/f\)]],
  ".  Use the substitutions ",
  Cell[BoxData[
      \(TraditionalForm\`x\_i = s\_i - f, x\_o = s\_o - f\)]],
  " and solve for ",
  Cell[BoxData[
      \(TraditionalForm\`f\)]],
  " to derive Newton's version ",
  Cell[BoxData[
      \(TraditionalForm\`\(x\_i\) x\_o \[Equal] f\^2\)]],
  ". "
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Options", "Subsection"],

Cell[TextData[{
  "The behavior of many functions can be modified by choosing options.  The \
usual syntax is to call a function ",
  StyleBox["f[args,opts]", "InlineInput"],
  " where ",
  StyleBox["args", "InlineInput"],
  " represents the set of positional arguments and ",
  StyleBox["opts", "InlineInput"],
  " represents a subset of the available options.  Options are specified in \
the form of replacement rules.  The set of options that are available for a \
particular function or object and their default values can be listed using \
the ",
  StyleBox["Options", "InlineInput",
    FontWeight->"Bold"],
  " function.  If an optional argument specifies the particular option or \
list of options, the defaults for those will be returned.  "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Options[Plot]\)], "Input"],

Cell[BoxData[
    \({AspectRatio \[Rule] 1\/GoldenRatio, Axes \[Rule] Automatic, 
      AxesLabel \[Rule] None, AxesOrigin \[Rule] Automatic, 
      AxesStyle \[Rule] Automatic, Background \[Rule] Automatic, 
      ColorOutput \[Rule] Automatic, Compiled \[Rule] True, 
      DefaultColor \[Rule] Automatic, 
      DefaultFont \[RuleDelayed] $DefaultFont, 
      DisplayFunction \[RuleDelayed] $DisplayFunction, Epilog \[Rule] {}, 
      FormatType \[RuleDelayed] $FormatType, Frame \[Rule] False, 
      FrameLabel \[Rule] None, FrameStyle \[Rule] Automatic, 
      FrameTicks \[Rule] Automatic, GridLines \[Rule] None, 
      ImageSize \[Rule] Automatic, MaxBend \[Rule] 10.`, 
      PlotDivision \[Rule] 30.`, PlotLabel \[Rule] None, 
      PlotPoints \[Rule] 25, PlotRange \[Rule] Automatic, 
      PlotRegion \[Rule] Automatic, PlotStyle \[Rule] Automatic, 
      Prolog \[Rule] {}, RotateLabel \[Rule] True, 
      TextStyle \[RuleDelayed] $TextStyle, 
      Ticks \[Rule] Automatic}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Options[Plot, AspectRatio]\)], "Input"],

Cell[BoxData[
    \({AspectRatio \[Rule] 1\/GoldenRatio}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?GoldenRatio\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"GoldenRatio is the golden ratio (1 + Sqrt[5])/2, with \
numerical value approximately equal to 1.61803.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"GoldenRatio",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3282055701-8134972"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Options[Plot, {FormatType, TextStyle}]\)], "Input"],

Cell[BoxData[
    \({FormatType \[RuleDelayed] $FormatType, 
      TextStyle \[RuleDelayed] $TextStyle}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(samplePlot\  = \n\t
        Plot[\ BesselJ[2, x], {x, 0, 100}, \ Frame \[Rule] True, \ 
          FrameLabel \[Rule] {"\<x\>", \ "\<BesselJ\>"}, \ 
          PlotLabel \[Rule] "\<Sample Plot\>", 
          GridLines \[Rule] Automatic];\)\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.00952381 0.245368 0.735772 [
[.02381 -0.0125 -3 -9 ]
[.02381 -0.0125 3 0 ]
[.21429 -0.0125 -6 -9 ]
[.21429 -0.0125 6 0 ]
[.40476 -0.0125 -6 -9 ]
[.40476 -0.0125 6 0 ]
[.59524 -0.0125 -6 -9 ]
[.59524 -0.0125 6 0 ]
[.78571 -0.0125 -6 -9 ]
[.78571 -0.0125 6 0 ]
[.97619 -0.0125 -9 -9 ]
[.97619 -0.0125 9 0 ]
[ 0 0 -0.125 0 ]
[.5 -0.0125 -5 -21.5625 ]
[.5 -0.0125 5 -9 ]
[-0.0125 .09821 -24 -4.5 ]
[-0.0125 .09821 0 4.5 ]
[-0.0125 .24537 -6 -4.5 ]
[-0.0125 .24537 0 4.5 ]
[-0.0125 .39252 -18 -4.5 ]
[-0.0125 .39252 0 4.5 ]
[-0.0125 .53968 -18 -4.5 ]
[-0.0125 .53968 0 4.5 ]
[ 0 0 -0.125 0 ]
[-0.01875 .30902 -36.5625 -23 ]
[-0.01875 .30902 -24 23 ]
[ 0 .61803 .125 0 ]
[ 1 0 .125 0 ]
[.5 .63053 -35 0 ]
[.5 .63053 35 12.5625 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 .5 r
.25 Mabswid
[ ] 0 setdash
.21429 0 m
.21429 .61803 L
s
.40476 0 m
.40476 .61803 L
s
.59524 0 m
.59524 .61803 L
s
.78571 0 m
.78571 .61803 L
s
0 .09821 m
1 .09821 L
s
0 .24537 m
1 .24537 L
s
0 .39252 m
1 .39252 L
s
0 .53968 m
1 .53968 L
s
0 g
.02381 0 m
.02381 .00625 L
s
[(0)] .02381 -0.0125 0 1 Mshowa
.21429 0 m
.21429 .00625 L
s
[(20)] .21429 -0.0125 0 1 Mshowa
.40476 0 m
.40476 .00625 L
s
[(40)] .40476 -0.0125 0 1 Mshowa
.59524 0 m
.59524 .00625 L
s
[(60)] .59524 -0.0125 0 1 Mshowa
.78571 0 m
.78571 .00625 L
s
[(80)] .78571 -0.0125 0 1 Mshowa
.97619 0 m
.97619 .00625 L
s
[(100)] .97619 -0.0125 0 1 Mshowa
.125 Mabswid
.07143 0 m
.07143 .00375 L
s
.11905 0 m
.11905 .00375 L
s
.16667 0 m
.16667 .00375 L
s
.2619 0 m
.2619 .00375 L
s
.30952 0 m
.30952 .00375 L
s
.35714 0 m
.35714 .00375 L
s
.45238 0 m
.45238 .00375 L
s
.5 0 m
.5 .00375 L
s
.54762 0 m
.54762 .00375 L
s
.64286 0 m
.64286 .00375 L
s
.69048 0 m
.69048 .00375 L
s
.7381 0 m
.7381 .00375 L
s
.83333 0 m
.83333 .00375 L
s
.88095 0 m
.88095 .00375 L
s
.92857 0 m
.92857 .00375 L
s
.25 Mabswid
0 0 m
1 0 L
s
gsave
.5 -0.0125 -66 -25.5625 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
69.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 .09821 m
.00625 .09821 L
s
[(-0.2)] -0.0125 .09821 1 0 Mshowa
0 .24537 m
.00625 .24537 L
s
[(0)] -0.0125 .24537 1 0 Mshowa
0 .39252 m
.00625 .39252 L
s
[(0.2)] -0.0125 .39252 1 0 Mshowa
0 .53968 m
.00625 .53968 L
s
[(0.4)] -0.0125 .53968 1 0 Mshowa
.125 Mabswid
0 .135 m
.00375 .135 L
s
0 .17179 m
.00375 .17179 L
s
0 .20858 m
.00375 .20858 L
s
0 .28216 m
.00375 .28216 L
s
0 .31894 m
.00375 .31894 L
s
0 .35573 m
.00375 .35573 L
s
0 .42931 m
.00375 .42931 L
s
0 .4661 m
.00375 .4661 L
s
0 .50289 m
.00375 .50289 L
s
0 .06142 m
.00375 .06142 L
s
0 .02464 m
.00375 .02464 L
s
0 .57647 m
.00375 .57647 L
s
0 .61325 m
.00375 .61325 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
gsave
-0.01875 .30902 -114.281 -10.2813 Mabsadd m
1 1 Mabs scale
currentpoint translate
84 10.2813 translate
90 rotate
-84 -10.2813 translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(BesselJ) show
105.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.02381 .61178 m
.02381 .61803 L
s
.21429 .61178 m
.21429 .61803 L
s
.40476 .61178 m
.40476 .61803 L
s
.59524 .61178 m
.59524 .61803 L
s
.78571 .61178 m
.78571 .61803 L
s
.97619 .61178 m
.97619 .61803 L
s
.125 Mabswid
.07143 .61428 m
.07143 .61803 L
s
.11905 .61428 m
.11905 .61803 L
s
.16667 .61428 m
.16667 .61803 L
s
.2619 .61428 m
.2619 .61803 L
s
.30952 .61428 m
.30952 .61803 L
s
.35714 .61428 m
.35714 .61803 L
s
.45238 .61428 m
.45238 .61803 L
s
.5 .61428 m
.5 .61803 L
s
.54762 .61428 m
.54762 .61803 L
s
.64286 .61428 m
.64286 .61803 L
s
.69048 .61428 m
.69048 .61803 L
s
.7381 .61428 m
.7381 .61803 L
s
.83333 .61428 m
.83333 .61803 L
s
.88095 .61428 m
.88095 .61803 L
s
.92857 .61428 m
.92857 .61803 L
s
.25 Mabswid
0 .61803 m
1 .61803 L
s
.99375 .09821 m
1 .09821 L
s
.99375 .24537 m
1 .24537 L
s
.99375 .39252 m
1 .39252 L
s
.99375 .53968 m
1 .53968 L
s
.125 Mabswid
.99625 .135 m
1 .135 L
s
.99625 .17179 m
1 .17179 L
s
.99625 .20858 m
1 .20858 L
s
.99625 .28216 m
1 .28216 L
s
.99625 .31894 m
1 .31894 L
s
.99625 .35573 m
1 .35573 L
s
.99625 .42931 m
1 .42931 L
s
.99625 .4661 m
1 .4661 L
s
.99625 .50289 m
1 .50289 L
s
.99625 .06142 m
1 .06142 L
s
.99625 .02464 m
1 .02464 L
s
.99625 .57647 m
1 .57647 L
s
.99625 .61325 m
1 .61325 L
s
.25 Mabswid
1 0 m
1 .61803 L
s
0 .24537 m
1 .24537 L
s
gsave
.5 .63053 -96 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Sample) show
105.000 12.813 moveto
(Plot) show
129.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .24537 m
.02499 .24677 L
.02605 .25046 L
.02729 .25751 L
.02846 .26683 L
.03053 .28932 L
.03279 .32118 L
.04262 .5008 L
.0452 .54259 L
.04762 .57359 L
.04884 .58542 L
.05015 .59497 L
.05089 .59885 L
.0516 .60143 L
.05223 .60282 L
.05293 .60332 L
.05418 .60146 L
.05532 .59667 L
.05663 .58749 L
.05786 .57531 L
.06006 .54552 L
.06244 .50269 L
.07312 .23503 L
.07593 .16511 L
.07895 .10089 L
.08041 .07519 L
.08179 .05467 L
.08305 .03952 L
.08374 .0327 L
.08439 .02727 L
.08553 .02006 L
.08678 .01561 L
.08785 .01472 L
.089 .01669 L
.09027 .02237 L
.09092 .02656 L
.09162 .03214 L
.09401 .05854 L
.09666 .09901 L
.09949 .15191 L
.10458 .25802 L
.10956 .35246 L
.11206 .38913 L
.11349 .40547 L
.11482 .41746 L
.11557 .42271 L
.11628 .42669 L
.11691 .42942 L
.11761 .43149 L
.11836 .43264 L
Mistroke
.11916 .43264 L
.11992 .43148 L
.1206 .42946 L
.12192 .42307 L
.12266 .41807 L
.12334 .41261 L
.12593 .38517 L
.13635 .21211 L
.13897 .16907 L
.14144 .13426 L
.14366 .1097 L
.14492 .09911 L
.14608 .0916 L
.14716 .08664 L
.14818 .08384 L
.1493 .08285 L
.1505 .08422 L
.15169 .08804 L
.15295 .0946 L
.15402 .10217 L
.15519 .11238 L
.15763 .13952 L
.16024 .17531 L
.16494 .24882 L
.16762 .29042 L
.17052 .33061 L
.17185 .34642 L
.17326 .36087 L
.17448 .37128 L
.17578 .38011 L
.17705 .38625 L
.1782 .38967 L
.17937 .39099 L
.18047 .39027 L
.18175 .38705 L
.18293 .38185 L
.18423 .37381 L
.18562 .36275 L
.18799 .33849 L
.1905 .30724 L
.19497 .24368 L
.1975 .20782 L
.2002 .17297 L
.2027 .14615 L
.20393 .13547 L
.20506 .12728 L
.20613 .12114 L
.20726 .11634 L
.20839 .11334 L
.20963 .11219 L
Mistroke
.21067 .11294 L
.21178 .11546 L
.21283 .11942 L
.21379 .12435 L
.21613 .14123 L
.21868 .1664 L
.22334 .22412 L
.22866 .29361 L
.23126 .32294 L
.23366 .3446 L
.2348 .35265 L
.23585 .35878 L
.23695 .36366 L
.23816 .36719 L
.23939 .36878 L
.24051 .36845 L
.2418 .36598 L
.24302 .36164 L
.24423 .35553 L
.24556 .34682 L
.24825 .3236 L
.25307 .26879 L
.2584 .20357 L
.2613 .17277 L
.26272 .16014 L
.264 .15034 L
.26512 .14323 L
.26634 .13715 L
.26762 .13265 L
.26883 .13027 L
.26946 .12977 L
.27016 .1298 L
.27089 .1305 L
.27157 .13175 L
.27279 .13542 L
.2741 .14133 L
.27529 .14835 L
.27659 .15767 L
.27894 .17846 L
.28336 .22664 L
.28861 .28696 L
.29148 .3154 L
.2929 .32707 L
.29419 .33617 L
.2954 .34314 L
.29672 .34893 L
.29741 .35116 L
.29805 .35273 L
.29873 .35386 L
.29946 .35446 L
Mistroke
.30074 .35399 L
.30195 .35174 L
.30304 .34827 L
.30422 .34301 L
.30657 .32833 L
.30909 .30715 L
.31366 .25969 L
.31863 .20562 L
.32125 .18082 L
.32405 .15997 L
.32558 .15165 L
.32697 .1462 L
.32764 .14433 L
.32836 .14286 L
.32968 .14172 L
.33033 .14188 L
.33103 .1426 L
.33177 .14396 L
.33247 .14577 L
.3337 .1503 L
.33503 .1569 L
.33773 .17533 L
.34029 .19778 L
.34508 .24705 L
.35005 .29683 L
.35249 .31667 L
.35473 .33071 L
.35587 .33609 L
.35707 .34034 L
.35828 .34307 L
.3596 .34426 L
.3603 .34412 L
.36095 .34352 L
.36169 .34228 L
.36238 .34058 L
.36363 .33631 L
.36498 .32995 L
.36719 .31599 L
.36963 .29639 L
.37456 .24867 L
.37879 .20709 L
.38102 .18784 L
.3834 .17093 L
.38481 .16302 L
.3861 .15745 L
.38739 .15348 L
.3886 .15128 L
.38984 .15061 L
.39098 .15141 L
.39223 .15382 L
Mistroke
.39355 .15805 L
.39466 .16288 L
.39584 .16925 L
.39798 .18359 L
.40283 .2259 L
.40845 .27951 L
.41121 .30242 L
.41243 .31104 L
.41377 .31927 L
.41488 .32501 L
.41608 .32995 L
.41735 .33369 L
.41854 .33578 L
.41986 .33645 L
.42052 .33613 L
.42124 .33528 L
.42253 .33251 L
.42372 .32852 L
.43284 .2636 L
.43783 .2175 L
.44026 .19716 L
.44249 .1814 L
.44492 .16823 L
.44556 .16558 L
.44626 .1631 L
.44753 .15974 L
.44819 .15859 L
.44892 .15781 L
.44968 .15754 L
.4504 .1578 L
.45168 .1595 L
.4524 .16114 L
.45307 .16306 L
.45424 .16742 L
.45533 .17254 L
.45781 .18751 L
.46281 .22793 L
.46812 .27519 L
.47073 .29574 L
.47314 .31131 L
.47448 .31821 L
.47591 .32391 L
.47665 .32618 L
.47734 .32785 L
.4781 .32919 L
.47892 .33003 L
.4796 .33026 L
.48033 .33002 L
.48103 .32933 L
.48167 .32829 L
Mistroke
.48289 .32532 L
.48418 .32072 L
.48555 .31441 L
.4868 .30738 L
.48963 .28786 L
.49476 .24473 L
.49977 .2031 L
.50196 .18806 L
.50435 .17521 L
.5056 .17017 L
.50676 .16668 L
.50787 .16444 L
.50905 .16326 L
.51028 .16337 L
.51144 .16473 L
.51271 .16758 L
.51343 .16979 L
.51409 .17219 L
.5162 .18219 L
.51851 .1966 L
.52318 .23305 L
.52835 .2761 L
.5312 .29653 L
.53259 .30497 L
.53388 .3116 L
.53507 .31666 L
.53639 .32091 L
.5377 .32374 L
.53843 .32465 L
.5391 .32509 L
.54029 .3249 L
.54139 .32363 L
.54265 .3209 L
.54384 .31709 L
.55419 .24852 L
.55926 .20836 L
.56148 .19351 L
.56266 .18677 L
.56392 .18056 L
.56507 .17588 L
.56612 .1725 L
.56717 .17 L
.56817 .16849 L
.56929 .1678 L
.57032 .16811 L
.57145 .16949 L
.57266 .17212 L
.57377 .1756 L
.57497 .1804 L
.57715 .19161 L
Mistroke
.58209 .22617 L
.58737 .26797 L
.58997 .2867 L
.59239 .30131 L
.59457 .31139 L
.59579 .31554 L
.59689 .31831 L
.59811 .32021 L
.59942 .3209 L
.60067 .32023 L
.60181 .31849 L
.60302 .3155 L
.60432 .31104 L
.60667 .3 L
.60947 .28271 L
.61201 .26419 L
.61724 .22381 L
.62011 .20379 L
.6228 .18843 L
.6239 .18341 L
.62506 .17902 L
.62634 .17535 L
.6275 .17308 L
.62879 .17185 L
.62998 .1719 L
.6313 .17329 L
.63203 .17466 L
.6327 .17627 L
.63388 .17992 L
.63496 .18417 L
.63741 .19655 L
.64187 .2264 L
.64707 .26564 L
.64962 .28324 L
.65194 .29695 L
.65439 .30802 L
.65504 .31027 L
.65574 .31238 L
.65703 .31526 L
.65776 .31635 L
.65843 .31697 L
.6592 .31725 L
.65993 .31708 L
.66122 .31575 L
.66195 .31443 L
.66262 .31286 L
.67249 .25886 L
.67792 .21913 L
.68059 .20203 L
.68306 .18926 L
Mistroke
.68426 .1844 L
.68538 .18071 L
.68655 .17783 L
.68784 .17584 L
.68915 .17512 L
.69035 .17563 L
.69166 .17744 L
.69232 .17884 L
.69304 .18073 L
.69532 .18906 L
.69775 .20145 L
.70213 .23013 L
.70705 .26556 L
.70964 .28255 L
.71238 .29747 L
.71354 .30252 L
.71478 .307 L
.71549 .3091 L
.71614 .31071 L
.71741 .31296 L
.71855 .31395 L
.71979 .31392 L
.72096 .31283 L
.72205 .3109 L
.72319 .30797 L
.72442 .30381 L
.72665 .29388 L
.73081 .26888 L
.73532 .23721 L
.74013 .20569 L
.74272 .19253 L
.74394 .18761 L
.74507 .18393 L
.74621 .1811 L
.74744 .17907 L
.74853 .17819 L
.74968 .17822 L
.75091 .17934 L
.75161 .18046 L
.75225 .18178 L
.75348 .18515 L
.75465 .18928 L
.75727 .20143 L
.76013 .21836 L
.76583 .25736 L
.76862 .27571 L
.77119 .29027 L
.77353 .3007 L
.77471 .30471 L
.77601 .30806 L
Mistroke
.77731 .31026 L
.77804 .31096 L
.7787 .31127 L
.77999 .31095 L
.78122 .30953 L
.78234 .30729 L
.78359 .30382 L
.78611 .29384 L
.78845 .2816 L
.79064 .26816 L
.79598 .23207 L
.80089 .2025 L
.80323 .19196 L
.80456 .1874 L
.8058 .18417 L
.80711 .18188 L
.8083 .18084 L
.80896 .1807 L
.80968 .1809 L
.81098 .18218 L
.81229 .18466 L
.81303 .18658 L
.81373 .1887 L
.81664 .20066 L
.81915 .21434 L
.82186 .23136 L
.82676 .26394 L
.82945 .2802 L
.83199 .29296 L
.83343 .29877 L
.83419 .30134 L
.83499 .30366 L
.83567 .3053 L
.83641 .30674 L
.83772 .30837 L
.83841 .30876 L
.83904 .30882 L
.83977 .30854 L
.84046 .30794 L
.84169 .30606 L
.84239 .30455 L
.84303 .30287 L
.84542 .29441 L
.84767 .2837 L
.85278 .25263 L
.85773 .22073 L
.86034 .20608 L
.86178 .19924 L
.86313 .19375 L
.86442 .18951 L
Mistroke
.86509 .18769 L
.86581 .18607 L
.86707 .18405 L
.86824 .18314 L
.86941 .18317 L
.8705 .18403 L
.8717 .18591 L
.87298 .18896 L
.87432 .1932 L
.87577 .19896 L
.8784 .21205 L
.88335 .24237 L
.88801 .27166 L
.89056 .28543 L
.89296 .29574 L
.89395 .29909 L
.895 .30199 L
.89614 .30439 L
.89719 .30583 L
.89835 .30658 L
.89942 .30646 L
.9006 .30543 L
.90186 .30332 L
.91152 .2594 L
.9168 .22619 L
.91939 .21153 L
.92175 .2003 L
.92298 .19551 L
.92432 .19125 L
.92506 .18937 L
.92574 .18792 L
.92639 .18681 L
.92709 .18594 L
.92785 .18534 L
.92868 .18513 L
.92946 .18535 L
.93017 .1859 L
.93082 .18669 L
.93153 .18787 L
.93297 .19121 L
.93432 .19548 L
.93556 .20024 L
.93833 .21353 L
.94333 .24325 L
.94725 .26728 L
.95141 .2886 L
.95358 .29666 L
.95482 .30007 L
.95598 .30244 L
.95704 .30386 L
Mistroke
.95801 .30453 L
.95908 .30455 L
.96021 .30377 L
.96121 .30238 L
.96212 .30059 L
.96317 .29788 L
.96416 .29475 L
.96784 .27883 L
.97619 .22953 L
Mfstroke
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.875},
  ImageMargins->{{2, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00kP3oool01P3OW4P0000000000000M;l0oooo0;md0080000000<0B9cO0?ooo`3oool0]`3o
ool00>l0oooo00L0okmd0000001d_ol0oooo0?noM0000000M;oo0;X0oooo003`0?ooo`050?oo_`1d
04P0B7A804P0M02oool0^`3oool00?40oooo00<0W4P004Q8B000B9`0_03oool00>l0oooo00L0oono
07@00018W=l0oooo0=nLB00007@0_ooo0;X0oooo003^0?ooo`090?oOW01800000000001d_`3oool0
_g@00000000004P0W=oo0;T0oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o
0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo001A
0?ooo`050?noM000000000000000001d_ol0=03oool00`3ookl0M000000000040000000507Boo`3o
ool0oooo0?ooo`3o_g@00`0000000`1d_ol0oooo0?ooo`0a0?ooo`050?oOW018000000000000001d
_ol00`3oool01@3o_g@00000000000000000M;oo03<0oooo00D0_g@0000000000000001d0;ooo`03
0?ooo`050?noM000000000000000001d_ol0<@3oool01@2oM000000000000000000007Bo00@0oooo
00D0okmd000000000000000007Boo`0/0?ooo`030?noM0000000000000<0000000D007Bo0?ooo`3o
ool0oooo0?noM0030000000307Boo`3oool0oooo0080oooo00D0okmd000000000000000007Boo`0C
0?ooo`00D@3oool01P2LB7@0_ooo0?ooo`3ookl0M01d0;oooc@0oooo00<0_g@00000M02oool00P3o
ool00`3OW7@0W=oo0?ooo`020?ooo`0609a8M02oool0oooo0?oo_`1d07@0_ooo=03oool00`2oM000
M;oo0?ooo`030?ooo`0609a8M02oool0oooo0?oo_`1d07@0_ooo<@3oool01P3OW4P007Bo0?ooo`3o
ool0okmd001d_`<0oooo00H0W4Qd0;ooo`3oool0oono07@0M02oool_0?ooo`030?noM000M;l0oooo
0080oooo00<0_gA809cOo`3oool00P3oool01P2LB7@0_ooo0?ooo`3ookl0M01d0;ooobh0oooo00<0
W4Q809cOo`3oool0103oool01P2LB7@0_ooo0?ooo`3ookl0M01d0;ooo`<0oooo00H0W4Qd0;ooo`3o
ool0oono07@0M02ooolB0?ooo`00D03oool00`3o_g@007Bo0?ooo`020?ooo`030=nLB018W=l0oooo
03@0oooo00<0okmd0000B02Lgol01@3oool00`3o_g@007Bo0?ooo`020?ooo`030=nLB018W=l0oooo
03<0oooo00<0_g@007Boo`3oool00P3oool00`3o_g@007Bo0?ooo`020?ooo`030=nLB018W=l0oooo
02l0oooo00<0oono07@0001d_ol00P3oool01P3ookl0M4RL0?ooo`3oool0okmd001d_`<0oooo00<0
gia804RLg`3oool0;P3oool00`3OW4P0B9cO0?ooo`020?ooo`060;md001d_ol0oooo0?ooo`3o_g@0
07Bo0`3oool00`3OW4P0B9cO0?ooo`0]0?ooo`0309a8B02Lgol0oooo00<0oooo00<0okmd001d_`3o
ool00P3oool01P3OW4P0B9cO0?ooo`3oool0okmd001d_`<0oooo00<0gia804RLg`3oool04@3oool0
0500oooo00<0gia804RLg`3oool00P3oool00`3o_g@007Bo0?ooo`0e0?ooo`030?oOW0180000B9cO
00@0oooo00<0gia804RLg`3oool00P3oool00`3o_g@007Bo0?ooo`0_0?ooo`030=nLB00000000000
00<0000000D0M;oo0?ooo`3oool0gia804RLg`030?ooo`030?noM000M;l0oooo02l0oooo00L0okmd
0018B01d07@0_ooo0?ooo`3OW4P007Bo0080oooo00<0gia804RLg`3oool00P3oool00`3o_g@007Bo
0?ooo`0^0?ooo`030?noM000B9`0oooo0080oooo00H0W4Q809cOo`3oool0oooo0=nLB018W=l30?oo
o`030?noM000M;l0oooo02d0oooo00<0W4Q809cOo`3oool00`3oool00`3OW4P0B9cO0?ooo`020?oo
o`060?noM000M;l0oooo0?ooo`3OW4P0B9cO0`3oool00`3o_g@007Bo0?ooo`0A0?ooo`00D03oool0
0`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo03L0oooo00<0W4P004RLg`3oool00P3oool0
0`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo02l0oooo00H0okmd0000M02oool0oooo0;md
001d_ol30?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool0;`3oool00`3ogi`0B4RL
0?noM002000000060018W03oool0oooo0?ooo`3OW4P0B9cO0`3oool00`3o_g@007Bo0?ooo`0_0?oo
o`050=nLB0000000000000000018W=l00`3oool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0
oooo02d0oooo00<0W4Q809cOo`3oool00`3oool00`3OW4P0B9cO0?ooo`020?ooo`060?noM000M;l0
oooo0?ooo`3OW4P0B9cO0`3oool00`3o_g@007Bo0?ooo`0A0?ooo`00D03oool00`3OW4P0B9cO0?oo
o`020?ooo`030?noM000M;l0oooo03P0oooo00H0W4Qd0;ooo`3oool0oooo0=nLB018W=l30?ooo`03
0?noM000M;l0oooo0300oooo00D0gia8001d_`3oool0_g@007Boo`030?ooo`030=nLB018W=l0oooo
0080oooo00<0okmd001d_`3oool0;`3oool00`3ookl0M01d0;ooo`060?ooo`030=nLB018W=l0oooo
0080oooo00<0okmd001d_`3oool0;P3oool00`3ookl0M4RL0?ooo`020?ooo`0609a8M02oool0oooo
0?ooo`3OW4P0B9cO0`3oool00`3o_g@007Bo0?ooo`0]0?ooo`0309a8B02Lgol0oooo00<0oooo00<0
gia804RLg`3oool00P3oool01P3o_g@007Bo0?ooo`3oool0gia804RLg`<0oooo00<0okmd001d_`3o
ool04@3oool00500oooo00<0okmd04RLg`3oool00P3oool00`3OW4P0B9cO0?ooo`0c0?ooo`030=nL
B01d_ol0oooo0080oooo00H0_g@007Boo`3oool0oooo0?noM018W=l30?ooo`030=nLB018W=l0oooo
0340oooo00@0W4P004RLg`2oM000M;oo0`3oool00`3o_g@0B9cO0?ooo`020?ooo`030=nLB018W=l0
oooo0300oooo00<0_g@004RLg`3oool01@3oool00`3o_g@0B9cO0?ooo`020?ooo`030=nLB018W=l0
oooo02h0oooo00<0okmd04RLg`3oool00P3oool01P2oM000M;oo0?ooo`3oool0okmd04RLg`<0oooo
00<0gia804RLg`3oool0;@3oool00`2LB4P0W=oo0?ooo`030?ooo`030?noM018W=l0oooo0080oooo
00H0gia804RLg`3oool0oooo0?noM018W=l30?ooo`030=nLB018W=l0oooo0140oooo001A0?ooo`06
09a8001d_ol0oooo0?oOW01807@0_ooo=03oool01`3o_g@0001d0;ooo`3oool0okmd0000B02Lgol0
0`3oool01P2LB000M;oo0?ooo`3ogi`0B01d0;oooc80oooo00@0omnL04P0B018B000M;oo103oool0
1P2LB000M;oo0?ooo`3ogi`0B01d0;oooc40oooo00<0oono07@00000M;l01P3oool01P2LB000M;oo
0?ooo`3ogi`0B01d0;ooobl0oooo00L0omnL04P0M02oool0oooo0?oOW01807@0_ooo00<0oooo00H0
W4P007Boo`3oool0omnL04P0M02oool[0?ooo`050=nLB000000004RL09a8B02Lgol01@3oool01P2L
B000M;oo0?ooo`3ogi`0B01d0;ooo`<0oooo00H0W4P007Boo`3oool0omnL04P0M02ooolB0?ooo`00
D@3oool01@3ookl0M0000000000004P0W=oo03H0oooo00D0okmd000000000000001809cOo`040?oo
o`050?oo_`1d000000000000B02Lgol0=03oool00`3o_g@0000007Boo`040?ooo`050?oo_`1d0000
00000000B02Lgol0=03oool0102oM000000000000000B9`30?ooo`050?oo_`1d000000000000B02L
gol0<@3oool01@3o_g@000000000000004P0W=oo00@0oooo00D0oono07@000000000001809cOo`0^
0?ooo`030=nLB00004P0W=oo00D0oooo00D0oono07@000000000001809cOo`040?ooo`050?oo_`1d
000000000000B02Lgol04`3oool00?l0oooo/@3oool00?l0oooo/@3oool00?l0oooo/@3oool00?l0
oooo/@3oool00?l0oooo/@3oool00?l0oooo/@3oool00?l0oooo/@3oool004`0ooooo`00001@0000
01D0oooo001<0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000
oooo0?ooo`0=0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool04`3oool004`0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0l0?ooo`030000003oool0oooo03d0oooo
00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`0l0?ooo`030000003oool0oooo03d0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?oo
o`140?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?oo
o`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<00000
0?ooo`3oool0A03oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o
0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?oo
o`030000003oool0oooo01X0oooo00<000000?ooo`3oool09`3oool00`0007l0oooo0?ooo`0m0?oo
o`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?oo
o`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo01T0oooo00<000000?ooo`00
0000:03oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3o
ool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000
003oool0oooo01T0oooo00<000000?ooo`000000:03oool00`0007l0oooo0?ooo`0m0?ooo`030000
O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000
003oool0oooo01<0oooo001<0?ooo`8000006P3oool00`000000oooo0000000X0?ooo`030000O`3o
ool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3o
ool0oooo04<0oooo0`00000E0?ooo`00C03oool00`000000oooo0?ooo`0I0?ooo`030000003oool0
000002P0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0
oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`00
0000oooo0?ooo`0I0?ooo`030000003oool0000002P0oooo00<0001o0?ooo`3oool0?@3oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`00
0000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0I0?ooo`030000003oool0000002P0
oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0
oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo
0?ooo`0I0?ooo`030000003oool0000002P0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo
0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo
0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0I0?ooo`030000003oool0000002P0oooo00<0
001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0
001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0I
0?ooo`030000003oool0000002P0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m
0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C
0?ooo`00C03oool00`000000oooo0?ooo`0I0?ooo`030000003oool0000002P0oooo00<0001o0?oo
o`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?oo
o`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0H0?ooo`05
0000003oool0oooo0?ooo`0000009`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo
03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo
01<0oooo001<0?ooo`030000003oool0oooo01P0oooo00D000000?ooo`3oool0oooo0000000W0?oo
o`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?oo
o`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3o
ool0603oool01@000000oooo0?ooo`3oool0000002L0oooo00<0001o0?ooo`3oool0?@3oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`00
0000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0H0?ooo`050000003oool0oooo0?oo
o`0000009`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?oo
o`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`03
0000003oool0oooo01P0oooo00D000000?ooo`3oool0oooo0000000W0?ooo`030000O`3oool0oooo
03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo
04D0oooo00<000000?ooo`3oool04`3oool004`0oooo0P00000I0?ooo`050000003oool0oooo0?oo
o`0000009`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?oo
o`3oool0?03oool00`0007l0oooo0?ooo`130?ooo`<000005@3oool004`0oooo00<000000?ooo`3o
ool0603oool01@000000oooo0?ooo`3oool0000002L0oooo00<0001o0?ooo`3oool0?@3oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`00
0000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0H0?ooo`050000003oool0oooo0?oo
o`0000009`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?oo
o`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`03
0000003oool0oooo01P0oooo00D000000?ooo`3oool0oooo0000000W0?ooo`030000O`3oool0oooo
03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo
04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3oool0603oool01@000000
oooo0?ooo`3oool0000002L0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?oo
o`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?oo
o`00C03oool00`000000oooo0?ooo`0H0?ooo`050000003oool0oooo0?ooo`0000009`3oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`00
07l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo01P0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0T0?ooo`030000O`3oool0oooo03d0
oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0
oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3oool0603oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00h0oooo0P00000D0?ooo`030000O`3oool0oooo03d0oooo
00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo
00<000000?ooo`3oool04`3oool002l0oooo00D0okmd000000000000000007Boo`050?ooo`030;md
0000000007Bo00<0oooo00<0oono07@000000000100000000`1d_ol0oooo0?ooo`030?ooo`030000
003oool0oooo01P0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0>0?ooo`800000
503oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0
?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo000_0?ooo`0609a8M02o
ool0oooo0?oo_`1d07@0_ooo103oool00`2oM0000000001d_`040?ooo`030;md000007@0_ooo0080
oooo00<0giad09cOo`3oool0103oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00<0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0000000C0?ooo`030000O`3oool0oooo03d0
oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0
oooo00<000000?ooo`3oool04`3oool002h0oooo00<0okmd001d_`3oool00P3oool00`3OW4P0B9cO
0?ooo`0;0?ooo`030?noM00004P0W=oo00P0oooo00<000000?ooo`3oool05`3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo00h0oooo00<000000?ooo`0000004`3oool00`0007l0oooo
0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo
0?ooo`150?ooo`030000003oool0oooo01<0oooo000^0?ooo`030=nLB018W=l0oooo0080oooo00<0
okmd001d_`3oool0303oool00`3ogi`0B00004RLg`070?ooo`030000003oool0oooo01L0oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`0=0?ooo`040000003oool0oooo000001<0oooo
00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo
00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`009@3oool00`2LB00000000000
0003000000050018W03oool0oooo0=nLB018W=l00`3oool00`3o_g@007Bo0?ooo`0>0?ooo`0309a8
0018W=l0oooo00D0oooo0`00000G0000O`030000000007l0001o00<0001o00<000000000O`0007l0
3@0007l010000000001o0000O`00003o0000OaT0001o0`00000E0?ooo`00;P3oool00`3OW4P0B9cO
0?ooo`020?ooo`030?noM000M;l0oooo00l0oooo00<0W4Qd0;ooo`3oool0103oool00`000000oooo
0?ooo`0G0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool03@3oool010000000oooo
0?ooo`00000C0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0
oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool002h0oooo
00<0okmd04RLg`3oool00P3oool00`3OW4P0B9cO0?ooo`0:0?ooo`030=nLB01d_ol0oooo0080oooo
00<0_g@007Boo`3oool0103oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool03@3oool010000000oooo0?ooo`00000C0?ooo`030000O`3oool0oooo03d0
oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0
oooo00<000000?ooo`3oool04`3oool002l0oooo00H0W4P007Boo`3oool0omnL04P0M02oool;0?oo
o`070?noM00007@0_ooo0?ooo`3o_g@0001809cOo`050?ooo`030000003oool0oooo01L0oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`0=0?ooo`040000003oool0oooo000001<0oooo
00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo
00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00;`3oool01@3ookl0M0000000
000004P0W=oo00d0oooo00D0okmd000000000000001809cOo`060?ooo`030000003oool0oooo01L0
oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0=0?ooo`050000003oool0oooo0?oo
o`0000004P3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?oo
o`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`03
0000003oool0oooo01L0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0=0?ooo`05
0000003oool0oooo0?ooo`000000403oool2000000030000O`3oool0oooo03d0oooo00<0001o0?oo
o`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?oo
o`3oool04`3oool004`0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`030?ooo`03
0000003oool0oooo00d0oooo00D000000?ooo`3oool0oooo0000000@0?ooo`030000003oool00000
03l0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo
04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3oool05`3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo00d0oooo00D000000?ooo`3oool0oooo0000000@0?oo
o`030000003oool0000003l0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?oo
o`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3o
ool05`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`0>0?ooo`030000003oool0000003l0oooo00<0001o0?ooo`3o
ool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3o
ool04`3oool004`0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo00`0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0=0?ooo`040000
003oool0oooo000003l0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`03
0000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3oool0
5`3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`0<0?ooo`040000003oool0oooo000003l0oooo00<0001o0?ooo`3o
ool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3o
ool04`3oool004`0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`040?ooo`030000
003oool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0<0?ooo`040000
003oool0oooo00000140oooo0`00000[0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3o
ool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`800000
5`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`0<0?ooo`050000003oool0oooo0000O`000000403oool00`000000
oooo0000000[0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0
oooo0?ooo`130?ooo`<000005@3oool004`0oooo00<000000?ooo`3oool05P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`0<0?ooo`050000003oool0oooo0000O`000000403oool00`000000oooo0000000[0?ooo`03
0000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`03
0000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool0
1@3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0
303oool01@000000oooo0?ooo`0007l0000000l0oooo00@000000?ooo`3oool00000:`3oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`00
0000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00`0
oooo00D000000?ooo`3oool0001o0000000?0?ooo`040000003oool0oooo00000140oooo0`00000G
0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`15
0?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo01H0oooo00<000000?oo
o`3oool01@3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`3oool0303oool01@000000oooo0?ooo`0007l0000000l0oooo00D000000?ooo`3oool0oooo0000
000@0?ooo`030000003oool0000001L0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?oo
o`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<00000
0?ooo`3oool05P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00/0oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`0<0?ooo`050000003oool0oooo0000O`0000003`3o
ool01@000000oooo0?ooo`3oool000000100oooo00<000000?ooo`0000004P3oool00`000000oooo
0?ooo`020?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo
0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo01H0oooo00<0
00000?ooo`3oool01@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<0
00000?ooo`3oool0303oool01@000000oooo0?ooo`0007l0000000l0oooo00D000000?ooo`3oool0
oooo0000000@0?ooo`030000003oool000000140oooo0P0000040?ooo`030000O`3oool0oooo03d0
oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0
oooo001<0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0303oool01P000000oooo
0?ooo`0007l0oooo000000h0oooo00D000000?ooo`3oool0oooo0000000@0?ooo`040000003oool0
oooo00000100oooo00<000000?ooo`0000000`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3o
ool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool0
0`000000oooo0?ooo`0F0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02P3oool0
0`000000oooo0?ooo`040?ooo`030000003oool0oooo00`0oooo00H000000?ooo`3oool0001o0?oo
o`00000>0?ooo`050000003oool0oooo0?ooo`0000003`3oool01@000000oooo0?ooo`3oool00000
0100oooo00<000000?ooo`0000000`3oool00`0007l0oooo0?ooo`0;0?ooo`<00000;`3oool00`00
07l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0
oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00X0
oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0;0?ooo`070000003oool0oooo0?oo
o`0007l0oooo0000000>0?ooo`050000003oool0oooo0?ooo`0000003`3oool01@000000oooo0?oo
o`3oool0000000l0oooo00@000000?ooo`3oool000000`3oool00`0007l0oooo0?ooo`0;0?ooo`03
0000003oool0000002l0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`03
0000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool0
1@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0
2`3oool01`000000oooo0?ooo`3oool0001o0?ooo`0000003P3oool01@000000oooo0?ooo`3oool0
000000l0oooo00D000000?ooo`3oool0oooo0000000?0?ooo`050000003oool0oooo0?ooo`000000
0P3oool00`0007l0oooo0?ooo`0;0?ooo`030000003oool000000140oooo0`00000K0?ooo`030000
O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03o
ool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02P3o
ool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00/0oooo00L000000?ooo`3oool0oooo
0000O`3oool0000000d0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0=0?ooo`05
0000003oool0oooo0?ooo`0000003`3oool01@000000oooo0?ooo`3oool000000080oooo00<0001o
0?ooo`3oool02P3oool01@000000oooo0?ooo`3oool000000100oooo00<000000?ooo`0000004P3o
ool00`000000oooo0?ooo`060?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3o
ool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0F0?ooo`030000003oool0
oooo00D0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`040?ooo`030000003oool0
oooo00/0oooo00L000000?ooo`3oool0oooo0000O`3oool0000000d0oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
303oool01@000000oooo0?ooo`3oool000000080oooo00<0001o0?ooo`3oool02P3oool01@000000
oooo0?ooo`3oool000000100oooo00<000000?ooo`0000004@3oool00`000000oooo000000070?oo
o`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?oo
o`00C03oool2000001L0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0:0?ooo`03
0000003oool0oooo00@0oooo00<000000?ooo`3oool02`3oool01`000000oooo0?ooo`3oool0001o
0?ooo`0000003@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00/0oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`0<0?ooo`050000003oool0oooo0?ooo`0000000P3o
ool00`0007l0oooo0?ooo`0:0?ooo`050000003oool0oooo0?ooo`0000003`3oool010000000oooo
0?ooo`00000A0?ooo`030000003oool0000000L0oooo00<0001o0?ooo`3oool01`3oool300000380
oooo00<0001o0?ooo`3oool0@`3oool3000001D0oooo001<0?ooo`030000003oool0oooo01H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool02`3oool01`000000oooo0?ooo`3oool0001o0?ooo`0000003@3oool00`00
0000oooo0?ooo`030?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`00
0000oooo0?ooo`0<0?ooo`050000003oool0oooo0?ooo`0000000P3oool00`0007l0oooo0?ooo`0:
0?ooo`050000003oool0oooo0?ooo`0000003`3oool010000000oooo0?ooo`00000@0?ooo`040000
003oool0oooo000000L0oooo00<0001o0?ooo`3oool01`3oool00`000000oooo0000000A0?ooo`<0
00007P3oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000
003oool0oooo01H0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`090?ooo`030000
003oool0oooo00@0oooo00<000000?ooo`3oool02`3oool01`000000oooo0?ooo`3oool0001o0?oo
o`0000003@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00/0oooo00<000000?oo
o`3oool00`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?oo
o`0007l0303oool01@000000oooo0?ooo`3oool0000000l0oooo00D000000?ooo`3oool0oooo0000
000?0?ooo`050000003oool0oooo0?ooo`0000001P3oool00`0007l0oooo0?ooo`070?ooo`030000
003oool000000140oooo00<000000?ooo`0000004@3oool3000000X0oooo00<0001o0?ooo`3oool0
A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0F0?ooo`030000003o
ool0oooo00H0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo00/0oooo00L000000?ooo`3oool0oooo0000O`3oool0000000d0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0001o00`0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool03@3oool01@000000oooo0?ooo`3oool0000000H0oooo00<0001o0?ooo`3oool01P3oool01000
0000oooo0?ooo`00000A0?ooo`030000003oool000000140oooo00<000000?ooo`0000002P3oool0
0`0007l0oooo0?ooo`040?ooo`<000004P3oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0
oooo01<0oooo001<0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool01P3oool00`00
0000oooo0?ooo`090?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool02`3oool01`00
0000oooo0?ooo`3oool0001o0?ooo`0000003@3oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0;0?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`0007l0303oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo00/0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0=0?ooo`050000003o
ool0oooo0?ooo`0000001P3oool00`0007l0oooo0?ooo`060?ooo`050000003oool0oooo0?ooo`00
00003`3oool010000000oooo0?ooo`00000A0?ooo`030000003oool0000000X0oooo00<0001o0?oo
o`3oool0103oool00`000000oooo0000000A0?ooo`<000004@3oool2000001L0oooo00<000000?oo
o`3oool04`3oool004`0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`060?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0;0?ooo`07
0000003oool0oooo0?ooo`0007l0oooo0000000<0?ooo`030000003oool0oooo00@0oooo00<00000
0?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00/0oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0000O`0<0?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool02`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00d0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`030?ooo`030000O`3oool0oooo00H0oooo00D00000
0?ooo`3oool0oooo0000000?0?ooo`050000003oool0oooo0?ooo`0000003`3oool01@000000oooo
0?ooo`3oool0000000T0oooo00<0001o0?ooo`3oool00`3oool010000000oooo0?ooo`00000@0?oo
o`80000000<0oooo0000003oool0403oool00`000000oooo0000000F0?ooo`030000003oool0oooo
01<0oooo001<0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool01P3oool00`000000
oooo0?ooo`080?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02P3oool00`000000
oooo0?ooo`020?ooo`030000O`3oool0000000`0oooo00<000000?ooo`3oool0103oool00`000000
oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000
oooo0?ooo`030?ooo`030000003oool0001o00/0oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo00<0oooo00<0001o0?ooo`3oool01P3oool01@000000
oooo0?ooo`3oool0000000l0oooo00D000000?ooo`3oool0oooo0000000?0?ooo`050000003oool0
oooo0?ooo`0000002@3oool00`0007l0oooo0?ooo`030?ooo`040000003oool0oooo00000100oooo
00@000000?ooo`3oool00000403oool010000000oooo0?ooo`00000F0?ooo`030000003oool0oooo
01<0oooo001<0?ooo`030000003oool0oooo01H0oooo00<000000?ooo`3oool01P3oool00`000000
oooo0?ooo`080?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02P3oool00`000000
oooo0?ooo`020?ooo`030000O`3oool0000000`0oooo00<000000?ooo`3oool0103oool00`000000
oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool02`3oool00`000000
oooo0?ooo`030?ooo`030000003oool0001o00/0oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo00<0oooo00<0001o0?ooo`3oool01P3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo00`0oooo00D000000?ooo`3oool0oooo0000000?0?oo
o`050000003oool0oooo0?ooo`0000002@3oool00`0007l0oooo0?ooo`030?ooo`040000003oool0
oooo00000100oooo00D000000?ooo`3oool0oooo0000000?0?ooo`050000003oool0oooo0?ooo`00
00005@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0F0?ooo`030000
003oool0oooo00H0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`060?ooo`030000
003oool0oooo00T0oooo00<000000?ooo`3oool00P3oool0100007l0oooo0?ooo`00000;0?ooo`03
0000003oool0oooo00@0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`040?ooo`03
0000003oool0oooo00X0oooo00<000000?ooo`3oool0103oool00`000000oooo0000O`0;0?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`03
0000003oool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`030?ooo`03
0000O`3oool0oooo00D0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0;0?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo00H0oooo00<0001o0?ooo`3oool00P3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo00d0oooo00D000000?ooo`3oool0oooo0000000?0?ooo`050000003oool0oooo
0?ooo`0000005@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0E0?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`060?oo
o`030000003oool0oooo00T0oooo00<000000?ooo`3oool00P3oool0100007l0oooo0?ooo`00000;
0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0103oool00`000000oooo0000O`0;
0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`03
0?ooo`030000O`3oool0oooo00D0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0;
0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo00H0oooo00<0001o0?ooo`3oool00P3oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo00d0oooo00D000000?ooo`3oool0oooo0000000?0?ooo`050000003o
ool0oooo0?ooo`0000005@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?oo
o`0E0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0203oool00`000000oooo0?oo
o`060?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool00P3oool0100007l0oooo0?oo
o`00000;0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool02P3oool00`000000oooo
0?ooo`040?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0103oool00`000000oooo
0000O`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`030?ooo`030000O`3oool0oooo00D0oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo00H0oooo00<0001o0?ooo`3oool00P3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`0=0?ooo`050000003oool0oooo0?ooo`0000005@3oool00`000000oooo0?ooo`0C0?ooo`00
C03oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0
203oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
0P3oool0100007l0oooo0?ooo`00000;0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool01@3oool00`000000001o0?ooo`0:0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`030?ooo`030000O`3oool0oooo00D0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00H0oooo00<0001o0?ooo`3o
ool00P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool04`3oool00`000000oooo0?ooo`0C0?ooo`00C03oool2000001H0oooo00<000000?ooo`3oool0
1`3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`020?ooo`040000O`3oool0oooo000000/0oooo00<000000?ooo`3o
ool01@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`050?ooo`030000000007l0oooo00T0oooo00<000000?ooo`3o
ool01@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00<0oooo00<0001o0?ooo`3o
ool01@3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool01P3oool00`0007l0oooo0?ooo`020?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`0@0?ooo`<000005@3oool004`0oooo00<000000?ooo`3oool0
5@3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0
1P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo0080oooo00@0001o0?ooo`3oool0
00002`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3o
ool01@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000000O`3o
ool02@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool0103oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3o
ool00P3oool00`0007l0oooo0?ooo`050?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3o
ool0103oool00`000000oooo0?ooo`050?ooo`030000O`3oool0oooo0080oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0180oooo00<000000?ooo`3o
ool04`3oool004`0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo00P0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`090?ooo`030000
003oool0oooo0080oooo00@0001o0?ooo`3oool000002`3oool00`000000oooo0?ooo`050?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo00D0oooo00<000000000O`3oool02@3oool00`000000oooo0?ooo`050?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0:0?ooo`03
0000003oool0oooo00@0oooo00<000000?ooo`3oool00P3oool00`0007l0oooo0?ooo`040?ooo`03
0000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`040?ooo`03
0000003oool0oooo00X0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`050?ooo`03
0000O`3oool0oooo0080oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0:0?ooo`03
0000003oool0oooo00@0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`03
0000003oool0oooo0180oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3oool0
5@3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0
1P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo0080oooo00@0001o0?ooo`3oool0
00002`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3o
ool01@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000000O`3o
ool02@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3o
ool01@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3o
ool00P3oool00`0007l0oooo0?ooo`040?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3o
ool01@3oool00`000000oooo0?ooo`050?ooo`050000O`3oool0oooo0?ooo`0000001P3oool00`00
0000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool02`3oool00`00
0000oooo0?ooo`030?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool04`3oool001<0
oooo00<0okmd07Boo`3oool01@3oool00`2oM7@0_ooo0?ooo`0^0?ooo`030000003oool0oooo01D0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`020?ooo`040000O`3oool0oooo0000
00X0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
00D0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`050?ooo`030000000007l0oooo
00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
00D0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo
0080oooo00<0001o0?ooo`3oool0103oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo
00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo
00D0oooo00<000000?ooo`3oool01@3oool01@0007l0oooo0?ooo`3oool0000000H0oooo00<00000
0?ooo`3oool02P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo00<00000
0?ooo`3oool01@3oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo01<0oooo000C0?oo
o`030?noM0000000000000D0000000<0001d0;ooo`3oool0;P3oool00`000000oooo0?ooo`0E0?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`060?oo
o`030000003oool0oooo00T0oooo00<000000?ooo`3oool00P3oool0100007l0oooo0?ooo`00000:
0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000001o0?ooo`09
0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`02
0?ooo`030000O`3oool0oooo00@0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`09
0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo00D0oooo00D0001o0?ooo`3oool0oooo000000070?ooo`030000003o
ool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`090?ooo`030000003o
ool0oooo00D0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0C0?ooo`004`3oool0
1P3o_g@0M;oo0?ooo`3oool0_gAd0;ooo`80oooo00<0_gAd0;ooo`3oool0;P3oool00`000000oooo
0?ooo`0E0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0203oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool00`3oool0100007l0oooo
0?ooo`00000:0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02@3oool00`000000
oooo0?ooo`050?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01P3oool00`000000
001o0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`000000
oooo0?ooo`060?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01@3oool00`000000
oooo0?ooo`020?ooo`030000O`3oool0oooo00@0oooo00<000000?ooo`3oool01@3oool00`000000
oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`000000
oooo0?ooo`050?ooo`030000003oool0oooo00D0oooo00D0001o0?ooo`3oool0oooo000000070?oo
o`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`090?oo
o`030000003oool0oooo00D0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0C0?oo
o`004`3oool01P3o_g@0M;oo0?ooo`3oool0_gAd0;ooo`80oooo00<0_gAd0;ooo`3oool0;P3oool0
0`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0203oool0
0`000000oooo0?ooo`060?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool00`3oool0
100007l0oooo0?ooo`00000:0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02@3o
ool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01P3o
ool00`000000001o0?ooo`080?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02@3o
ool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01@3o
ool00`000000oooo0?ooo`020?ooo`030000O`3oool0oooo00@0oooo00<000000?ooo`3oool01@3o
ool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0203o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00@0oooo00D0001o0?ooo`3oool0oooo
000000070?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo01<0oooo000C0?ooo`060?noM01d_ol0oooo0?ooo`2oM7@0
_ooo0P3oool00`2oM7@0_ooo0?ooo`0^0?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3o
ool0203oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3o
ool01`3oool00`000000oooo0?ooo`030?ooo`040000O`3oool0oooo000000X0oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00H0oooo00<000000?oo
o`3oool0203oool00`000000oooo0?ooo`060?ooo`030000000007l0oooo00P0oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00H0oooo00<000000?oo
o`3oool0203oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0080oooo00<0001o0?oo
o`3oool0103oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00P0oooo00<000000?oo
o`3oool01P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool0103oool01@0007l0oooo0?ooo`3oool0000000L0oooo00<000000?ooo`3oool02@3oool0
0`000000oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool0
0`000000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool04`3oool0
01<0oooo00X0omnL04Qd_`3oool0omnL04P0001d_ol0oooo0?oo_`1dB9`0gooo903oool01@3o_g@0
0000000000000000M;oo00H0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`080?oo
o`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`070?oo
o`030000003oool0oooo00<0oooo00@0001o0?ooo`3oool000002P3oool00`000000oooo0?ooo`06
0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`07
0?ooo`030000003oool0oooo00H0oooo00<000000000O`3oool0203oool00`000000oooo0?ooo`06
0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`08
0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool00P3oool00`0007l0oooo0?ooo`03
0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`06
0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`04
0?ooo`050000O`3oool0oooo0?ooo`0000001`3oool00`000000oooo0?ooo`090?ooo`030000003o
ool0oooo00H0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003o
ool0oooo00P0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0C0?ooo`00503oool0
203OW4P000000018W03Oool0_g@00000000004P0W=oo9@3oool01P2LB7@0_ooo0?ooo`3ookl0M01d
0;ooo`D0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`080?ooo`030000003oool0
oooo00L0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0
oooo00<0oooo00@0001o0?ooo`3oool000002P3oool00`000000oooo0?ooo`060?ooo`030000003o
ool0oooo00P0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003o
ool0oooo00H0oooo00<000000000O`3oool0203oool00`000000oooo0?ooo`060?ooo`030000003o
ool0oooo00P0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003o
ool0oooo00L0oooo00D000000?ooo`3oool0oooo0000O`050?ooo`030000003oool0oooo00L0oooo
00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00P0oooo
00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`040?ooo`050000O`3oool0oooo0?ooo`00
0000203oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3o
ool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3o
ool01P3oool00`000000oooo0?ooo`0C0?ooo`00@03oool00`3o_g@007Bo0?ooo`020?ooo`030=nL
B018W=l0oooo00@0oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`080?ooo`030000
003oool0oooo00H0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo00<0oooo00D0001o0?ooo`3oool0oooo000000090?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0
oooo00<000000?ooo`3oool01`3oool01@000000oooo0?ooo`3oool0001o00D0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00@0oooo00@0001o0?oo
o`3oool000002@3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`0C0?ooo`00@03oool00`3OW4P0B9cO0?ooo`020?oo
o`030?noM000M;l0oooo00@0ooooo`00001@000001D0oooo00100?ooo`030=nLB018W=l0oooo0080
oooo00<0okmd001d_`3oool0103oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00d0
oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00P0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`030?ooo`050000O`3oool0oooo0?oo
o`0000002@3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00D000000?oo
o`3oool0oooo0000O`050?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool0
0`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0203oool0
0`000000oooo0?ooo`030?ooo`040000O`3oool0oooo000000T0oooo00<000000?ooo`3oool01`3o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3o
ool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool04`3o
ool001H0oooo00D0okmd000000000000000004RLg`0U0?ooo`030=nLB018W=l0oooo0080oooo00<0
okmd001d_`3oool0103oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00`0oooo00<0
00000?ooo`3oool0203oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00P0oooo00<0
00000?ooo`3oool01`3oool00`000000oooo0?ooo`030?ooo`050000O`3oool0oooo0?ooo`000000
2@3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0
1`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0
1`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0
1`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00D000000?ooo`3oool0
oooo0000O`050?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01P3oool00`000000
oooo0?ooo`080?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0203oool00`000000
oooo0?ooo`030?ooo`040000O`3oool0oooo000000T0oooo00<000000?ooo`3oool01`3oool00`00
0000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool00`00
0000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool04`3oool001D0
oooo00L0okmd001d_`3ooml0W7BL0=ooo`3OW4P0B9cO02@0oooo00<0okmd04RLg`3oool00P3oool0
0`3OW4P0B9cO0?ooo`040?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0303oool0
0`000000oooo0?ooo`080?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0203oool0
0`000000oooo0?ooo`070?ooo`030000003oool0oooo00<0oooo00D0001o0?ooo`3oool0oooo0000
00080?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?oo
o`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?oo
o`060?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?oo
o`070?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool01@000000oooo0?oo
o`3oool0001o00@0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`060?ooo`030000
003oool0oooo00P0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`090?ooo`030000
003oool0oooo00<0oooo00@0001o0?ooo`3oool000002@3oool00`000000oooo0?ooo`070?ooo`03
0000003oool0oooo00L0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`080?ooo`03
0000003oool0oooo00H0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0C0?ooo`00
5@3oool0203OW7@0W=oo0?oog`2LM9`0gooo0?oog`2LB7@0_ooo903oool01P2LB000M;oo0?ooo`3o
gi`0B01d0;ooo`D0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0<0?ooo`030000
003oool0oooo00P0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`080?ooo`030000
003oool0oooo00L0oooo00<000000?ooo`3oool00`3oool01@0007l0oooo0?ooo`3oool0000000P0
oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0
oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00T0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`080?ooo`050000003oool0oooo0?oo
o`0007l0103oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?oo
o`3oool0203oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00T0oooo00<000000?oo
o`3oool00`3oool0100007l0oooo0?ooo`00000:0?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00T0oooo00<00000
0?ooo`3oool01@3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo01<0oooo000E0?oo
o`080=nLM02Lgol0oooO09adW03Oool0oooo0;mdM02ooolT0?ooo`050?oo_`1d000000000000B02L
gol01P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3o
ool0203oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3o
ool01`3oool00`000000oooo0?ooo`030?ooo`050000O`3oool0oooo0?ooo`000000203oool00`00
0000oooo0?ooo`080?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool01`3oool00`00
0000oooo0?ooo`060?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01P3oool00`00
0000oooo0?ooo`080?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02@3oool00`00
0000oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo00@000000?ooo`3oool0001o103oool0
0`000000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool0
0`000000oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool00`3oool0
0`0007l0oooo0000000;0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0203oool0
0`000000oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool0
0`000000oooo0?ooo`070?ooo`030000003oool0oooo01<0oooo000E0?ooo`080?oOW018B9`0gooO
09adW03Oool0oooo0;nLW03Oool_0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0
303oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0
203oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00@0oooo00D0001o0?ooo`3oool0
oooo000000080?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01`3oool00`000000
oooo0?ooo`080?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0203oool00`000000
oooo0?ooo`060?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01P3oool00`000000
oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool010000000
oooo0?ooo`0007l40?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`00
0000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`00
0000oooo0?ooo`030?ooo`030000O`3oool0000000/0oooo00<000000?ooo`3oool01@3oool00`00
0000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`00
0000oooo0?ooo`050?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool04`3oool001H0
oooo00H0omnL04P00000B9`0gooo0?noM01d_ol`0?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool0303oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool0203oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00@0oooo00D0001o
0?ooo`3oool0oooo000000080?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool01`3o
ool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0203o
ool00`0007l000000?ooo`060?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3o
ool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3o
ool010000000oooo0?ooo`0007l40?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
1@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`030?ooo`030000O`3oool0000000/0oooo00<000000?ooo`3oool0
1@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0
4`3oool004`0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0<0?ooo`030000003o
ool0oooo00P0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`080?ooo`030000003o
ool0oooo00H0oooo00<000000?ooo`3oool0103oool01@0007l0oooo0?ooo`3oool0000000P0oooo
00<000000?ooo`3oool0203oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00P0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`080?ooo`030000O`000000oooo00H0oooo
00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`090?ooo`040000003oool0oooo0000O`@0
oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00X0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00<0
oooo00<0001o0?ooo`0000002`3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00T0
oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0203oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`040?ooo`050000O`3oool0oooo0?ooo`000000203oool00`000000oooo0?ooo`080?ooo`03
0000003oool0oooo00H0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`050?ooo`03
0000003oool0oooo00P0oooo00<0001o0000003oool01P3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`050?ooo`03
0000003oool0oooo00T0oooo00@000000?ooo`3oool0001o103oool00`000000oooo0?ooo`090?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`050?oo
o`030000003oool0oooo00T0oooo00<000000?ooo`3oool00`3oool00`0007l0oooo0000000;0?oo
o`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`040?oo
o`030000003oool0oooo00X0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`080?oo
o`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3o
ool0303oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00@0oooo00D0001o0?ooo`3o
ool0oooo000000080?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`00
0000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0203oool00`00
07l000000?ooo`050?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool01@3oool00`00
0000oooo0?ooo`090?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool02P3oool01000
0000oooo0?ooo`0007l30?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0103oool0
0`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool02P3oool0
0`000000oooo0?ooo`030?ooo`030000O`000000oooo00`0oooo00<000000?ooo`3oool0103oool0
0`000000oooo0?ooo`090?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool02P3oool0
0`000000oooo0?ooo`040?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool04`3oool0
01D0oooo00P0oooO09a8000004P0W=oo0?oo_`1d0000001d0;ooobl0oooo00<000000?ooo`3oool0
1P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0
1P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0
103oool00`0007l0oooo0?ooo`020?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0
2@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
1@3oool00`000000oooo0?ooo`080?ooo`030000O`000000oooo00D0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0
103oool00`000000oooo0?ooo`0:0?ooo`040000003oool0oooo0000O`<0oooo00<000000?ooo`3o
ool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00<0oooo00<0001o0000003o
ool0303oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool0103oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3o
ool0203oool00`000000oooo0?ooo`0C0?ooo`005@3oool01`3o_g@0B9cO0?oOW01dW=l0oooo0?oo
g`2LW;l0<03oool2000000P0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`090?oo
o`030000003oool0oooo00H0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`050?oo
o`030000003oool0oooo00@0oooo00<0001o0?ooo`3oool00P3oool00`000000oooo0?ooo`050?oo
o`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`090?oo
o`030000003oool0oooo00D0oooo00<000000?ooo`3oool0203oool00`0007l000000?ooo`050?oo
o`030000003oool0oooo00X0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0:0?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool02`3oool00`000000oooo0000O`030?oo
o`030000003oool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0;0?oo
o`030000003oool0oooo00<0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`030?oo
o`030000O`000000oooo00`0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0;0?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`030?oo
o`030000003oool0oooo00H0oooo0`00000E0?ooo`005@3oool0103OW7@0W=oo0?oo_`1dM;l20?oo
o`030;mdM02oool0oooo02h0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0:0?oo
o`030000003oool0oooo00T0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`090?oo
o`030000003oool0oooo00D0oooo00<000000?ooo`3oool0103oool00`0007l0oooo0?ooo`020?oo
o`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`050?oo
o`030000003oool0oooo00T0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`090?oo
o`030000O`000000oooo00D0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`040?oo
o`030000003oool0oooo00X0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0;0?oo
o`030000003oool0001o00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?oo
o`030000003oool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0;0?oo
o`030000003oool0oooo0080oooo00<0001o0000003oool0303oool00`000000oooo0?ooo`030?oo
o`030000003oool0oooo00/0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0<0?oo
o`030000003oool0oooo00<0oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0C0?oo
o`005@3oool0203OW7@0W=oo0?oog`2LM9`0gooo0?ooo`2oM7@0_ooo;`3oool00`000000oooo0?oo
o`070?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?oo
o`060?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?oo
o`040?ooo`030000O`3oool0oooo0080oooo00<000000?ooo`3oool01@3oool00`000000oooo0?oo
o`090?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo00T0oooo00<0001o0000003oool01@3oool00`000000oooo0?oo
o`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo00/0oooo00<000000?ooo`0007l00`3oool00`000000oooo0?oo
o`0;0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0303oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`0<0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?oo
o`020?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`090?ooo`030000003oool0oooo01<0oooo000E0?ooo`080?oOW01dW=l0oooo0;mdB02Lgol0oono
07A8W03Oool_0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool02P3oool00`000000
oooo0?ooo`090?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02@3oool00`000000
oooo0?ooo`050?ooo`030000003oool0oooo00@0oooo00<0001o0?ooo`3oool00P3oool00`000000
oooo0?ooo`050?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000
oooo0?ooo`0:0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02@3oool00`0007l0
00000?ooo`050?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000
oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000
oooo0000O`030?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo00d0oooo00D000000?ooo`3oool0oooo0000000>0?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo00T0oooo00<000000?ooo`3oool04`3oool001D0oooo00L0gia80000001d
_ol0omnL04P0000004P0W=oo0300oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0:
0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`09
0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool01@3oool00`0007l0oooo0?ooo`02
0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`09
0?ooo`030000O`3oool0000000D0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0<
0?ooo`030000003oool0001o0080oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo00d0oooo00D000000?ooo`3oool0oooo0000000>0?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool03@3oool01@000000oooo0?ooo`3oool0000000l0oooo
00D000000?ooo`3oool0oooo0000000>0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo00X0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`060?ooo`030000
003oool0oooo00T0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`050?ooo`030000
O`3oool0oooo0080oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0:0?ooo`030000
003oool0oooo00@0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo00T0oooo00<0001o0?ooo`000000103oool00`000000oooo0?ooo`0<0?ooo`030000
003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo00d0oooo00D000000000O`3oool0oooo0000000>0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool03@3oool01@000000oooo0?ooo`3oool0000000h0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`0=0?ooo`050000003oool0oooo0?ooo`0000003`3oool0
10000000oooo0?ooo`00000@0?ooo`050000003oool0oooo0?ooo`0000002`3oool00`000000oooo
0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00X0oooo00<0
00000?ooo`3oool02@3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo00X0oooo00<0
00000?ooo`3oool0103oool00`000000oooo0?ooo`050?ooo`030000O`3oool0oooo0080oooo00<0
00000?ooo`3oool0103oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<0
00000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00T0oooo00<0
001o0?ooo`000000103oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool0303oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00d0oooo00D0
00000000O`3oool0oooo0000000>0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
3@3oool01@000000oooo0?ooo`3oool0000000l0oooo00D000000?ooo`3oool000000000O`0?0?oo
o`040000003oool0oooo00000100oooo00@000000?ooo`3oool000004@3oool00`000000oooo0000
000<0?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool02P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00D0oooo00<00000
0?ooo`3oool02P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00D0oooo00<0001o
0?ooo`3oool00P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00/0oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<00000
0?ooo`3oool02@3oool00`0007l0oooo000000040?ooo`030000003oool0oooo00`0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`0=0?ooo`050000003oool0oooo0?ooo`0000003`3o
ool01@000000001o0?ooo`3oool0000000h0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`0=0?ooo`050000003oool0oooo0?ooo`0000003`3oool01@000000oooo0?ooo`000000001o
00l0oooo00@000000?ooo`3oool000004@3oool00`000000oooo0000000A0?ooo`030000003oool0
000000`0oooo00<000000?ooo`3oool04`3oool001D0oooo00P0oooO09a8000004P0W=oo0?oo_`1d
0000001d0;ooobl0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0:0?ooo`030000
003oool0oooo00T0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0:0?ooo`030000
003oool0oooo00@0oooo00<000000?ooo`3oool01@3oool00`0007l0oooo0?ooo`020?ooo`030000
003oool0oooo00@0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`090?ooo`030000
O`3oool0000000@0oooo00<000000?ooo`3oool03@3oool01@000000oooo0?ooo`3oool0000000l0
oooo00D000000?ooo`3oool0oooo0000000?0?ooo`050000000007l0oooo0?ooo`0000003`3oool0
10000000oooo0?ooo`00000@0?ooo`050000003oool0oooo0?ooo`0000003`3oool01@000000oooo
0?ooo`000000001o0100oooo00<000000?ooo`0000004@3oool200000180oooo0P00000=0?ooo`03
0000003oool0oooo01<0oooo000E0?ooo`070?noM018W=l0omnL07BLg`3oool0oooO09bL_`0`0?oo
o`030000003oool0oooo00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0:0?oo
o`030000003oool0oooo00@0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`040?oo
o`030000003oool0oooo00D0oooo00<0001o0?ooo`3oool00P3oool00`000000oooo0?ooo`040?oo
o`030000003oool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0<0?oo
o`050000003oool0oooo0?ooo`000000303oool0100007l0oooo0?ooo`0000030?ooo`030000003o
ool0oooo00d0oooo00D000000?ooo`3oool0oooo0000000?0?ooo`050000003oool0oooo0?ooo`00
00003`3oool01@000000001o0?ooo`3oool0000000l0oooo00@000000?ooo`3oool00000403oool2
000000030?ooo`000000oooo0100oooo00@000000?ooo`000000001o403oool2000001<0oooo00<0
00000?ooo`3oool07`3oool00`000000oooo0?ooo`0C0?ooo`005@3oool0103OW7@0W=oo0?oo_`1d
M;l20?ooo`030;mdM02oool0oooo02h0oooo00<000000?ooo`3oool0203oool00`000000oooo0?oo
o`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0103oool00`000000oooo0?oo
o`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool01@3oool00`0007l0oooo0?oo
o`030?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?oo
o`030?ooo`030000003oool0oooo00`0oooo00D000000?ooo`3oool0oooo0000000<0?ooo`040000
O`3oool0oooo000000<0oooo00<000000?ooo`3oool03@3oool01@000000oooo0?ooo`3oool00000
00l0oooo00@000000?ooo`3oool00000403oool01@000000001o0?ooo`3oool000000100oooo00<0
00000?ooo`0000004@3oool00`000000oooo0000000A0?ooo`<0000000<0001o0?ooo`3oool0A@3o
ool00`000000oooo0?ooo`0C0?ooo`005@3oool0203OW7@0W=oo0?oog`2LM9`0gooo0?ooo`2oM7@0
_ooo;`3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`050?ooo`030000O`3oool0oooo00<0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3o
ool0303oool01@000000oooo0?ooo`3oool0000000`0oooo00@0001o0?ooo`3oool000000`3oool0
0`000000oooo0?ooo`0=0?ooo`050000003oool0oooo0?ooo`0000003`3oool010000000oooo0?oo
o`00000@0?ooo`040000000007l0oooo00000140oooo00<000000?ooo`0000004@3oool3000001@0
oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`005@3oool0203ogi`0M9cO
0?ooo`2oM4P0W=oo0?oo_`1dB9`0gooo;`3oool00`000000oooo0?ooo`080?ooo`030000003oool0
oooo00T0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`040?ooo`030000003oool0
oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`050?ooo`030000O`3oool0
oooo00<0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool0303oool01@000000oooo0?ooo`3oool0000000`0oooo00@0
001o0?ooo`3oool000000`3oool00`000000oooo0?ooo`0=0?ooo`040000003oool0oooo00000100
oooo00@000000?ooo`3oool000004@3oool00`000000oooo0000000A0?ooo`<00000:03oool00`00
07l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo000E0?ooo`070=nLB0000000M;oo0?oO
W0180000001809cOo`0`0?ooo`8000002@3oool00`000000oooo0?ooo`090?ooo`030000003oool0
oooo00X0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0;0?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool01@3oool00`0007l0oooo0?ooo`030?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo00d0oooo00D000000?ooo`3oool0oooo0000000<0?ooo`040000O`3oool0oooo00000080oooo
00<000000?ooo`3oool03P3oool010000000oooo0?ooo`00000A0?ooo`030000003oool000000140
oooo00<0001o000000000000?03oool00`0007l0oooo0?ooo`130?ooo`<000005@3oool004`0oooo
00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo
00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool01@3oool00`0007l0oooo0?ooo`030?ooo`030000003oool0oooo00<0oooo
00<000000?ooo`3oool0303oool01@000000oooo0?ooo`3oool0000000l0oooo00D000000?ooo`3o
ool0oooo0000000<0?ooo`040000O`3oool0oooo00000080oooo00<000000?ooo`3oool03`3oool0
0`000000oooo0000000A0?ooo`030000003oool000000140oooo00<0001o0?ooo`3oool0?03oool0
0`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo
00@0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
00D0oooo00<0001o0?ooo`3oool00`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
00`0oooo00D000000?ooo`3oool0oooo0000000?0?ooo`050000003oool0oooo0?ooo`000000303o
ool0100007l0oooo0?ooo`0000020?ooo`030000003oool0oooo00l0oooo00<000000?ooo`000000
4P3oool00`000000oooo0?ooo`0@0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0
A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`080?ooo`030000003o
ool0oooo00T0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo00/0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`050?ooo`030000O`3o
ool0oooo00<0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0<0?ooo`050000003o
ool0oooo0?ooo`0000003`3oool01@000000oooo0?ooo`3oool0000000`0oooo00L0001o0?ooo`3o
ool0oooo0000003oool000000140oooo0`00000U0?ooo`030000O`3oool0oooo03`0oooo00<0001o
0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`005P3oool01@3o_g@00000000000000000
B9cO0340oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`090?ooo`030000003oool0
oooo00X0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0;0?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool01@3oool00`0007l0oooo0?ooo`030?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool0303oool01@000000oooo0?ooo`3oool0000000l0oooo00@0
00000?ooo`3oool000003@3oool01`0007l0oooo0?ooo`3oool000000?ooo`000000>@3oool00`00
07l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool001D0
oooo00L0okmd001d_`3ooml0W7BL0=ooo`3OW4P0B9cO0300oooo00<000000?ooo`3oool0203oool0
0`000000oooo0?ooo`090?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool0103oool0
0`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool01@3oool0
0`0007l0oooo0?ooo`040?ooo`050000003oool0oooo0?ooo`0000003`3oool01@000000oooo0?oo
o`3oool000000100oooo00<000000?ooo`0000003@3oool0100007l0oooo0?ooo`3oool2000003X0
oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0
oooo000E0?ooo`080=nLM02Lgol0oooO09adW03Oool0oooO09a8M02oool_0?ooo`030000003oool0
oooo00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0
oooo00@0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo00D0oooo00<0001o0?ooo`3oool0103oool01@000000oooo0?ooo`3oool0000000l0oooo00@0
00000?ooo`3oool000004@3oool00`000000oooo0000000=0?ooo`030000O`3oool0oooo03d0oooo
00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo
000E0?ooo`080=nLM02Lgol0oooO09adW03Oool0oooo0;mdM02oool_0?ooo`030000003oool0oooo
00P0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo
00@0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
00D0oooo00<0001o0?ooo`3oool0103oool01@000000oooo0?ooo`3oool0000000l0oooo00@00000
0?ooo`3oool000004@3oool00`000000oooo0000000=0?ooo`030000O`3oool0oooo03d0oooo00<0
001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo000E
0?ooo`080?oOW018B9`0gooO09adW03Oool0oooo0;nLW03Oool_0?ooo`030000003oool0oooo00P0
oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0
oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00D0
oooo00<0001o0?ooo`3oool0103oool01@000000oooo0?ooo`3oool0000000l0oooo00@000000?oo
o`3oool000004@3oool2000000h0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l
0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool001H0oooo00H0omnL04P0
0000B9`0gooo0?noM01d_ol`0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool02@3o
ool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool02`3o
ool00`000000oooo0?ooo`030?ooo`030000003oool0oooo00D0oooo00<0001o0?ooo`3oool0103o
ool01@000000oooo0?ooo`3oool0000000l0oooo00@000000?ooo`3oool000008@3oool00`0007l0
oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000
oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00T0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00/0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`060?ooo`030000O`3oool0oooo00@0oooo
00D000000?ooo`3oool0oooo0000000@0?ooo`030000003oool000000240oooo00<0001o0?ooo`3o
ool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3o
ool04`3oool004`0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`080?ooo`030000
003oool0oooo00X0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0;0?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool01P3oool00`0007l0oooo0?ooo`040?ooo`040000
003oool0oooo00000140oooo0`00000Q0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3o
ool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo000K0?ooo`030;md
M02oool0oooo02h0oooo0P00000:0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0
2P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo00`0oooo00D000000?ooo`3oool0
oooo000000080?ooo`030000O`3oool0oooo00@0oooo00@000000?ooo`3oool000004P3oool00`00
0000oooo0?ooo`0P0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`00
07l0oooo0?ooo`130?ooo`<000005@3oool001/0oooo00<0_gAd0;ooo`3oool0;P3oool00`000000
oooo0?ooo`090?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool02P3oool00`000000
oooo0?ooo`030?ooo`030000003oool0oooo00d0oooo00D000000?ooo`3oool0oooo000000080?oo
o`030000O`3oool0oooo00D0oooo00<000000?ooo`000000=@3oool00`0007l0oooo0?ooo`0m0?oo
o`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?oo
o`004P3oool00`3ookl0M7Bo0?ooo`060?ooo`030;mdM02oool0oooo02h0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`0=0?ooo`050000003oool0oooo0?ooo`000000203oool00`00
07l0oooo0?ooo`050?ooo`030000003oool0000003D0oooo00<0001o0?ooo`3oool0?@3oool00`00
07l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool00180
oooo00<0oono07@0000000001P0000000`0007@0_ooo0?ooo`0^0?ooo`030000003oool0oooo00T0
oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00<0
oooo00<000000?ooo`3oool03@3oool01@000000oooo0?ooo`3oool0000000P0oooo00<0001o0?oo
o`3oool01@3oool00`000000oooo0000000e0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?oo
o`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo000K0?ooo`03
0;mdM02oool0oooo02h0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`080?ooo`03
0000003oool0oooo00X0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0=0?ooo`04
0000003oool0oooo000000T0oooo00<0001o0?ooo`3oool01@3oool2000003H0oooo00<0001o0?oo
o`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?oo
o`3oool04`3oool001/0oooo00<0_gAd0;ooo`3oool0;P3oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo00L0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`030?ooo`03
0000003oool0oooo00d0oooo00@000000?ooo`3oool000002@3oool00`0007l0oooo0?ooo`0m0?oo
o`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?oo
o`030000003oool0oooo01<0oooo000K0?ooo`030;mdM02oool0oooo02h0oooo00<000000?ooo`3o
ool02@3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`0=0?ooo`040000003oool0oooo000000T0oooo00<0001o0?oo
o`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?oo
o`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`090?ooo`03
0000003oool0oooo00L0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo00h0oooo00<000000?ooo`0000002@3oool00`0007l0oooo0?ooo`0m0?ooo`03
0000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`03
0000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0
1`3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0
3P3oool00`000000oooo000000090?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0
?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool0
4`3oool001L0oooo00D0oooO09a800000000001d0;ooo`0C0?ooo`050?noM000000000000000001d
_ol01@3oool00`2oM0000000001d_`030?ooo`030?oo_`1d0000000000@0000000<0M;oo0?ooo`3o
ool00`3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3o
ool0303oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00h0oooo00<000000?ooo`00
00002@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3o
ool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo000J0?ooo`030?oO
W018M;l0oooo0180oooo00H0W4Qd0;ooo`3oool0oono07@0M02oool40?ooo`030;md0000000007Bo
00@0oooo00<0_g@00000M02oool00P3oool00`3OW7@0W=oo0?ooo`040?ooo`030000003oool0oooo
00T0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool03P3oool00`000000oooo000000090?ooo`030000O`3oool0oooo
03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo
04D0oooo00<000000?ooo`3oool04`3oool001<0oooo00<0okmd07Boo`3oool01@3oool00`2oM7@0
_ooo0?ooo`0@0?ooo`030?noM000M;l0oooo0080oooo00<0gia804RLg`3oool02`3oool00`3o_g@0
001809cOo`080?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01`3oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool03P3oool2000000X0
oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0
oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`004`3oool00`3o_g@0M;oo
0?ooo`050?ooo`030;mdM02oool0oooo0100oooo00<0gia804RLg`3oool00P3oool00`3o_g@007Bo
0?ooo`0<0?ooo`030?oOW0180000B9cO00L0oooo0`0000090000O`030000000007l0001o00L0001o
00<000000000O`0007l0300007l00`000000001o0000O`020000O`030000000007l0001o00l0001o
00<000000000O`0007l0o`0007l>0000O`<000005@3oool001<0oooo00<0okmd07Boo`3oool0103o
ool00`3o_g@007Bo0?ooo`0A0?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool03P3o
ool00`2LB000B9cO0?ooo`050?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01`3o
ool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool06P3o
ool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03o
ool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo000C0?ooo`030?noM0000000
000000@0000000<004RL0=ooo`3oool04@3oool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0
oooo00l0oooo00<0W4Qd0;ooo`3oool0103oool00`000000oooo0?ooo`090?ooo`030000003oool0
oooo00L0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo01X0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0
oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`004`3oool00`3o
_g@0M;oo0?ooo`0H0?ooo`030?noM018W=l0oooo0080oooo00<0gia804RLg`3oool02P3oool00`3O
W4P0M;oo0?ooo`020?ooo`030;md001d_ol0oooo00@0oooo00<000000?ooo`3oool02@3oool00`00
0000oooo0?ooo`070?ooo`030000003oool0oooo00d0oooo00@000000?ooo`3oool000007@3oool0
0`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool0
0`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo000C0?ooo`030?noM01d_ol0oooo
01T0oooo00H0W4P007Boo`3oool0omnL04P0M02oool;0?ooo`070?noM00007@0_ooo0?ooo`3o_g@0
001809cOo`050?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01`3oool00`000000
oooo0?ooo`0=0?ooo`040000003oool0oooo000001d0oooo00<0001o0?ooo`3oool0?@3oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`00
0000oooo0?ooo`0C0?ooo`00;`3oool01@3ookl0M0000000000004P0W=oo00d0oooo00D0okmd0000
00000000001809cOo`060?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool01`3oool0
0`000000oooo0?ooo`0=0?ooo`040000003oool0oooo000001d0oooo00<0001o0?ooo`3oool0?@3o
ool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3o
ool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`090?ooo`030000003oool0
oooo00L0oooo00<000000?ooo`3oool03@3oool010000000oooo0?ooo`00000M0?ooo`030000O`3o
ool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3o
ool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3oool02P3oool0
0`000000oooo0?ooo`060?ooo`030000003oool0oooo00d0oooo00@000000?ooo`3oool000007@3o
ool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03o
ool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0
oooo00X0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0=0?ooo`040000003oool0
oooo000001d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3o
ool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool0
0`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool03@3oool0
10000000oooo0?ooo`00000M0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3o
ool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3o
ool004`0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`060?ooo`030000003oool0
oooo00d0oooo00@000000?ooo`3oool000007@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3o
ool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003o
ool0oooo01<0oooo001<0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool01P3oool0
0`000000oooo0?ooo`0=0?ooo`040000003oool0oooo000001d0oooo00<0001o0?ooo`3oool0?@3o
ool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3o
ool00`000000oooo0?ooo`0C0?ooo`00C03oool2000000/0oooo00<000000?ooo`3oool01P3oool0
0`000000oooo0?ooo`0>0?ooo`8000007P3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0
oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`130?ooo`<000005@3oool0
04`0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo
00h0oooo0P00000N0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`00
07l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0
oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00h0
oooo0P00000N0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0
oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo02h0oooo
00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo
00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?oo
o`0:0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool0;P3oool00`0007l0oooo0?oo
o`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?oo
o`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo00X0oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`0^0?ooo`030000O`3oool0oooo03d0oooo00<0001o
0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<00000
0?ooo`3oool04`3oool004`0oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`060?oo
o`030000003oool0oooo02h0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?oo
o`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?oo
o`00C03oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3o
ool0;P3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3o
ool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000
003oool0oooo00X0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0^0?ooo`030000
O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000
O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3oool02P3o
ool00`000000oooo0?ooo`060?ooo`030000003oool0oooo02h0oooo00<0001o0?ooo`3oool0?@3o
ool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3o
ool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0:0?ooo`030000003oool0
oooo00H0oooo00<000000?ooo`3oool0;P3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0
oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0
oooo01<0oooo001<0?ooo`030000003oool0oooo00X0oooo00<000000?ooo`3oool01@3oool00`00
0000oooo0?ooo`0_0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`00
07l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0
oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo02l0
oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0
oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool2000000/0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0_0?ooo`030000O`3oool0oooo03d0oooo
00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04<0oooo
0`00000E0?ooo`00C03oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00D0oooo00<0
00000?ooo`3oool0;`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0
001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<
0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0_
0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l
0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?oo
o`3oool02`3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo02l0oooo00<0001o0?oo
o`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?oo
o`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0;0?ooo`03
0000003oool0oooo00@0oooo00<000000?ooo`3oool0;`3oool00`0007l0oooo0?ooo`0m0?ooo`03
0000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`03
0000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0
103oool00`000000oooo0?ooo`0_0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0
?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool0
4`3oool004`0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo02l0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3o
ool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool0
0`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0;`3oool0
0`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool0
0`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo
00/0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0_0?ooo`030000O`3oool0oooo
03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo
04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3oool02`3oool00`000000
oooo0?ooo`040?ooo`030000003oool0oooo02l0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0
oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000
oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool0;`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo
00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo
001<0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0103oool00`000000oooo0?oo
o`0_0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?oo
o`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0oooo0P00000<
0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0;`3oool00`0007l0oooo0?ooo`0m
0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`13
0?ooo`<000005@3oool004`0oooo00<000000?ooo`3oool02`3oool00`000000oooo0?ooo`040?oo
o`030000003oool0oooo02l0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?oo
o`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?oo
o`00C03oool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3o
ool0;`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3o
ool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000
003oool0oooo00/0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0_0?ooo`030000
O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000
O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3oool02`3o
ool00`000000oooo0?ooo`040?ooo`030000003oool0oooo02l0oooo00<0001o0?ooo`3oool0?@3o
ool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3o
ool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0;0?ooo`030000003oool0
oooo00@0oooo00<000000?ooo`3oool0;`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0
oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0
oooo01<0oooo001<0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0103oool00`00
0000oooo0?ooo`0_0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`00
07l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<000000?ooo`3oool04`3oool004`0
oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0300
oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0
oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo
0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0<03oool00`0007l0oooo
0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo
0?ooo`150?ooo`030000003oool0oooo01<0oooo000_0?ooo`050?noM000000000000000001d_ol0
1@3oool00`2oM0000000001d_`060?ooo`050?oOW018000000000000001d_ol01@3oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0<03oool00`0007l0
oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0
oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo000_0?ooo`0609a8M02oool0oooo0?oo_`1d
07@0_ooo103oool00`2oM0000000001d_`080?ooo`030;md001d_ol0oooo00D0oooo00<000000?oo
o`3oool0303oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0300oooo00<0001o0?oo
o`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?oo
o`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00;P3oool00`3o_g@007Bo0?ooo`020?ooo`03
0=nLB018W=l0oooo00h0oooo00<0_g@007Boo`3oool01@3oool00`000000oooo0?ooo`0<0?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool0<03oool00`0007l0oooo0?ooo`0m0?ooo`03
0000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`03
0000003oool0oooo01<0oooo000^0?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool0
2P3oool00`3OW4P00000000000030000000307Boo`3oool0oooo00<0oooo0`00000<0000O`030000
000007l0001o0080001o00<000000000O`0007l0o`0007lf0000O`<000005@3oool002h0oooo00<0
gia804RLg`3oool00P3oool00`3o_g@007Bo0?ooo`0:0?ooo`060?noM00007@0_ooo0?ooo`2oM000
M;oo1P3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3o
ool0<03oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3o
ool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo000^0?ooo`030=nL
B018W=l0oooo0080oooo00<0okmd001d_`3oool02`3oool01@3OW4P007Bo0?ooo`2oM000M;oo00H0
oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0300
oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0
oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00;P3oool00`3o_g@0B9cO
0?ooo`020?ooo`030=nLB018W=l0oooo00`0oooo00@0W4P004RLg`2oM000M;oo1P3oool00`000000
oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0<03oool00`0007l0
oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0
oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo000_0?ooo`0609a8001d_ol0oooo0?oOW018
07@0_ooo3@3oool0103ogi`0B01804Q8001d_ol60?ooo`030000003oool0oooo00`0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`0`0?ooo`030000O`3oool0oooo03d0oooo00<0001o
0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo00<00000
0?ooo`3oool04`3oool002l0oooo00D0oono07@000000000001809cOo`0?0?ooo`030?noM0000000
M;oo00H0oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo0300oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0
oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`00
0000oooo0?ooo`0<0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0<03oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`00
07l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo00d0
oooo00@000000?ooo`3oool00000<`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo
03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo
01<0oooo001<0?ooo`030000003oool0oooo00d0oooo00@000000?ooo`3oool00000<`3oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`00
07l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo00d0
oooo00@000000?ooo`3oool00000<`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo
03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo
01<0oooo001<0?ooo`030000003oool0oooo00d0oooo00@000000?ooo`3oool00000<`3oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`00
07l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo00d0
oooo00@000000?ooo`3oool00000<`3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo
03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo
01<0oooo001<0?ooo`030000003oool0oooo00d0oooo00@000000?ooo`3oool00000<`3oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`00
07l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?ooo`8000003P3oool010000000
oooo0?ooo`00000c0?ooo`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?@3oool00`00
07l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04<0oooo0`00000E0?ooo`00C03oool00`000000
oooo0?ooo`0=0?ooo`040000003oool0oooo000003<0oooo00<0001o0?ooo`3oool0?@3oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`00
0000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0=0?ooo`040000003oool0oooo0000
03<0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo
03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000
oooo0?ooo`0=0?ooo`040000003oool0oooo000003<0oooo00<0001o0?ooo`3oool0?@3oool00`00
07l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3oool0A@3oool00`00
0000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0=0?ooo`040000003oool0oooo0000
03<0oooo00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo
03`0oooo00<0001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000
oooo0?ooo`0>0?ooo`800000=03oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0
oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0
oooo001<0?ooo`030000003oool0oooo00h0oooo0P00000d0?ooo`030000O`3oool0oooo03d0oooo
00<0001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0l0?ooo`030000O`3oool0oooo04D0oooo
00<000000?ooo`3oool04`3oool004`0oooo00<000000?ooo`3oool03P3oool2000003@0oooo00<0
001o0?ooo`3oool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0
001o0?ooo`3oool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`0>
0?ooo`800000=03oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03d0oooo00<0001o
0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?ooo`030000003oool0oooo01<0oooo001<0?oo
o`030000003oool0oooo00l0oooo00<000000?ooo`3oool0<P3oool00`0007l0oooo0?ooo`0m0?oo
o`030000O`3oool0oooo03d0oooo00<0001o0?ooo`3oool0?03oool00`0007l0oooo0?ooo`150?oo
o`030000003oool0oooo01<0oooo001<0?ooo`030000003oool0oooo04@0oooo00<0001o0?ooo`3o
ool0?@3oool00`0007l0oooo0?ooo`0m0?ooo`030000O`3oool0oooo03`0oooo00<0001o0?ooo`3o
ool0A@3oool00`000000oooo0?ooo`0C0?ooo`00C03oool00`000000oooo0?ooo`050?ooo`030000
003oool0oooo03`0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`0m0?ooo`030000
003oool0oooo03`0oooo00<000000?ooo`3oool0?@3oool00`000000oooo0?ooo`050?ooo`030000
003oool0oooo01<0oooo001<0?ooo`8000001P3oool00`000000oooo0?ooo`0=0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0<0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0=0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0=0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0<0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0=0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0=0?ooo`030000003o
ool0oooo00d0oooo00<000000?ooo`3oool00`3oool3000001D0oooo001<0?ooool00000D000000E
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00g03oool01@2LB00000000000000004P0W=oo0<l0
oooo003M0?ooo`030;md001d_ol0oooo0=00oooo003M0?ooo`030;md001d_ol0oooo0=00oooo0032
0?ooo`0309a8B01dM4P000000080000000D0001d0;ooo`3oool0oooo0=nLB0030000000@001dM01d
0000001809boW018000000000000M02ookl0M0000000B02Lgol0W4P00000B02Lgol0_g@007AdM0<0
000000D0001809cOo`3oool0oooo09a80005000000050018W03oool0oooo0?ooo`2oM0000`000000
0`0007@0_ooo0?ooo`0:0?ooo`050;md00000000000000000000B9`0103oool00`2LB00000000000
0003000000050018W03oool0oooo0?oo_`1d00000`0000000`0007@0_ooo0?ooo`020?ooo`050?oo
_`1d0000000000000000B9`0SP3oool00<80oooo00<0W4P00018W03oool00P3oool01P3o_g@0B9cO
0?ooo`3ookl0M01d0;ooo`80oooo0140_g@00000M02oool0oooo0?oOW018B9`0oooo0?oo_`1d07@0
_ooo0?ooo`2LB4P0W=oo0?ooo`2oM000001d0;ooo`020?ooo`030?oOW018B9`0oooo00<0oooo00<0
oono07@0M02oool0103oool00`2oM00007Bo0?ooo`020?ooo`030?noM000B9`0oooo00/0oooo00<0
_g@007Boo`3oool01`3oool00`3ookl0M01d0;ooo`040?ooo`030;md001d_ol0oooo0080oooo00<0
okmd001d_`3oool00P3oool01`3OW4P0B9cO0?ooo`3oool0gia80000M02oool0S03oool00<80oooo
00<0W4Q809cOo`3oool00P3oool01P3ogi`0B4RL0?ooo`3ookl0M01809cOo`80oooo0100oono07@0
M02oool0oooo0?oOW018B9`0oooo0?oo_`1d07@0_ooo0?ooo`2LB4P0W=oo0?ooo`2oM000M;oo103o
ool00`2oM000M;oo0?ooo`020?ooo`030?oo_`1d07@0_ooo00<0oooo00<0oono07@0M02oool04@3o
ool00`2oM000M;oo0?ooo`070?ooo`030?oo_`1d07@0_ooo00<0oooo00<0oono07A8W03oool0103o
ool01P2LB4P0W=oo0?ooo`3oool0gia804RLgi40oooo00370?ooo`0609a80000M;l0oooo0?ooo`3o
gi`0B0000`0000003`0007@0_ooo0?ooo`3ogi`0B4RL0?ooo`3ookl0M01d0;ooo`3oool0W4Q809cO
o`3oool0_g@004RLg`040?ooo`030;mdB02Lgol0oooo0080oooo00<0oono07@0M02oool00`3oool0
0`3ookl0M00000000004000000030018W03oool0oooo00X0oooo00<0_g@00000000000000P000000
0`1d_ol0oooo0?ooo`020?ooo`030?oo_`1d07@0_ooo00<0oooo00<0oono07A8W03oool0103oool0
1P2LB4P0W=oo0?ooo`3oool0gia804RLgi40oooo00330?ooo`050=nLB0000000000000000018W=l0
0`3oool05@3ookl0_koo0?ooo`3oool0omnL04P0M02oool0oooo0?oOW0180000M;oo0?oOW0180000
B9cO0?oo_`1d04P0W=oo0?ooo`2oM000000007Boo`020?ooo`030=nLB000B9`0oooo00<0oooo00<0
oono07@0M02oool0103oool00`2oM000M;oo0?ooo`020?ooo`0309a80018W=l0oooo00/0oooo00L0
_g@007Boo`3oool0oooo0?oo_`1d07@0_ooo00<0oooo00<0oono07@0M02oool0103oool00`2oM000
04RL0?ooo`020?ooo`030;md0000M;l0oooo0080oooo00<0gia804RLg`3oool0T03oool00<80oooo
00<0gia80018W03oool00P3oool01P3o_g@007Bo0?ooo`3oool0omnL04P0008000000140001809cO
o`3oool0omnL04P00000B4P0M0000000001d_ol0W4P000000000M;l0oooo09a800000000M;no07@0
0002000000030018W03oool0oooo00<0oooo00<0oono07@0M02oool0103oool00`3ookl0M0000000
00020000000304RLg`3oool0oooo00/0oooo00<0_g@007Boo`3oool00P3oool00`2oM000M;oo0?oo
o`020?ooo`030?oo_`1d07@0_ooo00D0oooo00D0gia80000000000000000001d_`020?ooo`030?oO
W0180000000000<0000000<0001809cOo`3oool0S03oool00<80oooo00L0okmd0018W03oool0oooo
0?oo_`1d000007Bo01l0oooo00<0oono07@0M02oool05`3oool01`2oM000M;oo0?ooo`3oool0omnL
04P0M02oool00`3oool00`3ookl0M01d0;ooo`0>0?ooo`030=nLB018W=l0oooo0900oooo00330?oo
o`060=nLB000000000000000001dM7@007Bo7`3oool00`3ookl0M01d0;ooo`0F0?ooo`030;md0000
000000000080000000<0001809cOo`3oool00`3oool00`3ookl0M01d0;ooo`0>0?ooo`030=nLB018
W=l0oooo0900oooo003V0?ooo`050?oOW018000000000000M02oool07`3oool01@3ogi`0B0000000
000007@0_ooo0:40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40
oooo0000\
\>"],
  ImageRangeCache->{{{0, 431}, {265.813, 0}} -> {-26.5316, -0.482182, \
0.471885, 0.00610806}}]
}, Closed]],

Cell["\<\
Plot the gamma function for real arguments between, say, -5 and +5.  Add axis \
labels and a title to your figure using appropriate options of Plot.\
\>", "Exercise"],

Cell[TextData[{
  "Use ",
  StyleBox["Factor",
    FontWeight->"Plain"],
  " to factor the expression ",
  Cell[BoxData[
      \(TraditionalForm\`\((x\^2 + 1)\)\)]],
  ".  Your first attempt will probably not achieve the desired result.  Try \
using the ",
  StyleBox["GaussianIntegers",
    FontWeight->"Plain"],
  " option.  Of course, you should find out which options are available and \
use Help to find out what this option is supposed to do!"
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Using replacement rules to evaluate functions", "Subsection"],

Cell["Suppose that we define a function with an explicit argument.", "Text"],

Cell[BoxData[{
    \(\(Clear[f, x];\)\), "\n", 
    \(\(f[x]\  = \ 1/Sin[x];\)\)}], "Input"],

Cell[TextData[{
  "Although we cannot evaluate this function for ",
  Cell[BoxData[
      \(TraditionalForm\`x = 0.2\)]],
  " by simply requesting ",
  StyleBox["f[0.2]", "InlineInput"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[0.2]\)], "Input"],

Cell[BoxData[
    \(f[0.2`]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "because there is no definition for ",
  StyleBox["f[0.2]", "InlineInput",
    FontWeight->"Bold"],
  ","
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?f\)\)], "Input"],

Cell["Global`f", "Print",
  CellTags->"Info3282055653-5932782"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {GridBox[{
                {\(f[x] = Csc[x]\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnWidths->0.999,
              ColumnAlignments->{Left}]}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      Definition[ "f"],
      Editable->False]], "Print",
  CellTags->"Info3282055653-5932782"]
}, Closed]],

Cell["\<\
we can use a replacement rule to substitute the desired value for the \
argument.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[x]\  /. x \[Rule] 0.2\)], "Input"],

Cell[BoxData[
    \(5.033489547672344`\)], "Output"]
}, Closed]],

Cell["Similarly, a symbolic replacement gives a related function.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[x]\  /. x \[Rule] 1/y\)], "Input"],

Cell[BoxData[
    \(Csc[1\/y]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "It is usually better to use a replacement rule instead of a definition (",
  StyleBox["Set", "InlineInput",
    FontWeight->"Bold"],
  ") to substitute values or to transform expressions because definitions \
fundamentally change symbolic expressions, whereas substitution by \
replacement merely evaluates a particular instance.  For example, if we \
define ",
  StyleBox["g[y]", "InlineInput",
    FontWeight->"Bold"],
  " to have essentially the same functional dependence as ",
  StyleBox["f[x]", "InlineInput",
    FontWeight->"Bold"],
  " with ",
  StyleBox["x", "InlineInput",
    FontWeight->"Bold"],
  " replaced by ",
  StyleBox["y", "InlineInput",
    FontWeight->"Bold"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[g, y];\)\), "\n", 
    \(g[y] = f[x] /. x \[Rule] y\)}], "Input"],

Cell[BoxData[
    \(Csc[y]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "but then assign a value to ",
  StyleBox["y", "InlineInput",
    FontWeight->"Bold"],
  " using ",
  StyleBox["Set", "InlineInput",
    FontWeight->"Bold"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(y = 2\)], "Input"],

Cell[BoxData[
    \(2\)], "Output"]
}, Closed]],

Cell[TextData[{
  "the functional dependence of ",
  StyleBox["g[y]", "InlineInput",
    FontWeight->"Bold"],
  " is lost until ",
  StyleBox["y", "InlineInput",
    FontWeight->"Bold"],
  " is cleared.  It is much cleaner to evaluate substitutions using \
replacement rules."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(g[y]\)], "Input"],

Cell[BoxData[
    \(g[2]\)], "Output"]
}, Closed]],

Cell[BoxData[
    \(Clear[x, y, z]\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Replace versus ReplaceAll", "Subsection"],

Cell[TextData[{
  "Notice that the operator ",
  StyleBox["/.", "InlineInput",
    FontSlant->"Italic"],
  " is equivalent to ",
  StyleBox["ReplaceAll", "InlineInput",
    FontWeight->"Bold"],
  " rather than to ",
  StyleBox["Replace", "InlineInput",
    FontWeight->"Bold"],
  "; what is the difference between these versions of the replacement \
function?  ",
  StyleBox["Replace", "InlineInput",
    FontWeight->"Bold"],
  " acts only on complete expressions, whereas ",
  StyleBox["ReplaceAll", "InlineInput",
    FontWeight->"Bold"],
  " applies the rule to subexpressions as well.  Thus,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ReplaceAll[Exp[a], a \[Rule] I\ k\ x]\)], "Input"],

Cell[BoxData[
    \(\[ExponentialE]\^\(\[ImaginaryI]\ k\ x\)\)], "Output"]
}, Closed]],

Cell["\<\
replaces the argument of the exponential function with the desired \
interpretation, whereas\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Replace[Exp[a], a \[Rule] I\ k\ x]\)], "Input"],

Cell[BoxData[
    \(\[ExponentialE]\^a\)], "Output"]
}, Closed]],

Cell[TextData[{
  "does not reach inside the exponential to apply the replacement rule to the \
subexpression represented by the symbol ",
  StyleBox["a", "InlineInput"],
  ".  Nevertheless, we can use ",
  StyleBox["Replace", "InlineInput",
    FontWeight->"Bold"],
  " if we give it rules which act on complete expressions."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Replace[Exp[a], Exp[a] \[Rule] Exp[I\ k\ x]]\)], "Input"],

Cell[BoxData[
    \(\[ExponentialE]\^\(\[ImaginaryI]\ k\ x\)\)], "Output"]
}, Closed]],

Cell["\<\
However, we tend to use this version of the replacement function rather \
infrequently.\
\>", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stop!", "Section"],

Cell[TextData[{
  "It is sometimes necessary to interrupt an evaluation.  For example, if we \
had inadvertently invoked an endless replacement loop, we would need to \
interrupt the kernel's activities in order to abort that evaluation.  This \
can be accomplished using the ",
  StyleBox["Kernel",
    FontWeight->"Bold"],
  " menu.  If we simply interrupt, we will be given the option of examining \
the current status of the evaluation and possibly resuming the evaluation.  \
More often we will have recognized the error and should choose to abort \
directly.  Note that it can take some time for the kernel to respond to \
interruptions (don't you ignore a pest for while?).  However, if the kernel \
does not respond appropriately in a reasonable time, say 15 seconds, it may \
be necessary to quit the kernel altogether.  It also takes some time to shut \
down the kernel, but that more drastic step will almost always terminate a \
rampaging calculation without killing the front end or rebooting the \
computer.  Since the front end is still alive, you can correct your input and \
restart the kernel.  Note, however, that you will need to reevaluate either \
the entire notebook or at least the parts of the notebook relevant to your \
present task because your earlier definitions and evaluations have been \
expunged.  Therefore, if possible it is better to simply abort an evaluation \
rather than quit the kernel.  Finally, a single crash after a long session \
will probably convince you of the wisdom of saving your work frequently.  \
Even the best program crashes occasionally."
}], "Text"],

Cell["\<\
Practice aborting an evaluation using an endless replacement loop.  Identify \
the associated shortcut keys.\
\>", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Using packages", "Section"],

Cell[CellGroupData[{

Cell["What are packages?", "Subsection"],

Cell[TextData[{
  "One of the most important features of ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " is that it is an extensible system.  In addition to the built-in \
functions available to any ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " session, one can add new features by loading a package that contains the \
necessary definitions.  A ",
  StyleBox["package",
    FontSlant->"Italic"],
  " is a special kind of ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " file that contains the definitions and specifies the rules for \
manipulating symbols and functions relevant to a particular purpose.  When \
such a package is loaded, new features become available.  There are several \
kinds of packages."
}], "Text"],

Cell[TextData[{
  "standard packages",
  StyleBox[
  " \[LongDash] are provided and supported by the vendor as standard parts of \
the ",
    FontSlant->"Plain"],
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  StyleBox[
  " system.  However, instead of using memory to store the definitions and \
code for all functions that are available, those that are needed less \
frequently than the built-in functions are collected as sets of packages that \
can be loaded as needed for particular applications.",
    FontSlant->"Plain"]
}], "Text",
  FontSlant->"Italic"],

Cell[TextData[{
  "extra packages",
  StyleBox[
  " \[LongDash] are written by third parties but distributed by the vendor.  \
Although these packages are considered sufficiently useful for general \
distribution, they are not necessarily as well supported as the standard \
packages.",
    FontSlant->"Plain"]
}], "Text",
  FontSlant->"Italic"],

Cell[TextData[{
  "commercial packages",
  StyleBox[
  " \[LongDash] are developed and sold independently.  These packages provide \
extensive tools for specialized applications in science, engineering, or \
finance. ",
    FontSlant->"Plain"]
}], "Text",
  FontSlant->"Italic"],

Cell[TextData[{
  "user packages",
  StyleBox[
  " \[LongDash] many users find it useful to collect their best code in \
packages that can be used for many of their own applications.  Some of these \
packages can evolve toward commercial status.  We will discuss package \
writing near the end of the course.",
    FontSlant->"Plain"]
}], "Text",
  FontSlant->"Italic"]
}, Closed]],

Cell[CellGroupData[{

Cell["Standard packages", "Subsection"],

Cell[TextData[{
  "A complete listing of all of the standard packages would be prohibitively \
long.  Here we simply summarize the types of packages that are available and \
leave it to the reader to browse through the categories relevant to his/her \
needs.  The standard packages are generally found in a folder with the name \
StandardPackages.  Within that folder one should find additional folders with \
the names listed in the category column of the table below.  Within each \
category folder will be a set of files with extension ",
  StyleBox["*.m", "InlineInput"],
  " containing a package with a descriptive name.  A small subset of these is \
included in the table also.  Users who need a particular package will usually \
find the names self-explanatory; if you don't understand a name you probably \
don't need that package."
}], "Text"],

Cell[BoxData[
    StyleBox[GridBox[{
          {
            StyleBox[\(Standard\ Packages\),
              FontFamily->"Times New Roman",
              FontWeight->"Bold"]},
          {
            StyleBox[GridBox[{
                  {
                    StyleBox["category",
                      "Text"], 
                    StyleBox["examples",
                      "Text"]},
                  {
                    StyleBox["Algebra",
                      "Text"], 
                    StyleBox[\(FiniteFields, \ Quaternions\),
                      "Text"]},
                  {
                    StyleBox["Calculus",
                      "Text"], 
                    StyleBox[\(FourierTransform, \ VariationalMethods\),
                      "Text"]},
                  {
                    StyleBox["DiscreteMath",
                      "Text"], 
                    StyleBox[\(Combinatorica, \ RSolve\),
                      "Text"]},
                  {
                    StyleBox["Geometry",
                      "Text"], 
                    StyleBox[\(Rotations, \ Polytopes\),
                      "Text"]},
                  {
                    StyleBox["Graphics",
                      "Text"], 
                    StyleBox[\(Graphics, \ Animation, \ PlotField\),
                      "Text"]},
                  {
                    StyleBox["LinearAlgebra",
                      "Text"], 
                    StyleBox[\(MatrixManipulation, \ Orthogonalization\),
                      "Text"]},
                  {
                    StyleBox["Miscellaneous",
                      "Text"], 
                    StyleBox[\(PhysicalConstants, \ Units, \ Music\),
                      "Text"]},
                  {
                    StyleBox["NumberTheory",
                      "Text"], 
                    StyleBox[\(ContinuedFractions, \ NumberTheoryFunctions\),
                      "Text"]},
                  {
                    StyleBox["NumericalMath",
                      "Text"], 
                    StyleBox[\(CauchyPrincipalValue, \ NResidue\),
                      "Text"]},
                  {
                    StyleBox["Statistics",
                      "Text"], 
                    
                    StyleBox[\(ConfidenceIntervals, \ 
                      ContinuousDistributions\),
                      "Text"]},
                  {
                    StyleBox["Utilities",
                      "Text"], 
                    StyleBox[\(Notation, \ FilterOptions, \ MemoryConserve\),
                      "Text"]}
                  },
                ColumnAlignments->{Left},
                GridFrame->True,
                RowLines->{True, False}],
              "Input",
              Background->None]}
          }],
      Background->RGBColor[0.500008, 0.996109, 0.996109]]], "Text",
  TextAlignment->Center,
  TextJustification->0]
}, Closed]],

Cell[CellGroupData[{

Cell["Contexts", "Subsection"],

Cell[TextData[{
  "Just as the context determines the meaning of words in human languages, \
particularly when the word has several possible meanings, ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " symbols are defined within a ",
  StyleBox["context",
    FontSlant->"Italic"],
  " also.  When the kernel is loaded we start with the ",
  StyleBox["System`", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["Global`", "InlineInput",
    FontWeight->"Bold"],
  " contexts.  In addition, there may be several other contexts available \
depending upon the contents of the start-up folder."
}], "Text"],

Cell["\<\
The list of contexts which are presently available is given by the following \
system variable.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \($ContextPath\)], "Input"],

Cell[BoxData[
    \({"Global`", "System`"}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Symbols encountered by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " are interpreted by searching the context path for information about that \
symbol.  Thus, a new symbol that we introduce, such as ",
  StyleBox["x", "InlineInput",
    FontWeight->"Bold"],
  ", will usually be associated with the ",
  StyleBox["Global`", "InlineInput",
    FontWeight->"Bold"],
  " context, as indicated by the response ",
  StyleBox["Global`x", "InlineInput",
    FontWeight->"Bold"],
  " to the inquiry ",
  StyleBox["?x", "InlineInput",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(x = 2\)], "Input"],

Cell[BoxData[
    \(2\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?x\)\)], "Input"],

Cell["Global`x", "Print",
  CellTags->"Info3282055793-8746166"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {GridBox[{
                {\(x = 2\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnWidths->0.999,
              ColumnAlignments->{Left}]}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      Definition[ "x"],
      Editable->False]], "Print",
  CellTags->"Info3282055793-8746166"]
}, Closed]],

Cell[TextData[{
  "The context in which a symbol was defined is returned by the function ",
  StyleBox["Context", "InlineInput",
    FontWeight->"Bold"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Context[x]\)], "Input"],

Cell[BoxData[
    \("Global`"\)], "Output"]
}, Closed]],

Cell[TextData[{
  "System variables established by the kernel are generally found in the ",
  StyleBox["System`", "InlineInput",
    FontWeight->"Bold"],
  " context.  For example, the context in which ",
  StyleBox["$ContextPath", "InlineInput",
    FontWeight->"Bold"],
  " was defined is "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Context[$ContextPath]\)], "Input"],

Cell[BoxData[
    \("System`"\)], "Output"]
}, Closed]],

Cell["\<\
Loading a package usually adds one or more new contexts and introduces a set \
of new symbols defined within those contexts.\
\>", "Text"],

Cell[TextData[{
  "It should be clear now why we use place statements like ",
  StyleBox["Clear[\"Global`*\"]", "InlineInput",
    FontWeight->"Bold"],
  " or ",
  StyleBox["ClearAll[\"Global`*\"]", "InlineInput",
    FontWeight->"Bold"],
  " at the beginning of notebooks to clear the symbols created by the user \
within other notebooks.  Hopefully the syntax also appears clear at this \
point."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Loading a package", "Subsection"],

Cell[TextData[{
  "The best way to load a package is to use the ",
  ButtonBox["Needs",
    ButtonStyle->"RefGuideLink"],
  " function, which reads the package if it is not yet on the context path.  \
The argument is a string of the form ",
  StyleBox["\"Category`Package`\"", "InlineInput",
    FontWeight->"Bold"],
  ", where the first part identifies the folder and the second the file.  \
Note that the back-quotes are essential.  For example, the following \
statements load the packages which define physical constants and which can \
transform units from one form to another."
}], "Text"],

Cell[BoxData[{
    \(\(Needs["\<Miscellaneous`PhysicalConstants`\>"];\)\), "\n", 
    \(\(Needs["\<Miscellaneous`Units`\>"];\)\)}], "Input"],

Cell[TextData[{
  "When a package is loaded, it introduces new symbols that are defined in \
the ",
  StyleBox["context",
    FontSlant->"Italic"],
  " of that package.  The list of contexts which are presently available is \
given by the following system variable."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \($ContextPath\)], "Input"],

Cell[BoxData[
    \({"Miscellaneous`Units`", "Miscellaneous`PhysicalConstants`", 
      "Miscellaneous`SIUnits`", "Global`", "System`"}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Loading the ",
  StyleBox["PhysicalConstants", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["Units", "InlineInput",
    FontWeight->"Bold"],
  " packages introduced several new contexts based upon the package names.  \
Note that even though we did not ask for ",
  StyleBox["SIUnits", "InlineInput",
    FontWeight->"Bold"],
  ", it came with ",
  StyleBox["Units", "InlineInput",
    FontWeight->"Bold"],
  " as a freebie."
}], "Text"],

Cell["\<\
The symbols defined by a particular context can be listed using the \
information operator and a wild card after the context name; thus, we find \
that many physical constants are now available.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?Miscellaneous`PhysicalConstants`*\)\)], "Input"],

Cell[BoxData[GridBox[{
        {
          StyleBox["Miscellaneous`PhysicalConstants`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["AccelerationDueToGravity",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`\
AccelerationDueToGravity"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["FineStructureConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`FineStructureConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["ProtonComptonWavelength",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`ProtonComptonWavelength"}\
,
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["AgeOfUniverse",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`AgeOfUniverse"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["GalacticUnit",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`GalacticUnit"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["ProtonMagneticMoment",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`ProtonMagneticMoment"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["AvogadroConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`AvogadroConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["GravitationalConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`GravitationalConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["ProtonMass",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`ProtonMass"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["BohrRadius",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`BohrRadius"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["HubbleConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`HubbleConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["QuantizedHallConductance",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`\
QuantizedHallConductance"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["BoltzmannConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`BoltzmannConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["IcePoint",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`IcePoint"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["RydbergConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`RydbergConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["ClassicalElectronRadius",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`ClassicalElectronRadius"}\
,
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["MagneticFluxQuantum",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`MagneticFluxQuantum"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["SackurTetrodeConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`SackurTetrodeConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["CosmicBackgroundTemperature",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`\
CosmicBackgroundTemperature"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["MolarGasConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`MolarGasConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["SolarConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`SolarConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["DeuteronMagneticMoment",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`DeuteronMagneticMoment"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["MolarVolume",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`MolarVolume"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["SolarLuminosity",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`SolarLuminosity"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["DeuteronMass",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`DeuteronMass"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["MuonGFactor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`MuonGFactor"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["SolarRadius",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`SolarRadius"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["EarthMass",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`EarthMass"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["MuonMagneticMoment",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`MuonMagneticMoment"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["SolarSchwarzschildRadius",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`\
SolarSchwarzschildRadius"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["EarthRadius",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`EarthRadius"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["MuonMass",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`MuonMass"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["SpeedOfLight",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`SpeedOfLight"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["ElectronCharge",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`ElectronCharge"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["NeutronComptonWavelength",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`\
NeutronComptonWavelength"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["SpeedOfSound",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`SpeedOfSound"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["ElectronComptonWavelength",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`\
ElectronComptonWavelength"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["NeutronMagneticMoment",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`NeutronMagneticMoment"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["StefanConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`StefanConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["ElectronGFactor",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`ElectronGFactor"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["NeutronMass",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`NeutronMass"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["ThomsonCrossSection",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`ThomsonCrossSection"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["ElectronMagneticMoment",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`ElectronMagneticMoment"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["PlanckConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`PlanckConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["VacuumPermeability",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`VacuumPermeability"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["ElectronMass",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`ElectronMass"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["PlanckConstantReduced",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`PlanckConstantReduced"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["VacuumPermittivity",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`VacuumPermittivity"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]},
              {
                ButtonBox[
                  StyleBox["FaradayConstant",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`FaradayConstant"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["PlanckMass",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`PlanckMass"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"], 
                ButtonBox[
                  StyleBox["WeakMixingAngle",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236967-3025563", 
                    "Miscellaneous`PhysicalConstants`WeakMixingAngle"},
                  ButtonFrame->"None",
                  ButtonNote->"Miscellaneous`PhysicalConstants`"]}
              },
            
            RowMinHeight->{
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05}]}
        },
      RowSpacings->{2, 3},
      ColumnsEqual->True]], "Print",
  CellMargins->{{20, Inherited}, {Inherited, Inherited}},
  ShowCellLabel->False,
  CellFrameMargins->{{Inherited, Inherited}, {14, 14}},
  Background->RGBColor[0.964706, 0.929412, 0.839216],
  ButtonBoxOptions->{Active->True},
  GridBoxOptions->{ColumnAlignments->{Left}}]
}, Closed]],

Cell["\<\
We can obtain more detailed information about a particular symbol also.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(?? PlanckConstant\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"PlanckConstant is a universal constant of nature which \
relates the energy of a quantum of radiation to the frequency of the \
oscillator which emitted it.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"Miscellaneous`PhysicalConstants`",
        Active->True,
        ButtonStyle->"AddOnsLink"]}]], "Print",
  CellTags->"Info3348236975-8449943"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {GridBox[{
                {\(PlanckConstant = 6.62606876`*^-34\ Joule\ Second\)}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnWidths->0.999,
              ColumnAlignments->{Left}]}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      Definition[ "PlanckConstant"],
      Editable->False]], "Print",
  CellTags->"Info3348236975-8449943"]
}, Closed]],

Cell[TextData[{
  "The ",
  StyleBox["Units", "InlineInput",
    FontWeight->"Bold"],
  " package provides a function ",
  StyleBox["Convert", "InlineInput",
    FontWeight->"Bold"],
  " which can perform a change of units.  Note that the physical constants \
include units in the form of tags consisting of factors that are symbols for \
the appropriate units."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[PlanckConstantReduced]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Times[1.0545715964207855`*^-34, Joule, Second]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?Joule\)\)], "Input"],

Cell[BoxData[
    \("Joule is the derived SI unit of energy."\)], "Print",
  CellTags->"Info3348236985-5425450"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Convert[Joule, ElectronVolt]\)], "Input"],

Cell[BoxData[
    \(6.241506363094027`*^18\ ElectronVolt\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Convert[PlanckConstantReduced, \ ElectronVolt\ Second]\)], "Input"],

Cell[BoxData[
    \(6.582115329398559`*^-16\ ElectronVolt\ Second\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Convert[PlanckConstantReduced\ SpeedOfLight, \ 
      ElectronVolt\ Angstrom]\)], "Input"],

Cell[BoxData[
    \(1973.2685334398739`\ Angstrom\ ElectronVolt\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The gravitational acceleration ",
  Cell[BoxData[
      \(TraditionalForm\`g\)]],
  " at the earth's surface is ",
  Cell[BoxData[
      \(TraditionalForm\`G\ M/R\^2\)]],
  " where ",
  Cell[BoxData[
      \(TraditionalForm\`G\)]],
  " is the gravitational constant and ",
  Cell[BoxData[
      \(TraditionalForm\`M\)]],
  " and ",
  Cell[BoxData[
      \(TraditionalForm\`R\)]],
  " are the mass and radius of the earth.  Compute ",
  Cell[BoxData[
      \(TraditionalForm\`g\)]],
  " in units of ",
  Cell[BoxData[
      \(TraditionalForm\`meter/second\^2\)]],
  " and convert to ",
  Cell[BoxData[
      \(TraditionalForm\`feet/second\^2\)]],
  "."
}], "Exercise"],

Cell["What do MKS and CGS do?", "Exercise"],

Cell["\<\
Use ConvertTemperature to express 0 Fahrenheit in Celsius units.  (Obtain \
syntax with ?).  Note that this function avoids the difficulties with 0 that \
you may have encountered in earlier exercises.\
\>", "Exercise"],

Cell["What is the relationship between parsecs and light-years?", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Avoiding shadows", "Subsection"],

Cell[TextData[{
  "Suppose that you attempt to use a function before the relevant package has \
been loaded.  Executing a statement which contains that function creates a \
symbol by that name in the ",
  StyleBox["Global`", "InlineInput",
    FontWeight->"Bold"],
  " context, but does not perform the desired function.  For example, ",
  ButtonBox["PieChart",
    ButtonStyle->"RefGuideLink"],
  " is found in ",
  StyleBox["Graphics`Graphics`", "InlineInput",
    FontWeight->"Bold"],
  ", which has not been loaded yet."
}], "Text"],

Cell[BoxData[
    \(\(PieChart[{0.3, 0.2, \ 0.15, \ 0.1, \ 0.05}];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?PieChart\)\)], "Input"],

Cell["Global`PieChart", "Print",
  CellTags->"Info3348237007-4808778"]
}, Closed]],

Cell["\<\
If we now load the package, there is a conflict between the global symbol we \
created and the symbol defined by the package.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Needs["\<Graphics`Graphics`\>"]\)], "Input"],

Cell[BoxData[
    RowBox[{\(PieChart::"shdw"\), \(\(:\)\(\ \)\), "\<\"Symbol \
\\!\\(\\\"PieChart\\\"\\) appears in multiple contexts \
\\!\\({\\\"Graphics`Graphics`\\\", \\\"Global`\\\"}\\); definitions in \
context \\!\\(\\\"Graphics`Graphics`\\\"\\) may shadow or be shadowed by \
other definitions. \\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", \
ButtonStyle->\\\"RefGuideLinkText\\\", ButtonFrame->None, \
ButtonData:>\\\"General::shdw\\\"]\\)\"\>"}]], "Message"]
}, Closed]],

Cell[TextData[{
  "In ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " jargon, our symbol casts a ",
  StyleBox["shadow",
    FontSlant->"Italic"],
  " over the symbol of the same name defined within another context; hence, ",
  
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " does not know which version to use unless the context is specified.  \
Although we can include the context when using the function,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(Graphics`Graphics`PieChart[{0.3, 0.2, \ 0.15, \ 0.1, \ 
          0.05}];\)\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.47619 0.5 0.47619 [
[.60934 .76397 -3 -4.5 ]
[.60934 .76397 3 4.5 ]
[.21429 .5 -3 -4.5 ]
[.21429 .5 3 4.5 ]
[.44426 .21978 -3 -4.5 ]
[.44426 .21978 3 4.5 ]
[.70203 .29797 -3 -4.5 ]
[.70203 .29797 3 4.5 ]
[.78022 .44426 -3 -4.5 ]
[.78022 .44426 3 4.5 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
1 0 0 r
.5 .5 m
.5 .5 .47619 0 135 arc
F
.95 1 0 r
.5 .5 m
.5 .5 .47619 135 225 arc
F
0 1 .1 r
.5 .5 m
.5 .5 .47619 225 292.5 arc
F
0 .85 1 r
.5 .5 m
.5 .5 .47619 292.5 337.5 arc
F
.2 0 1 r
.5 .5 m
.5 .5 .47619 337.5 360 arc
F
0 g
.5 Mabswid
[ ] 0 setdash
.5 .5 m
.97619 .5 L
s
.5 .5 m
.16328 .83672 L
s
newpath
.5 .5 .47619 0 135 arc
s
.5 .5 m
.16328 .83672 L
s
.5 .5 m
.16328 .16328 L
s
newpath
.5 .5 .47619 135 225 arc
s
.5 .5 m
.16328 .16328 L
s
.5 .5 m
.68223 .06006 L
s
newpath
.5 .5 .47619 225 292.5 arc
s
.5 .5 m
.68223 .06006 L
s
.5 .5 m
.93994 .31777 L
s
newpath
.5 .5 .47619 292.5 337.5 arc
s
.5 .5 m
.93994 .31777 L
s
.5 .5 m
.97619 .5 L
s
newpath
.5 .5 .47619 337.5 360 arc
s
[(1)] .60934 .76397 0 0 Mshowa
[(2)] .21429 .5 0 0 Mshowa
[(3)] .44426 .21978 0 0 Mshowa
[(4)] .70203 .29797 0 0 Mshowa
[(5)] .78022 .44426 0 0 Mshowa
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 288},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`0001/2000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00a`3ooolQ00000<P0oooo002n0?ooo`T000008@00oaT:00000;h0oooo002f0?ooo`P00000
=000oaT700000;L0oooo002a0?ooo`D00000@`00oaT600000;40oooo002[0?ooo`H00000CP00oaT4
00000:d0oooo002X0?ooo`<00000F000oaT500000:P0oooo002T0?ooo`@00000H000oaT400000:@0
oooo002P0?ooo`@00000J000oaT300000:40oooo002M0?ooo`<00000K`00oaT4000009d0oooo002I
0?ooo`@00000MP00oaT2000009/0oooo002G0?ooo`800000O000oaT3000009P0oooo002D0?ooo`<0
0000P@00oaT4000009@0oooo002@0?ooo`@00000R000oaT200000980oooo002>0?ooo`800000SP00
oaT3000008l0oooo002;0?ooo`<00000T`00oaT2000008d0oooo00290?ooo`800000V000oaT40000
08T0oooo00270?ooo`800000W@00oaT3000008L0oooo00240?ooo`<00000WP00oaT0100000000=Wo
003Io`00fOl2000008D0oooo00220?ooo`800000X@00oaT00`0000000=Wo003Io`03003Io`<00000
PP3oool00800oooo0P00002R003o6@0300000000fOl00=Wo00L00=Wo0P0000200?ooo`00O`3oool0
0`0000000?lI003o6@2R003o6@0300000000fOl00=Wo00T00=Wo00<000000?ooo`3oool0O@3oool0
07/0oooo1000002U003o6@0300000000fOl00=Wo00X00=Wo00<000000?ooo`3oool0O03oool007X0
oooo00<00000003o6@00oaT0YP00oaT00`0000000=Wo003Io`0<003Io`<00000N`3oool007P0oooo
0P00002Y003o6@0300000000fOl00=Wo00l00=Wo0P00001i0?ooo`00MP3oool200000:X00?lI00<0
0000003Io`00fOl04P00fOl2000007L0oooo001e0?ooo`0300000000oaT00?lI0:X00?lI00<00000
003Io`00fOl05000fOl2000007D0oooo001c0?ooo`800000[000oaT00`0000000=Wo003Io`0G003I
o`800000L`3oool00740oooo0P00002^003o6@0300000000fOl00=Wo01T00=Wo00<000000?ooo`3o
ool0L03oool00700oooo00<00000003o6@00oaT0[P00oaT00`0000000=Wo003Io`0J003Io`800000
L03oool006h0oooo0P00002`003o6@0300000000fOl00=Wo01d00=Wo0P00001^0?ooo`00K03oool2
00000;800?lI00<00000003Io`00fOl07`00fOl2000006`0oooo001[0?ooo`0300000000oaT00?lI
0;400?lI00<00000003Io`00fOl08P00fOl00`000000oooo0?ooo`1Y0?ooo`00J@3oool200000;@0
0?lI00<00000003Io`00fOl08`00fOl00`000000oooo0?ooo`1X0?ooo`00J03oool00`0000000?lI
003o6@2d003o6@0300000000fOl00=Wo02@00=Wo0P00001X0?ooo`00IP3oool200000;H00?lI00<0
0000003Io`00fOl09`00fOl2000006H0oooo001T0?ooo`800000^000oaT00`0000000=Wo003Io`0Y
003Io`030000003oool0oooo06<0oooo001S0?ooo`0300000000oaT00?lI0;L00?lI00<00000003I
o`00fOl0:`00fOl00`000000oooo0?ooo`1R0?ooo`00H@3oool200000;X00?lI00<00000003Io`00
fOl0;000fOl200000680oooo001P0?ooo`0300000000oaT00?lI0;T00?lI00<00000003Io`00fOl0
;`00fOl00`000000oooo0?ooo`1O0?ooo`00GP3oool200000;`00?lI00<00000003Io`00fOl0<000
fOl00`000000oooo0?ooo`1N0?ooo`00G@3oool00`0000000?lI003o6@2l003o6@0300000000fOl0
0=Wo03400=Wo0P00001N0?ooo`00F`3oool200000;h00?lI00<00000003Io`00fOl0=000fOl00`00
0000oooo0?ooo`1K0?ooo`00FP3oool00`0000000?lI003o6@2n003o6@0300000000fOl00=Wo03D0
0=Wo00<000000?ooo`3oool0FP3oool005T0oooo00<00000003o6@00oaT0_P00oaT00`0000000=Wo
003Io`0g003Io`800000FP3oool005P0oooo00<00000003o6@00oaT0_`00oaT00`0000000=Wo003I
o`0i003Io`030000003oool0oooo05L0oooo001G0?ooo`0300000000oaT00?lI0<000?lI00<00000
003Io`00fOl0>P00fOl00`000000oooo0?ooo`1F0?ooo`00E@3oool200000<800?lI00<00000003I
o`00fOl0?000fOl2000005H0oooo001D0?ooo`0300000000oaT00?lI0<800?lI00<00000003Io`00
fOl0?P00fOl00`000000oooo0?ooo`1C0?ooo`00D`3oool00`0000000?lI003o6@32003o6@030000
0000fOl00=Wo04000=Wo00<000000?ooo`3oool0DP3oool00580oooo00<00000003o6@00oaT0``00
oaT00`0000000=Wo003Io`11003Io`030000003oool0oooo0540oooo001A0?ooo`0300000000oaT0
0?lI0<<00?lI00<00000003Io`00fOl0@`00fOl00`000000oooo0?ooo`1@0?ooo`00C`3oool20000
0<H00?lI00<00000003Io`00fOl0A000fOl200000500oooo001>0?ooo`0300000000oaT00?lI0<H0
0?lI00<00000003Io`00fOl0AP00fOl00`000000oooo0?ooo`1=0?ooo`00C@3oool00`0000000?lI
003o6@36003o6@0300000000fOl00=Wo04P00=Wo00<000000?ooo`3oool0C03oool004`0oooo00<0
0000003o6@00oaT0a`00oaT00`0000000=Wo003Io`19003Io`030000003oool0oooo04/0oooo001;
0?ooo`0300000000oaT00?lI0<L00?lI00<00000003Io`00fOl0B`00fOl00`000000oooo0?ooo`1:
0?ooo`00BP3oool00`0000000?lI003o6@38003o6@0300000000fOl00=Wo04`00=Wo0P00001:0?oo
o`00B@3oool00`0000000?lI003o6@39003o6@0300000000fOl00=Wo04d00=Wo00<000000?ooo`3o
ool0B03oool004P0oooo00<00000003o6@00oaT0b@00oaT00`0000000=Wo003Io`1?003Io`030000
003oool0oooo04L0oooo00170?ooo`0300000000oaT00?lI0<X00?lI00<00000003Io`00fOl0D000
fOl00`000000oooo0?ooo`160?ooo`00AP3oool00`0000000?lI003o6@3:003o6@0300000000fOl0
0=Wo05800=Wo00<000000?ooo`3oool0A@3oool004D0oooo00<000000??o00000000b`00oaT00`00
00000=Wo003Io`1C003Io`030000003oool0oooo04@0oooo00140?ooo`050000003co`00lol00??o
00000000b@00oaT00`0000000=Wo003Io`1E003Io`030000003oool0oooo04<0oooo00120?ooo`80
00001@3co`000`0000000?lI003o6@36003o6@0300000000fOl00=Wo05H00=Wo0P0000130?ooo`00
@@3oool00`000000lol00??o00060??o000300000000oaT00?lI0<D00?lI00<00000003Io`00fOl0
E`00fOl00`000000oooo0?ooo`110?ooo`00@@3oool00`000000lol00??o00070??o000300000000
oaT00?lI0<<00?lI00<00000003Io`00fOl0F@00fOl00`000000oooo0?ooo`100?ooo`00@03oool0
0`000000lol00??o00090??o000300000000oaT00?lI0<800?lI00<00000003Io`00fOl0FP00fOl0
0`000000oooo0?ooo`0o0?ooo`00?`3oool00`000000lol00??o000;0??o000300000000oaT00?lI
0<000?lI00<00000003Io`00fOl0G000fOl00`000000oooo0?ooo`0n0?ooo`00?P3oool00`000000
lol00??o000=0??o000300000000oaT00?lI0;l00?lI00<00000003Io`00fOl0G@00fOl00`000000
oooo0?ooo`0m0?ooo`00?@3oool00`000000lol00??o000?0??o000300000000oaT00?lI0;h00?lI
00<00000003Io`00fOl0GP00fOl00`000000oooo0?ooo`0l0?ooo`00?03oool00`000000lol00??o
000A0??o000300000000oaT00?lI0;`00?lI00<00000003Io`00fOl0G`00fOl00`000000oooo0?oo
o`0l0?ooo`00?03oool00`000000lol00??o000B0??o000300000000oaT00?lI0;/00?lI00<00000
003Io`00fOl0H000fOl00`000000oooo0?ooo`0k0?ooo`00>`3oool00`000000lol00??o000D0??o
000300000000oaT00?lI0;T00?lI00<00000003Io`00fOl0HP00fOl00`000000oooo0?ooo`0j0?oo
o`00>P3oool00`000000lol00??o000F0??o000300000000oaT00?lI0;P00?lI00<00000003Io`00
fOl0H`00fOl00`000000oooo0?ooo`0i0?ooo`00>@3oool00`000000lol00??o000H0??o00030000
0000oaT00?lI0;H00?lI00<00000003Io`00fOl0I@00fOl00`000000oooo0?ooo`0h0?ooo`00>03o
ool00`000000lol00??o000J0??o000300000000oaT00?lI0;D00?lI00<00000003Io`00fOl0IP00
fOl00`000000oooo0?ooo`0g0?ooo`00=`3oool00`000000lol00??o000L0??o000300000000oaT0
0?lI0;@00?lI00<00000003Io`00fOl0IP00fOl00`000000oooo0?ooo`0g0?ooo`00=`3oool00`00
0000lol00??o000M0??o000300000000oaT00?lI0;800?lI00<00000003Io`00fOl0J000fOl00`00
0000oooo0?ooo`0f0?ooo`00=P3oool00`000000lol00??o000O0??o000300000000oaT00?lI0;40
0?lI00<00000003Io`00fOl0J@00fOl00`000000oooo0?ooo`0e0?ooo`00=@3oool00`000000lol0
0??o000Q0??o000300000000oaT00?lI0:l00?lI00<00000003Io`00fOl0J`00fOl00`000000oooo
0?ooo`0d0?ooo`00=03oool00`000000lol00??o000S0??o000300000000oaT00?lI0:h00?lI00<0
0000003Io`00fOl0J`00fOl00`000000oooo0?ooo`0d0?ooo`00=03oool00`000000lol00??o000T
0??o000300000000oaT00?lI05h00?lI00D007@00000000000000000002L5P1:003o6@0300000000
fOl00=Wo06`00=Wo00<000000?ooo`3oool0<`3oool003<0oooo00<000000??o003co`009P3co`00
0`0000000?lI003o6@1L003o6@07001d0000M1@00?lI003o6@00oa@00000002L5P18003o6@030000
0000fOl00=Wo06h00=Wo00<000000?ooo`3oool0<P3oool00380oooo00<000000??o003co`00:03c
o`000`0000000?lI003o6@1P003o6@03002o2`00M1@00?lI04L00?lI00<00000003Io`00fOl0K`00
fOl00`000000oooo0?ooo`0a0?ooo`00<@3oool00`000000lol00??o000Z0??o000300000000oaT0
0?lI05h00?lI00<00=l?00002000gaT0A`00oaT00`0000000=Wo003Io`1`003Io`030000003oool0
oooo0340oooo000a0?ooo`030000003co`00lol002/0lol000<00000003o6@00oaT0F`00oaT01000
W0P0000000002000gaU8003o6@0300000000fOl00=Wo07400=Wo00<000000?ooo`3oool0<03oool0
0300oooo00<000000??o003co`00;@3co`000`0000000?lI003o6@1L003o6@03003O3`0000P00=lI
04H00?lI00<00000003Io`00fOl0L`00fOl00`000000oooo0?ooo`0_0?ooo`00;`3oool00`000000
lol00??o000_0??o000300000000oaT00?lI05`00?lI00<007@0002o6@00oaT0A@00oaT00`000000
0=Wo003Io`1d003Io`030000003oool0oooo02h0oooo000^0?ooo`030000003co`00lol00340lol0
00<00000003o6@00oaT0EP00oaT01`00_`/00008003O6@00oaT00=l?00002000gaT0AP00oaT00`00
00000=Wo003Io`1d003Io`030000003oool0oooo02h0oooo000^0?ooo`030000003co`00lol00380
lol000<00000003o6@00oaT0EP00oaT01@00g`l000000000000000000;lI04H00?lI00<00000003I
o`00fOl0MP00fOl00`000000oooo0?ooo`0]0?ooo`00;@3oool00`000000lol00??o000d0??o0003
00000000oaT00?lI0:000?lI00<00000003Io`00fOl0M`00fOl00`000000oooo0?ooo`0/0?ooo`00
;03oool00`000000lol00??o000f0??o000300000000oaT00?lI09h00?lI00<00000003Io`00fOl0
N@00fOl00`000000oooo0?ooo`0[0?ooo`00:`3oool00`000000lol00??o000h0??o000300000000
oaT00?lI09d00?lI00<00000003Io`00fOl0N@00fOl00`000000oooo0?ooo`0[0?ooo`00:`3oool0
0`000000lol00??o000i0??o000300000000oaT00?lI09`00?lI00<00000003Io`00fOl0NP00fOl0
0`000000oooo0?ooo`0Z0?ooo`00:P3oool00`000000lol00??o000k0??o000300000000oaT00?lI
09X00?lI00<00000003Io`00fOl0N`00fOl00`000000oooo0?ooo`0Z0?ooo`00:P3oool00`000000
lol00??o000l0??o000300000000oaT00?lI09T00?lI00<00000003Io`00fOl0O000fOl00`000000
oooo0?ooo`0Y0?ooo`00:@3oool00`000000lol00??o000n0??o000300000000oaT00?lI09L00?lI
00<00000003Io`00fOl0OP00fOl00`000000oooo0?ooo`0X0?ooo`00:03oool00`000000lol00??o
00100??o000300000000oaT00?lI09H00?lI00<00000003Io`00fOl0O`00fOl00`000000oooo0?oo
o`0W0?ooo`009`3oool00`000000lol00??o00120??o000300000000oaT00?lI09@00?lI00<00000
003Io`00fOl0P000fOl00`000000oooo0?ooo`0W0?ooo`009`3oool00`000000lol00??o00130??o
000300000000oaT00?lI09<00?lI00<00000003Io`00fOl0P@00fOl00`000000oooo0?ooo`0V0?oo
o`009`3oool00`000000lol00??o00140??o000300000000oaT00?lI09800?lI00<00000003Io`00
fOl0P@00fOl00`000000oooo0?ooo`0V0?ooo`009P3oool00`000000lol00??o00160??o00030000
0000oaT00?lI09000?lI00<00000003Io`00fOl0P`00fOl00`000000oooo0?ooo`0U0?ooo`009P3o
ool00`000000lol00??o00170??o000300000000oaT00?lI08l00?lI00<00000003Io`00fOl0P`00
fOl00`000000oooo0?ooo`0U0?ooo`009@3oool00`000000lol00??o00190??o000300000000oaT0
0?lI08d00?lI00<00000003Io`00fOl0Q@00fOl00`000000oooo0?ooo`0T0?ooo`00903oool00`00
0000lol00??o001;0??o000300000000oaT00?lI08`00?lI00<00000003Io`00fOl0QP00fOl00`00
0000oooo0?ooo`0S0?ooo`008`3oool00`000000lol00??o001=0??o000300000000oaT00?lI08/0
0?lI00<00000003Io`00fOl0QP00fOl00`000000oooo0?ooo`0S0?ooo`008`3oool00`000000lol0
0??o001>0??o000300000000oaT00?lI08T00?lI00<00000003Io`00fOl0R000fOl00`000000oooo
0?ooo`0R0?ooo`008P3oool00`000000lol00??o001@0??o000300000000oaT00?lI08P00?lI00<0
0000003Io`00fOl0R000fOl00`000000oooo0?ooo`0R0?ooo`008P3oool00`000000lol00??o001A
0??o000300000000oaT00?lI08H00?lI00<00000003Io`00fOl0RP00fOl00`000000oooo0?ooo`0Q
0?ooo`008@3oool00`000000lol00??o001C0??o000300000000oaT00?lI08D00?lI00<00000003I
o`00fOl0RP00fOl00`000000oooo0?ooo`0Q0?ooo`008@3oool00`000000lol00??o001D0??o0003
00000000oaT00?lI08<00?lI00<00000003Io`00fOl0S000fOl00`000000oooo0?ooo`0P0?ooo`00
8@3oool00`000000lol00??o001E0??o000300000000oaT00?lI08800?lI00<00000003Io`00fOl0
S000fOl00`000000oooo0?ooo`0P0?ooo`00803oool00`000000lol00??o001G0??o000300000000
oaT00?lI08400?lI00<00000003Io`00fOl0S@00fOl00`000000oooo0?ooo`0O0?ooo`00803oool0
0`000000lol00??o001H0??o000300000000oaT00?lI07l00?lI00<00000003Io`00fOl0SP00fOl0
0`000000oooo0?ooo`0O0?ooo`007`3oool00`000000lol00??o001J0??o000300000000oaT00?lI
07h00?lI00<00000003Io`00fOl0;@00fOl01@00_Y`000000000000000000:;o05`00=Wo00<00000
0?ooo`3oool07`3oool001l0oooo00<000000??o003co`00F`3co`000`0000000?lI003o6@1l003o
6@0300000000fOl00=Wo03000=Wo00<006<0002Ro`00fOl0G@00fOl00`000000oooo0?ooo`0N0?oo
o`007P3oool00`000000lol00??o001M0??o000300000000oaT00?lI07/00?lI00<00000003Io`00
fOl0<000fOl00`00H`000:;o003Io`1N003Io`030000003oool0oooo01d0oooo000M0?ooo`030000
003co`00lol005l0lol000<00000003o6@00oaT0NP00oaT00`0000000=Wo003Io`0/003Io`030025
B0000000000000<0000000<00:;o003Io`00fOl0G@00fOl00`000000oooo0?ooo`0L0?ooo`007@3o
ool00`000000lol00??o001P0??o000300000000oaT00?lI07P00?lI00<00000003Io`00fOl0;@00
fOl01P00XW@0001d003Io`00fOl006<0002Rof000=Wo00<000000?ooo`3oool0703oool001`0oooo
00<000000??o003co`00HP3co`000`0000000?lI003o6@1g003o6@0300000000fOl00=Wo02h00=Wo
00D008E8001S_`00fOl006<0002Ro`1Q003Io`030000003oool0oooo01/0oooo000L0?ooo`030000
003co`00lol006<0lol000<00000003o6@00oaT0M@00oaT00`0000000=Wo003Io`0`003Io`04000l
0000QMl006<0002Rof400=Wo00<000000?ooo`3oool06`3oool001/0oooo00<000000??o003co`00
I@3co`000`0000000?lI003o6@1d003o6@0300000000fOl00=Wo03000=Wo00@00;jL0000B000?000
0:;oH@00fOl00`000000oooo0?ooo`0K0?ooo`006`3oool00`000000lol00??o001V0??o00030000
0000oaT00?lI07<00?lI00<00000003Io`00fOl0<@00fOl00`00XW@00000002Ro`1R003Io`030000
003oool0oooo01X0oooo000J0?ooo`030000003co`00lol006P0lol000<00000003o6@00oaT0L@00
oaT00`0000000=Wo003Io`2G003Io`030000003oool0oooo01X0oooo000J0?ooo`030000003co`00
lol006T0lol000<00000003o6@00oaT0L000oaT00`0000000=Wo003Io`2H003Io`030000003oool0
oooo01T0oooo000I0?ooo`030000003co`00lol006/0lol000<00000003o6@00oaT0KP00oaT00`00
00000=Wo003Io`2I003Io`030000003oool0oooo01T0oooo000I0?ooo`030000003co`00lol006`0
lol000<00000003o6@00oaT0K@00oaT00`0000000=Wo003Io`2I003Io`8000006P3oool001T0oooo
00<000000??o003co`00K@3co`000`0000000?lI003o6@1[003o6@0300000000fOl00=Wo09P00=Wo
0P0000000`0c0?l000000?ooo`0I0?ooo`00603oool00`000000lol00??o001_0??o000300000000
oaT00?lI06X00?lI00<00000003Io`00fOl0U@00fOl3000000@0<`3o00<000000?ooo`3oool05`3o
ool001P0oooo00<000000??o003co`00L03co`000`0000000?lI003o6@1Y003o6@0300000000fOl0
0=Wo09<00=Wo0P00000703<0o`030000003oool0oooo01L0oooo000H0?ooo`030000003co`00lol0
0740lol000<00000003o6@00oaT0I`00oaT00`0000000=Wo003Io`2B003Io`8000002@0c0?l00`00
0000oooo0?ooo`0G0?ooo`00603oool00`000000lol00??o001b0??o000300000000oaT00?lI06H0
0?lI00<00000003Io`00fOl0S`00fOl3000000/0<`3o00<000000?ooo`3oool05`3oool001L0oooo
00<000000??o003co`00M03co`000`0000000?lI003o6@1T003o6@0300000000fOl00=Wo08h00=Wo
0P00000>03<0o`030000003oool0oooo01L0oooo000G0?ooo`030000003co`00lol007D0lol000<0
0000003o6@00oaT0H`00oaT00`0000000=Wo003Io`2;003Io`<000004@0c0?l00`000000oooo0?oo
o`0F0?ooo`005`3oool00`000000lol00??o001f0??o000300000000oaT00?lI06800?lI00<00000
003Io`00fOl0R@00fOl2000001@0<`3o00<000000?ooo`3oool05P3oool001H0oooo00<000000??o
003co`00N03co`000`0000000?lI003o6@1P003o6@0300000000fOl00=Wo08P00=Wo0P00000G03<0
o`030000003oool0oooo01D0oooo000F0?ooo`030000003co`00lol007T0lol000<00000003o6@00
oaT0G`00oaT00`0000000=Wo003Io`25003Io`<000006@0c0?l00`000000oooo0?ooo`0E0?ooo`00
5@3oool00`000000lol00??o001k0??o000300000000oaT00?lI05d00?lI00<00000003Io`00fOl0
Q000fOl2000001`0<`3o00<000000?ooo`3oool05@3oool001D0oooo00<000000??o003co`00O03c
o`000`0000000?lI003o6@1L003o6@0300000000fOl00=Wo08400=Wo0`00000O03<0o`030000003o
ool0oooo01@0oooo000E0?ooo`030000003co`00lol007d0lol000<00000003o6@00oaT0FP00oaT0
0`0000000=Wo003Io`20003Io`8000008P0c0?l00`000000oooo0?ooo`0D0?ooo`00503oool00`00
0000lol00??o001o0??o000300000000oaT00?lI05T00?lI00<00000003Io`00fOl0OP00fOl20000
02D0<`3o00<000000?ooo`3oool04`3oool001@0oooo00<000000??o003co`00P03co`000`000000
0?lI003o6@1H003o6@0300000000fOl00=Wo07/00=Wo0`00000W03<0o`030000003oool0oooo01<0
oooo000C0?ooo`030000003co`00lol00880lol000<00000003o6@00oaT0EP00oaT00`0000000=Wo
003Io`1j003Io`800000:P0c0?l00`000000oooo0?ooo`0C0?ooo`004`3oool00`000000lol00??o
00230??o000300000000oaT00?lI05D00?lI00<00000003Io`00fOl0M`00fOl3000002d0<`3o00<0
00000?ooo`3oool04P3oool001<0oooo00<000000??o003co`00Q03co`000`0000000?lI003o6@1C
003o6@0300000000fOl00=Wo07H00=Wo0P00000`03<0o`030000003oool0oooo0180oooo000C0?oo
o`030000003co`00lol008D0lol000<00000003o6@00oaT0DP00oaT00`0000000=Wo003Io`1d003I
o`800000<P0c0?l00`000000oooo0?ooo`0B0?ooo`004`3oool00`000000lol00??o00260??o0003
00000000oaT00?lI05400?lI00<00000003Io`00fOl0L@00fOl3000003@0<`3o00<000000?ooo`3o
ool04P3oool00180oooo00<000000??o003co`00R03co`000`0000000?lI003o6@1?003o6@030000
0000fOl00=Wo07000=Wo0P00000h03<0o`030000003oool0oooo0140oooo000B0?ooo`030000003c
o`00lol008T0lol000<00000003o6@00oaT0CP00oaT00`0000000=Wo003Io`1]003Io`<00000>P0c
0?l00`000000oooo0?ooo`0A0?ooo`004@3oool00`000000lol00??o002;0??o000300000000oaT0
0?lI04`00?lI00<00000003Io`00fOl0K000fOl2000003d0<`3o00<000000?ooo`3oool04@3oool0
0140oooo00<000000??o003co`00S03co`000`0000000?lI003o6@1;003o6@0300000000fOl00=Wo
06X00=Wo0P00001003<0o`030000003oool0oooo0100oooo000A0?ooo`030000003co`00lol008d0
lol000<00000003o6@00oaT0B@00oaT00`0000000=Wo003Io`1X003Io`<00000@P0c0?l00`000000
oooo0?ooo`0@0?ooo`004@3oool00`000000lol00??o002>0??o000300000000oaT00?lI04P00?lI
00<00000003Io`00fOl0IP00fOl2000004D0<`3o00<000000?ooo`3oool0403oool00140oooo00<0
00000??o003co`00S`3co`000`0000000?lI003o6@17003o6@0300000000fOl00=Wo06<00=Wo0`00
001703<0o`030000003oool0oooo0100oooo000@0?ooo`030000003co`00lol00940lol000<00000
003o6@00oaT0A@00oaT00`0000000=Wo003Io`1R003Io`800000BP0c0?l00`000000oooo0?ooo`0@
0?ooo`00403oool00`000000lol00??o002B0??o000300000000oaT00?lI04@00?lI00<00000003I
o`00fOl0H000fOl2000004d0<`3o00<000000?ooo`3oool03`3oool00100oooo00<000000??o003c
o`00T`3co`000`0000000?lI003o6@12003o6@0300000000fOl00=Wo05h00=Wo0`00001?03<0o`03
0000003oool0oooo00l0oooo000?0?ooo`030000003co`00lol009D0lol000<00000003o6@00oaT0
@@00oaT00`0000000=Wo003Io`1L003Io`800000D`0c0?l00`000000oooo0?ooo`0>0?ooo`003`3o
ool00`000000lol00??o002F0??o000300000000oaT00?lI04000?lI00<00000003Io`00fOl0F@00
fOl3000005D0<`3o00<000000?ooo`3oool03P3oool000l0oooo00<000000??o003co`00U`3co`00
0`0000000?lI003o6@0n003o6@0300000000fOl00=Wo05P00=Wo0P00001H03<0o`030000003oool0
oooo00h0oooo000?0?ooo`030000003co`00lol009P0lol000<00000003o6@00oaT0?@00oaT00`00
00000=Wo003Io`1F003Io`800000FP0c0?l00`000000oooo0?ooo`0>0?ooo`003P3oool00`000000
lol00??o002J0??o000300000000oaT00?lI03/00?lI00<00000003Io`00fOl0E000fOl3000005`0
<`3o00<000000?ooo`3oool03P3oool000h0oooo00<000000??o003co`00V`3co`000`0000000?lI
003o6@0j003o6@0300000000fOl00=Wo05800=Wo0P00001P03<0o`030000003oool0oooo00d0oooo
000>0?ooo`030000003co`00lol009`0lol000<00000003o6@00oaT0>000oaT00`0000000=Wo003I
o`1@003Io`<00000HP0c0?l00`000000oooo0?ooo`0=0?ooo`003P3oool00`000000lol00??o002M
0??o000300000000oaT00?lI03L00?lI00<00000003Io`00fOl0CP00fOl2000006D0<`3o00<00000
0?ooo`3oool03@3oool000h0oooo00<000000??o003co`00WP3co`000`0000000?lI003o6@0f003o
6@0300000000fOl00=Wo04`00=Wo0P00001W03<0o`030000003oool0oooo00d0oooo000=0?ooo`03
0000003co`00lol00:00lol000<00000003o6@00oaT0=000oaT00`0000000=Wo003Io`1:003Io`<0
0000J@0c0?l00`000000oooo0?ooo`0=0?ooo`003@3oool00`000000lol00??o002Q0??o00030000
0000oaT00?lI03<00?lI00<00000003Io`00fOl0B000fOl2000006d0<`3o00<000000?ooo`3oool0
303oool000d0oooo00<000000??o003co`00XP3co`000`0000000?lI003o6@0a003o6@0300000000
fOl00=Wo04H00=Wo0`00001_03<0o`030000003oool0oooo00`0oooo000=0?ooo`030000003co`00
lol00:<0lol000<00000003o6@00oaT0<000oaT00`0000000=Wo003Io`14003Io`800000LP0c0?l0
0`000000oooo0?ooo`0<0?ooo`003@3oool00`000000lol00??o002T0??o000300000000oaT00?lI
02l00?lI00<00000003Io`00fOl0@@00fOl3000007@0<`3o00<000000?ooo`3oool0303oool000`0
oooo00<000000??o003co`00YP3co`000`0000000?lI003o6@0]003o6@0300000000fOl00=Wo0400
0=Wo0P00001g03<0o`030000003oool0oooo00`0oooo000<0?ooo`030000003co`00lol00:L0lol0
00<00000003o6@00oaT0;000oaT00`0000000=Wo003Io`0n003Io`800000NP0c0?l00`000000oooo
0?ooo`0;0?ooo`00303oool00`000000lol00??o002X0??o000300000000oaT00?lI02X00?lI00<0
0000003Io`00fOl0?000fOl3000007`0<`3o00<000000?ooo`3oool02`3oool000`0oooo00<00000
0??o003co`00Z@3co`000`0000000?lI003o6@0Y003o6@0300000000fOl00=Wo03X00=Wo0P00001o
03<0o`030000003oool0oooo00/0oooo000<0?ooo`030000003co`00lol00:X0lol000<00000003o
6@00oaT09`00oaT00`0000000=Wo003Io`0h003Io`<00000P@0c0?l00`000000oooo0?ooo`0;0?oo
o`00303oool00`000000lol00??o002[0??o000300000000oaT00?lI02H00?lI00<00000003Io`00
fOl0=P00fOl2000008@0<`3o00<000000?ooo`3oool02`3oool000`0oooo00<000000??o003co`00
[03co`000`0000000?lI003o6@0U003o6@0300000000fOl00=Wo03@00=Wo0P00000a03<0o`0502H0
0000000000000000000G0?l0D00c0?l00`000000oooo0?ooo`0;0?ooo`00303oool00`000000lol0
0??o002]0??o000300000000oaT00?lI02<00?lI00<00000003Io`00fOl0<P00fOl300000380<`3o
00L09P000000_`0c0?l0<`3o03<0W00?00005`3o04l0<`3o00<000000?ooo`3oool02`3oool000/0
oooo00<000000??o003co`00[`3co`000`0000000?lI003o6@0R003o6@0300000000fOl00=Wo0300
0=Wo0P00000j03<0o`0303<0M0000;l0<`3o04l0<`3o00<000000?ooo`3oool02P3oool000/0oooo
00<000000??o003co`00/03co`000`0000000?lI003o6@0P003o6@0300000000fOl00=Wo02h00=Wo
0`00000l03<0o`0303<0M0000;l0<`3o04l0<`3o00<000000?ooo`3oool02P3oool000/0oooo00<0
00000??o003co`00/@3co`000`0000000?lI003o6@0O003o6@0300000000fOl00=Wo02`00=Wo0P00
000o03<0o`030200000G0?l0<`3o04l0<`3o00<000000?ooo`3oool02P3oool000/0oooo00<00000
0??o003co`00/P3co`000`0000000?lI003o6@0N003o6@0300000000fOl00=Wo02X00=Wo0P00000l
03<0o`0303<0_`0G000000000080000000<03`3O03<0o`0c0?l0C`0c0?l00`000000oooo0?ooo`0:
0?ooo`002`3oool00`000000lol00??o002c0??o000300000000oaT00?lI01`00?lI00<00000003I
o`00fOl0:000fOl3000003h0<`3o00<0<`2o01L0M00V0?l0E00c0?l00`000000oooo0?ooo`0:0?oo
o`002`3oool00`000000lol00??o002d0??o000300000000oaT00?lI01/00?lI00<00000003Io`00
fOl09P00fOl200000440<`3o00<0<`2o01L0M00V0?l0E00c0?l00`000000oooo0?ooo`0:0?ooo`00
2`3oool00`000000lol00??o002e0??o000300000000oaT00?lI01T00?lI00<00000003Io`00fOl0
9000fOl3000004<0<`3o00<0<`2o01L0000000000P0000000`0007@09P3o03<0o`1?03<0o`030000
003oool0oooo00X0oooo000;0?ooo`030000003co`00lol00;H0lol000<00000003o6@00oaT06000
oaT00`0000000=Wo003Io`0R003Io`800000W@0c0?l00`000000oooo0?ooo`0:0?ooo`002`3oool0
0`000000lol00??o002g0??o000300000000oaT00?lI01H00?lI00<00000003Io`00fOl08@00fOl2
000009l0<`3o00<000000?ooo`3oool02P3oool000/0oooo00<000000??o003co`00^03co`000`00
00000?lI003o6@0E003o6@0300000000fOl00=Wo01h00=Wo0`00002Q03<0o`030000003oool0oooo
00X0oooo000:0?ooo`030000003co`00lol00;X0lol000<00000003o6@00oaT05000oaT00`000000
0=Wo003Io`0L003Io`800000Y@0c0?l00`000000oooo0?ooo`090?ooo`002P3oool00`000000lol0
0??o002k0??o000300000000oaT00?lI01800?lI00<00000003Io`00fOl06P00fOl300000:L0<`3o
00<000000?ooo`3oool02@3oool000X0oooo00<000000??o003co`00_03co`000`0000000?lI003o
6@0A003o6@0300000000fOl00=Wo01P00=Wo0P00002Z03<0o`030000003oool0oooo00T0oooo000:
0?ooo`030000003co`00lol00;d0lol000<00000003o6@00oaT03`00oaT00`0000000=Wo003Io`0G
003Io`800000[00c0?l00`000000oooo0?ooo`090?ooo`002P3oool00`000000lol00??o002n0??o
000300000000oaT00?lI00h00?lI00<00000003Io`00fOl05000fOl300000:h0<`3o00<000000?oo
o`3oool02@3oool000X0oooo00<000000??o003co`00_`3co`000`0000000?lI003o6@0=003o6@03
00000000fOl00=Wo01800=Wo0P00002a03<0o`030000003oool0oooo00T0oooo000:0?ooo`030000
003co`00lol00<00lol000<00000003o6@00oaT02`00oaT00`0000000=Wo003Io`0@003Io`<00000
/`0c0?l00`000000oooo0?ooo`090?ooo`002P3oool00`000000lol00??o00310??o000300000000
oaT00?lI00X00?lI00<00000003Io`00fOl03P00fOl200000;H0<`3o00<000000?ooo`3oool02@3o
ool000X0oooo00<000000??o003co`00`P3co`000`0000000?lI003o6@08003o6@0300000000fOl0
0=Wo00d00=Wo0P00002h03<0o`030000003oool0oooo00T0oooo000:0?ooo`030000003co`00lol0
0<<0lol000<00000003o6@00oaT01`00oaT00`0000000=Wo003Io`0:003Io`<00000^P0c0?l00`00
0000oooo0?ooo`090?ooo`002P3oool00`000000lol00??o00340??o000300000000oaT00?lI00D0
0?lI00<00000003Io`00fOl02@00fOl200000;d0<`3o00<000000?ooo`3oool02@3oool000X0oooo
00<000000??o003co`00a@3co`000`0000000?lI003o6@04003o6@0300000000fOl00=Wo00H00=Wo
0`00002o03<0o`030000003oool0oooo00T0oooo000:0?ooo`030000003co`00lol004/0lol000<0
KP000000000000000`0000000`1^_`00lol00??o001b0??o000300000000oaT00?lI00<00?lI00<0
0000003Io`00fOl01000fOl200000<80<`3o00<000000?ooo`3oool02@3oool000X0oooo00<00000
0??o003co`00B`3co`000`2fM00000000;Ko00020??o00030=FL002Dg`00lol007@0lol000D00000
003o6@00oaT00?lI00000005003Io`800000a00c0?l00`000000oooo0?ooo`090?ooo`002P3oool0
0`000000lol00??o001<0??o00030?>o00000000U=l007T0lol000@00000003o6@00oaT000000P00
fOl300000<H0<`3o00<000000?ooo`3oool02@3oool000X0oooo00<000000??o003co`00C@3co`00
0`3cg`00A00004BL001i0??o0080000000<00=Wo000000000000b@0c0?l00`000000oooo0?ooo`09
0?ooo`002P3oool00`000000lol00??o001?0??o000309A80014W000lol007P0lol0cP00000;0?oo
o`002P3oool00`000000lol00??o001@0??o000309A8002fo`00lol007H0lol000<000000?l0003o
0000b`3o00000`000000oooo0?ooo`090?ooo`002P3oool00`000000lol00??o001;0??o00030=FL
001^_`00lol00080lol000<0]W@006jo003co`00M@3co`000`000000o`000?l0003<0?l000030000
003oool0oooo00T0oooo000:0?ooo`030000003co`00lol004/0lol000L0lkl00000002fo`00lol0
0?>o00000000U=l007D0lol000<000000?l0003o0000c@3o00000`000000oooo0?ooo`090?ooo`00
2P3oool00`000000lol00??o001<0??o00050?>o0000000000000000002Dg`00M@3co`000`000000
o`000?l0003>0?l000030000003oool0oooo00T0oooo000:0?ooo`030000003co`00lol00<D0lol0
00<000000?l0003o0000c`3o00000`000000oooo0?ooo`090?ooo`002P3oool00`000000lol00??o
00340??o00030000003o0000o`000=00o`0000<000000?ooo`3oool02@3oool000X0oooo00<00000
0??o003co`00``3co`000`000000o`000?l0003A0?l000030000003oool0oooo00T0oooo000:0?oo
o`030000003co`00lol00<80lol000<000000?l0003o0000dP3o00000`000000oooo0?ooo`090?oo
o`002P3oool00`000000lol00??o00310??o00030000003o0000o`000=<0o`0000<000000?ooo`3o
ool02@3oool000X0oooo00<000000??o003co`00`03co`000`000000o`000?l0003D0?l000030000
003oool0oooo00T0oooo000:0?ooo`030000003co`00lol00;l0lol000<000000?l0003o0000e@3o
00000`000000oooo0?ooo`090?ooo`002P3oool00`000000lol00??o002n0??o00030000003o0000
o`000=H0o`0000<000000?ooo`3oool02@3oool000X0oooo00<000000??o003co`00_@3co`000`00
0000o`000?l0003G0?l000030000003oool0oooo00T0oooo000:0?ooo`030000003co`00lol00;`0
lol000<000000?l0003o0000f03o00000`000000oooo0?ooo`090?ooo`002P3oool00`000000lol0
0??o002k0??o00030000003o0000o`000=T0o`0000<000000?ooo`3oool02@3oool000X0oooo00<0
00000??o003co`00^P3co`000`000000o`000?l0003J0?l000030000003oool0oooo00T0oooo000;
0?ooo`030000003co`00lol00;P0lol000<000000?l0003o0000f`3o00000`000000oooo0?ooo`09
0?ooo`002`3oool00`000000lol00??o002g0??o00030000003o0000o`000=/0o`0000<000000?oo
o`3oool02P3oool000/0oooo00<000000??o003co`00]P3co`000`000000o`000?l0003L0?l00003
0000003oool0oooo00X0oooo000;0?ooo`030000003co`00lol00;D0lol000<000000?l0003o0000
g@3o00000`000000oooo0?ooo`0:0?ooo`002`3oool00`000000lol00??o002d0??o00030000003o
0000o`000=h0o`0000<000000?ooo`3oool02P3oool000/0oooo00<000000??o003co`00/`3co`00
0`000000o`000?l0003O0?l000030000003oool0oooo00X0oooo000;0?ooo`030000003co`00lol0
0;80lol000<000000?l0003o0000h03o00000`000000oooo0?ooo`0:0?ooo`002`3oool00`000000
lol00??o002a0??o00030000003o0000o`000>40o`0000<000000?ooo`3oool02P3oool000/0oooo
00<000000??o003co`00/03co`000`000000o`000?l0003R0?l000030000003oool0oooo00X0oooo
000;0?ooo`030000003co`00lol00:l0lol000<000000?l0003o0000h`3o00000`000000oooo0?oo
o`0:0?ooo`00303oool00`000000lol00??o002]0??o00030000003o0000o`000><0o`0000<00000
0?ooo`3oool02`3oool000`0oooo00<000000??o003co`00[03co`000`000000o`000?l0003T0?l0
00030000003oool0oooo00/0oooo000<0?ooo`030000003co`00lol00:/0lol000<000000?l0003o
0000i@3o00000`000000oooo0?ooo`0;0?ooo`00303oool00`000000lol00??o002Z0??o00030000
003o0000o`000>H0o`0000<000000?ooo`3oool02`3oool000`0oooo00<000000??o003co`00Z@3c
o`000`000000o`000?l0003W0?l000030000003oool0oooo00/0oooo000<0?ooo`030000003co`00
lol00:P0lol000<000000?l0003o0000j03o00000`000000oooo0?ooo`0;0?ooo`00303oool00`00
0000lol00??o002W0??o00030000003o0000o`000>P0o`0000<000000?ooo`3oool0303oool000`0
oooo00<000000??o003co`00YP3co`000`000000o`000?l0003Y0?l000030000003oool0oooo00`0
oooo000=0?ooo`030000003co`00lol00:@0lol000<000000?l0003o0000jP3o00000`000000oooo
0?ooo`0<0?ooo`003@3oool00`000000lol00??o002S0??o00030000003o0000o`000>/0o`0000<0
00000?ooo`3oool0303oool000d0oooo00<000000??o003co`00XP3co`000`000000o`000?l0003/
0?l000030000003oool0oooo00`0oooo000=0?ooo`030000003co`00lol00:40lol000<000000?l0
003o0000k@3o00000`000000oooo0?ooo`0<0?ooo`003@3oool00`000000lol00??o002P0??o0003
0000003o0000o`000>d0o`0000<000000?ooo`3oool03@3oool000h0oooo00<000000??o003co`00
WP3co`000`000000o`000?l0003^0?l000030000003oool0oooo00d0oooo000>0?ooo`030000003c
o`00lol009d0lol000<000000?l0003o0000k`3o00000`000000oooo0?ooo`0=0?ooo`003P3oool0
0`000000lol00??o002L0??o00030000003o0000o`000?00o`0000<000000?ooo`3oool03@3oool0
00h0oooo00<000000??o003co`00V`3co`000`000000o`000?l0003a0?l000030000003oool0oooo
00d0oooo000>0?ooo`030000003co`00lol009X0lol000<000000?l0003o0000l@3o00000`000000
oooo0?ooo`0>0?ooo`003`3oool00`000000lol00??o002H0??o00030000003o0000o`000?80o`00
00<000000?ooo`3oool03P3oool000l0oooo00<000000??o003co`00U`3co`000`000000o`000?l0
003c0?l000030000003oool0oooo00h0oooo000?0?ooo`030000003co`00lol009H0lol000<00000
0?l0003o0000m03o00000`000000oooo0?ooo`0>0?ooo`003`3oool00`000000lol00??o002E0??o
00030000003o0000o`000?@0o`0000<000000?ooo`3oool03`3oool00100oooo00<000000??o003c
o`00T`3co`000`000000o`000?l0003e0?l000030000003oool0oooo00l0oooo000@0?ooo`030000
003co`00lol00980lol000<000000?l0003o0000mP3o00000`000000oooo0?ooo`0?0?ooo`00403o
ool00`000000lol00??o002A0??o00030000003o0000o`000?H0o`0000<000000?ooo`3oool0403o
ool00140oooo00<000000??o003co`00S`3co`000`000000o`000?l0003g0?l000030000003oool0
oooo0100oooo000A0?ooo`030000003co`00lol008h0lol000<000000?l0003o0000n03o00000`00
0000oooo0?ooo`0@0?ooo`004@3oool00`000000lol00??o002=0??o00030000003o0000o`000?T0
o`0000<000000?ooo`3oool0403oool00140oooo00<000000??o003co`00S03co`000`000000o`00
0?l0003i0?l000030000003oool0oooo0140oooo000A0?ooo`030000003co`00lol008/0lol000<0
00000?l0003o0000nP3o00000`000000oooo0?ooo`0A0?ooo`004P3oool00`000000lol00??o0029
0??o00030000003o0000o`000?/0o`0000<000000?ooo`3oool04@3oool00180oooo00<000000??o
003co`00R03co`000`000000o`000?l0003l0?l000030000003oool0oooo0140oooo000C0?ooo`03
0000003co`00lol008H0lol000<000000?l0003o0000o03o00000`000000oooo0?ooo`0B0?ooo`00
4`3oool00`000000lol00??o00250??o00030000003o0000o`000?d0o`0000<000000?ooo`3oool0
4P3oool001<0oooo00<000000??o003co`00Q03co`000`000000o`000?l0003n0?l000030000003o
ool0oooo0180oooo000C0?ooo`030000003co`00lol008<0lol000<000000?l0003o0000oP3o0000
0`000000oooo0?ooo`0C0?ooo`004`3oool00`000000lol00??o00220??o00030000003o0000o`00
0?l0o`0000<000000?ooo`3oool04`3oool001@0oooo00<000000??o003co`00P03co`000`000000
o`000?l0003o0?l00040o`0000<000000?ooo`3oool04`3oool001@0oooo00<000000??o003co`00
O`3co`000`000000o`000?l0003o0?l00080o`0000<000000?ooo`3oool04`3oool001D0oooo00<0
00000??o003co`00O@3co`000`000000o`000?l0003o0?l00080o`0000<000000?ooo`3oool0503o
ool001D0oooo00<000000??o003co`00O03co`000`000000o`000?l0003o0?l000<0o`0000<00000
0?ooo`3oool0503oool001D0oooo00<000000??o003co`00N`3co`000`000000o`000?l0003o0?l0
00<0o`0000<000000?ooo`3oool05@3oool001H0oooo00<000000??o003co`00N@3co`000`000000
o`000?l0003o0?l000@0o`0000<000000?ooo`3oool05@3oool001H0oooo00<000000??o003co`00
N03co`000`000000o`000?l0003o0?l000D0o`0000<000000?ooo`3oool05@3oool001L0oooo00<0
00000??o003co`00MP3co`000`000000o`000?l0003o0?l000D0o`0000<000000?ooo`3oool05P3o
ool001L0oooo00<000000??o003co`00M@3co`000`000000o`000?l0003o0?l000H0o`0000<00000
0?ooo`3oool05P3oool001L0oooo00<000000??o003co`00M03co`000`000000o`000?l0003o0?l0
00H0o`0000<000000?ooo`3oool05`3oool001P0oooo00<000000??o003co`00LP3co`000`000000
o`000?l0003o0?l000L0o`0000<000000?ooo`3oool05`3oool001P0oooo00<000000??o003co`00
L@3co`000`000000o`000?l0003o0?l000P0o`0000<000000?ooo`3oool05`3oool001P0oooo00<0
00000??o003co`00L03co`000`000000o`000?l0003o0?l000T0o`0000<000000?ooo`3oool05`3o
ool001P0oooo00<000000??o003co`00K`3co`000`000000o`000?l0003o0?l000T0o`0000<00000
0?ooo`3oool0603oool001T0oooo00<000000??o003co`00K@3co`000`000000o`000?l0003o0?l0
00T0o`0000<000000?ooo`3oool06@3oool001T0oooo00<000000??o003co`00K03co`000`000000
o`000?l0003o0?l000X0o`0000<000000?ooo`3oool06@3oool001T0oooo00<000000??o003co`00
J`3co`000`000000o`000?l0003o0?l000/0o`0000<000000?ooo`3oool06@3oool001X0oooo00<0
00000??o003co`00J@3co`000`000000o`000?l0003o0?l000`0o`0000<000000?ooo`3oool06@3o
ool001X0oooo00<000000??o003co`00J03co`000`000000o`000?l0003o0?l000`0o`0000<00000
0?ooo`3oool06P3oool001/0oooo00<000000??o003co`00IP3co`000`000000o`000?l0003o0?l0
00d0o`0000<000000?ooo`3oool06P3oool001/0oooo00<000000??o003co`00I@3co`000`000000
o`000?l0003o0?l000d0o`0000<000000?ooo`3oool06`3oool001`0oooo00<000000??o003co`00
H`3co`000`000000o`000?l0003o0?l000d0o`0000<000000?ooo`3oool0703oool001`0oooo00<0
00000??o003co`00HP3co`000`000000o`000?l0003o0?l000h0o`0000<000000?ooo`3oool0703o
ool001d0oooo00<000000??o003co`00H03co`000`000000o`000?l0003o0?l000l0o`0000<00000
0?ooo`3oool0703oool001d0oooo00<000000??o003co`00G`3co`000`000000o`000?l0003o0?l0
0100o`0000<000000?ooo`3oool0703oool001h0oooo00<000000??o003co`00G@3co`000`000000
o`000?l0003o0?l00100o`0000<000000?ooo`3oool07@3oool001l0oooo00<000000??o003co`00
F`3co`000`000000o`000?l0003o0?l00100o`0000<000000?ooo`3oool07P3oool001l0oooo00<0
00000??o003co`00FP3co`000`000000o`000?l0003o0?l00140o`0000<000000?ooo`3oool07P3o
ool00200oooo00<000000??o003co`00F03co`000`000000o`000?l0003o0?l00140o`0000<00000
0?ooo`3oool07`3oool00200oooo00<000000??o003co`00E`3co`000`000000o`000?l0003o0?l0
0180o`0000<000000?ooo`3oool07`3oool00240oooo00<000000??o003co`00E@3co`000`000000
o`000?l0003o0?l00180o`0000<000000?ooo`3oool0803oool00240oooo00<000000??o003co`00
E03co`000`000000o`000?l0003o0?l001<0o`0000<000000?ooo`3oool0803oool00240oooo00<0
00000??o003co`00D`3co`000`000000o`000?l0003o0?l001<0o`0000<000000?ooo`3oool08@3o
ool00280oooo00<000000??o003co`00D@3co`000`000000o`000?l0003o0?l001<0o`0000<00000
0?ooo`3oool08P3oool00280oooo00<000000??o003co`00D03co`000`000000o`000?l0003o0?l0
01@0o`0000<000000?ooo`3oool08P3oool002<0oooo00<000000??o003co`00CP3co`000`000000
o`000?l0003o0?l001@0o`0000<000000?ooo`3oool08`3oool002<0oooo00<000000??o003co`00
C@3co`000`000000o`000?l0003o0?l001D0o`0000<000000?ooo`3oool08`3oool002@0oooo00<0
00000??o003co`00B`3co`000`000000o`000?l0003o0?l001H0o`0000<000000?ooo`3oool08`3o
ool002D0oooo00<000000??o003co`00B@3co`000`000000o`000?l0003o0?l001H0o`0000<00000
0?ooo`3oool0903oool002H0oooo00<000000??o003co`00A`3co`000`000000o`000?l0003o0?l0
01L0o`0000<000000?ooo`3oool0903oool002H0oooo00<000000??o003co`00AP3co`000`000000
o`000?l0003o0?l001L0o`0000<000000?ooo`3oool09@3oool002L0oooo00<000000??o003co`00
A03co`000`000000o`000?l0003o0?l001L0o`0000<000000?ooo`3oool09P3oool002L0oooo00<0
00000??o003co`00@`3co`000`000000o`000?l0003o0?l001P0o`0000<000000?ooo`3oool09P3o
ool002L0oooo00<000000??o003co`00@P3co`000`000000o`000?l0003o0?l001P0o`0000<00000
0?ooo`3oool09`3oool002P0oooo00<000000??o003co`00@03co`000`000000o`000?l0003o0?l0
01T0o`0000<000000?ooo`3oool09`3oool002T0oooo00<000000??o003co`00?P3co`000`000000
o`000?l0003o0?l001T0o`0000<000000?ooo`3oool0:03oool002X0oooo00<000000??o003co`00
?03co`000`000000o`000?l0002H0?l000H00000NP3o00000`000000oooo0?ooo`0Y0?ooo`00:P3o
ool00`000000lol00??o000k0??o00030000003o0000o`0009/0o`000P2L001l0?l000030000003o
ool0oooo02T0oooo000[0?ooo`030000003co`00lol003T0lol000<000000?l0003o0000W03o0002
09`007/0o`0000<000000?ooo`3oool0:P3oool002/0oooo00<000000??o003co`00>03co`000`00
0000o`000?l0002M0?l00080W000NP3o00000`000000oooo0?ooo`0[0?ooo`00;03oool00`000000
lol00??o000f0??o00030000003o0000o`0009h0o`000P2L001j0?l000030000003oool0oooo02/0
oooo000]0?ooo`030000003co`00lol003@0lol000<000000?l0003o0000W`3o000209`007T0o`00
00<000000?ooo`3oool0;03oool002h0oooo00<000000??o003co`00<P3co`000`000000o`000?l0
002P0?l00080W000N@3o00000`000000oooo0?ooo`0/0?ooo`00;P3oool00`000000lol00??o000a
0??o00030000003o0000o`0009h0o`0000<0g`000000000000000P2L001h0?l000030000003oool0
oooo02d0oooo000_0?ooo`030000003co`00lol002l0lol000<000000?l0003o0000X@3o00000`3O
0000000009`0001g0?l000030000003oool0oooo02h0oooo000`0?ooo`030000003co`00lol002d0
lol000<000000?l0003o0000o`3o000L0?l000030000003oool0oooo02l0oooo000a0?ooo`030000
003co`00lol002/0lol000<000000?l0003o0000o`3o000L0?l000030000003oool0oooo0300oooo
000a0?ooo`030000003co`00lol002X0lol000<000000?l0003o0000o`3o000L0?l000030000003o
ool0oooo0340oooo000b0?ooo`030000003co`00lol002P0lol000<000000?l0003o0000o`3o000M
0?l000030000003oool0oooo0340oooo000c0?ooo`030000003co`00lol002H0lol000<000000?l0
003o0000o`3o000M0?l000030000003oool0oooo0380oooo000d0?ooo`030000003co`00lol002@0
lol000<000000?l0003o0000o`3o000M0?l000030000003oool0oooo03<0oooo000d0?ooo`030000
003co`00lol002<0lol000<000000?l0003o0000o`3o000N0?l000030000003oool0oooo03<0oooo
000e0?ooo`030000003co`00lol00240lol000<000000?l0003o0000o`3o000N0?l000030000003o
ool0oooo03@0oooo000f0?ooo`030000003co`00lol001l0lol000<000000?l0003o0000o`3o000N
0?l000030000003oool0oooo03D0oooo000g0?ooo`030000003co`00lol001d0lol000<000000?l0
003o0000o`3o000N0?l000030000003oool0oooo03H0oooo000g0?ooo`030000003co`00lol001`0
lol000<000000?l0003o0000o`3o000N0?l000030000003oool0oooo03L0oooo000h0?ooo`030000
003co`00lol001X0lol000<000000?l0003o0000o`3o000N0?l000030000003oool0oooo03P0oooo
000i0?ooo`030000003co`00lol001P0lol000<000000?l0003o0000o`3o000O0?l000030000003o
ool0oooo03P0oooo000j0?ooo`030000003co`00lol001H0lol000<000000?l0003o0000o`3o000O
0?l000030000003oool0oooo03T0oooo000k0?ooo`030000003co`00lol001@0lol000<000000?l0
003o0000o`3o000O0?l000030000003oool0oooo03X0oooo000l0?ooo`030000003co`00lol00180
lol000<000000?l0003o0000o`3o000P0?l000030000003oool0oooo03X0oooo000l0?ooo`030000
003co`00lol00140lol000<000000?l0003o0000o`3o000P0?l000030000003oool0oooo03/0oooo
000m0?ooo`030000003co`00lol000l0lol000<000000?l0003o0000o`3o000P0?l000030000003o
ool0oooo03`0oooo000n0?ooo`030000003co`00lol000d0lol000<000000?l0003o0000o`3o000P
0?l000030000003oool0oooo03d0oooo000o0?ooo`030000003co`00lol000/0lol000<000000?l0
003o0000o`3o000P0?l000030000003oool0oooo03h0oooo00100?ooo`030000003co`00lol000T0
lol000<000000?l0003o0000o`3o000P0?l000030000003oool0oooo03l0oooo00110?ooo`030000
003co`00lol000L0lol000<000000?l0003o0000o`3o000Q0?l000030000003oool0oooo03l0oooo
00110?ooo`030000003co`00lol000H0lol000<000000?l0003o0000o`3o000Q0?l000030000003o
ool0oooo0400oooo00120?ooo`030000003co`00lol000@0lol000<000000?l0003o0000o`3o000P
0?l000800000@`3oool004<0oooo0P0000030??o00030000003o0000o`000?l0o`00803o00000`00
0000oooo0?ooo`130?ooo`00A@3oool00`000000lol00000003o0?l00280o`0000<000000?ooo`3o
ool0A03oool004H0oooo00<000000?l0003o0000o`3o000P0?l000030000003oool0oooo04D0oooo
00170?ooo`030000003o0000o`000?l0o`007P3o00000`000000oooo0?ooo`160?ooo`00B03oool0
0`000000o`000?l0003o0?l001`0o`0000<000000?ooo`3oool0A`3oool004T0oooo00<000000?l0
003o0000o`3o000K0?l000030000003oool0oooo04L0oooo001:0?ooo`030000003o0000o`000?l0
o`006@3o00000`000000oooo0?ooo`180?ooo`00B`3oool00`000000o`000?l0003o0?l001H0o`00
0P00001;0?ooo`00C03oool00`000000o`000?l0003o0?l001@0o`0000<000000?ooo`3oool0B`3o
ool004d0oooo00<000000?l0003o0000o`3o000B0?l000030000003oool0oooo04`0oooo001>0?oo
o`030000003o0000o`000?l0o`00403o00000`000000oooo0?ooo`1=0?ooo`00C`3oool200000?l0
o`003`3o00000`000000oooo0?ooo`1>0?ooo`00D@3oool00`000000o`000?l0003o0?l000X0o`00
0P00001A0?ooo`00DP3oool00`000000o`000?l0003o0?l000P0o`0000<000000?ooo`3oool0D@3o
ool005<0oooo00<000000?l0003o0000o`3o00060?l000030000003oool0oooo0580oooo001D0?oo
o`030000003o0000o`000?l0o`00103o00000`000000oooo0?ooo`1C0?ooo`00E@3oool200000?l0
o`000`3o00000`000000oooo0?ooo`1D0?ooo`00E`3oool00`000000o`000?l0003m0?l000800000
E`3oool005P0oooo00<000000?l0003o0000n`3o00000`000000oooo0?ooo`1G0?ooo`00F@3oool0
0`000000o`000?l0003h0?l000800000FP3oool005X0oooo00<000000?l0003o0000mP3o00000`00
0000oooo0?ooo`1J0?ooo`00F`3oool200000?D0o`0000<000000?ooo`3oool0F`3oool005d0oooo
00<000000?l0003o0000l@3o00000`000000oooo0?ooo`1L0?ooo`00GP3oool00`000000o`000?l0
003_0?l000030000003oool0oooo05d0oooo001O0?ooo`800000kP3o00000`000000oooo0?ooo`1N
0?ooo`00H@3oool00`000000o`000?l0003Y0?l000800000H@3oool00680oooo0P00003X0?l00003
0000003oool0oooo0640oooo001T0?ooo`030000003o0000o`000><0o`000P00001T0?ooo`00I@3o
ool200000>80o`0000<000000?ooo`3oool0I03oool006L0oooo0P00003N0?l000800000I`3oool0
06T0oooo00<000000?l0003o0000f@3o0002000006T0oooo001Z0?ooo`800000f03o00000`000000
oooo0?ooo`1Y0?ooo`00K03oool00`000000o`000?l0003C0?l000800000K03oool006d0oooo0P00
003B0?l000030000003oool0oooo06`0oooo001_0?ooo`800000cP3o0002000006l0oooo001a0?oo
o`030000003o0000o`000<T0o`000P00001a0?ooo`00LP3oool200000<P0o`0000<000000?ooo`3o
ool0L@3oool007@0oooo0P0000340?l000800000M03oool007H0oooo00<000000?l0003o0000_`3o
0002000007H0oooo001g0?ooo`800000_03o0003000007P0oooo001i0?ooo`800000^03o00020000
07/0oooo001k0?ooo`<00000]03o00000`000000oooo0?ooo`1k0?ooo`00OP3oool200000;00o`00
0P00001n0?ooo`00P03oool00`000000o`000?l0002[0?l000800000P03oool00840oooo0P00002X
0?l000<00000PP3oool008<0oooo1000002R0?l000800000Q@3oool008L0oooo00<000000?l0003o
0000W@3o0002000008L0oooo00280?ooo`800000VP3o0003000008T0oooo002:0?ooo`@00000U03o
0002000008`0oooo002>0?ooo`030000003o0000o`0008h0o`000`00002>0?ooo`00S`3oool40000
08X0o`000P00002A0?ooo`00T`3oool3000008<0o`001000002C0?ooo`00UP3oool2000007h0o`00
0`00002G0?ooo`00V03oool4000007P0o`000P00002J0?ooo`00W03oool300000740o`001000002L
0?ooo`00W`3oool4000006X0o`000`00002P0?ooo`00X`3oool400000680o`001000002S0?ooo`00
Y`3oool3000005T0o`001P00002W0?ooo`00ZP3oool600000500o`000`00002]0?ooo`00/03oool6
000004@0o`001P00002`0?ooo`00]P3oool7000003H0o`001`00002f0?ooo`00_@3oool9000002<0
o`002P00002m0?ooo`00aP3ooolS00000<L0oooo003o0?oook40oooo003o0?oook40oooo003o0?oo
ok40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oook40oooo003o0?oo
ok40oooo003o0?oook40oooo003o0?oook40oooo0000\
\>"],
  ImageRangeCache->{{{0, 431}, {431, 0}} -> {-1.05001, -1.05001, 0.00730867, \
0.00730867}}]
}, Closed]],

Cell[TextData[{
  "we probably would rather use the short symbol name without the verbose \
context.  The solution is to ",
  StyleBox["Remove", "InlineInput",
    FontWeight->"Bold"],
  " the symbol from the global context."
}], "Text"],

Cell[BoxData[
    \(Remove[PieChart]\)], "Input"],

Cell[TextData[{
  "Unless instructed otherwise, ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " assumes that symbols without contexts are from the global or system \
contexts; hence, there is no danger of removing the homologous symbol from \
the package we just loaded.  We can now use the symbol without worrying about \
what might lurk in the shadows."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(PieChart[{0.3, 0.2, \ 0.15, \ 0.1, \ 0.05}, 
        PieExploded \[Rule] {3, 5}, 
        PieLabels \[Rule] {"\<rent\>", "\<food\>", "\<utilities\>", "\<credit \
cards\>", "\<fun\>"}];\)\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.47774 0.45393 0.52226 0.45393 [
[.58197 .77389 -14 -6.28125 ]
[.58197 .77389 14 6.28125 ]
[.20538 .52226 -14 -6.28125 ]
[.20538 .52226 14 6.28125 ]
[.41575 .21061 -29 -6.28125 ]
[.41575 .21061 29 6.28125 ]
[.67033 .32967 -38 -6.28125 ]
[.67033 .32967 38 6.28125 ]
[.78939 .46027 -11 -6.28125 ]
[.78939 .46027 11 6.28125 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
1 0 0 r
.47774 .52226 m
.47774 .52226 .45393 0 135 arc
F
.95 1 0 r
.47774 .52226 m
.47774 .52226 .45393 135 225 arc
F
0 1 .1 r
.46888 .47774 m
.46888 .47774 .45393 225 292.5 arc
F
0 .85 1 r
.47774 .52226 m
.47774 .52226 .45393 292.5 337.5 arc
F
.2 0 1 r
.52226 .5134 m
.52226 .5134 .45393 337.5 360 arc
F
0 g
.5 Mabswid
[ ] 0 setdash
.47774 .52226 m
.93167 .52226 L
s
.47774 .52226 m
.15676 .84324 L
s
newpath
.47774 .52226 .45393 0 135 arc
s
.47774 .52226 m
.15676 .84324 L
s
.47774 .52226 m
.15676 .20128 L
s
newpath
.47774 .52226 .45393 135 225 arc
s
.46888 .47774 m
.14791 .15676 L
s
.46888 .47774 m
.6426 .05836 L
s
newpath
.46888 .47774 .45393 225 292.5 arc
s
.47774 .52226 m
.65145 .10288 L
s
.47774 .52226 m
.89712 .34855 L
s
newpath
.47774 .52226 .45393 292.5 337.5 arc
s
.52226 .5134 m
.94164 .33969 L
s
.52226 .5134 m
.97619 .5134 L
s
newpath
.52226 .5134 .45393 337.5 360 arc
s
gsave
.58197 .77389 -75 -10.2813 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(rent) show
87.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.20538 .52226 -75 -10.2813 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(food) show
87.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.41575 .21061 -90 -10.2813 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(utilities) show
117.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.67033 .32967 -99 -10.2813 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(credit) show
105.000 12.813 moveto
(cards) show
135.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.78939 .46027 -72 -10.2813 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20.5625 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(fun) show
81.000 12.813 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 288},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`0001/2000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00^@3ooolQ00000=H0oooo002`0?ooo`T000008@00oaT900000<d0oooo002[0?ooo`D00000
<`00oaT700000<H0oooo002U0?ooo`H00000?`00oaT600000<00oooo002P0?ooo`D00000B`00oaT5
00000;/0oooo002K0?ooo`D00000E@00oaT300000;P0oooo002G0?ooo`@00000G@00oaT400000;@0
oooo002D0?ooo`<00000I@00oaT300000;40oooo002@0?ooo`@00000J`00oaT400000:d0oooo002=
0?ooo`<00000L`00oaT300000:X0oooo002;0?ooo`800000N@00oaT400000:H0oooo00280?ooo`<0
0000O`00oaT300000:<0oooo00240?ooo`@00000Q@00oaT200000:40oooo00230?ooo`0300000000
oaT00?lI08T00?lI0`00002N0?ooo`00O`3oool4000008l00?lI0P00002L0?ooo`00OP3oool00`00
00000?lI003o6@2C003o6@030000003oool0oooo09T0oooo001l0?ooo`800000UP00oaT00`000000
oooo0?ooo`2I0?ooo`00N@3oool3000009L00?lI00<000000?ooo`3oool0VP3oool007L0oooo0P00
002J003o6@030000003oool0oooo09X0oooo001e0?ooo`800000V`00oaT00`000000oooo0?ooo`2K
0?ooo`00LP3oool3000009d00?lI00<000000?ooo`3oool0V`3oool00740oooo00<00000003o6@00
oaT0WP00oaT00`000000oooo0?ooo`2K0?ooo`00K`3oool200000:000?lI00<000000?ooo`3oool0
W03oool006d0oooo0P00002R003o6@030000003oool0oooo09`0oooo001/0?ooo`0300000000oaT0
0?lI0:400?lI00<000000?ooo`3oool0W@3oool006T0oooo0`00002T003o6@030000003oool0oooo
09d0oooo001W0?ooo`800000YP00oaT00`000000oooo0?ooo`2N0?ooo`00IP3oool00`0000000?lI
003o6@2V003o6@030000003oool0oooo09h0oooo001T0?ooo`800000Z@00oaT00`000000oooo0?oo
o`2N0?ooo`00HP3oool200000:X00?lI00<000000?ooo`3oool0W`3oool00640oooo00<00000003o
6@00oaT0ZP00oaT00`000000oooo0?ooo`2O0?ooo`00G`3oool200000:`00?lI00<000000?ooo`3o
ool0X03oool005h0oooo00<00000003o6@00oaT0[000oaT00`000000oooo0?ooo`2P0?ooo`00G03o
ool200000:l00?lI00<000000?ooo`3oool0X03oool005/0oooo00<00000003o6@00oaT0[P00oaT0
0`000000oooo0?ooo`090?ooo`030000003oool0oooo09D0oooo001I0?ooo`800000/@00oaT00`00
0000oooo0?ooo`090?ooo`@00000U03oool005P0oooo00<00000003o6@00oaT0/000oaT00`000000
oooo0?ooo`090?ooo`0300000000fOl00=Wo00800=Wo0P00002B0?ooo`00EP3oool200000;<00?lI
00<000000?ooo`3oool02@3oool00`0000000=Wo003Io`04003Io`800000T03oool005D0oooo00<0
0000003o6@00oaT0/`00oaT00`000000oooo0?ooo`080?ooo`0300000000fOl00=Wo00L00=Wo0P00
002>0?ooo`00D`3oool200000;D00?lI00<000000?ooo`3oool02@3oool00`0000000=Wo003Io`09
003Io`800000S03oool00580oooo00<00000003o6@00oaT0]@00oaT00`000000oooo0?ooo`090?oo
o`0300000000fOl00=Wo00/00=Wo0`0000290?ooo`00D@3oool00`0000000?lI003o6@2e003o6@03
0000003oool0oooo00T0oooo00<00000003Io`00fOl03`00fOl2000008L0oooo001@0?ooo`030000
0000oaT00?lI0;H00?lI00<000000?ooo`3oool02@3oool00`0000000=Wo003Io`0A003Io`800000
Q@3oool004l0oooo00<00000003o6@00oaT0]P00oaT00`000000oooo0?ooo`090?ooo`0300000000
fOl00=Wo01@00=Wo0P0000230?ooo`00CP3oool00`0000000?lI003o6@2g003o6@030000003oool0
oooo00T0oooo00<00000003Io`00fOl05P00fOl200000840oooo001=0?ooo`0300000000oaT00?lI
0;P00?lI00<000000?ooo`3oool0203oool00`0000000=Wo003Io`0I003Io`030000003oool0oooo
07h0oooo001;0?ooo`800000^P00oaT00`000000oooo0?ooo`090?ooo`0300000000fOl00=Wo01X0
0=Wo00<000000?ooo`3oool0O@3oool004X0oooo00<00000003o6@00oaT0^P00oaT00`000000oooo
0?ooo`090?ooo`0300000000fOl00=Wo01/00=Wo0P00001m0?ooo`00B@3oool00`0000000?lI003o
6@2j003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl07P00fOl2000007/0oooo0018
0?ooo`0300000000oaT00?lI0;/00?lI00<000000?ooo`3oool02@3oool00`0000000=Wo003Io`0P
003Io`800000N@3oool004L0oooo00<00000003o6@00oaT0_000oaT00`000000oooo0?ooo`080?oo
o`0300000000fOl00=Wo02<00=Wo00<000000?ooo`3oool0MP3oool004D0oooo0P00002n003o6@03
0000003oool0oooo00T0oooo00<00000003Io`00fOl09000fOl00`000000oooo0?ooo`1e0?ooo`00
A03oool00`0000000?lI003o6@2n003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0
9@00fOl2000007D0oooo00130?ooo`0300000000oaT00?lI0;h00?lI00<000000?ooo`3oool02@3o
ool00`0000000=Wo003Io`0X003Io`800000L`3oool004<0oooo00<00000003o6@00oaT0_P00oaT0
0`000000oooo0?ooo`090?ooo`0300000000fOl00=Wo02X00=Wo00<000000?ooo`3oool0L03oool0
0480oooo00<00000003o6@00oaT0_`00oaT00`000000oooo0?ooo`080?ooo`0300000000fOl00=Wo
02`00=Wo00<000000?ooo`3oool0K`3oool00400oooo0P000031003o6@030000003oool0oooo00T0
oooo00<00000003Io`00fOl0;@00fOl2000006l0oooo000o0?ooo`0300000000oaT00?lI0<400?lI
00<000000?ooo`3oool0203oool00`0000000=Wo003Io`0`003Io`800000K@3oool00400oooo00<0
0000003o6@00oaT0_`00oaT00`000000oooo0?ooo`090?ooo`0300000000fOl00=Wo03800=Wo00<0
00000?ooo`3oool0JP3oool00440oooo00<00000003o6@00oaT0_P00oaT00`000000oooo0?ooo`09
0?ooo`0300000000fOl00=Wo03<00=Wo00<000000?ooo`3oool0J@3oool00480oooo00<00000003o
6@00oaT0_000oaT00`000000oooo0?ooo`090?ooo`0300000000fOl00=Wo03D00=Wo0P00001Y0?oo
o`00@`3oool00`0000000?lI003o6@2k003o6@030000003oool0oooo00T0oooo00<00000003Io`00
fOl0=`00fOl00`000000oooo0?ooo`1V0?ooo`00A03oool00`0000000?lI003o6@2j003o6@030000
003oool0oooo00P0oooo00<00000003Io`00fOl0>@00fOl00`000000oooo0?ooo`1U0?ooo`00A@3o
ool00`0000000?lI003o6@2h003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0>P00
fOl2000006D0oooo00160?ooo`0300000000oaT00?lI0;L00?lI00<000000?ooo`3oool02@3oool0
0`0000000=Wo003Io`0k003Io`030000003oool0oooo06<0oooo00170?ooo`0300000000oaT00?lI
0;D00?lI00<000000?ooo`3oool02@3oool00`0000000=Wo003Io`0m003Io`030000003oool0oooo
0680oooo00180?ooo`0300000000oaT00?lI0;@00?lI00<000000?ooo`3oool02@3oool00`000000
0=Wo003Io`0n003Io`800000HP3oool004T0oooo00<00000003o6@00oaT0/`00oaT00`000000oooo
0?ooo`080?ooo`0300000000fOl00=Wo04400=Wo00<000000?ooo`3oool0G`3oool004X0oooo00<0
0000003o6@00oaT0/@00oaT00`000000oooo0?ooo`090?ooo`0300000000fOl00=Wo04800=Wo00<0
00000?ooo`3oool0GP3oool004/0oooo00<00000003o6@00oaT0/000oaT00`000000oooo0?ooo`08
0?ooo`0300000000fOl00=Wo04@00=Wo00<000000?ooo`3oool0G@3oool004`0oooo00<00000003o
6@00oaT0[P00oaT00`000000oooo0?ooo`090?ooo`0300000000fOl00=Wo04D00=Wo00<000000?oo
o`3oool0G03oool004d0oooo00<00000003o6@00oaT0[@00oaT00`000000oooo0?ooo`090?ooo`03
00000000fOl00=Wo04H00=Wo0P00001L0?ooo`00CP3oool00`0000000?lI003o6@2/003o6@030000
003oool0oooo00P0oooo00<00000003Io`00fOl0B000fOl00`000000oooo0?ooo`1J0?ooo`00C`3o
ool00`0000000?lI003o6@2Z003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0B@00
fOl00`000000oooo0?ooo`1I0?ooo`00D03oool00`0000000?lI003o6@2Y003o6@030000003oool0
oooo00P0oooo00<00000003Io`00fOl0B`00fOl00`000000oooo0?ooo`1H0?ooo`00D@3oool00`00
00000?lI003o6@2W003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0C000fOl00`00
0000oooo0?ooo`1G0?ooo`00@`3oool00`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI0:H0
0?lI00<000000?ooo`3oool02@3oool00`0000000=Wo003Io`1=003Io`800000E`3oool00480oooo
00<000000??o000000003P3oool00`0000000?lI003o6@0f003o6@07001800000000000000183`00
M0000000002L5P02003o6@05003o50000000000000000000B0l00`00oaT00`00B000000000000003
0000000400183`00oaT00?lI001800D0000000@004P?003o6@00oaT004P01@0000001@00B0l00?lI
003o6@00oaT00?lD00<0000000D004P?003o6@00oaT00?lI001800050000000500183`00oaT00?lI
003o6@00M0000`0000001@0000/00?lI003o6@00oaT007@000@0000000<004P?003o6@00oaT08000
oaT00`000000oooo0?ooo`080?ooo`0300000000fOl00=Wo04l00=Wo00<000000?ooo`3oool0E@3o
ool00440oooo00D000000??o003co`00lol00000000>0?ooo`0300000000oaT00?lI03@00?lI00L0
0;l;00183`00oaT00?lI002L200000000;lI00<00?lI00H009`8002L5P00oaT00?lI002L200000/4
003o6@03003o500000/00?lI00H00?lI00<00?lD00002`00oaT01P00oaT00`00oa@0000;003o6@05
003o6@06002L2000W1H00?lI003o6@00W0P0000;1000oaT00`00oa@0000;003o6@04003o6@03001d
0000M1@00?lI00800?lI00H00;l;00183`00oaT00?lI001d0000W1H3003o6@03002L2000W1H00?lI
01l00?lI00<000000?ooo`3oool02@3oool00`0000000=Wo003Io`1@003Io`030000003oool0oooo
05@0oooo00100?ooo`030000003co`00lol000<0lol000<000000?ooo`3oool0303oool00`000000
0?lI003o6@0c003o6@03002L2000W1H00?lI00800?lI00<007@0002o6@00oaT00P00oaT00`00W0P0
09`F003o6@07003o6@03003o500000/00?lI00H00?lI00<00?lD00002`00oaT01P00oaT00`00oa@0
000;003o6@05003o6@03002L2000W1H00?lI00L00?lI00<00?lD00002`00oaT00`00oaT00`00oa@0
000;003o6@0<003o6@03001d0000M1@00?lI01l00?lI00<000000?ooo`3oool0203oool00`000000
0=Wo003Io`1B003Io`030000003oool0oooo05<0oooo00100?ooo`030000003co`00lol000@0lol0
00<000000?ooo`3oool0303oool00`0000000?lI003o6@0b003o6@03002L2000W1H00?lI00800?lI
00<007@0002o6@00oaT00P00oaT00`00W0P009`F003o6@07003o6@03003o500000/00?lI00H00?lI
00<00?lD00002`00oaT01P00oaT00`00oa@0000;003o6@05003o6@03002L2000W1H00?lI00L00?lI
00<00?lD00002`00oaT00`00oaT00`00oa@00000000000040000000500183`00oaT00?lI003o6@00
B0000`0000000`00B0l00?lI003o6@0N003o6@030000003oool0oooo00T0oooo00<00000003Io`00
fOl0D`00fOl00`000000oooo0?ooo`1B0?ooo`00?P3oool2000000P0lol000<000000?ooo`3oool0
303oool00`0000000?lI003o6@0a003o6@03002L2000W1H00?lI00800?lI00<007@0002o6@00oaT0
0P00oaT00`00W0P009`F003o6@07003o6@03003o500000/00?lI00H00?lI00<00?lD00002`00oaT0
1P00oaT00`00oa@0000;003o6@05003o6@03002L2000W1H00?lI00L00?lI00<00?lD00002`00oaT0
1000oaT00`00M0000;lI003o6@02003o6@0600180000W1H00?lI003o6@00_`/007@D0P00oaT00`00
oa@00000002L5P0O003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0E000fOl20000
0580oooo000m0?ooo`030000003co`00lol000T0lol000<000000?ooo`3oool0303oool00`000000
0?lI003o6@0_003o6@05002L2000000009`F003o6@00g`l00P0000000`00_aT00?lI003O3`050000
000500002000gaT00?lI003o6@00g`l00P0000000`0000/00?lI003o6@05003o6@03003o500000/0
0?lI00@00?lI00@00=l?000000000000000;1000oaT00`00g`l00000000000030000000500002000
gaT00?lI003o6@00g`l00P0000000`0000/00?lI003o6@03003o6@03003o50000000000000800000
00<009`F003o6@00oaT00P00oaT01P00M000000000000000000007@;002L5Qh00?lI00<000000?oo
o`3oool02@3oool00`0000000=Wo003Io`1F003Io`030000003oool0oooo0500oooo000l0?ooo`03
0000003co`00lol000/0lol000<000000?ooo`3oool0303oool00`0000000?lI003o6@0i003o6@03
002L2000W1H00?lI01000?lI00<00?lD00002`00oaT03P00oaT00`00W0P009`F003o6@0l003o6@03
0000003oool0oooo00T0oooo00<00000003Io`00fOl0E`00fOl00`000000oooo0?ooo`1?0?ooo`00
>`3oool00`000000lol00??o000=0??o00030000003oool0oooo00`0oooo00<00000003o6@00oaT0
>000oaT00`00W0P009`F003o6@0@003o6@03003o500000/00?lI00h00?lI00<009`8002L5P00oaT0
?000oaT00`000000oooo0?ooo`080?ooo`0300000000fOl00=Wo05T00=Wo00<000000?ooo`3oool0
CP3oool003/0oooo00<000000??o003co`003P3co`000`000000oooo0?ooo`0<0?ooo`0300000000
oaT00?lI04400?lI00<00;l;00002`00oaT01000oaT01000g`l000000000000000/7003o6@03002o
2`0000/00?lI00l00?lI00<00;l;00002`00oaT0<@00oaT00`000000oooo0?ooo`090?ooo`030000
0000fOl00=Wo05X00=Wo00<000000?ooo`3oool0C@3oool003X0oooo00<000000??o003co`00403c
o`000`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI04000?lI00<00;l;00002`00oaT03`00
oaT00`00_`/0000;003o6@0?003o6@03002o2`0000/00?lI03400?lI00<000000?ooo`3oool0203o
ool00`0000000=Wo003Io`1L003Io`030000003oool0oooo04`0oooo000i0?ooo`030000003co`00
lol00180lol000<000000?ooo`3oool0303oool00`0000000?lI003o6@2F003o6@030000003oool0
oooo00T0oooo00<00000003Io`00fOl0G@00fOl00`000000oooo0?ooo`1;0?ooo`00>03oool00`00
0000lol00??o000D0??o00030000003oool0oooo00`0oooo00<00000003o6@00oaT0U@00oaT00`00
0000oooo0?ooo`090?ooo`0300000000fOl00=Wo05d00=Wo00<000000?ooo`3oool0B`3oool003P0
oooo00<000000??o003co`005@3co`000`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI09@0
0?lI00<000000?ooo`3oool0203oool00`0000000=Wo003Io`1O003Io`030000003oool0oooo04X0
oooo000f0?ooo`8000006@3co`000`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI09800?lI
00<000000?ooo`3oool02@3oool00`0000000=Wo003Io`1P003Io`800000BP3oool003D0oooo00<0
00000??o003co`006P3co`000`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI09400?lI00<0
00000?ooo`3oool0203oool00`0000000=Wo003Io`1R003Io`030000003oool0oooo04P0oooo000e
0?ooo`030000003co`00lol001/0lol000<000000?ooo`3oool0303oool00`0000000?lI003o6@2?
003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0H`00fOl00`000000oooo0?ooo`17
0?ooo`00=03oool00`000000lol00??o000M0??o00030000003oool0oooo00`0oooo00<00000003o
6@00oaT0SP00oaT00`000000oooo0?ooo`090?ooo`0300000000fOl00=Wo06@00=Wo00<000000?oo
o`3oool0AP3oool003<0oooo00<000000??o003co`007`3co`000`000000oooo0?ooo`0<0?ooo`03
00000000oaT00?lI08d00?lI00<000000?ooo`3oool0203oool00`0000000=Wo003Io`1V003Io`03
0000003oool0oooo04D0oooo000b0?ooo`030000003co`00lol00240lol000<000000?ooo`3oool0
303oool00`0000000?lI003o6@2;003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0
IP00fOl00`000000oooo0?ooo`150?ooo`00<P3oool00`000000lol00??o000R0??o00030000003o
ool0oooo00`0oooo00<00000003o6@00oaT0RP00oaT00`000000oooo0?ooo`080?ooo`0300000000
fOl00=Wo06P00=Wo00<000000?ooo`3oool0A03oool00340oooo00<000000??o003co`00903co`00
0`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI08P00?lI00<000000?ooo`3oool02@3oool0
0`0000000=Wo003Io`1Y003Io`030000003oool0oooo04<0oooo000`0?ooo`030000003co`00lol0
02H0lol000<000000?ooo`3oool0303oool00`0000000?lI003o6@27003o6@030000003oool0oooo
00P0oooo00<00000003Io`00fOl0J`00fOl00`000000oooo0?ooo`120?ooo`00;`3oool00`000000
lol00??o000X0??o00030000003oool0oooo00`0oooo00<00000003o6@00oaT0Q@00oaT00`000000
oooo0?ooo`090?ooo`0300000000fOl00=Wo06/00=Wo00<000000?ooo`3oool0@P3oool002l0oooo
00<000000??o003co`00:@3co`000`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI08@00?lI
00<000000?ooo`3oool02@3oool00`0000000=Wo003Io`1/003Io`030000003oool0oooo0440oooo
000^0?ooo`030000003co`00lol002/0lol000<000000?ooo`3oool0303oool00`0000000?lI003o
6@23003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0K@00fOl00`000000oooo0?oo
o`110?ooo`00;@3oool00`000000lol00??o000]0??o00030000003oool0oooo00`0oooo00<00000
003o6@00oaT0P@00oaT00`000000oooo0?ooo`090?ooo`0300000000fOl00=Wo06h00=Wo00<00000
0?ooo`3oool0@03oool002`0oooo00<000000??o003co`00;`3co`000`000000oooo0?ooo`0<0?oo
o`0300000000oaT00?lI08000?lI00<000000?ooo`3oool0203oool00`0000000=Wo003Io`1`003I
o`030000003oool0oooo03l0oooo000/0?ooo`030000003co`00lol00300lol000<000000?ooo`3o
ool0303oool00`0000000?lI003o6@1n003o6@030000003oool0oooo00T0oooo00<00000003Io`00
fOl0L@00fOl00`000000oooo0?ooo`0n0?ooo`00:`3oool00`000000lol00??o000b0??o00030000
003oool0oooo00`0oooo00<00000003o6@00oaT0O@00oaT00`000000oooo0?ooo`090?ooo`030000
0000fOl00=Wo07400=Wo00<000000?ooo`3oool0?P3oool002/0oooo00<000000??o003co`00<`3c
o`000`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI07`00?lI00<000000?ooo`3oool0203o
ool00`0000000=Wo003Io`1c003Io`030000003oool0oooo03d0oooo000Z0?ooo`030000003co`00
lol003D0lol000<000000?ooo`3oool0303oool00`0000000?lI003o6@1j003o6@030000003oool0
oooo00T0oooo00<00000003Io`00fOl0L`00fOl00`000000oooo0?ooo`0m0?ooo`00:@3oool00`00
0000lol00??o000g0??o00030000003oool0oooo00`0oooo00<00000003o6@00oaT0N@00oaT00`00
0000oooo0?ooo`080?ooo`0300000000fOl00=Wo07D00=Wo00<000000?ooo`3oool0?03oool002P0
oooo00<000000??o003co`00>@3co`000`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI07L0
0?lI00<000000?ooo`3oool02@3oool00`0000000=Wo003Io`1f003Io`030000003oool0oooo03/0
oooo000X0?ooo`030000003co`00lol003X0lol000<000000?ooo`3oool0303oool00`0000000?lI
003o6@1f003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0M`00fOl00`000000oooo
0?ooo`0j0?ooo`009`3oool00`000000lol00??o000l0??o00030000003oool0oooo00`0oooo00<0
0000003o6@00oaT0M@00oaT00`000000oooo0?ooo`080?ooo`0300000000fOl00=Wo07P00=Wo00<0
00000?ooo`3oool0>P3oool002L0oooo00<000000??o003co`00?@3co`000`000000oooo0?ooo`0<
0?ooo`0300000000oaT00?lI07<00?lI00<000000?ooo`3oool02@3oool00`0000000=Wo003Io`1i
003Io`030000003oool0oooo03T0oooo000V0?ooo`030000003co`00lol003l0lol000<000000?oo
o`3oool0303oool00`0000000?lI003o6@1b003o6@030000003oool0oooo00P0oooo00<00000003I
o`00fOl0NP00fOl00`000000oooo0?ooo`0i0?ooo`009P3oool00`000000lol00??o00100??o0003
0000003oool0oooo00`0oooo00<00000003o6@00oaT0L000oaT00`000000oooo0?ooo`090?ooo`03
00000000fOl00=Wo07/00=Wo00<000000?ooo`3oool0>03oool002D0oooo00<000000??o003co`00
@P3co`000`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI06l00?lI00<000000?ooo`3oool0
203oool00`0000000=Wo003Io`1l003Io`030000003oool0oooo03P0oooo000T0?ooo`030000003c
o`00lol004@0lol000<000000?ooo`3oool0303oool00`0000000?lI003o6@1]003o6@030000003o
ool0oooo00T0oooo00<00000003Io`00fOl0O@00fOl00`000000oooo0?ooo`0g0?ooo`008`3oool0
0`000000lol00??o00160??o00030000003oool0oooo00`0oooo00<00000003o6@00oaT0K000oaT0
0`000000oooo0?ooo`090?ooo`0300000000fOl00=Wo07h00=Wo00<000000?ooo`3oool0=P3oool0
02<0oooo00<000000??o003co`00A`3co`000`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI
06/00?lI00<000000?ooo`3oool0203oool00`0000000=Wo003Io`20003Io`030000003oool0oooo
03D0oooo000R0?ooo`030000003co`00lol004T0lol000<000000?ooo`3oool0303oool00`000000
0?lI003o6@1Y003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0P000fOl00`000000
oooo0?ooo`0e0?ooo`008P3oool00`000000lol00??o001:0??o00030000003oool0oooo00`0oooo
00<00000003o6@00oaT0J000oaT00`000000oooo0?ooo`080?ooo`0300000000fOl00=Wo08800=Wo
00<000000?ooo`3oool0=03oool00240oooo00<000000??o003co`00C03co`000`000000oooo0?oo
o`0<0?ooo`0300000000oaT00?lI06H00?lI00<000000?ooo`3oool02@3oool00`0000000=Wo003I
o`22003Io`030000003oool0oooo03@0oooo000Q0?ooo`030000003co`00lol004d0lol000<00000
0?ooo`3oool0303oool00`0000000?lI003o6@1U003o6@030000003oool0oooo00T0oooo00<00000
003Io`00fOl0P`00fOl00`000000oooo0?ooo`0c0?ooo`00803oool00`000000lol00??o001?0??o
00030000003oool0oooo00`0oooo00<00000003o6@00oaT0I000oaT00`000000oooo0?ooo`080?oo
o`0300000000fOl00=Wo08@00=Wo00<000000?ooo`3oool0<`3oool00200oooo00<000000??o003c
o`00D03co`000`000000oooo0?ooo`0<0?ooo`0300000000oaT00?lI06800?lI00<000000?ooo`3o
ool02@3oool00`0000000=Wo003Io`25003Io`030000003oool0oooo0380oooo000P0?ooo`030000
003co`00lol00540lol000<000000?ooo`3oool0303oool00`0000000?lI003o6@1Q003o6@030000
003oool0oooo00P0oooo00<00000003Io`00fOl0QP00fOl00`000000oooo0?ooo`0b0?ooo`007`3o
ool00`000000lol00??o001C0??o00030000003oool0oooo00`0oooo0P00001P003o6@030000003o
ool0oooo00T0oooo00<00000003Io`00fOl0Q`00fOl00`000000oooo0?ooo`0a0?ooo`007`3oool0
0`000000lol00??o001D0??o00030000003oool0oooo00d0oooo00<00000003o6@00oaT0G@00oaT0
0`000000oooo0?ooo`080?ooo`0300000000fOl00=Wo08P00=Wo00<000000?ooo`3oool0<@3oool0
01h0oooo00<000000??o003co`00EP3co`000`000000oooo0?ooo`0=0?ooo`0300000000oaT00?lI
05`00?lI00<000000?ooo`3oool0203oool00`0000000=Wo003Io`28003Io`030000003oool0oooo
0340oooo000N0?ooo`030000003co`00lol005L0lol000<000000?ooo`3oool03@3oool00`000000
0?lI003o6@1J003o6@030000003oool0oooo00@0oooo00P0gia800000000000000000000B0000000
0=Wo003I_`D0000000<00018002no`00fOl00P00fOl01@00H`000000000000000000001d00<00=Wo
00<00;jL0000000000000P0000001@00Hg@00000000lW000fOl003`000D0000000D003bL003Io`00
fOl00=Wo003I_`0300000003000lW000fOl00=Wo00/00=Wo00H008E800000000000000000000B000
__l2003Io`090025B0000000000000000000Hg@000000000B000__l00=Vo00D0000000D00018002n
o`00fOl00=Wo002nW00400000005001SM000000003bL003Io`00H`00100000000`00?9`00=Wo003I
o`0W003Io`030000003oool0oooo0300oooo000M0?ooo`030000003co`00lol005T0lol000<00000
0?ooo`3oool03@3oool00`0000000?lI003o6@1I003o6@030000003oool0oooo00<0oooo00<0gia8
0018W03oool00P3oool00`0000000018002no`02003Io`03003I_`0007@00=Wo00D00=Wo00<006<0
001S_`00fOl00P00fOl01P00XW@003bL003Io`00fOl003a8002no`800=Wo00<00=Vo00000000Hkl0
1000fOl00`00fKl0001d003Io`05003Io`060025B000QMl00=Wo003Io`00QDP0001d2`00fOl00`00
QDP003bL003Io`02003Io`05002nW00004P00;ko003I_`0007@00`00fOl00`00H`00001d003Io`03
003Io`03003I_`0007@00=Wo00D00=Wo00L003a8002no`00fOl00=Wo003I_`00000006>o00800=Wo
00<006<00025g`00fOl00P00fOl00`00QDP008GO003Io`0W003Io`030000003oool0oooo0300oooo
000M0?ooo`030000003co`00lol005X0lol000<000000?ooo`3oool03@3oool00`0000000?lI003o
6@1G003o6@030000003oool0oooo00@0oooo00<0W4Q809cOo`3oool00P3oool00`0000000=Wo003I
o`02003Io`03003I_`0007@00=Wo00@00=Wo00<00=Vo0000M000fOl01P00fOl00`00_Y`006>o003I
o`03003Io`03002RM000Hkl00=Wo00<00=Wo00<00=Vo0000M000fOl01@00fOl00`00QDP008GO003I
o`0>003Io`03000lB000__l00=Wo00D00=Wo00<00=Vo0000B000__l00P00fOl00`00fKl0001d003I
o`03003Io`03003I_`0007@00=Wo00@00=Wo00<00;jL001S_`00fOl00`00fOl00`00XW@006>o003I
o`06003Io`03001S0000Hkl00=Wo02P00=Wo00<000000?ooo`3oool0;`3oool001`0oooo00<00000
0??o003co`00G03co`000`000000oooo0?ooo`0=0?ooo`0300000000oaT00?lI05H00?lI00<00000
0?ooo`3oool0103oool01@2LB4P0W=oo0?ooo`3oool0000000D00=Wo00<00=Vo0000M000fOl01000
fOl00`00fKl000000000000400000004000lW000fOl00;jL001S_`@00=Wo00<00:9d001S_`00fOl0
0`00fOl00`00fKl0001d003Io`05003Io`030025B000QMl00=Wo00h00=Wo00<003a8002no`00fOl0
1P00fOl00`00_Y`0000000000002000000030000M000fOl00=Wo00800=Wo00<00=Vo0000M000fOl0
1000fOl00`00_Y`006>o003Io`03003Io`03002RM000Hkl00=Wo00800=Wo00D003`0000000000000
0000000lW00Z003Io`030000003oool0oooo02l0oooo000L0?ooo`030000003co`00lol005d0lol0
00<000000?ooo`3oool03@3oool00`0000000?lI003o6@1D003o6@030000003oool0oooo00D0oooo
00L0gia80000M02oool0oooo00000000H`00001d00<00=Wo00@00=Vo0000000000000:;o1000fOl0
0`00H`000:;o003Io`02003Io`06000l0000QMl00=Wo003Io`00?00008GO0P00fOl00`00XW@00000
001S_`04003Io`03003I_`0007@00=Wo00D00=Wo00<008E80025g`00fOl03P00fOl00`00QDP0001d
003Io`02003Io`06001S000007@00=Wo003Io`00fKl00:;o0P00fOl00`00_Y`0001d003Io`03003I
o`04003I_`0000000000002Ro`@00=Wo00L003`00025g`00fOl00=Wo002RM000000006>o00800=Wo
00L00:9d001S_`00fOl00=Wo003I_`00000008GO02X00=Wo00<000000?ooo`3oool0;P3oool001/0
oooo00<000000??o003co`00G`3co`000`000000oooo0?ooo`0=0?ooo`0300000000oaT00?lI05<0
0?lI00<000000?ooo`3oool01P3oool01P3o_g@0000000000000000006=d0000M0800=Wo00@008E8
0000000007@00=Vo0`0000000`00X_l00=Wo003I_`04000000030025g`00fOl00=Wo00800=Wo00H0
03`0000000000000001d002RM000Hkl2003Io`04002nW000000000000000M0@00=Wo00<00;jL0000
000000000`0000000`0004P00;ko003Io`0;003Io`06002RM0000000000000000000Hg@0001d0P00
fOl01P00_Y`000000000000000000018002no`<00=Wo00@008E80000000007@00=Vo0`0000001000
X_l00=Wo003Io`00?002000000030000M000XW@006>o00<00=Wo00H006<00000000000000000001S
M000QMlZ003Io`030000003oool0oooo02h0oooo000K0?ooo`030000003co`00lol00600lol000<0
00000?ooo`3oool03@3oool00`0000000?lI003o6@1B003o6@030000003oool0oooo00P0oooo00<0
0000003Io`00fOl06P00fOl00`00XW@006>o003Io`0;003Io`030025B000QMl00=Wo02h00=Wo00<0
0:9d001S_`00fOl0<`00fOl00`000000oooo0?ooo`0]0?ooo`006`3oool00`000000lol00??o001Q
0??o00030000003oool0oooo00d0oooo00<00000003o6@00oaT0D000oaT00`000000oooo0?ooo`09
0?ooo`0300000000fOl00=Wo01X00=Wo00<00:9d001S_`00fOl02`00fOl00`00QDP008GO003Io`0^
003Io`03002RM000Hkl00=Wo03<00=Wo00<000000?ooo`3oool04@3oool2000001X0oooo000J0?oo
o`030000003co`00lol006<0lol000<000000?ooo`3oool03@3oool00`0000000?lI003o6@1?003o
6@030000003oool0oooo00P0oooo00<00000003Io`00fOl06P00fOl00`00XW@00000001S_`04003I
o`03002RM00007@00=Wo03D00=Wo00<00:9d00000000Hkl0=@00fOl00`000000oooo0?ooo`0>0?oo
o`80000000<0<`3o0000003oool06@3oool001X0oooo00<000000??o003co`00I03co`000`000000
oooo0?ooo`0=0?ooo`0300000000oaT00?lI04d00?lI00<000000?ooo`3oool02@3oool00`000000
0=Wo003Io`0Q003Io`03002RM00007@00=Wo06d00=Wo00<000000?ooo`3oool0303oool2000000@0
<`3o00<000000?ooo`3oool05`3oool001T0oooo00<000000??o003co`00IP3co`000`000000oooo
0?ooo`0=0?ooo`0300000000oaT00?lI04`00?lI00<000000?ooo`3oool0203oool00`0000000=Wo
003Io`2B003Io`030000003oool0oooo00T0oooo0`00000603<0o`030000003oool0oooo01L0oooo
000I0?ooo`030000003co`00lol006L0lol000<000000?ooo`3oool03@3oool00`0000000?lI003o
6@1;003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0TP00fOl2000000P0oooo0P00
000:03<0o`030000003oool0oooo01H0oooo000H0?ooo`030000003co`00lol006T0lol000<00000
0?ooo`3oool03@3oool00`0000000?lI003o6@19003o6@030000003oool0oooo00T0oooo00<00000
003Io`00fOl0T000fOl2000000L0oooo0`00000<03<0o`030000003oool0oooo01H0oooo000H0?oo
o`030000003co`00lol006X0lol000<000000?ooo`3oool03@3oool00`0000000?lI003o6@18003o
6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0SP00fOl3000000L0oooo0P00000@03<0
o`030000003oool0oooo01D0oooo000G0?ooo`030000003co`00lol006`0lol000<000000?ooo`3o
ool03@3oool00`0000000?lI003o6@16003o6@030000003oool0oooo00T0oooo00<00000003Io`00
fOl0S000fOl2000000P0oooo0P00000B03<0o`030000003oool0oooo01D0oooo000G0?ooo`030000
003co`00lol006d0lol000<000000?ooo`3oool03@3oool00`0000000?lI003o6@15003o6@030000
003oool0oooo00P0oooo00<00000003Io`00fOl0R`00fOl2000000L0oooo0`00000D03<0o`030000
003oool0oooo01D0oooo000F0?ooo`030000003co`00lol006l0lol000<000000?ooo`3oool03@3o
ool00`0000000?lI003o6@14003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0R000
fOl3000000L0oooo0P00000H03<0o`030000003oool0oooo01@0oooo000F0?ooo`030000003co`00
lol006l0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@12003o6@030000003oool0
oooo00T0oooo00<00000003Io`00fOl0QP00fOl2000000L0oooo0`00000J03<0o`030000003oool0
oooo01@0oooo000F0?ooo`030000003co`00lol00700lol000<000000?ooo`3oool03P3oool00`00
00000?lI003o6@11003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0Q000fOl30000
00L0oooo0P00000N03<0o`030000003oool0oooo01<0oooo000E0?ooo`030000003co`00lol00780
lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0o003o6@030000003oool0oooo00T0
oooo00<00000003Io`00fOl0PP00fOl2000000P0oooo0P00000P03<0o`030000003oool0oooo01<0
oooo000E0?ooo`030000003co`00lol007<0lol000<000000?ooo`3oool03P3oool00`0000000?lI
003o6@0n003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0P@00fOl2000000L0oooo
0`00000R03<0o`030000003oool0oooo01<0oooo000D0?ooo`030000003co`00lol007D0lol000<0
00000?ooo`3oool03P3oool00`0000000?lI003o6@0l003o6@030000003oool0oooo00T0oooo00<0
0000003Io`00fOl0OP00fOl3000000L0oooo0P00000U03<0o`030000003oool0oooo01<0oooo000D
0?ooo`030000003co`00lol007H0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0k
003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0O000fOl2000000L0oooo0`00000X
03<0o`030000003oool0oooo0180oooo000D0?ooo`030000003co`00lol007L0lol000<000000?oo
o`3oool03P3oool00`0000000?lI003o6@0j003o6@030000003oool0oooo00P0oooo00<00000003I
o`00fOl0NP00fOl3000000L0oooo0P00000[03<0o`030000003oool0oooo0180oooo000D0?ooo`03
0000003co`00lol007P0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0h003o6@03
0000003oool0oooo00T0oooo00<00000003Io`00fOl0N000fOl2000000P0oooo0P00000]03<0o`03
0000003oool0oooo0180oooo000D0?ooo`030000003co`00lol007T0lol000<000000?ooo`3oool0
3P3oool00`0000000?lI003o6@0g003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0
M`00fOl2000000L0oooo0`00000`03<0o`030000003oool0oooo0140oooo000C0?ooo`030000003c
o`00lol007/0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0e003o6@030000003o
ool0oooo00T0oooo00<00000003Io`00fOl0M000fOl3000000L0oooo0P00000c03<0o`030000003o
ool0oooo0140oooo000C0?ooo`030000003co`00lol007`0lol000<000000?ooo`3oool03P3oool0
0`0000000?lI003o6@0d003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0L`00fOl2
000000L0oooo0`00000e03<0o`030000003oool0oooo0140oooo000B0?ooo`030000003co`00lol0
07h0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0c003o6@030000003oool0oooo
00P0oooo00<00000003Io`00fOl0L000fOl3000000L0oooo0P00000h03<0o`030000003oool0oooo
0140oooo000B0?ooo`030000003co`00lol007l0lol000<000000?ooo`3oool03P3oool00`000000
0?lI003o6@0a003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0KP00fOl2000000P0
oooo0P00000k03<0o`030000003oool0oooo0100oooo000B0?ooo`030000003co`00lol00800lol0
00<000000?ooo`3oool03P3oool00`0000000?lI003o6@0`003o6@030000003oool0oooo00P0oooo
00<00000003Io`00fOl0K000fOl3000000L0oooo0`00000m03<0o`030000003oool0oooo0100oooo
000B0?ooo`030000003co`00lol00840lol000<000000?ooo`3oool03P3oool00`0000000?lI003o
6@0^003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0JP00fOl2000000P0oooo0P00
001003<0o`030000003oool0oooo0100oooo000A0?ooo`030000003co`00lol008<0lol000<00000
0?ooo`3oool03P3oool00`0000000?lI003o6@0]003o6@030000003oool0oooo00P0oooo00<00000
003Io`00fOl0J@00fOl2000000L0oooo0`00001303<0o`030000003oool0oooo00l0oooo000A0?oo
o`030000003co`00lol008@0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0/003o
6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0IP00fOl3000000L0oooo0P00001603<0
o`030000003oool0oooo00l0oooo000A0?ooo`030000003co`00lol008D0lol000<000000?ooo`3o
ool03P3oool00`0000000?lI003o6@0Z003o6@030000003oool0oooo00T0oooo00<00000003Io`00
fOl0I000fOl2000000P0oooo0P00001803<0o`030000003oool0oooo00l0oooo000@0?ooo`030000
003co`00lol008L0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0Y003o6@030000
003oool0oooo00P0oooo00<00000003Io`00fOl0HP00fOl3000000L0oooo0`00001:03<0o`030000
003oool0oooo00l0oooo000@0?ooo`030000003co`00lol008P0lol000<000000?ooo`3oool03P3o
ool00`0000000?lI003o6@0W003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0H000
fOl2000000P0oooo0P00001>03<0o`030000003oool0oooo00h0oooo000@0?ooo`030000003co`00
lol008T0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0V003o6@030000003oool0
oooo00P0oooo00<00000003Io`00fOl0G`00fOl2000000L0oooo0`00001@03<0o`030000003oool0
oooo00h0oooo000@0?ooo`030000003co`00lol008X0lol000<000000?ooo`3oool03P3oool00`00
00000?lI003o6@0U003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0G000fOl30000
00L0oooo0P00001C03<0o`030000003oool0oooo00h0oooo000?0?ooo`030000003co`00lol008`0
lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0S003o6@030000003oool0oooo00P0
oooo00<00000003Io`00fOl0F`00fOl2000000P0oooo0P00001E03<0o`030000003oool0oooo00h0
oooo000?0?ooo`030000003co`00lol008d0lol000<000000?ooo`3oool03P3oool00`0000000?lI
003o6@0R003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0F000fOl3000000L0oooo
0`00001G03<0o`030000003oool0oooo00h0oooo000?0?ooo`030000003co`00lol008h0lol000<0
00000?ooo`3oool03P3oool00`0000000?lI003o6@0P003o6@030000003oool0oooo00T0oooo00<0
0000003Io`00fOl0EP00fOl2000000P0oooo0P00001K03<0o`030000003oool0oooo00d0oooo000?
0?ooo`030000003co`00lol008l0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0O
003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0E000fOl3000000L0oooo0`00001M
03<0o`030000003oool0oooo00d0oooo000?0?ooo`030000003co`00lol00900lol000<000000?oo
o`3oool03P3oool00`0000000?lI003o6@0M003o6@030000003oool0oooo00T0oooo00<00000003I
o`00fOl0DP00fOl2000000P0oooo0P00001P03<0o`030000003oool0oooo00d0oooo000>0?ooo`03
0000003co`00lol00980lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0L003o6@03
0000003oool0oooo00P0oooo00<00000003Io`00fOl0D@00fOl2000000P0oooo0P00001R03<0o`03
0000003oool0oooo00d0oooo000>0?ooo`030000003co`00lol009<0lol000<000000?ooo`3oool0
3P3oool00`0000000?lI003o6@0K003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0
CP00fOl3000000L0oooo0`00001T03<0o`030000003oool0oooo00d0oooo000>0?ooo`030000003c
o`00lol009@0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0I003o6@030000003o
ool0oooo00T0oooo00<00000003Io`00fOl0C000fOl2000000P0oooo0P00001X03<0o`030000003o
ool0oooo00`0oooo000>0?ooo`030000003co`00lol009D0lol000<000000?ooo`3oool03P3oool0
0`0000000?lI003o6@0H003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0BP00fOl3
000000L0oooo0`00001Z03<0o`030000003oool0oooo00`0oooo000>0?ooo`030000003co`00lol0
09H0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0F003o6@030000003oool0oooo
00T0oooo00<00000003Io`00fOl0B000fOl2000000P0oooo0P00001]03<0o`030000003oool0oooo
00`0oooo000=0?ooo`030000003co`00lol009P0lol000<000000?ooo`3oool03P3oool00`000000
0?lI003o6@0E003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0A`00fOl2000000P0
oooo0P00001_03<0o`030000003oool0oooo00`0oooo000=0?ooo`030000003co`00lol009T0lol0
00<000000?ooo`3oool03P3oool00`0000000?lI003o6@0D003o6@030000003oool0oooo00P0oooo
00<00000003Io`00fOl0A000fOl3000000L0oooo0`00001b03<0o`030000003oool0oooo00/0oooo
000=0?ooo`030000003co`00lol009X0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o
6@0B003o6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0@P00fOl2000000P0oooo0P00
001e03<0o`030000003oool0oooo00/0oooo000=0?ooo`030000003co`00lol009/0lol000<00000
0?ooo`3oool03P3oool00`0000000?lI003o6@0A003o6@030000003oool0oooo00P0oooo00<00000
003Io`00fOl0@000fOl3000000L0oooo0`00001g03<0o`030000003oool0oooo00/0oooo000=0?oo
o`030000003co`00lol009`0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0?003o
6@030000003oool0oooo00T0oooo00<00000003Io`00fOl0?P00fOl2000000P0oooo0P00001j03<0
o`030000003oool0oooo00/0oooo000<0?ooo`030000003co`00lol009h0lol000<000000?ooo`3o
ool03P3oool00`0000000?lI003o6@0>003o6@030000003oool0oooo00P0oooo00<00000003Io`00
fOl0?@00fOl2000000P0oooo0P00001l03<0o`030000003oool0oooo00/0oooo000<0?ooo`030000
003co`00lol009l0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@0=003o6@030000
003oool0oooo00P0oooo00<00000003Io`00fOl0>P00fOl3000000L0oooo0`00001n03<0o`030000
003oool0oooo00/0oooo000<0?ooo`030000003co`00lol00:00lol000<000000?ooo`3oool03P3o
ool00`0000000?lI003o6@0;003o6@030000003oool0oooo00P0oooo00<00000003Io`00fOl0>@00
fOl2000000P0oooo0P00000V03<0o`0302`0B0000000000000<0000000D03`3O03<0o`0c0?l0<`3o
02000002000000050000W00V0000000000l0g`0/04P00P0000000`0009`0<`3o02H0000200000003
00l0g`0c0?l0<`3o03l0<`3o00<000000?ooo`3oool02`3oool000`0oooo00<000000??o003co`00
X@3co`000`000000oooo0?ooo`0>0?ooo`0300000000oaT00?lI00X00?lI00<000000?ooo`3oool0
203oool00`0000000=Wo003Io`0f003Io`<000001`3oool3000002X0<`3o00<09P0001L0o`0c0?l0
100c0?l01`0c07@0002L03<0o`0c0?l0;0180000000G0?l00P0c0?l00`0c07@0002o03<0o`0203<0
o`0302H0000G0?l0<`3o0480<`3o00<000000?ooo`3oool02P3oool000`0oooo00<000000??o003c
o`00XP3co`000`000000oooo0?ooo`0>0?ooo`0300000000oaT00?lI00P00?lI00<000000?ooo`3o
ool02@3oool00`0000000=Wo003Io`0d003Io`800000203oool2000002d0<`3o00<09P0001L0o`0c
0?l0100c0?l00`0/04P03`3O03<0o`0203<0o`0602H0000G0?l0<`3o03<0o`0c07@0002o0`0c0?l0
0`0V00005`3o03<0o`1203<0o`030000003oool0oooo00X0oooo000<0?ooo`030000003co`00lol0
0:<0lol000<000000?ooo`3oool03P3oool00`0000000?lI003o6@07003o6@030000003oool0oooo
00P0oooo00<00000003Io`00fOl0<P00fOl3000000P0oooo0P00000_03<0o`0302H0000G0?l0<`3o
00@0<`3o00<0;01800l0g`0c0?l00P0c0?l01P0V00005`3o03<0o`0c0?l0<`1d0000_`<0<`3o00<0
9P0001L0o`0c0?l0@P0c0?l00`000000oooo0?ooo`0:0?ooo`00303oool00`000000lol00??o002T
0??o00030000003oool0oooo00h0oooo00<00000003o6@00oaT01@00oaT00`000000oooo0?ooo`09
0?ooo`0300000000fOl00=Wo03000=Wo0P0000080?ooo`<00000<@0c0?l00`0V00005`3o03<0o`04
03<0o`0302`0B00?0=l0<`3o0080<`3o00L09P0001L0o`0c0?l0<`3o03<0M00000005`3o0080<`3o
00<0800001L0o`0c0?l0@P0c0?l00`000000oooo0?ooo`0:0?ooo`002`3oool00`000000lol00??o
002V0??o00030000003oool0oooo00h0oooo00<00000003o6@00oaT01000oaT00`000000oooo0?oo
o`080?ooo`0300000000fOl00=Wo02l00=Wo0P0000080?ooo`800000<P0c0?l00`0/04P000000000
00030000000?0000_`0c0?l0;0180000000?0=l0<`3o03<0W00?0000000001L0o`0c0?l0;0180000
000007@05`000080000000<0002o03<0o`0c0?l0@P0c0?l00`000000oooo0?ooo`0:0?ooo`002`3o
ool00`000000lol00??o002W0??o00030000003oool0oooo00h0oooo00<00000003o6@00oaT00`00
oaT00`000000oooo0?ooo`080?ooo`0300000000fOl00=Wo02`00=Wo0`0000070?ooo`<00000=P0c
0?l00`0V00005`3o03<0o`1G03<0o`030000003oool0oooo00X0oooo000;0?ooo`030000003co`00
lol00:P0lol000<000000?ooo`3oool03P3oool01@0000000?lI003o6@00oaT0000000/0oooo00<0
0000003Io`00fOl0:P00fOl2000000P0oooo0P00000i03<0o`0302H0000?0=l0<`3o05L0<`3o00<0
00000?ooo`3oool02P3oool000/0oooo00<000000??o003co`00Z@3co`000`000000oooo0?ooo`0>
0?ooo`0400000000oaT00?lI000000X0oooo00<00000003Io`00fOl0:000fOl3000000P0oooo0P00
000k03<0o`0303<0_`0G000000000080000000<05`3o03<0o`0c0?l0DP0c0?l00`000000oooo0?oo
o`0:0?ooo`002`3oool00`000000lol00??o002Z0??o00030000003oool0oooo00h0oooo0P00000;
0?ooo`0300000000fOl00=Wo02H00=Wo0P0000080?ooo`<00000V00c0?l00`000000oooo0?ooo`09
0?ooo`002`3oool00`000000lol00??o002[0??o00030000003oool0oooo00h0oooo00<000000?oo
o`3oool0203oool00`0000000=Wo003Io`0U003Io`800000203oool2000009/0<`3o00<000000?oo
o`3oool02@3oool000/0oooo00<000000??o003co`00[03co`000`000000oooo0?ooo`0H0?ooo`03
00000000fOl00=Wo02800=Wo0`0000070?ooo`<00000W@0c0?l00`000000oooo0?ooo`090?ooo`00
2P3oool00`000000lol00??o002^0??o00030000003oool0oooo01H0oooo00<00000003Io`00fOl0
8@00fOl2000000P0oooo0P00002P03<0o`030000003oool0oooo00T0oooo000:0?ooo`030000003c
o`00lol00:l0lol000<000000?ooo`3oool05@3oool00`0000000=Wo003Io`0N003Io`<00000203o
ool200000:80<`3o00<000000?ooo`3oool02@3oool000X0oooo00<000000??o003co`00/03co`00
0`000000oooo0?ooo`0D0?ooo`0300000000fOl00=Wo01`00=Wo0P0000080?ooo`<00000Y00c0?l0
0`000000oooo0?ooo`090?ooo`002P3oool00`000000lol00??o002a0??o00030000003oool0oooo
0180oooo00<00000003Io`00fOl06P00fOl3000000P0oooo0P00002W03<0o`030000003oool0oooo
00T0oooo000:0?ooo`030000003co`00lol00;80lol000<000000?ooo`3oool04@3oool00`000000
0=Wo003Io`0H003Io`800000203oool300000:T0<`3o00<000000?ooo`3oool02@3oool000X0oooo
00<000000??o003co`00/`3co`000`000000oooo0?ooo`0?0?ooo`0300000000fOl00=Wo01L00=Wo
0P0000080?ooo`800000[00c0?l00`000000oooo0?ooo`090?ooo`002P3oool00`000000lol00??o
002d0??o00030000003oool0oooo00h0oooo00<00000003Io`00fOl05000fOl3000000P0oooo0P00
002^03<0o`030000003oool0oooo00T0oooo000:0?ooo`030000003co`00lol00;D0lol000<00000
0?ooo`3oool03@3oool00`0000000=Wo003Io`0B003Io`800000203oool300000;00<`3o00<00000
0?ooo`3oool02@3oool000X0oooo00<000000??o003co`00]P3co`000`000000oooo0?ooo`0;0?oo
o`0300000000fOl00=Wo01000=Wo0`0000080?ooo`800000/`0c0?l00`000000oooo0?ooo`090?oo
o`002P3oool00`000000lol00??o002g0??o00030000003oool0oooo00X0oooo00<00000003Io`00
fOl03P00fOl2000000P0oooo0`00002e03<0o`030000003oool0oooo00T0oooo000:0?ooo`030000
003co`00lol00;P0lol000<000000?ooo`3oool0203oool00`0000000=Wo003Io`0=003Io`800000
203oool200000;P0<`3o00<000000?ooo`3oool02@3oool000X0oooo00<000000??o003co`00^@3c
o`000`000000oooo0?ooo`070?ooo`0300000000fOl00=Wo00X00=Wo0`0000080?ooo`800000^P0c
0?l00`000000oooo0?ooo`090?ooo`002P3oool00`000000lol00??o002j0??o00030000003oool0
oooo00D0oooo00<00000003Io`00fOl02@00fOl2000000P0oooo0`00002l03<0o`030000003oool0
oooo00T0oooo000:0?ooo`030000003co`00lol00;/0lol000<000000?ooo`3oool0103oool00`00
00000=Wo003Io`06003Io`<00000203oool200000;l0<`3o00<000000?ooo`3oool02@3oool000X0
oooo00<000000??o003co`00_03co`000`000000oooo0?ooo`030?ooo`0300000000fOl00=Wo00@0
0=Wo0P0000090?oool@000002`3oool000X0oooo00<000000??o003co`00>P3co`000`3EW0000000
000000030000000504BL003co`00lol00??o001^0000100000001@2fo`00lol00??o003co`00KP00
00@0000000D0]_l00??o003co`00lml004@000030000000306id0000000004P00600lol000D00000
0?ooo`3oool0oooo00000005003Io`800000fP3oool000X0oooo00<000000??o003co`00?03co`00
0`2fM000K[l00??o00040??o00030;Id001^_`00lol00080lol000H0lkl0001d003co`00lol00;Id
001^_`030??o00060?>o0000M000lol00??o002DB000U=l00`3co`000`1^000007@00??o001Q0??o
00040000003oool0oooo000000800=Wo0`00003L0?ooo`002P3oool00`000000lol00??o000l0??o
00030;Id001^_`00lol000@0lol000<0KTP00??o003co`000`3co`00102DB000U=l00??o001^B005
0??o000409A8002Dg`00lml004Ad00@0lol000<0lkl0001d003co`00HP3co`0200000003003Io`00
000000000=l0oooo000:0?ooo`030000003co`00lol003`0lol000<0]W@006jo003co`00103co`00
0`1^B000lol00??o00030??o000409A8002Dg`00lol006i800D0lol000@0U4P009CO003cg`00A7@0
103co`000`3c_`0007@00??o001S0??o0<D000007P3oool000X0oooo00<000000??o003co`00?03c
o`000`2fM000K[l00??o00040??o00030;Id0000B000lol00080lol000H0]W@0001d003co`00lol0
0;Id0000B0030??o00060;Id0000M000lol00??o002DB000A9`00P3co`000`3c_`000000001d001S
0??o00030000003o0000o`000<80o`0000<000000?ooo`3oool0703oool000X0oooo00<000000??o
003co`00>P3co`000`3EW00000000000000300000005001d003co`00lol00??o003EW0000`000000
0`00M000lol00??o00020??o00050=FL00000000000000000000M000103co`001P2DB00000000000
00000000][l0001d0680lol000<000000?l0003o0000``3o00000`000000oooo0?ooo`0L0?ooo`00
2P3oool00`000000lol00??o000l0??o00030;Id001^_`00lol001/0lol000<0lkl0001d003co`00
H03co`000`000000o`000?l000340?l000030000003oool0oooo01`0oooo000:0?ooo`030000003c
o`00lol003`0lol000<0]W@004BL003co`006`3co`000`3c_`0007@00??o001O0??o00030000003o
0000o`000<D0o`0000<000000?ooo`3oool0703oool000X0oooo00<000000??o003co`00?@3co`00
1@1^00000000000000000000K[l001L0lol000<0lkl000000000M000G`3co`000`000000o`000?l0
00360?l000030000003oool0oooo01`0oooo000:0?ooo`030000003co`00lol00;X0lol000<00000
0?l0003o0000a`3o00000`000000oooo0?ooo`0L0?ooo`002P3oool00`000000lol00??o002i0??o
00030000003o0000o`000<P0o`0000<000000?ooo`3oool0703oool000X0oooo00<000000??o003c
o`00^03co`000`000000o`000?l000390?l000030000003oool0oooo01`0oooo000:0?ooo`030000
003co`00lol00;L0lol000<000000?l0003o0000bP3o00000`000000oooo0?ooo`0L0?ooo`002P3o
ool00`000000lol00??o002f0??o00030000003o0000o`000</0o`0000<000000?ooo`3oool0703o
ool000X0oooo00<000000??o003co`00]@3co`000`000000o`000?l0003<0?l000030000003oool0
oooo01`0oooo000:0?ooo`030000003co`00lol00;@0lol000<000000?l0003o0000c@3o00000`00
0000oooo0?ooo`0L0?ooo`002P3oool00`000000lol00??o002c0??o00030000003o0000o`000<h0
o`0000<000000?ooo`3oool0703oool000X0oooo00<000000??o003co`00/P3co`000`000000o`00
0?l0003?0?l000030000003oool0oooo01`0oooo000:0?ooo`030000003co`00lol00;40lol000<0
00000?l0003o0000c`3o00000`000000oooo0?ooo`0M0?ooo`002P3oool00`000000lol00??o002`
0??o00030000003o0000o`000=00o`0000<000000?ooo`3oool07@3oool000X0oooo00<000000??o
003co`00[`3co`000`000000o`000?l0003A0?l000030000003oool0oooo01d0oooo000;0?ooo`03
0000003co`00lol00:d0lol000<000000?l0003o0000dP3o00000`000000oooo0?ooo`0M0?ooo`00
2`3oool00`000000lol00??o002/0??o00030000003o0000o`000=<0o`0000<000000?ooo`3oool0
7@3oool000/0oooo00<000000??o003co`00Z`3co`000`000000o`000?l0003D0?l000030000003o
ool0oooo01d0oooo000;0?ooo`030000003co`00lol00:X0lol000<000000?l0003o0000e@3o0000
0`000000oooo0?ooo`0M0?ooo`002`3oool00`000000lol00??o002Y0??o00030000003o0000o`00
0=H0o`0000<000000?ooo`3oool07@3oool000/0oooo00<000000??o003co`00Z03co`000`000000
o`000?l0003G0?l000030000003oool0oooo01d0oooo000;0?ooo`030000003co`00lol00:L0lol0
00<000000?l0003o0000e`3o00000`000000oooo0?ooo`0N0?ooo`002`3oool00`000000lol00??o
002V0??o00030000003o0000o`000=P0o`0000<000000?ooo`3oool07P3oool000`0oooo00<00000
0??o003co`00Y03co`000`000000o`000?l0003I0?l000030000003oool0oooo01h0oooo000<0?oo
o`030000003co`00lol00:<0lol000<000000?l0003o0000fP3o00000`000000oooo0?ooo`0N0?oo
o`00303oool00`000000lol00??o002R0??o00030000003o0000o`000=/0o`0000<000000?ooo`3o
ool07P3oool000`0oooo00<000000??o003co`00X@3co`000`000000o`000?l0003L0?l000030000
003oool0oooo01h0oooo000<0?ooo`030000003co`00lol00:00lol000<000000?l0003o0000g@3o
00000`000000oooo0?ooo`0N0?ooo`00303oool00`000000lol00??o002O0??o00030000003o0000
o`000=d0o`0000<000000?ooo`3oool07`3oool000`0oooo00<000000??o003co`00WP3co`000`00
0000o`000?l0003N0?l000030000003oool0oooo01l0oooo000=0?ooo`030000003co`00lol009`0
lol000<000000?l0003o0000g`3o00000`000000oooo0?ooo`0O0?ooo`003@3oool00`000000lol0
0??o002K0??o00030000003o0000o`000>00o`0000<000000?ooo`3oool07`3oool000d0oooo00<0
00000??o003co`00VP3co`000`000000o`000?l0003Q0?l000030000003oool0oooo01l0oooo000=
0?ooo`030000003co`00lol009T0lol000<000000?l0003o0000h@3o00000`000000oooo0?ooo`0P
0?ooo`003P3oool00`000000lol00??o002G0??o00030000003o0000o`000>80o`0000<000000?oo
o`3oool0803oool000h0oooo00<000000??o003co`00UP3co`000`000000o`000?l0003S0?l00003
0000003oool0oooo0200oooo000>0?ooo`030000003co`00lol009D0lol000<000000?l0003o0000
i03o00000`000000oooo0?ooo`0P0?ooo`003P3oool00`000000lol00??o002D0??o00030000003o
0000o`000>D0o`0000<000000?ooo`3oool0803oool000h0oooo00<000000??o003co`00T`3co`00
0`000000o`000?l0003V0?l000030000003oool0oooo0200oooo000?0?ooo`030000003co`00lol0
0940lol000<000000?l0003o0000iP3o00000`000000oooo0?ooo`0Q0?ooo`003`3oool00`000000
lol00??o002@0??o00030000003o0000o`000>L0o`0000<000000?ooo`3oool08@3oool000l0oooo
00<000000??o003co`00S`3co`000`000000o`000?l0003X0?l000030000003oool0oooo0240oooo
000?0?ooo`030000003co`00lol008h0lol000<000000?l0003o0000j03o00000`000000oooo0?oo
o`0R0?ooo`003`3oool00`000000lol00??o002=0??o00030000003o0000o`000>T0o`0000<00000
0?ooo`3oool08P3oool00100oooo00<000000??o003co`00R`3co`000`000000o`000?l0003Z0?l0
00030000003oool0oooo0280oooo000@0?ooo`030000003co`00lol008X0lol000<000000?l0003o
0000j`3o00000`000000oooo0?ooo`0R0?ooo`00403oool00`000000lol00??o00290??o00030000
003o0000o`000>`0o`0000<000000?ooo`3oool08P3oool00100oooo00<000000??o003co`00R03c
o`000`000000o`000?l0003/0?l000030000003oool0oooo02<0oooo000A0?ooo`030000003co`00
lol008H0lol000<000000?l0003o0000k@3o00000`000000oooo0?ooo`0S0?ooo`004@3oool00`00
0000lol00??o00250??o00030000003o0000o`000>h0o`0000<000000?ooo`3oool08`3oool00140
oooo00<000000??o003co`00Q03co`000`000000o`000?l0003_0?l000030000003oool0oooo02<0
oooo000B0?ooo`030000003co`00lol00880lol000<000000?l0003o0000k`3o00000`000000oooo
0?ooo`0T0?ooo`004P3oool00`000000lol00??o00210??o00030000003o0000o`000?00o`0000<0
00000?ooo`3oool0903oool00180oooo00<000000??o003co`00P03co`000`000000o`000?l0003a
0?l000030000003oool0oooo02@0oooo000B0?ooo`030000003co`00lol007l0lol000<000000?l0
003o0000l@3o00000`000000oooo0?ooo`0U0?ooo`004`3oool00`000000lol00??o001m0??o0003
0000003o0000o`000?80o`0000<000000?ooo`3oool09@3oool001<0oooo00<000000??o003co`00
O03co`000`000000o`000?l0003c0?l000030000003oool0oooo02D0oooo000C0?ooo`030000003c
o`00lol007/0lol000<000000?l0003o0000m03o00000`000000oooo0?ooo`0U0?ooo`00503oool0
0`000000lol00??o001i0??o00030000003o0000o`000?@0o`0000<000000?ooo`3oool09P3oool0
01@0oooo00<000000??o003co`00N03co`000`000000o`000?l0003e0?l000030000003oool0oooo
02H0oooo000D0?ooo`030000003co`00lol007L0lol000<000000?l0003o0000m@3o00000`000000
oooo0?ooo`0W0?ooo`00503oool00`000000lol00??o001f0??o00030000003o0000o`000?H0o`00
00<000000?ooo`3oool09`3oool001D0oooo00<000000??o003co`00M03co`000`000000o`000?l0
003g0?l000030000003oool0oooo02L0oooo000E0?ooo`030000003co`00lol007<0lol000<00000
0?l0003o0000m`3o00000`000000oooo0?ooo`0X0?ooo`005@3oool00`000000lol00??o001b0??o
00030000003o0000o`000?P0o`0000<000000?ooo`3oool0:03oool001H0oooo00<000000??o003c
o`00L03co`000`000000o`000?l0003i0?l000030000003oool0oooo02P0oooo000F0?ooo`030000
003co`00lol006l0lol000<000000?l0003o0000n@3o00000`000000oooo0?ooo`0Y0?ooo`005`3o
ool00`000000lol00??o001]0??o00030000003o0000o`000?X0o`0000<000000?ooo`3oool0:@3o
ool001L0oooo00<000000??o003co`00K03co`000`000000o`000?l0003j0?l000030000003oool0
oooo02X0oooo000H0?ooo`030000003co`00lol006X0lol000<000000?l0003o0000n`3o00000`00
0000oooo0?ooo`0Z0?ooo`00603oool00`000000lol00??o001Y0??o00030000003o0000o`000?`0
o`0000<000000?ooo`3oool0:P3oool001T0oooo00<000000??o003co`00I`3co`000`000000o`00
0?l0003l0?l000030000003oool0oooo02/0oooo000I0?ooo`030000003co`00lol006H0lol000<0
00000?l0003o0000o@3o00000`000000oooo0?ooo`0[0?ooo`006P3oool00`000000lol00??o001T
0??o00030000003o0000o`000?d0o`0000<000000?ooo`3oool0;03oool001X0oooo00<000000??o
003co`00H`3co`000`000000o`000?l0003n0?l000030000003oool0oooo02`0oooo000J0?ooo`03
0000003co`00lol00680lol000<000000?l0003o0000o`3o00000`000000oooo0?ooo`0/0?ooo`00
6`3oool00`000000lol00??o001P0??o00030000003o0000o`000?l0o`0000<000000?ooo`3oool0
;@3oool001/0oooo00<000000??o003co`00G`3co`000`000000o`000?l0003o0?l00040o`0000<0
00000?ooo`3oool0;@3oool001`0oooo00<000000??o003co`00G@3co`000`000000o`000?l0003o
0?l00040o`0000<000000?ooo`3oool0;P3oool001`0oooo00<000000??o003co`00G03co`000`00
0000o`000?l0003o0?l00080o`0000<000000?ooo`3oool0;P3oool001d0oooo00<000000??o003c
o`00FP3co`000`000000o`000?l0003o0?l00080o`0000<000000?ooo`3oool0;`3oool001d0oooo
00<000000??o003co`00F@3co`000`000000o`000?l0003o0?l00080o`0000<000000?ooo`3oool0
<03oool001h0oooo00<000000??o003co`00E`3co`000`000000o`000?l0003o0?l000<0o`0000<0
00000?ooo`3oool0<03oool001h0oooo00<000000??o003co`00EP3co`000`000000o`000?l0003o
0?l000@0o`0000<000000?ooo`3oool0<03oool001l0oooo00<000000??o003co`00E03co`000`00
0000o`000?l0003o0?l000@0o`0000<000000?ooo`3oool0<@3oool001l0oooo00<000000??o003c
o`00D`3co`000`000000o`000?l0003o0?l000D0o`0000<000000?ooo`3oool0<@3oool001l0oooo
00<000000??o003co`00DP3co`000`000000o`000?l0003o0?l000D0o`0000<000000?ooo`3oool0
<P3oool00200oooo00<000000??o003co`00D03co`000`000000o`000?l0003o0?l000H0o`0000<0
00000?ooo`3oool0<P3oool00200oooo00<000000??o003co`00C`3co`000`000000o`000?l0003o
0?l000H0o`0000<000000?ooo`3oool0<`3oool00240oooo00<000000??o003co`00C@3co`000`00
0000o`000?l0003o0?l000H0o`0000<000000?ooo`3oool0=03oool00240oooo00<000000??o003c
o`00C03co`000`000000o`000?l0003o0?l000L0o`0000<000000?ooo`3oool0=03oool00280oooo
00<000000??o003co`00BP3co`000`000000o`000?l0003o0?l000P0o`0000<000000?ooo`3oool0
=03oool00280oooo00<000000??o003co`00B@3co`000`000000o`000?l0003o0?l000P0o`0000<0
00000?ooo`3oool0=@3oool002<0oooo00<000000??o003co`00A`3co`000`000000o`000?l0003o
0?l000T0o`0000<000000?ooo`3oool0=@3oool002<0oooo00<000000??o003co`00AP3co`000`00
0000o`000?l0003o0?l000T0o`0000<000000?ooo`3oool0=P3oool002@0oooo00<000000??o003c
o`00A03co`000`000000o`000?l0003o0?l000X0o`0000<000000?ooo`3oool0=P3oool002D0oooo
00<000000??o003co`00@P3co`000`000000o`000?l0003o0?l000X0o`0000<000000?ooo`3oool0
=`3oool002H0oooo00<000000??o003co`00@03co`000`000000o`000?l0003o0?l000X0o`0000<0
00000?ooo`3oool0>03oool002H0oooo00<000000??o003co`00?`3co`000`000000o`000?l0003o
0?l000/0o`0000<000000?ooo`3oool0>03oool002L0oooo00<000000??o003co`00?@3co`000`00
0000o`000?l0003o0?l000/0o`0000<000000?ooo`3oool0>@3oool002L0oooo00<000000??o003c
o`00?03co`000`000000o`000?l0003o0?l000/0o`0000<000000?ooo`3oool0>P3oool002P0oooo
00<000000??o003co`00>P3co`000`000000o`000?l0003o0?l000`0o`0000<000000?ooo`3oool0
>P3oool002P0oooo00<000000??o003co`00>@3co`000`000000o`000?l000220?l0000307@00000
0000000000<0000000D0W0000?l0003o0000o`000;l00004000000030;l0003o0000g`0000<00000
00D0o`000;l000000000000004P000030?l0000407@0000000000000000006P0o`0000<000000?oo
o`3oool0>`3oool002T0oooo00<000000??o003co`00=`3co`000`000000o`000?l000250?l00003
07@0002o0000o`0000@0o`0000<0_`000000003o00000`3o00001@000000o`000?l0003o00000000
00<0o`0000<0_`0007@0003o00000P3o00001`3O0000B0000?l0003o0000g`000000002o0000I@3o
00000`000000oooo0?ooo`0l0?ooo`00:P3oool00`000000lol00??o000e0??o00030000003o0000
o`0008H0o`0000<0M0000;l0003o0000103o00000`1d0000_`000?l000070?l000060000003o0000
o`000?l0002o0000M0000`3o00000`3O0000B0000?l0001Y0?l000030000003oool0oooo03`0oooo
000[0?ooo`030000003co`00lol003<0lol000<000000?l0003o0000Q`3o00000`1d0000_`000?l0
00040?l0000307@000000000000000@000000`3o00001P000000o`000?l0003o0000_`0007@000<0
o`0000<0g`0004P0003o0000J03o00000`000000oooo0?ooo`0m0?ooo`00:`3oool00`000000lol0
0??o000b0??o00030000003o0000o`0008P0o`0000<0M0000000001d0000103o00000`2o0000M000
0?l000020?l0000309`000180000o`000080o`0000H0000007@0003o0000o`0009`0001d00030?l0
00030=l000180000o`0006L0o`0000<000000?ooo`3oool0?P3oool002`0oooo00<000000??o003c
o`00<03co`000`000000o`000?l000270?l000050=l00000000000000;l0001d00000P000000101d
0000o`000?l0001d00030000000404P0003o0000o`000=l00080000000@0M0000000000000000000
0`3o00000`1800000000000000030000000309`0003o0000o`000680o`0000<000000?ooo`3oool0
?P3oool002`0oooo00<000000??o003co`00;`3co`000`000000o`000?l0002T0?l000030=l00018
0000o`0006H0o`0000<000000?ooo`3oool0?`3oool002d0oooo00<000000??o003co`00;@3co`00
0`000000o`000?l0002U0?l000030=l000180000o`0006D0o`0000<000000?ooo`3oool0@03oool0
02h0oooo00<000000??o003co`00:`3co`000`000000o`000?l0003o0?l000l0o`0000<000000?oo
o`3oool0@03oool002l0oooo00<000000??o003co`00:@3co`000`000000o`000?l0003o0?l000l0
o`0000<000000?ooo`3oool0@@3oool002l0oooo00<000000??o003co`00:03co`000`000000o`00
0?l0003o0?l000l0o`0000<000000?ooo`3oool0@P3oool00300oooo00<000000??o003co`009P3c
o`000`000000o`000?l0003o0?l00100o`0000<000000?ooo`3oool0@P3oool00340oooo00<00000
0??o003co`00903co`000`000000o`000?l0003o0?l00100o`0000<000000?ooo`3oool0@`3oool0
0380oooo00<000000??o003co`008P3co`000`000000o`000?l0003o0?l00100o`0000<000000?oo
o`3oool0A03oool00380oooo00<000000??o003co`008@3co`000`000000o`000?l0003o0?l00140
o`0000<000000?ooo`3oool0A03oool003<0oooo00<000000??o003co`007`3co`000`000000o`00
0?l0003o0?l00140o`0000<000000?ooo`3oool0A@3oool003@0oooo00<000000??o003co`007@3c
o`000`000000o`000?l0003o0?l00140o`0000<000000?ooo`3oool0AP3oool003D0oooo00<00000
0??o003co`006`3co`000`000000o`000?l0003o0?l00140o`0000<000000?ooo`3oool0A`3oool0
03D0oooo00<000000??o003co`006P3co`000`000000o`000?l0003o0?l00140o`0000<000000?oo
o`3oool0B03oool003H0oooo00<000000??o003co`00603co`000`000000o`000?l0003o0?l00140
o`0000<000000?ooo`3oool0B@3oool003L0oooo00<000000??o003co`005P3co`000`000000o`00
0?l0003o0?l00180o`0000<000000?ooo`3oool0B@3oool003P0oooo00<000000??o003co`00503c
o`000`000000o`000?l0003o0?l00180o`0000<000000?ooo`3oool0BP3oool003T0oooo00<00000
0??o003co`004P3co`000`000000o`000?l0003o0?l00180o`0000<000000?ooo`3oool0B`3oool0
03X0oooo00<000000??o003co`00403co`000`000000o`000?l0003o0?l00180o`0000<000000?oo
o`3oool0C03oool003/0oooo00<000000??o003co`003P3co`000`000000o`000?l0003o0?l00180
o`0000<000000?ooo`3oool0C@3oool003/0oooo00<000000??o003co`003@3co`000`000000o`00
0?l0003o0?l00180o`0000<000000?ooo`3oool0CP3oool003`0oooo00<000000??o003co`002`3c
o`000`000000o`000?l0003o0?l00180o`0000<000000?ooo`3oool0C`3oool003d0oooo00<00000
0??o003co`002@3co`000`000000o`000?l0003o0?l00180o`0000<000000?ooo`3oool0D03oool0
03h0oooo00<000000??o003co`001`3co`000`000000o`000?l0003o0?l001<0o`0000<000000?oo
o`3oool0D03oool003l0oooo0P0000060??o00030000003o0000o`000?l0o`004`3o00000`000000
oooo0?ooo`1A0?ooo`00@03oool00`000000lol00??o00030??o00030000003o0000o`000?l0o`00
4P3o0002000005@0oooo00110?ooo`050000003co`00lol00??o00000000o`3o000D0?l000030000
003oool0oooo05@0oooo00120?ooo`030000003co`0000000?l0o`00503o00000`000000oooo0?oo
o`1E0?ooo`00@`3oool00`000000o`000?l0003o0?l001<0o`0000<000000?ooo`3oool0E@3oool0
04@0oooo0P00003o0?l00180o`0000<000000?ooo`3oool0EP3oool004H0oooo00<000000?l0003o
0000o`3o000=0?l000800000F@3oool004L0oooo00<000000?l0003o0000o`3o000;0?l000030000
003oool0oooo05T0oooo00170?ooo`030000003o0000o`000?l0o`002P3o00000`000000oooo0?oo
o`1J0?ooo`00B03oool00`000000o`000?l0003o0?l000T0o`0000<000000?ooo`3oool0FP3oool0
04T0oooo0P00003o0?l000P0o`0000<000000?ooo`3oool0F`3oool004/0oooo00<000000?l0003o
0000o`3o00030?l000800000GP3oool004`0oooo00<000000?l0003o0000o`3o00010?l000030000
003oool0oooo05h0oooo001=0?ooo`030000003o0000o`000?h0o`0000<000000?ooo`3oool0G`3o
ool004h0oooo00<000000?l0003o0000o03o00000`000000oooo0?ooo`1P0?ooo`00C`3oool00`00
0000o`000?l0003j0?l000030000003oool0oooo0640oooo001@0?ooo`030000003o0000o`000?P0
o`0000<000000?ooo`3oool0HP3oool00540oooo0P00003g0?l000030000003oool0oooo06<0oooo
001C0?ooo`030000003o0000o`000?80o`000P00001V0?ooo`00E03oool00`000000o`000?l0003`
0?l000030000003oool0oooo06H0oooo001E0?ooo`030000003o0000o`000>d0o`000P00001Y0?oo
o`00EP3oool00`000000o`000?l0003[0?l000030000003oool0oooo06T0oooo001G0?ooo`800000
j@3o0002000006`0oooo001I0?ooo`030000003o0000o`000>D0o`0000<000000?ooo`3oool0K03o
ool005X0oooo0P00003T0?l000030000003oool0oooo06d0oooo001L0?ooo`030000003o0000o`00
0>00o`0000<000000?ooo`3oool0KP3oool005d0oooo0P00003O0?l000030000003oool0oooo06l0
oooo001O0?ooo`030000003o0000o`000=X0o`000P00001b0?ooo`00H03oool200000=T0o`0000<0
00000?ooo`3oool0LP3oool00680oooo00<000000?l0003o0000e03o0002000007D0oooo001S0?oo
o`030000003o0000o`000=80o`0000<000000?ooo`3oool0M@3oool006@0oooo0P00003A0?l00003
0000003oool0oooo07H0oooo001V0?ooo`030000003o0000o`000</0o`000`00001i0?ooo`00I`3o
ool200000<T0o`000P00001l0?ooo`00J@3oool00`000000o`000?l000340?l000800000OP3oool0
06X0oooo0P0000330?l000030000003oool0oooo07h0oooo001/0?ooo`<00000_P3o000200000840
oooo001_0?ooo`800000^`3o00000`000000oooo0?ooo`210?ooo`00L@3oool00`000000o`000?l0
002f0?l000800000Q03oool00780oooo0P00002e0?l000030000003oool0oooo08@0oooo001d0?oo
o`030000003o0000o`000:h0o`00100000270?ooo`00M@3oool400000:/0o`0000<000000?ooo`3o
ool0R@3oool007T0oooo00<000000?l0003o0000YP3o0002000008`0oooo001j0?ooo`800000X`3o
0003000008h0oooo001l0?ooo`<00000WP3o000200000940oooo001o0?ooo`800000V`3o00000`00
0000oooo0?ooo`2A0?ooo`00P@3oool00`000000o`000?l0002D0?l000@00000U03oool00880oooo
1000002A0?l000030000003oool0oooo09H0oooo00260?ooo`030000003o0000o`0008X0o`001000
002I0?ooo`00Q`3oool4000008L0o`0000<000000?ooo`3oool0V`3oool008/0oooo0`0000200?l0
00@00000WP3oool008h0oooo0P00001k0?l000<00000XP3oool00900oooo0`00001d0?l000@00000
Y@3oool009<0oooo1000001]0?l000<00000Z@3oool009L0oooo0`00001V0?l000@00000[03oool0
09X0oooo1000001O0?l000<00000/03oool009h0oooo1@00001F0?l000@00000/`3oool00:<0oooo
1@00001<0?l000D00000]`3oool00:P0oooo1P0000110?l000D00000_03oool00:h0oooo1@00000e
0?l000L00000`@3oool00;<0oooo2@00000S0?l000T00000b03oool00;`0oooo8`00003A0?ooo`00
o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00
o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00
\
\>"],
  ImageRangeCache->{{{0, 431}, {431, 0}} -> {-1.05246, -1.15054, 0.00766707, \
0.00766707}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Master packages", "Subsection"],

Cell[TextData[{
  "If you look in the ",
  StyleBox["Statistics", "InlineInput",
    FontWeight->"Bold"],
  " directory you will find a large number of packages like ",
  StyleBox["Statistics`DiscreteDistributions`", "InlineInput",
    FontWeight->"Bold"],
  " or ",
  StyleBox["Statistics`ContinuousDistributions`", "InlineInput",
    FontWeight->"Bold"],
  " and many others.  Before loading any packages, let's see whether any \
probability distributions are available now."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?*Distr*\)\)], "Input"],

Cell[BoxData[
    RowBox[{"\<\"Distribute[f[x1, x2, ... ]] distributes f over Plus \
appearing in any of the xi. Distribute[expr, g] distributes over g. \
Distribute[expr, g, f] performs the distribution only if the head of expr is \
f.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"Distribute",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3348235503-9017593"]
}, Closed]],

Cell["\<\
Apparently no probability distributions are built in; this listed function is \
not statistical in nature.  If we happen to know which package contains the \
desired function, we can load a particular package as follows.\
\>", "Text"],

Cell[BoxData[
    \(Needs["\<Statistics`ContinuousDistributions`\>"]\)], "Input"],

Cell[TextData[{
  "We now find a large collection of continuous distributions.  Note that \
another package used by ",
  StyleBox["ContinuousDistributions", "InlineInput",
    FontWeight->"Bold"],
  " was also loaded automatically."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?*Distr*\)\)], "Input"],

Cell[BoxData[GridBox[{
        {
          StyleBox["System`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["Distribute",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348235598-8299169", "System`Distribute"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], "", "", "", "", "", "", "", ""}
              },
            RowMinHeight->1.05]},
        {
          StyleBox["Statistics`ContinuousDistributions`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["BetaDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`BetaDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["HalfNormalDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`\
HalfNormalDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["NoncentralStudentTDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`\
NoncentralStudentTDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"]},
              {
                ButtonBox[
                  StyleBox["CauchyDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`CauchyDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["LaplaceDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`LaplaceDistribution"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["ParetoDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`ParetoDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"]},
              {
                ButtonBox[
                  StyleBox["ChiDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`ChiDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["LogisticDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`LogisticDistribution"}\
,
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["RayleighDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`RayleighDistribution"}\
,
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"]},
              {
                ButtonBox[
                  StyleBox["ExponentialDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`\
ExponentialDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["LogNormalDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`\
LogNormalDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["UniformDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`UniformDistribution"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"]},
              {
                ButtonBox[
                  StyleBox["ExtremeValueDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`\
ExtremeValueDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["NoncentralChiSquareDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`\
NoncentralChiSquareDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["WeibullDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`WeibullDistribution"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"]},
              {
                ButtonBox[
                  StyleBox["GammaDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`GammaDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["NoncentralFRatioDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`ContinuousDistributions`\
NoncentralFRatioDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], ""}
              },
            RowMinHeight->{1, 1, 1, 1, 1, 1.05}]},
        {
          StyleBox["Statistics`NormalDistribution`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["ChiSquareDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`NormalDistribution`ChiSquareDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`NormalDistribution`"], 
                ButtonBox[
                  StyleBox["FRatioDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`NormalDistribution`FRatioDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`NormalDistribution`"], 
                ButtonBox[
                  StyleBox["NormalDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`NormalDistribution`NormalDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`NormalDistribution`"], 
                ButtonBox[
                  StyleBox["StudentTDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348235598-8299169", 
                    "Statistics`NormalDistribution`StudentTDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`NormalDistribution`"], ""}
              },
            RowMinHeight->1.05]}
        },
      RowSpacings->{2, 3, 2, 3, 2, 3},
      ColumnsEqual->True]], "Print",
  CellMargins->{{20, Inherited}, {Inherited, Inherited}},
  ShowCellLabel->False,
  CellFrameMargins->{{Inherited, Inherited}, {14, 14}},
  Background->RGBColor[0.964706, 0.929412, 0.839216],
  ButtonBoxOptions->{Active->True},
  GridBoxOptions->{ColumnAlignments->{Left}}]
}, Closed]],

Cell[TextData[{
  "However, it is not always obvious which package contains the functions you \
need and shadows occur when a symbol is invoked before the appropriate \
package has been loaded.  Fortunately, most of the directories that contain \
collections of related standard packages are equipped with ",
  StyleBox["master packages",
    FontSlant->"Italic"],
  ".  Prior to Version 5.1 one would use ",
  StyleBox["Needs[\"Statistics`Master`\"]", "InlineInput",
    FontWeight->"Bold"],
  " to obtain access to all packages in the statistics directory.  This \
technique proved sufficiently popular that by Version 5.1 it was no longer \
necessary to include ",
  StyleBox["Master", "InlineInput",
    FontWeight->"Bold"],
  " explicitly. Thus, simply declaring"
}], "Text"],

Cell[BoxData[
    \(Needs["\<Statistics`\>"]\)], "Input"],

Cell[TextData[{
  "is sufficient to access a vast array of statistical functions.  Note the \
",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " does not actually load the code for these functions until they are used, \
but it provides the references required to avoid pesky shadows."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?*Distr*\)\)], "Input"],

Cell[BoxData[GridBox[{
        {
          StyleBox["System`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["Distribute",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348236091-8135518", "System`Distribute"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"System`"], "", "", "", "", "", "", "", ""}
              },
            RowMinHeight->1.05]},
        {
          StyleBox["Statistics`ContinuousDistributions`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["BetaDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`BetaDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["HalfNormalDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`\
HalfNormalDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["NoncentralStudentTDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`\
NoncentralStudentTDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"]},
              {
                ButtonBox[
                  StyleBox["CauchyDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`CauchyDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["LaplaceDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`LaplaceDistribution"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["ParetoDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`ParetoDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"]},
              {
                ButtonBox[
                  StyleBox["ChiDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`ChiDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["LogisticDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`LogisticDistribution"}\
,
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["RayleighDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`RayleighDistribution"}\
,
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"]},
              {
                ButtonBox[
                  StyleBox["ExponentialDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`\
ExponentialDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["LogNormalDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`\
LogNormalDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["UniformDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`UniformDistribution"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"]},
              {
                ButtonBox[
                  StyleBox["ExtremeValueDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`\
ExtremeValueDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["NoncentralChiSquareDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`\
NoncentralChiSquareDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["WeibullDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`WeibullDistribution"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"]},
              {
                ButtonBox[
                  StyleBox["GammaDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`GammaDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], 
                ButtonBox[
                  StyleBox["NoncentralFRatioDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`ContinuousDistributions`\
NoncentralFRatioDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`ContinuousDistributions`"], ""}
              },
            RowMinHeight->{1, 1, 1, 1, 1, 1.05}]},
        {
          StyleBox["Statistics`DiscreteDistributions`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["BernoulliDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`DiscreteDistributions`BernoulliDistribution"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`DiscreteDistributions`"], 
                ButtonBox[
                  StyleBox["GeometricDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`DiscreteDistributions`GeometricDistribution"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`DiscreteDistributions`"], 
                ButtonBox[
                  StyleBox["NegativeBinomialDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`DiscreteDistributions`\
NegativeBinomialDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`DiscreteDistributions`"]},
              {
                ButtonBox[
                  StyleBox["BinomialDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`DiscreteDistributions`BinomialDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`DiscreteDistributions`"], 
                ButtonBox[
                  StyleBox["HypergeometricDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`DiscreteDistributions`\
HypergeometricDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`DiscreteDistributions`"], 
                ButtonBox[
                  StyleBox["PoissonDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`DiscreteDistributions`PoissonDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`DiscreteDistributions`"]},
              {
                ButtonBox[
                  StyleBox["DiscreteUniformDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`DiscreteDistributions`\
DiscreteUniformDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`DiscreteDistributions`"], 
                ButtonBox[
                  StyleBox["LogSeriesDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`DiscreteDistributions`LogSeriesDistribution"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`DiscreteDistributions`"], ""}
              },
            RowMinHeight->{1, 1, 1.05}]},
        {
          StyleBox["Statistics`MultiDiscreteDistributions`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["MultinomialDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`MultiDiscreteDistributions`\
MultinomialDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`MultiDiscreteDistributions`"], 
                ButtonBox[
                  StyleBox["MultiPoissonDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`MultiDiscreteDistributions`\
MultiPoissonDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`MultiDiscreteDistributions`"], 
                ButtonBox[
                  StyleBox["NegativeMultinomialDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`MultiDiscreteDistributions`\
NegativeMultinomialDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`MultiDiscreteDistributions`"]}
              },
            RowMinHeight->1.05]},
        {
          StyleBox["Statistics`MultinormalDistribution`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["HotellingTSquareDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`MultinormalDistribution`\
HotellingTSquareDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`MultinormalDistribution`"], 
                ButtonBox[
                  StyleBox["MultivariateTDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`MultinormalDistribution`\
MultivariateTDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`MultinormalDistribution`"], 
                ButtonBox[
                  StyleBox["WishartDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`MultinormalDistribution`WishartDistribution"},
                  
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`MultinormalDistribution`"]},
              {
                ButtonBox[
                  StyleBox["MultinormalDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`MultinormalDistribution`\
MultinormalDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`MultinormalDistribution`"], 
                ButtonBox[
                  StyleBox["QuadraticFormDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`MultinormalDistribution`\
QuadraticFormDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`MultinormalDistribution`"], ""}
              },
            RowMinHeight->{1, 1.05}]},
        {
          StyleBox["Statistics`NormalDistribution`",
            FontFamily->"Helvetica",
            FontSize->12,
            FontWeight->"Bold"]},
        {GridBox[{
              {
                ButtonBox[
                  StyleBox["ChiSquareDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`NormalDistribution`ChiSquareDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`NormalDistribution`"], 
                ButtonBox[
                  StyleBox["FRatioDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`NormalDistribution`FRatioDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`NormalDistribution`"], 
                ButtonBox[
                  StyleBox["NormalDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`NormalDistribution`NormalDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`NormalDistribution`"], 
                ButtonBox[
                  StyleBox["StudentTDistribution",
                    "Hyperlink"],
                  
                  ButtonFunction:>(
                    Internal`PutInformation[ #, LongForm -> False]&),
                  ButtonEvaluator->Automatic,
                  
                  ButtonData:>{"Info3348236091-8135518", 
                    "Statistics`NormalDistribution`StudentTDistribution"},
                  ButtonFrame->"None",
                  ButtonNote->"Statistics`NormalDistribution`"], ""}
              },
            RowMinHeight->1.05]}
        },
      RowSpacings->{2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3},
      ColumnsEqual->True]], "Print",
  CellMargins->{{20, Inherited}, {Inherited, Inherited}},
  ShowCellLabel->False,
  CellFrameMargins->{{Inherited, Inherited}, {14, 14}},
  Background->RGBColor[0.964706, 0.929412, 0.839216],
  ButtonBoxOptions->{Active->True},
  GridBoxOptions->{ColumnAlignments->{Left}}]
}, Closed]],

Cell[TextData[{
  "This technique can be very helpful for ",
  StyleBox["Graphics", "InlineInput",
    FontWeight->"Bold"],
  ", ",
  StyleBox["Statistics", "InlineInput",
    FontWeight->"Bold"],
  ", or other large grouping of packages."
}], "Text"],

Cell["\<\
Load the master graphics package and obtain information on representative \
functions.\
\>", "Exercise"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercises", "ExerciseMain"],

Cell[CellGroupData[{

Cell["Bridge hands", "ExerciseTitle"],

Cell["\<\
Compute the total number of deals in bridge.  The game has 4 players who each \
receive 13 cards (a hand) from a 52-card deck.  Permutations of the cards \
dealt to each player are not considered different deals, but permutations of \
the hands are considered different deals because the order of the hands \
affects the strategy of the game.  Express your result in exponential form \
(scientific notation).\
\>", "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Gaussian genius", "ExerciseTitle"],

Cell["\<\
There is a story, perhaps apocryphal, that shows the mathematical genius of \
Gauss as a young school boy.  Supposedly his teacher asked the class to sum \
the integers between 1 and 100.  After a minute or so, while the other \
students toiled, Gauss appeared to be staring out the window daydreaming.  \
When confronted, Gauss said that he had already obtained the answer, using \
the following method.\
\>", "ExerciseText"],

Cell["a) Produce a list of integers between 1 and 100.", "ExerciseText"],

Cell["b) Produce a second list in reverse order.", "ExerciseText"],

Cell[TextData[{
  "c) Add the two lists term by term and deduce a general formula for ",
  Cell[BoxData[
      \(TraditionalForm\`\[Sum]\+\(k = 1\)\%n k\)]],
  " by inspection."
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Happy Birthday!", "ExerciseTitle"],

Cell[TextData[{
  "Why is that practically every time we dine in a yuppie restaurant the \
staff sings Happy Birthday several times?  (And why is that so annoying?)  \
Develop an expression for the probability that all ",
  Cell[BoxData[
      \(TraditionalForm\`n\)]],
  " customers have different birthdays (month and day, regardless of year) \
and plot that expression.  Estimate the value of ",
  Cell[BoxData[
      \(TraditionalForm\`n\)]],
  " for which that probability drops below 50% and then confirm your value \
using table.  You will probably judge the result to be surprisingly small.  \
Assume that birthdays are distributed uniformly over the year and ignore leap \
years."
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Hexadecimal representation", "ExerciseTitle"],

Cell[TextData[{
  "Express the number of seconds in a year in hexadecimal form.  [Hint: use \
",
  StyleBox["Help",
    FontWeight->"Bold"],
  " to find functions which manipulate bases and note that hexadecimal form \
describes a number represented in base 16.]"
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Count random primes", "ExerciseTitle"],

Cell[TextData[{
  "Produce a list of 100 random integers between 1 and ",
  Cell[BoxData[
      \(TraditionalForm\`10\^9\)]],
  " and determine the number that are prime (do not count by hand!).  [Hint: \
consult ",
  StyleBox["Help",
    FontWeight->"Bold"],
  " and use ",
  StyleBox["Random", "InlineInput",
    FontWeight->"Bold"],
  ", ",
  StyleBox["Table", "InlineInput",
    FontWeight->"Bold"],
  ", ",
  StyleBox["PrimeQ", "InlineInput",
    FontWeight->"Bold"],
  ", and ",
  StyleBox["Count", "InlineInput",
    FontWeight->"Bold"],
  ".]  Try it several times and comment on results. "
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["A table of symbolic results", "ExerciseTitle"],

Cell[TextData[{
  "Produce a table containing factorizations of ",
  Cell[BoxData[
      \(TraditionalForm\`1 - x\^n\)]],
  ", for ",
  Cell[BoxData[
      \(TraditionalForm\`1 \[LessEqual] n \[LessEqual] 10\)]],
  " in convenient form."
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Golden Ratio", "ExerciseTitle"],

Cell[TextData[{
  "The Golden Ratio arises in the following problem from Euclid's ",
  StyleBox["Geometry",
    FontSlant->"Italic"],
  ".  Suppose that a line segment ",
  StyleBox["AC",
    FontSlant->"Italic"],
  " is divided in segments ",
  StyleBox["AB",
    FontSlant->"Italic"],
  " and ",
  StyleBox["BC ",
    FontSlant->"Italic"],
  "such that ",
  Cell[BoxData[
      FormBox[
        OverscriptBox[
          StyleBox["AC",
            FontSlant->"Italic"], "_"], TraditionalForm]]],
  ":",
  Cell[BoxData[
      FormBox[
        OverscriptBox[
          StyleBox["AB",
            FontSlant->"Italic"], "_"], TraditionalForm]]],
  StyleBox[" = ",
    FontSlant->"Italic"],
  Cell[BoxData[
      FormBox[
        OverscriptBox[
          StyleBox["AB",
            FontSlant->"Italic"], "_"], TraditionalForm]]],
  StyleBox[":",
    FontSlant->"Italic"],
  Cell[BoxData[
      FormBox[
        OverscriptBox[
          StyleBox["BC",
            FontSlant->"Italic"], "_"], TraditionalForm]]],
  ".  Determine this ratio."
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Heron's formula", "ExerciseTitle"],

Cell[TextData[{
  "a) Derive a formula for the area of a triangle in terms the lengths of its \
sides.  Use ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " to derive the required formula based upon simple geometry and \
trigonometry \[LongDash] do not just look up Heron's formula."
}], "ExerciseText"],

Cell[TextData[{
  "b) Derive a pleasingly symmetric version of this formula in terms of the \
semiperimeter ",
  Cell[BoxData[
      \(TraditionalForm\`s = \(1\/2\) \((a + b + c)\)\)]],
  ", where ",
  StyleBox["a,b,c",
    FontSlant->"Italic"],
  " are the lengths of the sides of the triangle."
}], "ExerciseText"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .64151 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0507637 0.898473 0.0601977 0.898473 [
[.32031 .32974 -5.59375 -7.4375 ]
[.32031 .32974 5.59375 7.4375 ]
[.5 .01527 -5.59375 -7.4375 ]
[.5 .01527 5.59375 7.4375 ]
[.85939 .32974 -5.59375 -7.4375 ]
[.85939 .32974 5.59375 7.4375 ]
[.63477 .32974 -5.59375 -7.4375 ]
[.63477 .32974 5.59375 7.4375 ]
[.97619 .03324 -5.59375 -7.4375 ]
[.97619 .03324 5.59375 7.4375 ]
[.67969 .62624 -5.59375 -7.4375 ]
[.67969 .62624 5.59375 7.4375 ]
[.02381 .03324 -5.59375 -7.4375 ]
[.02381 .03324 5.59375 7.4375 ]
[ 0 0 0 0 ]
[ 1 .64151 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.5 Mabswid
.05076 .0602 m
.94924 .0602 L
.67969 .59928 L
.05076 .0602 L
s
[ .02 .01 ] 0 setdash
.67969 .0602 m
.67969 .59928 L
s
gsave
.32031 .32974 -66.5938 -11.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 22.875 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 18.875000 moveto
 460.000000 18.875000 lineto
 460.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 18.875000 lineto
closepath
clip newpath
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(a) show
70.187500 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Courier
grestore
gsave
.5 .01527 -66.5938 -11.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 22.875 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 18.875000 moveto
 460.000000 18.875000 lineto
 460.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 18.875000 lineto
closepath
clip newpath
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(b) show
70.187500 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Courier
grestore
gsave
.85939 .32974 -66.5938 -11.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 22.875 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 18.875000 moveto
 460.000000 18.875000 lineto
 460.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 18.875000 lineto
closepath
clip newpath
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(c) show
70.187500 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Courier
grestore
gsave
.63477 .32974 -66.5938 -11.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 22.875 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 18.875000 moveto
 460.000000 18.875000 lineto
 460.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 18.875000 lineto
closepath
clip newpath
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(h) show
70.187500 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Courier
grestore
gsave
.97619 .03324 -66.5938 -11.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 22.875 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 18.875000 moveto
 460.000000 18.875000 lineto
 460.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 18.875000 lineto
closepath
clip newpath
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 14.625000 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(a) show
70.187500 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Math1Mono
%%+ font Courier
grestore
gsave
.67969 .62624 -66.5938 -11.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 22.875 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 18.875000 moveto
 460.000000 18.875000 lineto
 460.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 18.875000 lineto
closepath
clip newpath
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 14.625000 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(b) show
70.187500 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Math1Mono
%%+ font Courier
grestore
gsave
.02381 .03324 -66.5938 -11.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 22.875 translate 1 -1 scale
gsave
0.000000 0.000000 0.000000 setrgbcolor
1.000000 setlinewidth
gsave
newpath
 61.000000 18.875000 moveto
 460.000000 18.875000 lineto
 460.000000 4.000000 lineto
 61.000000 4.000000 lineto
 61.000000 18.875000 lineto
closepath
clip newpath
63.000000 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
63.000000 14.625000 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
(g) show
70.187500 14.625000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 12.000000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000000 0.000000 0.000000 setrgbcolor
0.000000 0.000000 rmoveto
1.000000 setlinewidth
grestore
grestore
%%DocumentNeededResources: font Math1Mono
%%+ font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1Mono
%%+ Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: font Math1Mono
%%+ font Courier
grestore
0 0 m
1 0 L
1 .64151 L
0 .64151 L
closepath
clip
newpath
% End of Graphics
MathPictureEnd
\
\>"], "NumberedFigure",
  ImageSize->{282.25, 181},
  ImageMargins->{{0, 0}, {0, 1.5625}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006W00013b000`400?l00000o`00003oo`3ooonX
0?ooo`00o`3ooonX0?ooo`00o`3ooonX0?ooo`00o`3ooonX0?ooo`00o`3ooonX0?ooo`00o`3ooonX
0?ooo`00o`3ooonX0?ooo`00c@3oool01@2oM00000000018W03ookl0M0000080000000<0001d0;oo
o`3oool0d03oool00<h0oooo00@0okmd0018B0180000M;oo0P3oool00`3o_g@0001809cOo`3@0?oo
o`00cP3oool00`3o_g@0001809cOo`040?ooo`030?noM000B9`0oooo0<l0oooo003>0?ooo`030?no
M000B9`0oooo00@0oooo00<0oono07@0M02oool0c`3oool00<h0oooo00<0okmd0018W03oool0103o
ool00`3ookl0M01d0;ooo`3?0?ooo`003`3oool0103ookl0M0000000M02ooonk0?ooo`030?noM000
04P0W=oo00@0oooo00<0okmd0018W03oool0c`3oool000l0oooo00@0omnL07BLg`3o_g@0B9cO^`3o
ool0103o_g@004Q804P0001d_ol20?ooo`030?noM00004P0W=oo0=00oooo000?0?ooo`050?oo_`1d
M;l0oooO09adW03Oool0^P3oool0103o_g@004RL0?oo_`1d0002000000030000M02oool0oooo0=00
oooo000?0?ooo`050?oog`2LB7@0_ooO09adW03Oool0^P3oool00`3o_g@004RL0?ooo`2o0?ooo`0:
0?oOW0180000000000000018W=l0oooo0?oog`2LB000000007Boo`d0oooo000@0?ooo`040?noM018
W9`0M4RL0=oookX0oooo00<0okmd0018W03oool0_P3oool02@3ookl0M01d0;ooo`3oool0oooO09a8
0000M;l0omnL04Qd_`0?0?ooo`004@3oool00`2oM000B9cO0?ooo`2i0?ooo`030;md0000000004RL
0;l0oooo00<0omnL07BLg`3oool00`3oool00`3OW4P0B7Ad07BLg`0?0?ooo`004@3oool00`2oM000
04RL0=ooo`3o0?ooog`0oooo00<0omnL07BLg`3oool0103oool00`2oM000B9cO0?ooo`0>0?ooo`00
403oool0103o_g@007Bo0?oOW018M;oo0?ooog`0oooo00<0oono07Ad_`3oool0103oool00`3OW4P0
B9cO0?ooo`0>0?ooo`003`3oool01P3o_g@0001d0;ooo`3oool0okmd001d_ol0ooooO03oool00`2o
M4P0W=oo0?ooo`020?ooo`040?oog`2LB4P0B4Qd0;ooo`h0oooo000=0?ooo`040?oog`2LB000001d
0;ooo`<0oooo00<0okmd0018W03Oool0o`3ooomj0?ooo`030?oOW01804P0W=oo0080oooo00@0gia8
0018W03Ogi`0M9cO3P3oool000`0oooo00<0gia80000001d_ol01P3oool00`3ogi`0B4RL0=ooo`3o
0?ooogX0oooo00T0oono07@00000000000000000M02oool0oooo0;mdB02Lgol03@3oool00?l0oooo
Z03oool00?l0ooooZ03oool00?l0ooooZ03oool00?l0ooooZ03oool00?l0ooooZ03oool00?l0oooo
Z03oool001`0ooooo`00001_000001d0oooo000M0?ooo`030000003oool0oooo0?`0oooo00<00000
0?ooo`3oool0JP3oool00`000000oooo0?ooo`0K0?ooo`007P3oool00`000000oooo0?ooo`3k0?oo
o`030000003oool0oooo06T0oooo00<000000?ooo`3oool0703oool001l0oooo0P00003k0?ooo`03
0000003oool0oooo06T0oooo00<000000?ooo`3oool0703oool00240oooo00<000000?ooo`3oool0
n03oool00`000000oooo0?ooo`1X0?ooo`030000003oool0oooo01d0oooo000R0?ooo`030000003o
ool0oooo0?L0oooo00<000000?ooo`3oool0J03oool00`000000oooo0?ooo`0M0?ooo`008`3oool0
0`000000oooo0?ooo`3f0?ooo`030000003oool0oooo06L0oooo00<000000?ooo`3oool07P3oool0
02@0oooo00<000000?ooo`3oool0m@3oool00`000000oooo0?ooo`1W0?ooo`030000003oool0oooo
01h0oooo000U0?ooo`030000003oool0oooo0?@0oooo00<000000?ooo`3oool0IP3oool00`000000
oooo0?ooo`0O0?ooo`009P3oool200000?@0oooo00<000000?ooo`3oool0IP3oool00`000000oooo
0?ooo`0O0?ooo`00:03oool00`000000oooo0?ooo`3o0?oooeX0oooo00<000000?ooo`3oool0803o
ool002T0oooo00<000000?ooo`3oool0o`3ooomI0?ooo`030000003oool0oooo0200oooo000Z0?oo
o`030000003oool0oooo0?l0ooooE`3oool00`000000oooo0?ooo`0Q0?ooo`00:`3oool00`000000
oooo0?ooo`3^0?ooo`030000003oool0oooo06@0oooo00<000000?ooo`3oool08@3oool002`0oooo
00<000000?ooo`3oool0k@3oool00`000000oooo0?ooo`1S0?ooo`030000003oool0oooo0280oooo
000]0?ooo`800000k@3oool00`000000oooo0?ooo`1S0?ooo`030000003oool0oooo0280oooo000_
0?ooo`030000003oool0oooo0>X0oooo00<000000?ooo`3oool0HP3oool00`000000oooo0?ooo`0S
0?ooo`00<03oool00`000000oooo0?ooo`3Y0?ooo`030000003oool0oooo0680oooo00<000000?oo
o`3oool08`3oool00340oooo00<000000?ooo`3oool0j03oool00`000000oooo0?ooo`1Q0?ooo`03
0000003oool0oooo02@0oooo000b0?ooo`030000003oool0oooo0>L0oooo00<000000?ooo`3oool0
H@3oool00`000000oooo0?ooo`0T0?ooo`00<`3oool00`000000oooo0?ooo`3V0?ooo`030000003o
ool0oooo0600oooo00<000000?ooo`3oool09@3oool003@0oooo0P00003V0?ooo`030000003oool0
oooo0600oooo00<000000?ooo`3oool09@3oool003H0oooo00<000000?ooo`3oool0o`3ooom60?oo
o`030000003oool0oooo02H0oooo000g0?ooo`030000003oool0oooo0?l0ooooA@3oool00`000000
oooo0?ooo`0V0?ooo`00>03oool00`000000oooo0?ooo`3o0?oood<0oooo00<000000?ooo`3oool0
9`3oool003T0oooo00<000000?ooo`3oool0h03oool00`000000oooo0?ooo`1N0?ooo`030000003o
ool0oooo02L0oooo000j0?ooo`030000003oool0oooo0=l0oooo00<000000?ooo`3oool0G@3oool0
0`000000oooo0?ooo`0X0?ooo`00>`3oool200000=l0oooo00<000000?ooo`3oool0G@3oool00`00
0000oooo0?ooo`0X0?ooo`00?@3oool00`000000oooo0?ooo`3L0?ooo`030000003oool0oooo05`0
oooo00<000000?ooo`3oool0:@3oool003h0oooo00<000000?ooo`3oool0f`3oool00`000000oooo
0?ooo`1L0?ooo`030000003oool0oooo02T0oooo000o0?ooo`030000003oool0oooo0=X0oooo00<0
00000?ooo`3oool0F`3oool00`000000oooo0?ooo`0Z0?ooo`00@03oool00`000000oooo0?ooo`3I
0?ooo`030000003oool0oooo05/0oooo00<000000?ooo`3oool0:P3oool00440oooo00<000000?oo
o`3oool0f03oool00`000000oooo0?ooo`1J0?ooo`030000003oool0oooo02/0oooo00120?ooo`80
0000f03oool00`000000oooo0?ooo`1J0?ooo`030000003oool0oooo02/0oooo00140?ooo`030000
003oool0oooo0?l0oooo<P3oool00`000000oooo0?ooo`0/0?ooo`00A@3oool00`000000oooo0?oo
o`3o0?oooc40oooo00<000000?ooo`3oool0;03oool004H0oooo00<000000?ooo`3oool0o`3oool_
0?ooo`030000003oool0oooo02d0oooo00170?ooo`030000003oool0oooo0=80oooo00<000000?oo
o`3oool0F03oool00`000000oooo0?ooo`0]0?ooo`00B03oool200000=80oooo00<000000?ooo`3o
ool0E`3oool00`000000oooo0?ooo`0^0?ooo`00BP3oool00`000000oooo0?ooo`3?0?ooo`030000
003oool0oooo05L0oooo00<000000?ooo`3oool0;P3oool004/0oooo00<000000?ooo`3oool0cP3o
ool00`000000oooo0?ooo`1F0?ooo`030000003oool0oooo02l0oooo001<0?ooo`030000003oool0
oooo0<d0oooo00<000000?ooo`3oool0EP3oool00`000000oooo0?ooo`0_0?ooo`00C@3oool00`00
0000oooo0?ooo`3<0?ooo`030000003oool0oooo05D0oooo00<000000?ooo`3oool0<03oool004h0
oooo00<000000?ooo`3oool0b`3oool00`000000oooo0?ooo`1E0?ooo`030000003oool0oooo0300
oooo001?0?ooo`800000b`3oool00`000000oooo0?ooo`1D0?ooo`030000003oool0oooo0340oooo
001A0?ooo`030000003oool0oooo0<P0oooo00<000000?ooo`3oool0E03oool00`000000oooo0?oo
o`0a0?ooo`00DP3oool00`000000oooo0?ooo`3o0?oooah0oooo00<000000?ooo`3oool0<P3oool0
05<0oooo00<000000?ooo`3oool0o`3ooolM0?ooo`030000003oool0oooo0380oooo001D0?ooo`03
0000003oool0oooo0?l0oooo6`3oool00`000000oooo0?ooo`0c0?ooo`00E@3oool00`000000oooo
0?ooo`340?ooo`030000003oool0oooo0580oooo00<000000?ooo`3oool0<`3oool005H0oooo0P00
00340?ooo`030000003oool0oooo0540oooo00<000000?ooo`3oool0=03oool005P0oooo00<00000
0?ooo`3oool0`@3oool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo03@0oooo001I0?oo
o`030000003oool0oooo0<00oooo00<000000?ooo`3oool0D03oool00`000000oooo0?ooo`0e0?oo
o`00FP3oool00`000000oooo0?ooo`2o0?ooo`030000003oool0oooo0500oooo00<000000?ooo`3o
ool0=@3oool005/0oooo00<000000?ooo`3oool0_P3oool00`000000oooo0?ooo`1?0?ooo`030000
003oool0oooo03H0oooo001L0?ooo`030000003oool0oooo0;d0oooo00<000000?ooo`3oool0C`3o
ool00`000000oooo0?ooo`0f0?ooo`00G@3oool200000;d0oooo00<000000?ooo`3oool0CP3oool0
0`000000oooo0?ooo`0g0?ooo`00G`3oool00`000000oooo0?ooo`2j0?ooo`030000003oool0oooo
04h0oooo00<000000?ooo`3oool0=`3oool00600oooo00<000000?ooo`3oool0o`3oool:0?ooo`03
0000003oool0oooo03P0oooo001Q0?ooo`030000003oool0oooo0?l0oooo2@3oool00`000000oooo
0?ooo`0h0?ooo`00HP3oool00`000000oooo0?ooo`3o0?ooo`L0oooo00<000000?ooo`3oool0>@3o
ool006<0oooo00<000000?ooo`3oool0]P3oool00`000000oooo0?ooo`1<0?ooo`030000003oool0
oooo03T0oooo001T0?ooo`800000]P3oool00`000000oooo0?ooo`1;0?ooo`030000003oool0oooo
03X0oooo001V0?ooo`030000003oool0oooo0;<0oooo00<000000?ooo`3oool0B`3oool00`000000
oooo0?ooo`0j0?ooo`00I`3oool00`000000oooo0?ooo`2b0?ooo`030000003oool0oooo04X0oooo
00<000000?ooo`3oool0>`3oool006P0oooo00<000000?ooo`3oool0/@3oool00`000000oooo0?oo
o`1:0?ooo`030000003oool0oooo03/0oooo001Y0?ooo`030000003oool0oooo0;00oooo00<00000
0?ooo`3oool0B@3oool00`000000oooo0?ooo`0l0?ooo`00JP3oool00`000000oooo0?ooo`2_0?oo
o`030000003oool0oooo04T0oooo00<000000?ooo`3oool0?03oool006/0oooo0P00002_0?ooo`03
0000003oool0oooo04P0oooo00<000000?ooo`3oool0?@3oool006d0oooo00<000000?ooo`3oool0
[03oool00`000000oooo0?ooo`180?ooo`030000003oool0oooo03d0oooo001^0?ooo`030000003o
ool0oooo0?D0oooo00<000000?ooo`3oool0?P3oool006l0oooo00<000000?ooo`3oool0m03oool0
0`000000oooo0?ooo`0n0?ooo`00L03oool00`000000oooo0?ooo`3b0?ooo`030000003oool0oooo
03l0oooo001a0?ooo`030000003oool0oooo0?40oooo00<000000?ooo`3oool0?`3oool00780oooo
0P00002X0?ooo`030000003oool0oooo04D0oooo00<000000?ooo`3oool0@03oool007@0oooo00<0
00000?ooo`3oool0Y@3oool00`000000oooo0?ooo`150?ooo`030000003oool0oooo0400oooo001e
0?ooo`030000003oool0oooo0:@0oooo00<000000?ooo`3oool0A03oool00`000000oooo0?ooo`11
0?ooo`00MP3oool00`000000oooo0?ooo`2S0?ooo`030000003oool0oooo04@0oooo00<000000?oo
o`3oool0@@3oool007L0oooo00<000000?ooo`3oool0XP3oool00`000000oooo0?ooo`130?ooo`03
0000003oool0oooo0480oooo001h0?ooo`030000003oool0oooo0:40oooo00<000000?ooo`3oool0
@`3oool00`000000oooo0?ooo`120?ooo`00N@3oool200000:40oooo00<000000?ooo`3oool0@P3o
ool00`000000oooo0?ooo`130?ooo`00N`3oool00`000000oooo0?ooo`2N0?ooo`030000003oool0
oooo0480oooo00<000000?ooo`3oool0@`3oool007`0oooo00<000000?ooo`3oool0W@3oool00`00
0000oooo0?ooo`110?ooo`030000003oool0oooo04@0oooo001m0?ooo`030000003oool0oooo0>00
oooo00<000000?ooo`3oool0A03oool007h0oooo00<000000?ooo`3oool0gP3oool00`000000oooo
0?ooo`150?ooo`00O`3oool00`000000oooo0?ooo`3M0?ooo`030000003oool0oooo04D0oooo0020
0?ooo`800000VP3oool00`000000oooo0?ooo`0o0?ooo`030000003oool0oooo04H0oooo00220?oo
o`030000003oool0oooo09L0oooo00<000000?ooo`3oool0?`3oool00`000000oooo0?ooo`160?oo
o`00P`3oool00`000000oooo0?ooo`2F0?ooo`030000003oool0oooo03h0oooo00<000000?ooo`3o
ool0A`3oool008@0oooo00<000000?ooo`3oool0U@3oool00`000000oooo0?ooo`0n0?ooo`030000
003oool0oooo04L0oooo00250?ooo`030000003oool0oooo09@0oooo00<000000?ooo`3oool0?@3o
ool00`000000oooo0?ooo`180?ooo`00QP3oool00`000000oooo0?ooo`2C0?ooo`030000003oool0
oooo03d0oooo00<000000?ooo`3oool0B03oool008L0oooo0P00002C0?ooo`030000003oool0oooo
03`0oooo00<000000?ooo`3oool0B@3oool008T0oooo00<000000?ooo`3oool0T03oool00`000000
oooo0?ooo`0l0?ooo`030000003oool0oooo04T0oooo002:0?ooo`030000003oool0oooo08l0oooo
00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`1:0?ooo`00R`3oool00`000000oooo0?oo
o`3<0?ooo`030000003oool0oooo04X0oooo002<0?ooo`030000003oool0oooo0<X0oooo00<00000
0?ooo`3oool0B`3oool008d0oooo00<000000?ooo`3oool0b@3oool00`000000oooo0?ooo`1;0?oo
o`00SP3oool2000008`0oooo00<000000?ooo`3oool0>@3oool00`000000oooo0?ooo`1<0?ooo`00
T03oool00`000000oooo0?ooo`290?ooo`030000003oool0oooo03T0oooo00<000000?ooo`3oool0
C03oool00940oooo00<000000?ooo`3oool0R03oool00`000000oooo0?ooo`0h0?ooo`030000003o
ool0oooo04d0oooo002B0?ooo`030000003oool0oooo08L0oooo00<000000?ooo`3oool0>03oool0
0`000000oooo0?ooo`1=0?ooo`00T`3oool00`000000oooo0?ooo`260?ooo`030000003oool0oooo
03L0oooo00<000000?ooo`3oool0CP3oool009@0oooo00<000000?ooo`3oool0Q@3oool00`000000
oooo0?ooo`0g0?ooo`030000003oool0oooo04h0oooo002E0?ooo`800000Q@3oool00`000000oooo
0?ooo`0f0?ooo`030000003oool0oooo04l0oooo002G0?ooo`030000003oool0oooo0880oooo00<0
00000?ooo`3oool0=P3oool00`000000oooo0?ooo`1?0?ooo`00QP3oool0202LB000000000000000
0000B9cO0=nLB000000004RL2P3oool00`000000oooo0?ooo`1Y0?ooo`070?noM000000000000000
0018W=l0oooo0=nLB0030000000307Boo`3oool0oooo00/0oooo00<000000?ooo`3oool0=@3oool0
0`000000oooo0?ooo`0;0?ooo`030;md0000000000000080000000<007Bo0?ooo`3oool0?@3oool0
08D0oooo00<0gia80018W03oool00P3oool00`2LB000000004RLg`0<0?ooo`030000003oool0oooo
06T0oooo00<0oono07@0B02Lgol00`3oool00`3ookl0M01d0;ooo`160?ooo`030000003oool0oooo
00X0oooo00<0W4P0001d_`3oool00`3oool00`2oM000001d0;ooo`0m0?ooo`00Q@3oool00`2oM000
M;oo0?ooo`030?ooo`030=nLB018W=l0oooo00`0oooo00<000000?ooo`3oool0J03oool00`3ookl0
M01809cOo`030?ooo`030?oo_`1d07@0_ooo04D0oooo00<000000?ooo`3oool02P3oool00`3o_g@0
04RL0?ooo`140?ooo`00Q@3oool00`3o_g@0001809cOo`030?ooo`030=nLB018W=l0oooo00d0oooo
00<000000?ooo`3oool0I`3oool00`3ookl0M01809cOo`030?ooo`030?oo_`1d07@0_ooo04D0oooo
00<000000?ooo`3oool02P3oool00`2oM000B9cO0?ooo`140?ooo`00QP3oool00`3o_g@000000000
00030000000304RLg`3oool0oooo00d0oooo0P00001W0?ooo`030?oo_`1d04P0W=oo00<0oooo00<0
oono07@0M02oool03P3oool00`000000oooo0?ooo`0c0?ooo`030000003oool0oooo00/0oooo00<0
_g@004RLg`3oool0A03oool008/0oooo00<0gia804RLg`3oool0403oool00`000000oooo0?ooo`1T
0?ooo`030?oo_`1d0000B9cO00<0oooo00<0omnL04P0M02oool03P3oool00`000000oooo0?ooo`0c
0?ooo`030000003oool0oooo00/0oooo00<0okmd001d_`3oool0103oool00`3o_g@007Bo0?ooo`0m
0?ooo`00QP3oool01`2o_kl0oooo0?ooo`3oool0oono07@0001d_ol04P3oool00`000000oooo0?oo
o`1S0?ooo`040?oo_`1d04P0B4P004RLg`80oooo00<0_g@0001d_`3oool03P3oool00`000000oooo
0?ooo`0b0?ooo`030000003oool0oooo00d0oooo00<0_g@00018W03oool00P3oool00`3o_g@00000
001d_`0n0?ooo`00QP3oool00`3OW4P00000000000020000000307Boo`3oool0oooo0180oooo00<0
00000?ooo`3oool0HP3oool0103ookl0M01809cOo`2LB00200000003001d_`3oool0oooo00h0oooo
00<000000?ooo`3oool0<P3oool00`000000oooo0?ooo`0>0?ooo`070=nLB0000000000000000000
07@0_kmd001d_`0n0?ooo`00X@3oool00`000000oooo0?ooo`1Q0?ooo`030?oo_`1d04P0W=oo01@0
oooo00<000000?ooo`3oool0<@3oool00`000000oooo0?ooo`1D0?ooo`00XP3oool200000640oooo
00<0oono07@0B02Lgol0503oool00`000000oooo0?ooo`0a0?ooo`030000003oool0oooo05@0oooo
002T0?ooo`030000003oool0oooo05d0oooo00@0okmd0000000004P0W=oo503oool00`000000oooo
0?ooo`0`0?ooo`030000003oool0oooo05D0oooo002U0?ooo`030000003oool0oooo07@0oooo00<0
00000?ooo`3oool0<03oool00`000000oooo0?ooo`1E0?ooo`00YP3oool00`000000oooo0?ooo`1c
0?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool0EP3oool00:L0oooo00<000000?oo
o`3oool0Y03oool00`000000oooo0?ooo`1F0?ooo`00Z03oool00`000000oooo0?ooo`2R0?ooo`03
0000003oool0oooo05L0oooo002Y0?ooo`800000XP3oool00`000000oooo0?ooo`1G0?ooo`00Z`3o
ool00`000000oooo0?ooo`1^0?ooo`030000003oool0oooo02d0oooo00<000000?ooo`3oool0F03o
ool00:`0oooo00<000000?ooo`3oool0K@3oool00`000000oooo0?ooo`0]0?ooo`030000003oool0
oooo05P0oooo002]0?ooo`030000003oool0oooo06`0oooo00<000000?ooo`3oool0;03oool00`00
0000oooo0?ooo`1I0?ooo`00[P3oool00`000000oooo0?ooo`1[0?ooo`030000003oool0oooo02`0
oooo00<000000?ooo`3oool0F@3oool00:l0oooo00<000000?ooo`3oool0JP3oool00`000000oooo
0?ooo`0[0?ooo`030000003oool0oooo05X0oooo002`0?ooo`800000JP3oool00`000000oooo0?oo
o`0[0?ooo`030000003oool0oooo05X0oooo002b0?ooo`030000003oool0oooo06L0oooo00<00000
0?ooo`3oool0:P3oool00`000000oooo0?ooo`1K0?ooo`00/`3oool00`000000oooo0?ooo`1V0?oo
o`030000003oool0oooo02X0oooo00<000000?ooo`3oool0F`3oool00;@0oooo00<000000?ooo`3o
ool0I@3oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0oooo05`0oooo002e0?ooo`030000
003oool0oooo0900oooo00<000000?ooo`3oool0G03oool00;H0oooo00<000000?ooo`3oool0SP3o
ool00`000000oooo0?ooo`1M0?ooo`00]`3oool2000008h0oooo00<000000?ooo`3oool0G@3oool0
0;T0oooo00<000000?ooo`3oool0H03oool00`000000oooo0?ooo`0W0?ooo`030000003oool0oooo
05h0oooo002j0?ooo`030000003oool0oooo05l0oooo00<000000?ooo`3oool09`3oool00`000000
oooo0?ooo`1N0?ooo`00^`3oool00`000000oooo0?ooo`1N0?ooo`030000003oool0oooo02H0oooo
00<000000?ooo`3oool0G`3oool00;`0oooo00<000000?ooo`3oool0G@3oool00`000000oooo0?oo
o`0V0?ooo`030000003oool0oooo05l0oooo002m0?ooo`030000003oool0oooo05`0oooo00<00000
0?ooo`3oool09@3oool00`000000oooo0?ooo`1P0?ooo`00_P3oool2000005`0oooo00<000000?oo
o`3oool09@3oool00`000000oooo0?ooo`1P0?ooo`00`03oool00`000000oooo0?ooo`1I0?ooo`03
0000003oool0oooo02@0oooo00<000000?ooo`3oool0H@3oool00<40oooo00<000000?ooo`3oool0
F03oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo0640oooo00320?ooo`030000003o
ool0oooo05L0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`1R0?ooo`00``3oool0
0`000000oooo0?ooo`1F0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0HP3oool0
0<@0oooo00<000000?ooo`3oool0NP3oool00`000000oooo0?ooo`1S0?ooo`00a@3oool2000007X0
oooo00<000000?ooo`3oool0H`3oool00<L0oooo00<000000?ooo`3oool0MP3oool00`000000oooo
0?ooo`1T0?ooo`00b03oool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo0240oooo00<0
00000?ooo`3oool0I03oool00<T0oooo00<000000?ooo`3oool0D03oool00`000000oooo0?ooo`0P
0?ooo`030000003oool0oooo06D0oooo003:0?ooo`030000003oool0oooo04l0oooo00<000000?oo
o`3oool0803oool00`000000oooo0?ooo`1U0?ooo`00b`3oool00`000000oooo0?ooo`1>0?ooo`03
0000003oool0oooo01l0oooo00<000000?ooo`3oool0IP3oool00<`0oooo0P00001>0?ooo`030000
003oool0oooo01l0oooo00<000000?ooo`3oool0IP3oool00<h0oooo00<000000?ooo`3oool0B`3o
ool00`000000oooo0?ooo`0N0?ooo`030000003oool0oooo06L0oooo003?0?ooo`030000003oool0
oooo04X0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`1W0?ooo`00d03oool00`00
0000oooo0?ooo`190?ooo`030000003oool0oooo01d0oooo00<000000?ooo`3oool0J03oool00=40
oooo00<000000?ooo`3oool0B03oool00`000000oooo0?ooo`0M0?ooo`030000003oool0oooo06P0
oooo003B0?ooo`030000003oool0oooo06H0oooo00<000000?ooo`3oool0J@3oool00=<0oooo0P00
001V0?ooo`030000003oool0oooo06T0oooo003E0?ooo`030000003oool0oooo0680oooo00<00000
0?ooo`3oool0JP3oool00=H0oooo00<000000?ooo`3oool0@`3oool00`000000oooo0?ooo`0K0?oo
o`030000003oool0oooo06X0oooo003G0?ooo`030000003oool0oooo0480oooo00<000000?ooo`3o
ool06P3oool00`000000oooo0?ooo`1[0?ooo`00f03oool00`000000oooo0?ooo`110?ooo`030000
003oool0oooo01X0oooo00<000000?ooo`3oool0J`3oool00=T0oooo00<000000?ooo`3oool0@03o
ool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo06`0oooo003J0?ooo`800000@03oool0
0`000000oooo0?ooo`0I0?ooo`030000003oool0oooo06`0oooo003L0?ooo`030000003oool0oooo
03d0oooo00<000000?ooo`3oool0603oool00`000000oooo0?ooo`1]0?ooo`00g@3oool00`000000
oooo0?ooo`0l0?ooo`030000003oool0oooo01P0oooo00<000000?ooo`3oool0K@3oool00=h0oooo
00<000000?ooo`3oool0>`3oool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo06h0oooo
003O0?ooo`030000003oool0oooo03X0oooo00<000000?ooo`3oool05`3oool00`000000oooo0?oo
o`1^0?ooo`00h03oool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo06l0oooo003Q0?oo
o`800000DP3oool00`000000oooo0?ooo`1_0?ooo`00h`3oool00`000000oooo0?ooo`1>0?ooo`03
0000003oool0oooo0700oooo003T0?ooo`030000003oool0oooo03D0oooo00<000000?ooo`3oool0
5@3oool00`000000oooo0?ooo`1`0?ooo`00i@3oool00`000000oooo0?ooo`0d0?ooo`030000003o
ool0oooo01@0oooo00<000000?ooo`3oool0L@3oool00>H0oooo00<000000?ooo`3oool0<`3oool0
0`000000oooo0?ooo`0D0?ooo`030000003oool0oooo0740oooo003W0?ooo`030000003oool0oooo
0380oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`1b0?ooo`00j03oool200000380
oooo00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`1b0?ooo`00jP3oool00`000000oooo
0?ooo`0_0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0L`3oool00>/0oooo00<0
00000?ooo`3oool0;P3oool00`000000oooo0?ooo`0B0?ooo`030000003oool0oooo07<0oooo003/
0?ooo`030000003oool0oooo02d0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`1d
0?ooo`00k@3oool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo0140oooo00<000000?oo
o`3oool0M03oool00>h0oooo00<000000?ooo`3oool0?P3oool00`000000oooo0?ooo`1e0?ooo`00
k`3oool2000003h0oooo00<000000?ooo`3oool0M@3oool00?40oooo00<000000?ooo`3oool0>P3o
ool00`000000oooo0?ooo`1f0?ooo`00lP3oool00`000000oooo0?ooo`0W0?ooo`030000003oool0
oooo00l0oooo00<000000?ooo`3oool0MP3oool00?<0oooo00<000000?ooo`3oool09P3oool00`00
0000oooo0?ooo`0>0?ooo`030000003oool0oooo07L0oooo003d0?ooo`030000003oool0oooo02D0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`1g0?ooo`00m@3oool2000002D0oooo
00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`1h0?ooo`00m`3oool00`000000oooo0?oo
o`0R0?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3oool0N03oool00?P0oooo00<00000
0?ooo`3oool08@3oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo07T0oooo003i0?oo
o`030000003oool0oooo0200oooo00<000000?ooo`3oool0303oool00`000000oooo0?ooo`1i0?oo
o`00nP3oool00`000000oooo0?ooo`0O0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3o
ool0NP3oool00?/0oooo00<000000?ooo`3oool07P3oool00`000000oooo0?ooo`0;0?ooo`030000
003oool0oooo07X0oooo003l0?ooo`800000:`3oool00`000000oooo0?ooo`1k0?ooo`00oP3oool0
0`000000oooo0?ooo`0X0?ooo`030000003oool0oooo07/0oooo003o0?ooo`030000003oool0oooo
02H0oooo00<000000?ooo`3oool0O03oool00?l0oooo0@3oool00`000000oooo0?ooo`0I0?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool0O03oool00?l0oooo0P3oool00`000000oooo
0?ooo`0H0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0O@3oool00?l0oooo0`3o
ool00`000000oooo0?ooo`0G0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0O@3o
ool00?l0oooo103oool2000001L0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`1n
0?ooo`00o`3oool60?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3oool01`3oool00`00
0000oooo0?ooo`1n0?ooo`00o`3oool70?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3o
ool01P3oool00`000000oooo0?ooo`1o0?ooo`00o`3oool80?ooo`030000003oool0oooo0180oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`1o0?ooo`00o`3oool90?ooo`030000003o
ool0oooo0140oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`200?ooo`00o`3oool:
0?ooo`030000003oool0oooo0100oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`20
0?ooo`00o`3oool;0?ooo`800000403oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo
0840oooo003o0?ooo`d0oooo00<000000?ooo`3oool0503oool00`000000oooo0?ooo`210?ooo`00
o`3oool>0?ooo`030000003oool0oooo0180oooo00<000000?ooo`3oool0PP3oool00?l0oooo3`3o
ool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo0880oooo003o0?oooa00oooo00<00000
0?ooo`3oool02P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo08<0oooo003o0?oo
oa40oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo
08<0oooo003o0?oooa80oooo0P0000090?ooo`050000003oool0oooo0?ooo`000000QP3oool00?l0
oooo503oool00`000000oooo0?ooo`060?ooo`050000003oool0oooo0?ooo`000000QP3oool00?l0
oooo5@3oool00`000000oooo0?ooo`050?ooo`040000003oool0oooo000008L0oooo003o0?oooaH0
oooo00<000000?ooo`3oool0103oool010000000oooo0?ooo`0000270?ooo`00o`3ooolG0?ooo`03
0000003oool0oooo00<0oooo00<000000?ooo`000000R03oool00?l0oooo603oool00`000000oooo
0?ooo`020?ooo`030000003oool0000008P0oooo003o0?oooaT0oooo0P0000020?ooo`800000R@3o
ool00?l0oooo6`3oool010000000oooo0?ooo`0000290?ooo`00o`3ooolL0?ooo`800000RP3oool0
0?l0oooo7@3oool00`000000oooo0?ooo`280?ooo`00o`3ooonX0?ooo`00o`3ooonX0?ooo`00o`3o
oonX0?ooo`00o`3ooonX0?ooo`00o`3ooolG0?ooo`030?oOW01dW=l0oooo08h0oooo003o0?oooaL0
oooo00<0oono07Ad_`3oool0SP3oool00?l0oooo5`3oool00`3ooml0W7BL0=ooo`2>0?ooo`00o`3o
oolH0?ooo`040;mdB02Lgol0gmnL07@000<0000000<0M;oo0?ooo`3oool0QP3oool00?l0oooo603o
ool0103o_g@0M;oo0=nLB01d_ol20?ooo`030?oo_`1d0000M;oo08L0oooo003o0?oooaP0oooo00<0
omnL04Qd_`3oool0103oool00`3ookl0M4RL0=ooo`260?ooo`00o`3ooolH0?ooo`030?oo_`1dB9`0
gooo00D0oooo00<0_gAd0;ooo`3oool0Q@3oool00?l0oooo6@3oool00`2oM7@0_ooo0?ooo`030?oo
o`030?oo_`1dB9`0gooo08H0oooo003o0?oooaT0oooo00<0gia807Boo`3oool00P3oool00`3ookl0
M01809cOo`270?ooo`00o`3ooolI0?ooo`070?noM018W=l0oooO09a800000000001809cOo`280?oo
o`00o`3ooolI0?ooo`030?oo_`1dB9`0gooo0080oooo00<0oooO09a8M02oool0Q`3oool00?l0oooo
6P3oool00`2oM4P0W=oo0?ooo`020?ooo`030?oo_`1dM;l0oooo08H0oooo003o0?oooaX0oooo00<0
omnL04P0M02oool00P3oool00`3o_g@007Bo0?ooo`260?ooo`00o`3ooolK0?ooo`060?oOW0180000
000000000000B9`0goooQ`3oool00?l0ooooZ03oool00?l0ooooZ03oool00?l0ooooZ03oool00?l0
ooooZ03oool00001\
\>"],
  ImageRangeCache->{{{0, 422.375}, {270.5, 0}} -> {-0.078639, -0.0805752, \
0.00410989, 0.00410989}}],

Cell["\<\
Incidentally, this result was obtained first by Hero of Alexandria in the \
first century BC; the name Heron comes from a French treatise.\
\>", "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Beats", "ExerciseTitle"],

Cell[TextData[{
  "The phenomenon of ",
  StyleBox["beats",
    FontSlant->"Italic"],
  " occurs when two waves of comparable amplitude and slightly different \
frequencies are added together.  Let ",
  Cell[BoxData[
      \(TraditionalForm\`\[Psi] = Cos[t] + Cos[\((1 + \[Delta])\) t]\)]],
  ", where ",
  Cell[BoxData[
      \(TraditionalForm\`\[Delta] \[LessLess] 1\)]],
  ", represent the superposition of two waves for which the time variable is \
expressed in units of inverse frequency."
}], "ExerciseText"],

Cell[TextData[{
  "a) Display the beat phenomenon by plotting ",
  Cell[BoxData[
      \(TraditionalForm\`\[Psi]\)]],
  " for \[Delta]\[Rule]0.1 over an appropriate interval.  [Hint: you may wish \
to use the ",
  StyleBox["PlotPoints", "InlineInput",
    FontWeight->"Bold"],
  " option if your plot appears somewhat ragged.]"
}], "ExerciseText"],

Cell[TextData[{
  "b) Use ",
  StyleBox["TrigFactor", "InlineInput",
    FontWeight->"Bold"],
  " to transform the expression for \[Psi] into the product of two terms.  \
Identify the carrier frequency and the beat (modulation) frequency."
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  "Ancient Sumerian algorithm for ",
  Cell[BoxData[
      \(TraditionalForm\`\@2\)]]
}], "ExerciseTitle"],

Cell[TextData[{
  "The ancient Sumerians developed a continued-fraction algorithm for \
evaluation of square roots.  For example, consider the equation ",
  Cell[BoxData[
      \(TraditionalForm\`x\^2 + 2  x \[Equal] 1\)]],
  "."
}], "ExerciseText"],

Cell[TextData[{
  "a) Use ",
  StyleBox["Solve", "InlineInput",
    FontWeight->"Bold"],
  " to show that the positive root is related to ",
  Cell[BoxData[
      \(TraditionalForm\`\@2\)]],
  "."
}], "ExerciseText"],

Cell[TextData[{
  "b) This equation can be rewritten in the form ",
  Cell[BoxData[
      \(TraditionalForm\`x \[Equal] 1\/\(2 + x\)\)]],
  ", which provides the basis for an iterative method of solution.  Define ",
  Cell[BoxData[
      \(TraditionalForm\`f[x_] := 1\/\(2 + x\)\)]],
  " such that ",
  Cell[BoxData[
      \(TraditionalForm\`x \[Equal] f[x]\)]],
  " is an equation whose root is ",
  Cell[BoxData[
      \(TraditionalForm\`\@2 - 1\)]],
  ".  Let ",
  Cell[BoxData[
      \(TraditionalForm\`f\_n[x] = f[f\_\(n - 1\)[x]]\)]],
  " represent a recursive sequence of approximations to this root.  One can \
prove that this sequence converges to ",
  Cell[BoxData[
      \(TraditionalForm\`\@2 - 1\)]],
  " for any initial value (seed) ",
  Cell[BoxData[
      \(TraditionalForm\`x\_0 \[NotEqual] \(-2\)\)]],
  ".  Use ",
  StyleBox["FixedPoint", "InlineInput",
    FontWeight->"Bold"],
  " to convince yourself of this fact."
}], "ExerciseText"],

Cell[TextData[{
  "This algorithm is an example of ",
  StyleBox["Newton's method",
    FontSlant->"Italic"],
  " for nonlinear equations, discovered about 4000 years later."
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simple continued fraction", "ExerciseTitle"],

Cell[TextData[{
  "Write a function which takes a list of numerators, of arbitrary length, \
and produces a simple continued fraction of the form   \n\t\t",
  StyleBox["cf[{a,b,c,d}] ", "InlineInput",
    FontWeight->"Plain"],
  "= ",
  Cell[BoxData[
      \(\(\(\ \)\(a\)\)\/\(1 + b\/\(1 + c\/\(1 + d\)\)\)\)],
    FontSize->16],
  "\n[Hint: ",
  StyleBox["Fold", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["Reverse", "InlineInput",
    FontWeight->"Bold"],
  " are useful and ",
  StyleBox["FoldList", "InlineInput",
    FontWeight->"Bold"],
  " can be used to check the logic of your function.]."
}], "ExerciseText",
  Background->GrayLevel[1]]
}, Closed]],

Cell[CellGroupData[{

Cell["Alphabetic frequency", "ExerciseTitle"],

Cell[TextData[{
  "Write a function which produces a table of the frequencies with which \
various letters of the alphabet are found in some textual input.  [Hint: use \
a function from the ",
  StyleBox["DataManipulation", "InlineInput",
    FontWeight->"Bold"],
  " package.]"
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Anagram query", "ExerciseTitle"],

Cell[TextData[{
  "Create a query that tests whether two strings are anagrams: words or \
phrases containing the same letters in different order.  For best results, \
your function should ignore capitalization, punctuation, and spaces.  For \
this version, don't worry about whether there might be numbers or special \
characters in the string input.  Some fun test cases are \
{\"Elvis\",\"Lives\"}, {\"Clint Eastwood\",\"Old West Action\"}, and \
{\"dormitory\",\"dirty room\"}.  A long anagram by Cory Calhoun from a quote \
of Kurt Vonnegut is {\"Just because some of us can read and write and do a \
little math, that doesn't mean we deserve to conquer the universe.\", \"A \
masquerade can cover a sense of what is real to deceive us; to be unjaded and \
not lost, we must, then, determine truth.\"}.  (See ",
  ButtonBox["wordsmith.org",
    ButtonData:>{"wordsmith.org", None},
    ButtonStyle->"Hyperlink"],
  ")."
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Compound interest", "ExerciseTitle"],

Cell["\<\
A savings account pays an annual percentage rate (APR) of 3% compounded \
monthly.  If you deposit $100 per month for 10 years, how much money is in \
your account at the end of that time?  How much interest was earned?\
\>", "ExerciseText",
  Background->None]
}, Closed]],

Cell[CellGroupData[{

Cell["Mortgage payments", "ExerciseTitle"],

Cell[TextData[{
  "The lifetime of an amortized loan, such as a mortgage, is divided into ",
  Cell[BoxData[
      \(TraditionalForm\`n\)]],
  " equal periods, usually months.  Suppose that the initial balance is ",
  Cell[BoxData[
      \(TraditionalForm\`b\_0\)]],
  " and that interest ",
  Cell[BoxData[
      \(TraditionalForm\`r\ b[k - 1]\)]],
  " is charged at the end of period ",
  StyleBox["k",
    FontSlant->"Italic"],
  ".  A payment ",
  Cell[BoxData[
      \(TraditionalForm\`p\)]],
  " is also made at the end of each period, such that the balance at the end \
of period ",
  StyleBox["k",
    FontSlant->"Italic"],
  " is ",
  Cell[BoxData[
      \(TraditionalForm\`b[k] = \((1 + r)\) b[k - 1] - p\)]],
  " with ",
  Cell[BoxData[
      \(TraditionalForm\`b[n] \[Equal] 0\)]],
  "."
}], "ExerciseText"],

Cell[TextData[{
  "a) Derive a formula for the payment required.  You can deduce this formula \
by analyzing the iteration of ",
  Cell[BoxData[
      \(TraditionalForm\`b[k]\)]],
  " or by using ",
  ButtonBox["RSolve",
    ButtonStyle->"RefGuideLink"],
  "."
}], "ExerciseText"],

Cell["\<\
b) Consider a standard 30-year mortgage at a fixed interest rate of 6% per \
year.  Compare the total interest paid with the initial balance.\
\>", "ExerciseText"],

Cell["\<\
c) Compare graphically the fractions of the monthly payment that go toward \
interest and principal over the life of the loan.\
\>", "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Poisson distribution for random numbers", "ExerciseTitle"],

Cell[TextData[{
  "The Poisson distribution ",
  Cell[BoxData[
      \(\(Exp[\(-\[Lambda]\)]\ \[Lambda]\^n\)\/\(n!\)\)]],
  "gives the probability that ",
  Cell[BoxData[
      \(TraditionalForm\`n\)]],
  " successes will be obtained in ",
  Cell[BoxData[
      \(TraditionalForm\`N\)]],
  " trials given that the probability ",
  Cell[BoxData[
      \(TraditionalForm\`p\)]],
  " for each trial is very small and that ",
  Cell[BoxData[
      \(TraditionalForm\`N\)]],
  " is very large.  The mean of the distribution is defined by ",
  Cell[BoxData[
      \(TraditionalForm\`\[Lambda] = N\ p\)]],
  ".  In this problem we test the random number generator by comparing it \
with the Poisson distribution."
}], "ExerciseText"],

Cell[TextData[{
  "a) Compute the probability that an integer between 1 and ",
  Cell[BoxData[
      \(10\^6\)]],
  " is prime.  (Hint: although there are probably more efficient methods, you \
can use ",
  StyleBox["Table", "InlineInput",
    FontWeight->"Bold"],
  " with ",
  StyleBox["PrimeQ", "InlineInput",
    FontWeight->"Bold"],
  " to produce a list containing True for prime or False for not prime and \
then use ",
  StyleBox["Count", "InlineInput",
    FontWeight->"Bold"],
  " to find the number of True responses.  Consult Help for syntax.)"
}], "ExerciseText"],

Cell[TextData[{
  "b) Compute the average number of primes you expect to find in a list of \
100 random numbers between 1 and ",
  Cell[BoxData[
      \(10\^6\)]],
  " and call this \[Lambda]."
}], "ExerciseText"],

Cell[TextData[{
  "c) Write a function which estimates the probability for obtaining a prime \
number from the random number generator by producing a list of 100 random \
integers between 1 and ",
  Cell[BoxData[
      \(10\^6\)]],
  " and counting the number that are prime in that list.  (Hint: consult Help \
and use ",
  StyleBox["Random", "InlineInput",
    FontWeight->"Bold"],
  ", ",
  StyleBox["Table", "InlineInput",
    FontWeight->"Bold"],
  ", ",
  StyleBox["PrimeQ", "InlineInput",
    FontWeight->"Bold"],
  ", and ",
  StyleBox["Count", "InlineInput",
    FontWeight->"Bold"],
  ".)  "
}], "ExerciseText"],

Cell[TextData[{
  "d) Produce a table with 100 results of your counting function.  From this \
table produce a distribution function which lists the number of occurrences \
of each integer.  Use ",
  StyleBox["ListPlot", "InlineInput",
    FontWeight->"Bold"],
  StyleBox[" ",
    FontWeight->"Bold"],
  "to display the distribution.  "
}], "ExerciseText"],

Cell[TextData[{
  "e) Make a plot of the Poisson distribution for your \[Lambda] and then \
compare theory and data by plotting them together.  (Hint: assign the two \
plots names and use ",
  StyleBox["Show", "InlineInput",
    FontWeight->"Bold"],
  " to plot them together.)  Your final result should look something like the \
figure below."
}], "ExerciseText"],

Cell["\<\
f) What do you expect would happen if you used a larger number of trials?\
\>", "ExerciseText"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0 0.05 0.0147151 0.0327002 [
[.125 .00222 -9 -9 ]
[.125 .00222 9 0 ]
[.25 .00222 -3 -9 ]
[.25 .00222 3 0 ]
[.375 .00222 -9 -9 ]
[.375 .00222 9 0 ]
[.5 .00222 -6 -9 ]
[.5 .00222 6 0 ]
[.625 .00222 -12 -9 ]
[.625 .00222 12 0 ]
[.75 .00222 -6 -9 ]
[.75 .00222 6 0 ]
[.875 .00222 -12 -9 ]
[.875 .00222 12 0 ]
[1 .00222 -6 -9 ]
[1 .00222 6 0 ]
[-0.0125 .09647 -18 -4.5 ]
[-0.0125 .09647 0 4.5 ]
[-0.0125 .17822 -6 -4.5 ]
[-0.0125 .17822 0 4.5 ]
[-0.0125 .25997 -18 -4.5 ]
[-0.0125 .25997 0 4.5 ]
[-0.0125 .34172 -12 -4.5 ]
[-0.0125 .34172 0 4.5 ]
[-0.0125 .42347 -24 -4.5 ]
[-0.0125 .42347 0 4.5 ]
[-0.0125 .50522 -12 -4.5 ]
[-0.0125 .50522 0 4.5 ]
[-0.0125 .58697 -24 -4.5 ]
[-0.0125 .58697 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
.125 .01472 m
.125 .02097 L
s
[(2.5)] .125 .00222 0 1 Mshowa
.25 .01472 m
.25 .02097 L
s
[(5)] .25 .00222 0 1 Mshowa
.375 .01472 m
.375 .02097 L
s
[(7.5)] .375 .00222 0 1 Mshowa
.5 .01472 m
.5 .02097 L
s
[(10)] .5 .00222 0 1 Mshowa
.625 .01472 m
.625 .02097 L
s
[(12.5)] .625 .00222 0 1 Mshowa
.75 .01472 m
.75 .02097 L
s
[(15)] .75 .00222 0 1 Mshowa
.875 .01472 m
.875 .02097 L
s
[(17.5)] .875 .00222 0 1 Mshowa
1 .01472 m
1 .02097 L
s
[(20)] 1 .00222 0 1 Mshowa
.125 Mabswid
.025 .01472 m
.025 .01847 L
s
.05 .01472 m
.05 .01847 L
s
.075 .01472 m
.075 .01847 L
s
.1 .01472 m
.1 .01847 L
s
.15 .01472 m
.15 .01847 L
s
.175 .01472 m
.175 .01847 L
s
.2 .01472 m
.2 .01847 L
s
.225 .01472 m
.225 .01847 L
s
.275 .01472 m
.275 .01847 L
s
.3 .01472 m
.3 .01847 L
s
.325 .01472 m
.325 .01847 L
s
.35 .01472 m
.35 .01847 L
s
.4 .01472 m
.4 .01847 L
s
.425 .01472 m
.425 .01847 L
s
.45 .01472 m
.45 .01847 L
s
.475 .01472 m
.475 .01847 L
s
.525 .01472 m
.525 .01847 L
s
.55 .01472 m
.55 .01847 L
s
.575 .01472 m
.575 .01847 L
s
.6 .01472 m
.6 .01847 L
s
.65 .01472 m
.65 .01847 L
s
.675 .01472 m
.675 .01847 L
s
.7 .01472 m
.7 .01847 L
s
.725 .01472 m
.725 .01847 L
s
.775 .01472 m
.775 .01847 L
s
.8 .01472 m
.8 .01847 L
s
.825 .01472 m
.825 .01847 L
s
.85 .01472 m
.85 .01847 L
s
.9 .01472 m
.9 .01847 L
s
.925 .01472 m
.925 .01847 L
s
.95 .01472 m
.95 .01847 L
s
.975 .01472 m
.975 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
0 .09647 m
.00625 .09647 L
s
[(2.5)] -0.0125 .09647 1 0 Mshowa
0 .17822 m
.00625 .17822 L
s
[(5)] -0.0125 .17822 1 0 Mshowa
0 .25997 m
.00625 .25997 L
s
[(7.5)] -0.0125 .25997 1 0 Mshowa
0 .34172 m
.00625 .34172 L
s
[(10)] -0.0125 .34172 1 0 Mshowa
0 .42347 m
.00625 .42347 L
s
[(12.5)] -0.0125 .42347 1 0 Mshowa
0 .50522 m
.00625 .50522 L
s
[(15)] -0.0125 .50522 1 0 Mshowa
0 .58697 m
.00625 .58697 L
s
[(17.5)] -0.0125 .58697 1 0 Mshowa
.125 Mabswid
0 .03107 m
.00375 .03107 L
s
0 .04742 m
.00375 .04742 L
s
0 .06377 m
.00375 .06377 L
s
0 .08012 m
.00375 .08012 L
s
0 .11282 m
.00375 .11282 L
s
0 .12917 m
.00375 .12917 L
s
0 .14552 m
.00375 .14552 L
s
0 .16187 m
.00375 .16187 L
s
0 .19457 m
.00375 .19457 L
s
0 .21092 m
.00375 .21092 L
s
0 .22727 m
.00375 .22727 L
s
0 .24362 m
.00375 .24362 L
s
0 .27632 m
.00375 .27632 L
s
0 .29267 m
.00375 .29267 L
s
0 .30902 m
.00375 .30902 L
s
0 .32537 m
.00375 .32537 L
s
0 .35807 m
.00375 .35807 L
s
0 .37442 m
.00375 .37442 L
s
0 .39077 m
.00375 .39077 L
s
0 .40712 m
.00375 .40712 L
s
0 .43982 m
.00375 .43982 L
s
0 .45617 m
.00375 .45617 L
s
0 .47252 m
.00375 .47252 L
s
0 .48887 m
.00375 .48887 L
s
0 .52157 m
.00375 .52157 L
s
0 .53792 m
.00375 .53792 L
s
0 .55427 m
.00375 .55427 L
s
0 .57062 m
.00375 .57062 L
s
0 .60332 m
.00375 .60332 L
s
.25 Mabswid
0 0 m
0 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.008 w
.05 .04742 Mdot
.1 .01472 Mdot
.15 .08012 Mdot
.2 .34172 Mdot
.25 .27632 Mdot
.3 .50522 Mdot
.35 .47252 Mdot
.4 .37442 Mdot
.45 .60332 Mdot
.5 .24362 Mdot
.55 .17822 Mdot
.6 .14552 Mdot
.65 .11282 Mdot
.7 .04742 Mdot
.75 .04742 Mdot
.8 .01472 Mdot
.85 .01472 Mdot
.9 .01472 Mdot
.95 .01472 Mdot
1 .01472 Mdot
.5 Mabswid
0 .01599 m
.00488 .01635 L
.00942 .01676 L
.01975 .01796 L
.02981 .01959 L
.04057 .02197 L
.05248 .02556 L
.06373 .03005 L
.07396 .03522 L
.08481 .04199 L
.10578 .0594 L
.12514 .08112 L
.16487 .14367 L
.20717 .23259 L
.24788 .32657 L
.26858 .3715 L
.29117 .41447 L
.30163 .43146 L
.31279 .44717 L
.32324 .45945 L
.33286 .46853 L
.34366 .47611 L
.34934 .47896 L
.35224 .48011 L
.35534 .48111 L
.35808 .48181 L
.36057 .48228 L
.36177 .48245 L
.36307 .4826 L
.3643 .48271 L
.36544 .48277 L
.36676 .48281 L
.368 .4828 L
.36935 .48276 L
.37012 .48271 L
.37081 .48266 L
.37214 .48252 L
.3736 .48233 L
.37652 .48179 L
.37919 .48113 L
.38207 .48022 L
.38731 .47811 L
.39711 .47254 L
.40856 .46353 L
.41911 .45304 L
.46049 .39576 L
.50027 .3263 L
.54262 .2501 L
.58339 .184 L
.62673 .12703 L
Mistroke
.64839 .10422 L
.66848 .08634 L
.70864 .05903 L
.73023 .04833 L
.74978 .0406 L
.77003 .03427 L
.7919 .02899 L
.81288 .02515 L
.83501 .02213 L
.85567 .02005 L
.87494 .01861 L
.89635 .01743 L
.91584 .01665 L
.93592 .01607 L
.9463 .01584 L
.95774 .01563 L
.97824 .01534 L
.98947 .01522 L
1 .01513 L
Mfstroke
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.875},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00BP3oool0
0`3ookl0M000000000040000000307Boo`3oool0oooo0080oooo00<0_g@000000000M;l01@3oool0
1@2oM0000000000000000000M;oo0280oooo00D0_g@0000000000000000007Boo`0S0?ooo`030?oO
W018B9`0oooo00H0oooo00<0_g@000000000M;l01@3oool01@2oM0000000000000000000M;oo01`0
oooo00<0okmd0000000000000`0000001@00M;l0oooo0?ooo`3oool0okmd00<0000000<0M;oo0?oo
o`3oool05P3oool00`3o_g@000000000000300000004001d_`3oool0oono07@000D0000000<0M;oo
0?ooo`3oool00P3oool00`2oM0000000001d_`050?ooo`050;md0000000000000000001d_ol05`3o
ool00`3o_g@000000000000300000005001d_`3oool0oooo0?ooo`2oM0000`0000000`1d_ol0oooo
0?ooo`0F0?ooo`030?noM0000000000000<0000000<007Bo0?ooo`3oool00P3oool00`3ogi`0B4RL
0?ooo`060?ooo`030;md0000000007Bo00D0oooo00D0_g@0000000000000000007Boo`0G0?ooo`03
0?oo_`1d0000000000@0000000D0M;oo0?ooo`3oool0oooo0?noM0030000000307Boo`3oool0oooo
0040oooo001;0?ooo`030;md000007@0_ooo0080oooo00<0giad09cOo`3oool00`3oool00`2oM000
0000001d_`040?ooo`070;md0000M;l0oooo0?ooo`3ogi`0B00007Boo`0P0?ooo`070;md0000M;l0
oooo0?ooo`3ogi`0B00007Boo`0S0?ooo`0309a8B02Lgol0oooo00D0oooo00<0_g@000000000M;l0
103oool01`2oM00007Bo0?ooo`3oool0omnL04P0001d_ol07P3oool00`2LB4P0W=oo0?ooo`040?oo
o`0609a8M02oool0oooo0?oo_`1d07@0_ooo6P3oool00`2LB4P0W=oo0?ooo`030?ooo`030;md0000
07@0_ooo0080oooo00<0giad09cOo`3oool00`3oool00`2oM0000000001d_`040?ooo`070;md0000
M;l0oooo0?ooo`3ogi`0B00007Boo`0I0?ooo`0309a8B02Lgol0oooo00<0oooo00L0_g@0001d_`3o
ool0oooo0?oOW0180000M;oo01X0oooo00<0W4Q809cOo`3oool01P3oool00`2LB4P0W=oo0?ooo`05
0?ooo`030;md0000000007Bo00@0oooo00L0_g@0001d_`3oool0oooo0?oOW0180000M;oo01L0oooo
00<0_g@00000M02oool00P3oool00`3OW7@0W=oo0?ooo`020?ooo`0609a8M02oool0oooo0?oo_`1d
07@0_ooo0P3oool004`0oooo00<0okmd0000B02Lgol04`3oool00`3o_g@007Bo0?ooo`0T0?ooo`03
0?noM000M;l0oooo0280oooo00<0gia804RLg`3oool04@3oool00`3o_g@007Bo0?ooo`0M0?ooo`03
09a8B02Lgol0oooo00<0oooo00<0okmd001d_`3oool00P3oool00`3OW4P0B9cO0?ooo`0I0?ooo`03
09a8B02Lgol0oooo00@0oooo00<0okmd0000B02Lgol04`3oool00`3o_g@007Bo0?ooo`0H0?ooo`03
09a8B02Lgol0oooo00P0oooo00<0okmd001d_`3oool06@3oool00`2LB4P0W=oo0?ooo`060?ooo`03
0=nLB018W=l0oooo0140oooo00<0okmd001d_`3oool05`3oool00`3o_g@0001809cOo`050?ooo`03
0?noM000M;l0oooo0080oooo00<0gia804RLg`3oool00@3oool004d0oooo00<0omnL04P00018W=l0
4P3oool00`3o_g@007Bo0?ooo`0T0?ooo`030?noM000M;l0oooo0280oooo00<0omnL04Q8W03oool0
4@3oool00`3o_g@007Bo0?ooo`0M0?ooo`0309a8B02Lgol0oooo00<0oooo00<0gia804RLg`3oool0
0P3oool00`3o_g@007Bo0?ooo`0I0?ooo`0309a8B02Lgol0oooo00D0oooo00<0omnL04P00018W=l0
4P3oool00`3o_g@007Bo0?ooo`0H0?ooo`0309a8B02Lgol0oooo00P0oooo00<0okmd001d_`3oool0
6@3oool00`2LB4P0W=oo0?ooo`060?ooo`030?oOW018B9`0oooo0140oooo00<0okmd001d_`3oool0
603oool00`3ogi`0B00004RLg`040?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool0
0@3oool004l0oooo00<0W4P004RLg`3oool0403oool00`2LB000M;oo0?ooo`0T0?ooo`0309a8001d
_ol0oooo02<0oooo00<0W4Q809cOo`3oool0403oool00`2LB000M;oo0?ooo`0M0?ooo`0309a8B02L
gol0oooo00<0oooo00<0gia804RLg`3oool00P3oool00`3o_g@007Bo0?ooo`0I0?ooo`0309a8B02L
gol0oooo00L0oooo00<0W4P004RLg`3oool0403oool00`2LB000M;oo0?ooo`0H0?ooo`0309a8B02L
gol0oooo00P0oooo00<0W4P007Boo`3oool06@3oool00`2LB4P0W=oo0?ooo`070?ooo`0309a8B02L
gol0oooo0100oooo00<0W4P007Boo`3oool06P3oool00`2LB000B9cO0?ooo`020?ooo`030=nLB018
W=l0oooo0080oooo00<0okmd001d_`3oool00@3oool00500oooo00<0W4Qd0;ooo`3oool02P3oool0
0`3ookl0M000000000020000000304RLg`3oool0oooo01l0oooo00<0oono07@0000000000P000000
0`18W=l0oooo0?ooo`0S0?ooo`030=nLB018W=l0oooo00/0oooo00<0oono07@0000000000P000000
0`18W=l0oooo0?ooo`0M0?ooo`0309a8B02Lgol0oooo00<0oooo00<0gia804RLg`3oool00P3oool0
0`3o_g@007Bo0?ooo`0I0?ooo`0309a8B02Lgol0oooo00P0oooo00<0W4Qd0;ooo`3oool02P3oool0
0`3ookl0M000000000020000000304RLg`3oool0oooo01P0oooo00<0W4Q809cOo`3oool00`3oool0
0`3ookl0M000000000020000000304RLg`3oool0oooo01T0oooo00<0W4Q809cOo`3oool01`3oool0
0`3OW4P0B9cO0?ooo`0;0?ooo`030?oo_`1d000000000080000000<0B9cO0?ooo`3oool06`3oool0
1P2LB7@0_ooo0?ooo`3oool0gia804RLg`<0oooo00<0okmd001d_`3oool00@3oool004/0oooo00<0
gia807Boo`3oool00P3oool00`2oM000M;oo0?ooo`0:0?ooo`030?oo_`1d07@0_ooo02@0oooo00<0
oono07@0M02oool0:03oool00`3ogi`0B4RL0?ooo`0;0?ooo`030?oo_`1d07@0_ooo0280oooo00<0
W4Q809cOo`3oool00`3oool00`3o_g@0B9cO0?ooo`020?ooo`030=nLB018W=l0oooo01T0oooo00<0
W4Q809cOo`3oool00`3oool00`3OW4P0M;oo0?ooo`020?ooo`030;md001d_ol0oooo00X0oooo00<0
oono07@0M02oool07@3oool00`2LB4P0W=oo0?ooo`030?ooo`030?oo_`1d07@0_ooo01h0oooo00<0
W4Q809cOo`3oool01`3oool00`3ogi`0B4RL0?ooo`0;0?ooo`030?oo_`1d07@0_ooo01/0oooo00<0
gia807Boo`3oool00P3oool01P2oM000M;oo0?ooo`3oool0okmd04RLg`<0oooo00<0gia804RLg`3o
ool00@3oool004/0oooo00L0okmd0000M02oool0oooo0?noM00004P0W=oo00/0oooo00<0oono07@0
M02oool0903oool00`3ookl0M01d0;ooo`0T0?ooo`030;mdB02Lgol0oooo0080oooo00<0_gA809cO
o`3oool02P3oool00`3ookl0M01d0;ooo`0O0?ooo`050=nLB000000004RL09a8B02Lgol01@3oool0
1P2LB000M;oo0?ooo`3ogi`0B01d0;oooaL0oooo00D0gia800000000B9`0W4Q809cOo`040?ooo`07
0?noM00007@0_ooo0?ooo`3o_g@0001809cOo`0;0?ooo`030?oo_`1d07@0_ooo01X0oooo00D0gia8
00000000B9`0W4Q809cOo`040?ooo`030?oo_`1d07@0_ooo01/0oooo00D0gia800000000B9`0W4Q8
09cOo`040?ooo`030;mdB02Lgol0oooo0080oooo00<0_gA809cOo`3oool02P3oool00`3ookl0M01d
0;ooo`0K0?ooo`070?noM00007@0_ooo0?ooo`3o_g@0001809cOo`030?ooo`0609a8001d_ol0oooo
0?oOW01807@0_ooo0P3oool004`0oooo00D0okmd000000000000001809cOo`0<0?ooo`030?oo_`1d
000000000080000000<0001d0;ooo`3oool07`3oool00`3ookl0M00000000002000000030000M02o
ool0oooo01l0oooo00<0_g@00000000000000`0000000`1d_ol0oooo0?ooo`090?ooo`030?oo_`1d
000000000080000000<0001d0;ooo`3oool0703oool00`3OW4P0001809cOo`050?ooo`050?oo_`1d
000000000000B02Lgol06P3oool00`3OW4P0001809cOo`050?ooo`050?noM000000000000000B02L
gol0303oool00`3ookl0M00000000002000000030000M02oool0oooo01L0oooo00<0gia80000B02L
gol0103oool00`3ookl0M00000000002000000030000M02oool0oooo01P0oooo00<0gia80000B02L
gol0103oool00`2oM0000000000000030000000307Boo`3oool0oooo00T0oooo00<0oono07@00000
00000P0000000`0007@0_ooo0?ooo`0G0?ooo`050?noM000000000000000B02Lgol0103oool01@3o
okl0M0000000000004P0W=oo00<0oooo003o0?oook40oooo003o0?oook40oooo000X0?ooo`030000
003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool0
0`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0
oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`0S0?ooo`030000
003oool0oooo0?l0oooo2@3oool00`000000oooo0?ooo`0@0?ooo`030000003oool0oooo0100oooo
00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0A0?ooo`030000003oool0oooo00L0oooo
000X0?ooool00000P00000090?ooo`00:03oool00`000000oooo0?ooo`08000000P0oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool01P3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo00@0oooo3`000007
0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`07
0?ooo`030000003oool0oooo00L0oooo000X0?ooo`030000003oool0oooo00L0oooo1`00000O0?oo
o`030000003oool0oooo02d0oooo00<000000?ooo`3oool0;03oool00`000000oooo0?ooo`0]0?oo
o`030000003oool0oooo02d0oooo00<000000?ooo`3oool0;03oool00`000000oooo0?ooo`0R0?oo
o`P000000`3oool00`000000oooo0?ooo`0]0?ooo`030000003oool0oooo00L0oooo000X0?ooo`03
0000003oool0oooo00h0oooo0P00003o0?ooobT0oooo200000150?ooo`00:03oool00`000000oooo
0?ooo`0@0?ooo`<00000o`3ooolN0?ooo`P00000C@3oool002P0oooo00<000000?ooo`3oool04`3o
ool200000?l0oooo5P3oool6000005D0oooo000X0?ooo`<000005@3oool200000?l0oooo403oool4
000005/0oooo000X0?ooo`030000003oool0oooo01L0oooo0P00003o0?ooo`X0oooo1000001O0?oo
o`00:03oool00`000000oooo0?ooo`0I0?ooo`800000o`3oool60?ooo`800000H`3oool002P0oooo
00<000000?ooo`3oool06`3oool200000?l0oooo0@3oool3000006D0oooo000X0?ooo`030000003o
ool0oooo01d0oooo0P00003k0?ooo`<00000J03oool002P0oooo00<000000?ooo`3oool0403oool0
0`000000oooo0?ooo`0<0?ooo`030000003oool0oooo0>H0oooo00<000000?ooo`3oool03@3oool2
000000030?ooo`000000oooo06P0oooo000X0?ooo`<000003`3oool3000000h0oooo00<000000?oo
o`3oool0i03oool3000000`0oooo0P0000020?ooo`<00000J03oool002P0oooo00<000000?ooo`3o
ool0403oool00`000000oooo0?ooo`0>0?ooo`030000003oool0oooo0>@0oooo00<000000?ooo`3o
ool0203oool3000000D0oooo00<000000?ooo`3oool0I`3oool002P0oooo00<000000?ooo`3oool0
8P3oool200000>d0oooo0P00001b0?ooo`00:03oool00`000000oooo0?ooo`0T0?ooo`030000003o
ool0oooo0>P0oooo0P00001d0?ooo`00:03oool00`000000oooo0?ooo`0U0?ooo`030000003oool0
oooo0>D0oooo0P00001f0?ooo`00:03oool00`000000oooo0?ooo`0V0?ooo`030000003oool0oooo
0>80oooo0P00001h0?ooo`00:03oool3000002L0oooo00<000000?ooo`3oool0g`3oool2000007X0
oooo000X0?ooo`030000003oool0oooo02P0oooo00<000000?ooo`3oool0g@3oool00`000000oooo
0?ooo`1j0?ooo`00:03oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0oooo0=X0oooo0P00
001m0?ooo`00:03oool00`000000oooo0?ooo`0Y0?ooo`030000003oool0oooo0=T0oooo00<00000
0?ooo`3oool0O@3oool002P0oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`3F0?oo
o`800000P03oool002P0oooo00<000000?ooo`3oool0:`3oool00`000000oooo0?ooo`3D0?ooo`03
0000003oool0oooo0800oooo000X0?ooo`030000003oool0oooo02`0oooo00<000000?ooo`3oool0
1`3oool00`000000oooo0?ooo`370?ooo`800000P`3oool002P0oooo0`00000]0?ooo`030000003o
ool0oooo00D0oooo0`0000370?ooo`030000003oool0oooo08<0oooo000X0?ooo`030000003oool0
oooo02h0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`340?ooo`800000QP3oool0
00T0oooo00<0oono07@000000000100000000`1d_ol0oooo0?ooo`020?ooo`030;md0000000007Bo
00D0oooo00D0_g@0000000000000000007Boo`060?ooo`030000003oool0oooo02h0oooo00<00000
0?ooo`3oool0b`3oool00`000000oooo0?ooo`260?ooo`002P3oool00`2oM000001d0;ooo`020?oo
o`030=nLM02Lgol0oooo00<0oooo00<0_g@000000000M;l0103oool01`2oM00007Bo0?ooo`3oool0
omnL04P0001d_ol01@3oool00`000000oooo0?ooo`0_0?ooo`030000003oool0oooo0<T0oooo00<0
00000?ooo`3oool0Q`3oool000/0oooo00<0okmd0000B02Lgol04`3oool00`3o_g@007Bo0?ooo`04
0?ooo`030000003oool0oooo02l0oooo00<000000?ooo`3oool0b03oool00`000000oooo0?ooo`28
0?ooo`00303oool00`3ogi`0B00004RLg`0B0?ooo`030?noM000M;l0oooo00@0oooo00<000000?oo
o`3oool0<03oool00`000000oooo0?ooo`360?ooo`030000003oool0oooo08T0oooo000>0?ooo`03
09a80018W=l0oooo0100oooo00<0W4P007Boo`3oool0103oool400000300oooo00<000000?ooo`3o
ool0``3oool2000008`0oooo000?0?ooo`0309a8M02oool0oooo00X0oooo00<0oono07@000000000
0P0000000`18W=l0oooo0?ooo`040?ooo`030000003oool0oooo0340oooo00<000000?ooo`3oool0
`P3oool00`000000oooo0?ooo`2<0?ooo`002P3oool00`3OW4P0M;oo0?ooo`020?ooo`030;md001d
_ol0oooo00X0oooo00<0oono07@0M02oool02@3oool00`000000oooo0?ooo`0b0?ooo`030000003o
ool0oooo0<00oooo00<000000?ooo`3oool0S@3oool000X0oooo00L0okmd0000M02oool0oooo0?no
M00004P0W=oo00/0oooo00<0oono07@0M02oool02@3oool00`000000oooo0?ooo`0c0?ooo`030000
003oool0oooo0;h0oooo00<000000?ooo`3oool0SP3oool000/0oooo00D0okmd0000000000000018
09cOo`0<0?ooo`030?oo_`1d000000000080000000<0001d0;ooo`3oool0103oool00`000000oooo
0?ooo`0c0?ooo`030000003oool0oooo0;d0oooo00<000000?ooo`3oool0S`3oool002P0oooo00<0
00000?ooo`3oool0=03oool00`000000oooo0?ooo`2k0?ooo`040000003oool0oooo000008l0oooo
000X0?ooo`<00000=03oool00`000000oooo0?ooo`2j0?ooo`030000003oool0oooo00<00000SP3o
ool002P0oooo00<000000?ooo`3oool0=@3oool00`000000oooo0?ooo`2h0?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool0S@3oool002P0oooo00<000000?ooo`3oool0=P3oool00`00
0000oooo0?ooo`2g0?ooo`030000003oool0oooo0980oooo000X0?ooo`030000003oool0oooo03H0
oooo00<000000?ooo`3oool0]P3oool00`000000oooo0?ooo`2C0?ooo`00:03oool00`000000oooo
0?ooo`0g0?ooo`030000003oool0oooo0;@0oooo00<000000?ooo`3oool0U03oool002P0oooo00<0
00000?ooo`3oool0>03oool00`000000oooo0?ooo`2b0?ooo`030000003oool0oooo09D0oooo000X
0?ooo`<00000>03oool00`000000oooo0?ooo`2a0?ooo`030000003oool0oooo09H0oooo000X0?oo
o`030000003oool0oooo03T0oooo00<000000?ooo`3oool0[`3oool00`000000oooo0?ooo`2G0?oo
o`00:03oool00`000000oooo0?ooo`0i0?ooo`030000003oool0oooo0:h0oooo00<000000?ooo`3o
ool0V03oool002P0oooo00<000000?ooo`3oool0>P3oool00`000000oooo0?ooo`2]0?ooo`030000
003oool0oooo09P0oooo000X0?ooo`030000003oool0oooo03/0oooo00<000000?ooo`3oool0Z`3o
ool00`000000oooo0?ooo`2I0?ooo`00:03oool00`000000oooo0?ooo`0k0?ooo`030000003oool0
oooo0:X0oooo00<000000?ooo`3oool0VP3oool002P0oooo00<000000?ooo`3oool0?03oool00`00
0000oooo0?ooo`2S0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0V`3oool002P0
oooo0`00000l0?ooo`030000003oool0oooo0:80oooo0`0000030?ooo`030000003oool0oooo09/0
oooo000X0?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3oool0XP3oool01@000000oooo
0?ooo`3oool0000009h0oooo000X0?ooo`030000003oool0oooo03d0oooo00<000000?ooo`3oool0
Y@3oool00`000000oooo0?ooo`2M0?ooo`00:03oool00`000000oooo0?ooo`0n0?ooo`030000003o
ool0oooo0:<0oooo00<000000?ooo`3oool0WP3oool002P0oooo00<000000?ooo`3oool0?P3oool0
0`000000oooo0?ooo`2S0?ooo`030000003oool0oooo09h0oooo000X0?ooo`030000003oool0oooo
03l0oooo00<000000?ooo`3oool0X@3oool00`000000oooo0?ooo`2O0?ooo`00:03oool3000003l0
oooo00<000000?ooo`3oool0X03oool00`000000oooo0?ooo`2P0?ooo`00:03oool00`000000oooo
0?ooo`100?ooo`030000003oool0oooo09h0oooo00<000000?ooo`3oool0X@3oool002P0oooo00<0
00000?ooo`3oool0@03oool00`000000oooo0?ooo`2N0?ooo`030000003oool0oooo0:40oooo000M
0?ooo`050;md0000000000000000001d_ol01P3oool00`000000oooo0?ooo`110?ooo`030000003o
ool0oooo09`0oooo00<000000?ooo`3oool0XP3oool001`0oooo00L0_g@0001d_`3oool0oooo0?oO
W0180000M;oo00D0oooo00<000000?ooo`3oool0@@3oool00`000000oooo0?ooo`2K0?ooo`030000
003oool0oooo0:<0oooo000Q0?ooo`030?noM000M;l0oooo00@0oooo00<000000?ooo`3oool0@P3o
ool00`000000oooo0?ooo`2:0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool0Y03o
ool00240oooo00<0okmd001d_`3oool0103oool400000440oooo00<000000?ooo`3oool0R@3oool3
000000d0oooo00<000000?ooo`3oool0Y03oool00240oooo00<0W4P007Boo`3oool0103oool00`00
0000oooo0?ooo`130?ooo`030000003oool0oooo08T0oooo00<000000?ooo`3oool02`3oool00`00
0000oooo0?ooo`2U0?ooo`00703oool00`3ookl0M000000000020000000304RLg`3oool0oooo00@0
oooo00<000000?ooo`3oool0@`3oool00`000000oooo0?ooo`2F0?ooo`030000003oool0oooo0:H0
oooo000L0?ooo`030?oo_`1d07@0_ooo00T0oooo00<000000?ooo`3oool0A03oool00`000000oooo
0?ooo`2D0?ooo`030000003oool0oooo0:L0oooo000L0?ooo`030?oo_`1d07@0_ooo00T0oooo00<0
00000?ooo`3oool0A03oool00`000000oooo0?ooo`2D0?ooo`030000003oool0oooo0:L0oooo000L
0?ooo`030?oo_`1d000000000080000000<0001d0;ooo`3oool0103oool00`000000oooo0?ooo`14
0?ooo`030000003oool0oooo09<0oooo00<000000?ooo`3oool0Z03oool002P0oooo0`0000150?oo
o`030000003oool0oooo0940oooo00<000000?ooo`3oool0Z@3oool002P0oooo00<000000?ooo`3o
ool0A@3oool00`000000oooo0?ooo`2A0?ooo`030000003oool0oooo0:T0oooo000X0?ooo`030000
003oool0oooo04H0oooo00<000000?ooo`3oool0S`3oool00`000000oooo0?ooo`2Z0?ooo`00:03o
ool00`000000oooo0?ooo`160?ooo`030000003oool0oooo08l0oooo00<000000?ooo`3oool0ZP3o
ool002P0oooo00<000000?ooo`3oool0A`3oool00`000000oooo0?ooo`2=0?ooo`030000003oool0
oooo0:/0oooo000X0?ooo`030000003oool0oooo04L0oooo00<000000?ooo`3oool0S03oool00`00
0000oooo0?ooo`2/0?ooo`00:03oool00`000000oooo0?ooo`180?ooo`030000003oool0oooo08/0
oooo00<000000?ooo`3oool0[03oool002P0oooo0`0000180?ooo`030000003oool0oooo08X0oooo
00<000000?ooo`3oool0[@3oool002P0oooo00<000000?ooo`3oool0B@3oool00`000000oooo0?oo
o`280?ooo`030000003oool0oooo0:h0oooo000X0?ooo`030000003oool0oooo04T0oooo00<00000
0?ooo`3oool0R03oool00`000000oooo0?ooo`2^0?ooo`00:03oool00`000000oooo0?ooo`1:0?oo
o`030000003oool0oooo08H0oooo00<000000?ooo`3oool0[`3oool002P0oooo00<000000?ooo`3o
ool0BP3oool00`000000oooo0?ooo`250?ooo`030000003oool0oooo0;00oooo000X0?ooo`030000
003oool0oooo04/0oooo00<000000?ooo`3oool0Q03oool00`000000oooo0?ooo`2`0?ooo`00:03o
ool3000004/0oooo00<000000?ooo`3oool0P`3oool00`000000oooo0?ooo`2a0?ooo`00:03oool0
0`000000oooo0?ooo`1<0?ooo`030000003oool0oooo0840oooo00<000000?ooo`3oool0/P3oool0
02P0oooo00<000000?ooo`3oool0C03oool00`000000oooo0?ooo`210?ooo`030000003oool0oooo
0;80oooo000X0?ooo`030000003oool0oooo04`0oooo00<000000?ooo`3oool0P03oool00`000000
oooo0?ooo`2c0?ooo`00:03oool00`000000oooo0?ooo`1=0?ooo`030000003oool0oooo07l0oooo
00<000000?ooo`3oool0/`3oool002P0oooo00<000000?ooo`3oool0C@3oool00`000000oooo0?oo
o`1/0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0]03oool002P0oooo0`00001>
0?ooo`030000003oool0oooo06X0oooo0`00000?0?ooo`030000003oool0oooo0;D0oooo000X0?oo
o`030000003oool0oooo04h0oooo00<000000?ooo`3oool0J`3oool00`000000oooo0?ooo`0>0?oo
o`030000003oool0oooo0;D0oooo000X0?ooo`030000003oool0oooo04l0oooo00<000000?ooo`3o
ool0NP3oool00`000000oooo0?ooo`2f0?ooo`00303oool00`3ogi`0B4RL0?ooo`060?ooo`030;md
0000000007Bo00D0oooo00D0_g@0000000000000000007Boo`060?ooo`030000003oool0oooo04l0
oooo00<000000?ooo`3oool0N@3oool00`000000oooo0?ooo`2g0?ooo`003@3oool00`2LB4P0W=oo
0?ooo`050?ooo`030;md0000000007Bo00@0oooo00L0_g@0001d_`3oool0oooo0?oOW0180000M;oo
00D0oooo00<000000?ooo`3oool0D03oool00`000000oooo0?ooo`1h0?ooo`030000003oool0oooo
0;L0oooo000=0?ooo`030=nLB018W=l0oooo0140oooo00<0okmd001d_`3oool0103oool00`000000
oooo0?ooo`1@0?ooo`030000003oool0oooo07L0oooo00<000000?ooo`3oool0^03oool000d0oooo
00<0omnL04Q8W03oool04@3oool00`3o_g@007Bo0?ooo`040?ooo`@00000C`3oool00`000000oooo
0?ooo`1g0?ooo`030000003oool0oooo0;P0oooo000>0?ooo`0309a8B02Lgol0oooo0100oooo00<0
W4P007Boo`3oool0103oool00`000000oooo0?ooo`1A0?ooo`030000003oool0oooo07D0oooo00<0
00000?ooo`3oool0^@3oool000h0oooo00<0gia804RLg`3oool02`3oool00`3ookl0M00000000002
0000000304RLg`3oool0oooo00@0oooo00<000000?ooo`3oool0D@3oool00`000000oooo0?ooo`1e
0?ooo`030000003oool0oooo0;T0oooo000>0?ooo`030?oOW018B9`0oooo00/0oooo00<0oono07@0
M02oool02@3oool00`000000oooo0?ooo`1B0?ooo`030000003oool0oooo07<0oooo00<000000?oo
o`3oool0^P3oool000X0oooo00<0_gA809cOo`3oool00P3oool00`2oM4P0W=oo0?ooo`0:0?ooo`03
0?oo_`1d07@0_ooo00T0oooo00<000000?ooo`3oool0DP3oool00`000000oooo0?ooo`1c0?ooo`03
0000003oool0oooo0;X0oooo000:0?ooo`030;md00000000000000<0000000<0M;oo0?ooo`3oool0
2@3oool00`3ookl0M00000000002000000030000M02oool0oooo00@0oooo00<000000?ooo`3oool0
D`3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo06L0oooo00<000000?ooo`3oool0
^`3oool002P0oooo0`00001C0?ooo`030000003oool0oooo00H0oooo0`00001X0?ooo`030000003o
ool0oooo0;/0oooo000X0?ooo`030000003oool0oooo05@0oooo00<000000?ooo`3oool01P3oool0
0`000000oooo0?ooo`1V0?ooo`030000003oool0oooo0;`0oooo000X0?ooo`030000003oool0oooo
05@0oooo00<000000?ooo`3oool0K`3oool00`000000oooo0?ooo`2l0?ooo`00:03oool00`000000
oooo0?ooo`1D0?ooo`030000003oool0oooo06h0oooo00<000000?ooo`3oool0_@3oool002P0oooo
00<000000?ooo`3oool0E@3oool00`000000oooo0?ooo`1]0?ooo`030000003oool0oooo0;d0oooo
000X0?ooo`030000003oool0oooo05D0oooo00<000000?ooo`3oool0K03oool00`000000oooo0?oo
o`2n0?ooo`00:03oool00`000000oooo0?ooo`1F0?ooo`030000003oool0oooo06X0oooo00<00000
0?ooo`3oool0_`3oool002P0oooo0`00001F0?ooo`030000003oool0oooo06X0oooo00<000000?oo
o`3oool0_`3oool002P0oooo00<000000?ooo`3oool0E`3oool00`000000oooo0?ooo`1X0?ooo`03
0000003oool0oooo0<00oooo000X0?ooo`030000003oool0oooo05L0oooo00<000000?ooo`3oool0
J03oool00`000000oooo0?ooo`300?ooo`00:03oool00`000000oooo0?ooo`1H0?ooo`030000003o
ool0oooo06H0oooo00<000000?ooo`3oool0`@3oool002P0oooo00<000000?ooo`3oool0F03oool0
0`000000oooo0?ooo`1V0?ooo`030000003oool0oooo0<40oooo000X0?ooo`030000003oool0oooo
05P0oooo00<000000?ooo`3oool0I@3oool00`000000oooo0?ooo`320?ooo`00:03oool3000005T0
oooo00<000000?ooo`3oool0I03oool00`000000oooo0?ooo`320?ooo`00:03oool00`000000oooo
0?ooo`1I0?ooo`030000003oool0oooo06<0oooo00<000000?ooo`3oool0``3oool002P0oooo00<0
00000?ooo`3oool0FP3oool00`000000oooo0?ooo`1R0?ooo`030000003oool0oooo0<<0oooo000X
0?ooo`030000003oool0oooo05X0oooo00<000000?ooo`3oool0H@3oool00`000000oooo0?ooo`34
0?ooo`00:03oool00`000000oooo0?ooo`1K0?ooo`030000003oool0oooo0600oooo00<000000?oo
o`3oool0a03oool002P0oooo00<000000?ooo`3oool0F`3oool00`000000oooo0?ooo`1O0?ooo`03
0000003oool0oooo0<D0oooo000X0?ooo`<00000G03oool00`000000oooo0?ooo`1N0?ooo`030000
003oool0oooo0<D0oooo000X0?ooo`030000003oool0oooo05`0oooo00<000000?ooo`3oool0G@3o
ool00`000000oooo0?ooo`360?ooo`00:03oool00`000000oooo0?ooo`1L0?ooo`030000003oool0
oooo05`0oooo00<000000?ooo`3oool0a`3oool001<0oooo00<0okmd0000000000000`0000001@00
M;l0oooo0?ooo`3oool0okmd00<0000000<0M;oo0?ooo`3oool0103oool00`000000oooo0?ooo`1M
0?ooo`030000003oool0oooo05/0oooo00<000000?ooo`3oool0a`3oool001H0oooo00<0W4Q809cO
o`3oool0103oool01P2LB7@0_ooo0?ooo`3ookl0M01d0;ooo`D0oooo00<000000?ooo`3oool0G@3o
ool00`000000oooo0?ooo`1J0?ooo`030000003oool0oooo0<P0oooo000F0?ooo`0309a8B02Lgol0
oooo00<0oooo00<0okmd001d_`3oool00P3oool00`3OW4P0B9cO0?ooo`040?ooo`030000003oool0
oooo04X0oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`1I0?ooo`030000003oool0
oooo0<P0oooo000F0?ooo`0309a8B02Lgol0oooo00<0oooo00<0gia804RLg`3oool00P3oool00`3o
_g@007Bo0?ooo`040?ooo`@00000B03oool300000180oooo00<000000?ooo`3oool0F03oool00`00
0000oooo0?ooo`390?ooo`005P3oool00`2LB4P0W=oo0?ooo`030?ooo`030=nLB018W=l0oooo0080
oooo00<0okmd001d_`3oool0103oool00`000000oooo0?ooo`1:0?ooo`030000003oool0oooo0180
oooo00<000000?ooo`3oool0E`3oool00`000000oooo0?ooo`390?ooo`005P3oool00`2LB4P0W=oo
0?ooo`030?ooo`030=nLB018W=l0oooo0080oooo00<0okmd001d_`3oool0103oool00`000000oooo
0?ooo`1O0?ooo`030000003oool0oooo05H0oooo00<000000?ooo`3oool0bP3oool001H0oooo00<0
W4Q809cOo`3oool00`3oool00`3o_g@0B9cO0?ooo`020?ooo`030=nLB018W=l0oooo00@0oooo00<0
00000?ooo`3oool0H03oool00`000000oooo0?ooo`1D0?ooo`030000003oool0oooo0</0oooo000C
0?ooo`050=nLB000000004RL09a8B02Lgol01@3oool01P2LB000M;oo0?ooo`3ogi`0B01d0;ooo`D0
oooo00<000000?ooo`3oool0H03oool00`000000oooo0?ooo`1D0?ooo`030000003oool0oooo0</0
oooo000E0?ooo`030=nLB00004P0W=oo00D0oooo00D0oono07@000000000001809cOo`060?ooo`03
0000003oool0oooo0640oooo00<000000?ooo`3oool0DP3oool00`000000oooo0?ooo`3<0?ooo`00
:03oool00`000000oooo0?ooo`1Q0?ooo`030000003oool0oooo0580oooo00<000000?ooo`3oool0
c03oool002P0oooo0`00001R0?ooo`030000003oool0oooo0500oooo00<000000?ooo`3oool0c@3o
ool002P0oooo00<000000?ooo`3oool0HP3oool00`000000oooo0?ooo`1?0?ooo`030000003oool0
oooo0<h0oooo000X0?ooo`030000003oool0oooo06<0oooo00<000000?ooo`3oool0CP3oool00`00
0000oooo0?ooo`3>0?ooo`00:03oool00`000000oooo0?ooo`1S0?ooo`030000003oool0oooo04d0
oooo00<000000?ooo`3oool0c`3oool002P0oooo00<000000?ooo`3oool0I03oool00`000000oooo
0?ooo`1<0?ooo`030000003oool0oooo0<l0oooo000X0?ooo`030000003oool0oooo06@0oooo00<0
00000?ooo`3oool0;`3oool00`000000oooo0?ooo`0I0?ooo`030000003oool0oooo0=00oooo000X
0?ooo`<00000I03oool00`000000oooo0?ooo`0^0?ooo`<000006P3oool00`000000oooo0?ooo`3@
0?ooo`00:03oool00`000000oooo0?ooo`1U0?ooo`030000003oool0oooo02h0oooo00<000000?oo
o`3oool0603oool00`000000oooo0?ooo`3A0?ooo`00:03oool00`000000oooo0?ooo`1U0?ooo`03
0000003oool0oooo04P0oooo00<000000?ooo`3oool0dP3oool002P0oooo00<000000?ooo`3oool0
IP3oool00`000000oooo0?ooo`170?ooo`030000003oool0oooo0=80oooo000X0?ooo`030000003o
ool0oooo06H0oooo00<000000?ooo`3oool0AP3oool00`000000oooo0?ooo`3C0?ooo`00:03oool0
0`000000oooo0?ooo`1W0?ooo`030000003oool0oooo04D0oooo00<000000?ooo`3oool0d`3oool0
02P0oooo0`00001W0?ooo`030000003oool0oooo04@0oooo00<000000?ooo`3oool0e03oool002P0
oooo00<000000?ooo`3oool0J03oool00`000000oooo0?ooo`130?ooo`030000003oool0oooo0=@0
oooo000X0?ooo`030000003oool0oooo06P0oooo00<000000?ooo`3oool0@P3oool00`000000oooo
0?ooo`3E0?ooo`00:03oool00`000000oooo0?ooo`1Y0?ooo`030000003oool0oooo0400oooo00<0
00000?ooo`3oool0eP3oool002P0oooo00<000000?ooo`3oool0J@3oool00`000000oooo0?ooo`10
0?ooo`030000003oool0oooo0=H0oooo000X0?ooo`030000003oool0oooo06X0oooo00<000000?oo
o`3oool0?P3oool00`000000oooo0?ooo`3G0?ooo`00:03oool3000006X0oooo00<000000?ooo`3o
ool0?@3oool00`000000oooo0?ooo`3H0?ooo`00:03oool00`000000oooo0?ooo`1[0?ooo`030000
003oool0oooo03/0oooo00<000000?ooo`3oool0f@3oool002P0oooo00<000000?ooo`3oool0J`3o
ool00`000000oooo0?ooo`0k0?ooo`030000003oool0oooo0=T0oooo00000`3oool0okmd00000004
00000004001d_`3oool0oono07@000D0000000<0M;oo0?ooo`3oool00P3oool00`2oM0000000001d
_`050?ooo`050;md0000000000000000001d_ol01P3oool00`000000oooo0?ooo`1/0?ooo`030000
003oool0oooo03T0oooo00<000000?ooo`3oool0fP3oool000@0oooo00<0W4Q809cOo`3oool00`3o
ool00`2oM000001d0;ooo`020?ooo`030=nLM02Lgol0oooo00<0oooo00<0_g@000000000M;l0103o
ool01`2oM00007Bo0?ooo`3oool0omnL04P0001d_ol01@3oool00`000000oooo0?ooo`1]0?ooo`03
0000003oool0oooo03L0oooo00<000000?ooo`3oool0f`3oool000@0oooo00<0W4Q809cOo`3oool0
103oool00`3o_g@0001809cOo`0C0?ooo`030?noM000M;l0oooo00@0oooo00<000000?ooo`3oool0
K@3oool00`000000oooo0?ooo`0f0?ooo`030000003oool0oooo0=`0oooo00040?ooo`0309a8B02L
gol0oooo00D0oooo00<0omnL04P00018W=l04P3oool00`3o_g@007Bo0?ooo`040?ooo`030000003o
ool0oooo06h0oooo00<000000?ooo`3oool0=@3oool00`000000oooo0?ooo`3L0?ooo`00103oool0
0`2LB4P0W=oo0?ooo`070?ooo`0309a80018W=l0oooo0100oooo00<0W4P007Boo`3oool0103oool4
000006d0oooo00<000000?ooo`3oool0=03oool00`000000oooo0?ooo`3M0?ooo`00103oool00`2L
B4P0W=oo0?ooo`080?ooo`0309a8M02oool0oooo00X0oooo00<0oono07@0000000000P0000000`18
W=l0oooo0?ooo`040?ooo`030000003oool0oooo06l0oooo00<000000?ooo`3oool0<P3oool00`00
0000oooo0?ooo`3N0?ooo`00103oool00`2LB4P0W=oo0?ooo`030?ooo`030=nLB01d_ol0oooo0080
oooo00<0_g@007Boo`3oool02P3oool00`3ookl0M01d0;ooo`090?ooo`030000003oool0oooo06l0
oooo00<000000?ooo`3oool0<P3oool00`000000oooo0?ooo`3N0?ooo`0000H0oooo0=nLB0000000
04RL09a8B02Lgol40?ooo`070?noM00007@0_ooo0?ooo`3o_g@0001809cOo`0;0?ooo`030?oo_`1d
07@0_ooo00T0oooo00<000000?ooo`3oool0L03oool00`000000oooo0?ooo`0`0?ooo`030000003o
ool0oooo0=l0oooo00030?ooo`030=nLB00004P0W=oo00D0oooo00D0okmd000000000000001809cO
o`0<0?ooo`030?oo_`1d000000000080000000<0001d0;ooo`3oool0103oool00`000000oooo0?oo
o`1a0?ooo`030000003oool0oooo02h0oooo00<000000?ooo`3oool0h03oool002P0oooo00<00000
0?ooo`3oool0LP3oool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo0>40oooo000X0?oo
o`<00000LP3oool00`000000oooo0?ooo`0/0?ooo`030000003oool0oooo0>40oooo000X0?ooo`03
0000003oool0oooo07<0oooo00<000000?ooo`3oool0:P3oool00`000000oooo0?ooo`3R0?ooo`00
:03oool00`000000oooo0?ooo`1d0?ooo`030000003oool0oooo02P0oooo00<000000?ooo`3oool0
h`3oool002P0oooo00<000000?ooo`3oool0M@3oool00`000000oooo0?ooo`0V0?ooo`030000003o
ool0oooo0>@0oooo000X0?ooo`030000003oool0oooo07H0oooo00<000000?ooo`3oool09@3oool0
0`000000oooo0?ooo`3T0?ooo`00:03oool00`000000oooo0?ooo`1f0?ooo`030000003oool0oooo
02@0oooo00<000000?ooo`3oool0i@3oool002P0oooo0`00001g0?ooo`030000003oool0oooo0280
oooo00<000000?ooo`3oool0iP3oool002P0oooo00<000000?ooo`3oool0N03oool00`000000oooo
0?ooo`0P0?ooo`030000003oool0oooo0>L0oooo000X0?ooo`030000003oool0oooo07T0oooo00<0
00000?ooo`3oool07P3oool00`000000oooo0?ooo`3X0?ooo`00:03oool00`000000oooo0?ooo`1j
0?ooo`030000003oool0oooo01`0oooo00<000000?ooo`3oool0j@3oool002P0oooo00<000000?oo
o`3oool0N`3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo0>X0oooo000X0?ooo`03
0000003oool0oooo07`0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0@0?ooo`80
0000k@3oool002P0oooo0`00001m0?ooo`030000003oool0oooo0080oooo0`00000@0?ooo`030000
003oool0oooo0>d0oooo000X0?ooo`030000003oool0oooo07h0oooo0P0000030?ooo`030000003o
ool0oooo00d0oooo0P00003`0?ooo`00:03oool00`000000oooo0?ooo`200?ooo`030000003oool0
oooo00h0oooo0P00003b0?ooo`00:03oool00`000000oooo0?ooo`210?ooo`@000002P3oool20000
0?@0oooo000X0?ooo`030000003oool0oooo08D0oooo2P00003f0?ooo`00:03oool00`000000oooo
0?ooo`3o0?ooohH0oooo000X0?ooo`<00000o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o
0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool001<0oooo00<0okmd00000000
00000`0000001@00M;l0oooo0?ooo`3oool0_g@000<0000000<0M;oo0?ooo`3oool0103oool00`00
0000oooo0?ooo`3o0?ooohH0oooo000F0?ooo`0309a8B02Lgol0oooo00<0oooo00L0_g@0001d_`3o
ool0oooo0?oOW0180000M;oo00D0oooo00<000000?ooo`3oool0o`3ooon60?ooo`005P3oool00`2L
B4P0W=oo0?ooo`080?ooo`030?noM000M;l0oooo00@0oooo00<000000?ooo`3oool0o`3ooon60?oo
o`005P3oool00`2LB4P0W=oo0?ooo`080?ooo`030?noM000M;l0oooo00@0oooo00<000000?ooo`3o
ool0L03oool00`000000oooo0?ooo`3o0?oooa<0oooo000F0?ooo`0309a8B02Lgol0oooo00P0oooo
00<0W4P007Boo`3oool0103oool4000006h0oooo0`00003o0?oooa@0oooo000F0?ooo`0309a8B02L
gol0oooo00<0oooo00<0oono07@0000000000P0000000`18W=l0oooo0?ooo`040?ooo`030000003o
ool0oooo0700oooo00<000000?ooo`3oool0o`3ooolC0?ooo`005P3oool00`2LB4P0W=oo0?ooo`03
0?ooo`030?oo_`1d07@0_ooo00T0oooo00<000000?ooo`3oool0o`3ooon60?ooo`004`3oool01@3O
W4P000000018W02LB4P0W=oo00@0oooo00<0oono07@0M02oool02@3oool00`000000oooo0?ooo`3o
0?ooohH0oooo000E0?ooo`030=nLB00004P0W=oo00@0oooo00<0oono07@0000000000P0000000`00
07@0_ooo0?ooo`040?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3o
ool0o`3ooon60?ooo`00:03oool300000?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3o
oon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo
0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo
0?ooo`3o0?ooohH0oooo000X0?ooo`<00000o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o
0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3o
ool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003o
ool0oooo0?l0ooooQP3oool002P0oooo0`00003o0?ooohH0oooo000X0?ooo`030000003oool0oooo
0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo
0?ooo`3o0?ooohH0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<00000
0?ooo`3oool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`<0
0000o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo00000`3oool0okmd0000
000400000003001d_`3oool0oooo0080oooo00<0omnL04Q8W03oool01P3oool00`2oM0000000001d
_`050?ooo`050;md0000000000000000001d_ol01P3oool00`000000oooo0?ooo`3o0?ooohH0oooo
00040?ooo`0309a8B02Lgol0oooo00H0oooo00<0W4Q809cOo`3oool01@3oool00`2oM0000000001d
_`040?ooo`070;md0000M;l0oooo0?ooo`3ogi`0B00007Boo`050?ooo`030000003oool0oooo0?l0
ooooQP3oool000@0oooo00<0W4Q809cOo`3oool01P3oool00`3OW4P0B9cO0?ooo`0A0?ooo`030?no
M000M;l0oooo00@0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00103oool00`2LB4P0W=oo0?oo
o`060?ooo`030?oOW018B9`0oooo0140oooo00<0okmd001d_`3oool0103oool00`000000oooo0?oo
o`3o0?ooohH0oooo00040?ooo`0309a8B02Lgol0oooo00L0oooo00<0W4Q809cOo`3oool0403oool0
0`2LB000M;oo0?ooo`040?ooo`@00000o`3ooon50?ooo`00103oool00`2LB4P0W=oo0?ooo`070?oo
o`030=nLB018W=l0oooo00/0oooo00<0oono07@0000000000P0000000`18W=l0oooo0?ooo`040?oo
o`030000003oool0oooo0?l0ooooQP3oool000@0oooo00<0W4Q809cOo`3oool01`3oool00`3ogi`0
B4RL0?ooo`0;0?ooo`030?oo_`1d07@0_ooo00T0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00
00H0oooo0=nLB000000004RL09a8B02Lgol40?ooo`030;mdB02Lgol0oooo0080oooo00<0_gA809cO
o`3oool02P3oool00`3ookl0M01d0;ooo`090?ooo`030000003oool0oooo0?l0ooooQP3oool000<0
oooo00<0gia80000B02Lgol0103oool00`2oM0000000000000030000000307Boo`3oool0oooo00T0
oooo00<0oono07@0000000000P0000000`0007@0_ooo0?ooo`040?ooo`030000003oool0oooo0?l0
ooooQP3oool002P0oooo00<000000?ooo`3oool0Z@3oool00`000000oooo0?ooo`3I0?ooo`00:03o
ool300000:P0oooo0`00003J0?ooo`00:03oool00`000000oooo0?ooo`2Y0?ooo`030000003oool0
oooo0=T0oooo000X0?ooo`030000003oool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3o
ool0o`3ooon60?ooo`00:03oool00`000000oooo0?ooo`3o0?ooohH0oooo000X0?ooo`030000003o
ool0oooo0?l0ooooQP3oool002P0oooo00<000000?ooo`3oool0o`3ooon60?ooo`00o`3ooona0?oo
o`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00o`3ooona0?oo
o`00o`3ooona0?ooo`00o`3ooona0?ooo`00\
\>"],
  ImageRangeCache->{{{0, 431}, {265.813, 0}} -> {-2.13872, -2.1688, \
0.0786925, 0.120324}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Compare product and series representations of exponential function\
\>", "ExerciseTitle"],

Cell["\<\
This problem compares product and series representations of the exponential \
function.\
\>", "ExerciseText"],

Cell[TextData[{
  "a) Evaluate ",
  Cell[BoxData[
      \(Limit[\((1 + x\/n)\)\^n, n \[Rule] \[Infinity]]\)]],
  "using the ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " ",
  StyleBox["Limit", "InlineInput",
    FontWeight->"Bold"],
  " function. "
}], "ExerciseText"],

Cell[TextData[{
  "b) How large does ",
  Cell[BoxData[
      \(TraditionalForm\`n\)]],
  " have to be to obtain convergence to better than 1% when ",
  Cell[BoxData[
      \(TraditionalForm\`x = 2\)]],
  "?"
}], "ExerciseText"],

Cell[TextData[{
  "c) Make a table of symbolic expressions for ",
  Cell[BoxData[
      \(TraditionalForm\`\((1 + x\/n)\)\^n\)]],
  " covering ",
  Cell[BoxData[
      \(TraditionalForm\`n\)]],
  " between 1 and 10.  Use ",
  StyleBox["Expand", "InlineInput",
    FontWeight->"Bold"],
  " and ",
  StyleBox["TableForm", "InlineInput",
    FontWeight->"Bold"],
  " to display the results in a useful fashion.  Compare the product with ",
  Cell[BoxData[
      \(TraditionalForm\`n = 10\)]],
  " with the Taylor series for ",
  Cell[BoxData[
      \(TraditionalForm\`e\^x\)]],
  "."
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
  "Present a problem as a ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " notebook"
}], "ExerciseTitle"],

Cell[TextData[{
  "Create a notebook which presents a simple problem in your field of \
interest, or perhaps reproduces some recent lecture you heard, or some \
section of a textbook.  Your notebook should have title, author information, \
sections, text presenting the problem and some background information, and \
references if appropriate.  If you already possess enough ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " tools, include the solution also."
}], "ExerciseText"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1400}, {0, 952}},
ScreenStyleEnvironment->"Working",
WindowToolbars->"EditBar",
WindowSize->{1392, 912},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
ShowCellLabel->False,
Magnification->1.5,
StyleDefinitions -> Notebook[{
  
  Cell[CellGroupData[{
  Cell["Style Definitions", "Subtitle"],
  
  Cell["\<\
Modify the definitions below to change the default appearance of all cells in \
a given style.  Make modifications to any definition using commands in the \
Format menu.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell["Style Environment Names", "Section"],
  
  Cell[StyleData[All, "Working"],
    PageWidth->WindowWidth,
    ScriptMinSize->9],
  
  Cell[StyleData[All, "Presentation"],
    PageWidth->WindowWidth,
    ScriptMinSize->12,
    FontSize->16],
  
  Cell[StyleData[All, "Condensed"],
    PageWidth->PaperWidth,
    CellBracketOptions->{"Margins"->{1, 1},
    "Widths"->{0, 5}},
    ScriptMinSize->7,
    FontSize->10],
  
  Cell[StyleData[All, "Printout"],
    PageWidth->PaperWidth,
    ScriptMinSize->7,
    FontSize->10,
    PrivateFontOptions->{"FontType"->"Outline"}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Notebook Options", "Section"],
  
  Cell["\<\
The options defined for the style below will be used at the Notebook level.\
\>", "Text"],
  
  Cell[StyleData["Notebook"],
    PageHeaders->{{Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"], None, Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"]}, {Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"], None, Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"]}},
    PageFooters->{{Cell[ 
            TextData[ {"Essential Mathematica for Students of Science"}], 
            "Footer"], None, Cell[ 
            TextData[ {"\[Copyright] James J. Kelly, 1998"}], "Footer"]}, {
        Cell[ 
            TextData[ {"Essential Mathematica for Students of Science"}], 
            "Footer"], None, Cell[ 
            TextData[ {"\[Copyright] James J. Kelly, 1998"}], "Footer"]}},
    PageHeaderLines->{True, True},
    PageFooterLines->{True, True},
    PrintingOptions->{"FirstPageHeader"->False,
    "FacingPages"->True},
    CellFrameLabelMargins->6,
    StyleMenuListing->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headings", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Title"],
    ShowCellBracket->True,
    CellMargins->{{0, 0}, {0, 0}},
    CellGroupingRules->"TitleGrouping",
    PageBreakBelow->False,
    LineSpacing->{1, 0},
    CounterIncrements->"Title",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subtitle", 0}, {"Subsubtitle", 0}},
    FontSize->34,
    FontColor->GrayLevel[1],
    Background->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["Title", "Presentation"],
    CellMargins->{{0, 0}, {0, 0}},
    LineSpacing->{1, 0},
    FontSize->44],
  
  Cell[StyleData["Title", "Condensed"],
    CellMargins->{{0, 0}, {0, 0}},
    FontSize->24],
  
  Cell[StyleData["Title", "Printout"],
    CellMargins->{{0, 0}, {0, 0}},
    FontSize->24,
    FontTracking->"Plain",
    FontColor->GrayLevel[0],
    Background->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subtitle"],
    CellMargins->{{0, 0}, {0, 0}},
    PageBreakBelow->False,
    LineSpacing->{1, 3},
    ParagraphIndent->-96,
    CounterIncrements->"Subtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subsubtitle", 0}},
    FontFamily->"Helvetica",
    FontSize->18,
    FontColor->GrayLevel[1],
    Background->RGBColor[0.2, 0.700008, 0.700008]],
  
  Cell[StyleData["Subtitle", "Presentation"],
    CellMargins->{{0, 0}, {0, 0}},
    LineSpacing->{1, 6},
    ParagraphIndent->-157,
    FontSize->30],
  
  Cell[StyleData["Subtitle", "Condensed"],
    CellMargins->{{0, 0}, {0, 0}},
    ParagraphIndent->-78,
    FontSize->14],
  
  Cell[StyleData["Subtitle", "Printout"],
    CellMargins->{{0, 0}, {0, 0}},
    ParagraphIndent->-85,
    FontSize->16,
    FontColor->GrayLevel[0],
    Background->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubtitle"],
    ShowCellBracket->True,
    CellMargins->{{10, 4}, {30, 10}},
    PageBreakBelow->False,
    CounterIncrements->"Subsubtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}},
    FontFamily->"Helvetica",
    FontSize->14,
    FontSlant->"Italic"],
  
  Cell[StyleData["Subsubtitle", "Presentation"],
    ShowCellBracket->True,
    CellMargins->{{8, 10}, {40, 20}},
    LineSpacing->{1, 0},
    FontSize->24],
  
  Cell[StyleData["Subsubtitle", "Condensed"],
    ShowCellBracket->True,
    CellMargins->{{8, 10}, {12, 8}},
    FontSize->12],
  
  Cell[StyleData["Subsubtitle", "Printout"],
    ShowCellBracket->True,
    CellMargins->{{9, 10}, {50, 10}},
    FontSize->14]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Section"],
    CellFrame->{{0, 0}, {0, 1}},
    CellDingbat->None,
    CellMargins->{{12, Inherited}, {4, 24}},
    CellGroupingRules->{"SectionGrouping", 30},
    PageBreakBelow->False,
    CellFrameMargins->6,
    CounterIncrements->"Section",
    CounterAssignments->{{"Subsection", 0}, {"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->16,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["Section", "Presentation"],
    CellMargins->{{10, 10}, {8, 32}},
    LineSpacing->{1, 2},
    FontSize->24,
    FontTracking->"Condensed"],
  
  Cell[StyleData["Section", "Condensed"],
    CellMargins->{{9, 0}, {2, 50}},
    FontSize->14],
  
  Cell[StyleData["Section", "Printout"],
    CellMargins->{{9, 0}, {2, 50}},
    FontSize->14,
    FontTracking->"Plain",
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsection"],
    CellMargins->{{12, Inherited}, {8, 20}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->13,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsection", "Presentation"],
    CellMargins->{{11, 10}, {8, 32}},
    LineSpacing->{1, 0},
    FontSize->22],
  
  Cell[StyleData["Subsection", "Condensed"],
    CellMargins->{{8, Inherited}, {2, 12}},
    FontSize->12],
  
  Cell[StyleData["Subsection", "Printout"],
    CellMargins->{{9, 0}, {4, 40}},
    FontSize->12]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubsection"],
    CellDingbat->"\[FilledSquare]",
    CellMargins->{{25, Inherited}, {8, 12}},
    CellGroupingRules->{"SectionGrouping", 50},
    PageBreakBelow->False,
    CounterIncrements->"Subsubsection",
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsubsection", "Presentation"],
    CellMargins->{{29, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Subsubsection", "Condensed"],
    CellMargins->{{21, 0}, {4, 20}},
    FontSize->11],
  
  Cell[StyleData["Subsubsection", "Printout"],
    CellMargins->{{21, 0}, {4, 20}},
    FontSize->11]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Body Text", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Text"],
    CellMargins->{{12, 10}, {5, 5}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 12},
    CounterIncrements->"Text",
    FontFamily->"Times"],
  
  Cell[StyleData["Text", "Presentation"],
    CellMargins->{{13, 10}, {8, 8}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12},
    FontSize->16],
  
  Cell[StyleData["Text", "Condensed"],
    CellMargins->{{9, 0}, {4, 4}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 6}],
  
  Cell[StyleData["Text", "Printout"],
    CellMargins->{{9, 0}, {4, 4}},
    ParagraphSpacing->{0, 6}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SmallText"],
    CellMargins->{{12, 10}, {5, 5}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 6},
    CounterIncrements->"SmallText",
    FontFamily->"Helvetica",
    FontSize->9],
  
  Cell[StyleData["SmallText", "Presentation"],
    CellMargins->{{13, 10}, {8, 8}},
    LineSpacing->{1, 5},
    FontSize->12],
  
  Cell[StyleData["SmallText", "Condensed"],
    CellMargins->{{8, 10}, {2, 2}},
    LineSpacing->{1, 2},
    FontSize->9],
  
  Cell[StyleData["SmallText", "Printout"],
    CellMargins->{{9, 0}, {4, 4}}]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Input/Output", "Section"],
  
  Cell["\<\
The cells in this section define styles used for input and output to the \
kernel.  Be careful when modifying, renaming, or removing these styles, \
because the front end associates special meanings with these style names.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Input"],
    CellFrame->0.5,
    CellMargins->{{25, 10}, {8, 8}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{5, Inherited}, {Inherited, Inherited}},
    DefaultFormatType->DefaultInputFormatType,
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    CounterIncrements->"Input",
    FontWeight->"Bold",
    Background->RGBColor[1, 0.700008, 0.4]],
  
  Cell[StyleData["Input", "Presentation"],
    CellMargins->{{25, Inherited}, {10, 10}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Input", "Condensed"],
    CellMargins->{{25, 0}, {6, 6}}],
  
  Cell[StyleData["Input", "Printout"],
    CellFrame->0.5,
    CellMargins->{{25, 0}, {6, 6}},
    Background->None]
  }, Closed]],
  
  Cell[StyleData["InlineInput"],
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    DefaultFormatType->DefaultInputFormatType,
    AutoItalicWords->{},
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    CounterIncrements->"Input",
    FontWeight->"Bold"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Output"],
    CellFrame->True,
    CellMargins->{{25, 10}, {8, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4},
    CellEditDuplicate->True,
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    CellLabelMargins->{{3, Inherited}, {Inherited, Inherited}},
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Output",
    Background->RGBColor[1, 0.900008, 0.900008]],
  
  Cell[StyleData["Output", "Presentation"],
    CellMargins->{{25, Inherited}, {12, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Output", "Condensed"],
    CellMargins->{{25, 0}, {6, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4}],
  
  Cell[StyleData["Output", "Printout"],
    CellMargins->{{25, 0}, {6, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4},
    Background->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Message"],
    CellMargins->{{62, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Message",
    StyleMenuListing->None,
    FontColor->RGBColor[1, 0, 0]],
  
  Cell[StyleData["Message", "Presentation"],
    CellMargins->{{74, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Message", "Condensed"],
    CellMargins->{{50, Inherited}, {Inherited, Inherited}}],
  
  Cell[StyleData["Message", "Printout"],
    CellMargins->{{54, Inherited}, {Inherited, Inherited}},
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Print"],
    CellMargins->{{62, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Print",
    StyleMenuListing->None],
  
  Cell[StyleData["Print", "Presentation"],
    CellMargins->{{74, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Print", "Condensed"],
    CellMargins->{{50, Inherited}, {Inherited, Inherited}}],
  
  Cell[StyleData["Print", "Printout"],
    CellMargins->{{54, Inherited}, {Inherited, Inherited}}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Graphics"],
    CellMargins->{{62, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"GraphicsGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Graphics",
    StyleMenuListing->None],
  
  Cell[StyleData["Graphics", "Presentation"],
    CellMargins->{{74, Inherited}, {Inherited, Inherited}}],
  
  Cell[StyleData["Graphics", "Condensed"],
    CellMargins->{{52, Inherited}, {Inherited, Inherited}},
    ImageSize->{175, 175}],
  
  Cell[StyleData["Graphics", "Printout"],
    CellMargins->{{54, Inherited}, {Inherited, Inherited}},
    ImageSize->{250, 250}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["CellLabel"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->11,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["CellLabel", "Presentation"],
    FontSize->12],
  
  Cell[StyleData["CellLabel", "Condensed"],
    FontSize->8],
  
  Cell[StyleData["CellLabel", "Printout"],
    FontSize->8,
    FontColor->GrayLevel[0]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Unique Styles", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Author"],
    CellMargins->{{10, 4}, {2, 10}},
    FontSize->12,
    FontSlant->"Italic"],
  
  Cell[StyleData["Author", "Presentation"],
    CellMargins->{{12, 10}, {2, 12}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12},
    FontSize->16],
  
  Cell[StyleData["Author", "Condensed"],
    CellMargins->{{8, 10}, {1, 4}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 4},
    FontSize->9],
  
  Cell[StyleData["Author", "Printout"],
    CellMargins->{{9, 0}, {4, 12}},
    ParagraphSpacing->{0, 6}]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Copyright"],
    CellMargins->{{10, 10}, {40, 2}},
    FontFamily->"Helvetica",
    FontSize->9],
  
  Cell[StyleData["Copyright", "Presentation"],
    CellMargins->{{12, 10}, {50, 2}},
    LineSpacing->{1, 5},
    FontSize->12],
  
  Cell[StyleData["Copyright", "Condensed"],
    CellMargins->{{8, 10}, {12, 1}},
    LineSpacing->{1, 2},
    FontSize->9],
  
  Cell[StyleData["Copyright", "Printout"],
    CellMargins->{{9, 0}, {72, 4}},
    FontSize->7]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Abstract"],
    CellMargins->{{45, 75}, {Inherited, 30}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Abstract", "Printout"],
    CellMargins->{{36, 67}, {Inherited, 50}},
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Example"],
    CellMargins->{{12, 10}, {5, 12}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 12},
    CounterIncrements->"Example",
    FontFamily->"Times",
    FontWeight->"Bold"],
  
  Cell[StyleData["Example", "Presentation"],
    CellMargins->{{18, 10}, {8, 20}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12}],
  
  Cell[StyleData["Example", "Condensed"],
    CellMargins->{{8, 10}, {4, 8}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 4}],
  
  Cell[StyleData["Example", "Printout"],
    CellMargins->{{9, 0}, {4, 10}},
    ParagraphSpacing->{0, 6}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Definition"],
    CellFrame->{{3, 0}, {0, 0}},
    CellMargins->{{52, 10}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Definition",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontColor->GrayLevel[1],
    Background->RGBColor[0.2, 0.700008, 0.700008]],
  
  Cell[StyleData["Definition", "Presentation"],
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Definition", "Condensed"],
    CellMargins->{{40, 10}, {1, 4}}],
  
  Cell[StyleData["Definition", "Printout"],
    CellMargins->{{44, 0}, {2, 6}},
    Background->GrayLevel[0.6]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Theorem"],
    CellFrame->{{3, 0}, {0, 0}},
    CellMargins->{{52, 10}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Theorem",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontColor->GrayLevel[1],
    Background->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["Theorem", "Presentation"],
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Theorem", "Condensed"],
    CellMargins->{{40, 10}, {1, 4}}],
  
  Cell[StyleData["Theorem", "Printout"],
    CellMargins->{{44, 0}, {2, 6}},
    Background->GrayLevel[0.4]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Caution"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{52, 25}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Caution",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->GrayLevel[0],
    Background->RGBColor[0.996109, 0, 0],
    FontVariations->{"Underline"->False}],
  
  Cell[StyleData["Caution", "Presentation"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Caution", "Condensed"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{40, 25}, {1, 4}}],
  
  Cell[StyleData["Caution", "Printout"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{44, 25}, {2, 6}},
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Advice"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{52, 25}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Advice",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->GrayLevel[0],
    Background->RGBColor[0, 1, 0],
    FontVariations->{"Underline"->False}],
  
  Cell[StyleData["Advice", "Presentation"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Advice", "Condensed"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{40, 25}, {1, 4}}],
  
  Cell[StyleData["Advice", "Printout"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{44, 25}, {2, 6}},
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Exercise"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{23, Inherited}, {4, 18}},
    CellGroupingRules->"NormalGrouping",
    PageBreakBelow->False,
    CounterIncrements->"Subsubsection",
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 0.996109]],
  
  Cell[StyleData["Exercise", "Presentation"],
    CellMargins->{{33, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Exercise", "Condensed"],
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11],
  
  Cell[StyleData["Exercise", "Printout"],
    CellFrame->False,
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11,
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ExerciseMain"],
    CellFrame->{{6, 0}, {0, 1}},
    CellMargins->{{12, Inherited}, {4, 20}},
    CellGroupingRules->{"SectionGrouping", 30},
    PageBreakBelow->False,
    CellFrameColor->RGBColor[0.571389, 0.19675, 0.570504],
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->16,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["ExerciseMain", "Presentation"],
    CellMargins->{{18, 10}, {8, 32}},
    LineSpacing->{1, 2},
    FontSize->24,
    FontTracking->"Condensed"],
  
  Cell[StyleData["ExerciseMain", "Condensed"],
    CellMargins->{{9, 0}, {2, 50}},
    FontSize->14],
  
  Cell[StyleData["ExerciseMain", "Printout"],
    CellMargins->{{9, 0}, {2, 50}},
    CellFrameColor->GrayLevel[0.500008],
    FontSize->14,
    FontTracking->"Plain",
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ExerciseTitle"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{23, Inherited}, {4, 18}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["ExerciseTitle", "Presentation"],
    CellMargins->{{33, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["ExerciseTitle", "Condensed"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11],
  
  Cell[StyleData["ExerciseTitle", "Printout"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11,
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ExerciseText"],
    CellMargins->{{32, 10}, {5, 5}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 8},
    CounterIncrements->"ExcersiceText",
    FontFamily->"Times"],
  
  Cell[StyleData["ExerciseText", "Presentation"],
    CellMargins->{{32, 10}, {8, 8}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12}],
  
  Cell[StyleData["ExerciseText", "Condensed"],
    CellMargins->{{32, 0}, {4, 4}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 6}],
  
  Cell[StyleData["ExerciseText", "Printout"],
    CellMargins->{{32, 0}, {4, 4}},
    ParagraphSpacing->{0, 6}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Problem"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{23, Inherited}, {4, 18}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Plain",
    FontColor->GrayLevel[0]],
  
  Cell[StyleData["Problem", "Presentation"],
    CellMargins->{{33, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Problem", "Condensed"],
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11],
  
  Cell[StyleData["Problem", "Printout"],
    CellFrame->False,
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11,
    FontColor->GrayLevel[0]]
  }, Closed]]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell["Formulas and Programming", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DisplayFormula"],
    CellMargins->{{62, 10}, {2, 10}},
    CellHorizontalScrolling->True,
    DefaultFormatType->DefaultInputFormatType,
    ScriptLevel->0,
    SingleLetterItalics->True,
    UnderoverscriptBoxOptions->{LimitsPositioning->True}],
  
  Cell[StyleData["DisplayFormula", "Presentation"],
    CellMargins->{{74, 10}, {2, 10}}],
  
  Cell[StyleData["DisplayFormula", "Condensed"],
    CellMargins->{{52, 10}, {2, 10}}],
  
  Cell[StyleData["DisplayFormula", "Printout"],
    CellMargins->{{54, 10}, {2, 10}}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ChemicalFormula"],
    CellMargins->{{62, 10}, {2, 10}},
    DefaultFormatType->DefaultInputFormatType,
    AutoSpacing->False,
    ScriptLevel->1,
    ScriptBaselineShifts->{0.6, Automatic},
    SingleLetterItalics->False,
    ZeroWidthTimes->True],
  
  Cell[StyleData["ChemicalFormula", "Presentation"],
    CellMargins->{{74, 10}, {2, 10}},
    FontSize->10],
  
  Cell[StyleData["ChemicalFormula", "Condensed"],
    CellMargins->{{52, 10}, {2, 10}},
    FontSize->10],
  
  Cell[StyleData["ChemicalFormula", "Printout"],
    CellMargins->{{54, 10}, {2, 10}},
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Program"],
    CellMargins->{{12, 10}, {Inherited, 6}},
    FontFamily->"Courier"],
  
  Cell[StyleData["Program", "Presentation"],
    CellMargins->{{13, 30}, {Inherited, 4}},
    FontSize->9.5],
  
  Cell[StyleData["Program", "Condensed"],
    CellMargins->{{8, 10}, {Inherited, 4}},
    FontSize->9.5],
  
  Cell[StyleData["Program", "Printout"],
    CellMargins->{{9, 0}, {Inherited, 4}},
    FontSize->9.5]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Automatic Numbering", "Section"],
  
  Cell["\<\
The following styles are useful for numbered equations, figures, etc.  They \
automatically give the cell a FrameLabel containing a reference to a \
particular counter, and also increment that counter.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["NumberedEquation"],
    CellMargins->{{62, 10}, {Inherited, Inherited}},
    CellFrameLabels->{{None, Cell[ 
            TextData[ {"(", 
              CounterBox[ "NumberedEquation"], ")"}]]}, {None, None}},
    DefaultFormatType->DefaultInputFormatType,
    CounterIncrements->"NumberedEquation",
    FormatTypeAutoConvert->False],
  
  Cell[StyleData["NumberedEquation", "Presentation"],
    CellMargins->{{74, 10}, {Inherited, Inherited}}],
  
  Cell[StyleData["NumberedEquation", "Condensed"],
    CellMargins->{{52, 10}, {Inherited, Inherited}}],
  
  Cell[StyleData["NumberedEquation", "Printout"],
    CellMargins->{{54, 0}, {Inherited, Inherited}}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["NumberedFigure"],
    CellMargins->{{62, 145}, {Inherited, Inherited}},
    CellFrameLabels->{{None, None}, {Cell[ 
            TextData[ {"Figure ", 
              CounterBox[ "NumberedFigure"]}]], None}},
    CounterIncrements->"NumberedFigure",
    ImageMargins->{{43, Inherited}, {Inherited, 0}},
    FormatTypeAutoConvert->False],
  
  Cell[StyleData["NumberedFigure", "Presentation"]],
  
  Cell[StyleData["NumberedFigure", "Condensed"]],
  
  Cell[StyleData["NumberedFigure", "Printout"]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["NumberedTable"],
    CellMargins->{{62, 145}, {Inherited, Inherited}},
    CellFrameLabels->{{None, None}, {Cell[ 
            TextData[ {"Table ", 
              CounterBox[ "NumberedTable"]}]], None}},
    TextAlignment->Center,
    CounterIncrements->"NumberedTable",
    FormatTypeAutoConvert->False],
  
  Cell[StyleData["NumberedTable", "Presentation"]],
  
  Cell[StyleData["NumberedTable", "Condensed"]],
  
  Cell[StyleData["NumberedTable", "Printout"]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headers and Footers", "Section"],
  
  Cell[StyleData["Header"],
    CellMargins->{{0, 0}, {4, 1}},
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontSlant->"Italic"],
  
  Cell[StyleData["Footer"],
    CellMargins->{{0, 0}, {0, 4}},
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontSlant->"Italic"],
  
  Cell[StyleData["PageNumber"],
    CellMargins->{{0, 0}, {4, 1}},
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontWeight->"Bold"]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Hyperlink Styles", "Section"],
  
  Cell["\<\
The cells below define styles useful for making hypertext ButtonBoxes.  The \
\"Hyperlink\" style is for links within the same Notebook, or between \
Notebooks.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Hyperlink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookLocate[ #2]}]&),
    Active->True,
    ButtonFrame->"None",
    ButtonNote->ButtonData}],
  
  Cell[StyleData["Hyperlink", "Presentation"]],
  
  Cell[StyleData["Hyperlink", "Condensed"]],
  
  Cell[StyleData["Hyperlink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell["\<\
The following styles are for linking automatically to the on-line help \
system.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["MainBookLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "MainBook", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["MainBookLink", "Presentation"]],
  
  Cell[StyleData["MainBookLink", "Condensed"]],
  
  Cell[StyleData["MainBookLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["AddOnsLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "AddOns", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["AddOnsLink", "Presentation"]],
  
  Cell[StyleData["AddOnsLink", "Condensed"]],
  
  Cell[StyleData["AddOnLink", "Printout"],
    FontWeight->"Bold",
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["RefGuideLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "RefGuideLink", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["RefGuideLink", "Presentation"]],
  
  Cell[StyleData["RefGuideLink", "Condensed"]],
  
  Cell[StyleData["RefGuideLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["GettingStartedLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "GettingStarted", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["GettingStartedLink", "Presentation"]],
  
  Cell[StyleData["GettingStartedLink", "Condensed"]],
  
  Cell[StyleData["GettingStartedLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["OtherInformationLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "OtherInformation", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["OtherInformationLink", "Presentation"]],
  
  Cell[StyleData["OtherInformationLink", "Condensed"]],
  
  Cell[StyleData["OtherInformationLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]]
  }, Closed]]
  }, Open  ]]
  }]
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "Info3348237130-5755146"->{
    Cell[34958, 947, 379, 9, 60, "Print",
      CellTags->"Info3348237130-5755146"]},
  "Info3348237133-6124066"->{
    Cell[35422, 964, 379, 9, 60, "Print",
      CellTags->"Info3348237133-6124066"],
    Cell[35804, 975, 350, 9, 35, "Print",
      CellTags->"Info3348237133-6124066"]},
  "Info3348237156-5926592"->{
    Cell[57524, 1554, 322, 9, 35, "Print",
      CellTags->"Info3348237156-5926592"]},
  "Info3282050797-2893695"->{
    Cell[59264, 1617, 353, 9, 35, "Print",
      CellTags->"Info3282050797-2893695"]},
  "Info3282050804-6113871"->{
    Cell[60161, 1648, 367, 9, 35, "Print",
      CellTags->"Info3282050804-6113871"]},
  "Info3282053600-3438854"->{
    Cell[127539, 4013, 67, 1, 34, "Print",
      CellTags->"Info3282053600-3438854"],
    Cell[127609, 4016, 708, 19, 166, "Print",
      CellTags->"Info3282053600-3438854"]},
  "Info3282055231-7910126"->{
    Cell[408595, 9811, 63, 1, 34, "Print",
      CellTags->"Info3282055231-7910126"],
    Cell[408661, 9814, 440, 13, 36, "Print",
      CellTags->"Info3282055231-7910126"]},
  "Info3282055233-8569190"->{
    Cell[410790, 9904, 63, 1, 34, "Print",
      CellTags->"Info3282055233-8569190"],
    Cell[410856, 9907, 595, 17, 126, "Print",
      CellTags->"Info3282055233-8569190"]},
  "Info3282055294-7199752"->{
    Cell[417813, 10159, 63, 1, 34, "Print",
      CellTags->"Info3282055294-7199752"],
    Cell[417879, 10162, 439, 13, 37, "Print",
      CellTags->"Info3282055294-7199752"]},
  "Info3282055297-8178872"->{
    Cell[418789, 10196, 63, 1, 34, "Print",
      CellTags->"Info3282055297-8178872"],
    Cell[418855, 10199, 443, 13, 37, "Print",
      CellTags->"Info3282055297-8178872"]},
  "Info3282055701-8134972"->{
    Cell[446648, 11252, 361, 9, 35, "Print",
      CellTags->"Info3282055701-8134972"]},
  "Info3282055653-5932782"->{
    Cell[562627, 13575, 63, 1, 34, "Print",
      CellTags->"Info3282055653-5932782"],
    Cell[562693, 13578, 431, 13, 35, "Print",
      CellTags->"Info3282055653-5932782"]},
  "Info3282055793-8746166"->{
    Cell[576942, 14051, 63, 1, 34, "Print",
      CellTags->"Info3282055793-8746166"],
    Cell[577008, 14054, 423, 13, 35, "Print",
      CellTags->"Info3282055793-8746166"]},
  "Info3348236975-8449943"->{
    Cell[609437, 14862, 433, 10, 60, "Print",
      CellTags->"Info3348236975-8449943"],
    Cell[609873, 14874, 479, 13, 36, "Print",
      CellTags->"Info3348236975-8449943"]},
  "Info3348236985-5425450"->{
    Cell[611138, 14921, 112, 2, 35, "Print",
      CellTags->"Info3348236985-5425450"]},
  "Info3348237007-4808778"->{
    Cell[613685, 15020, 70, 1, 34, "Print",
      CellTags->"Info3348237007-4808778"]},
  "Info3348235503-9017593"->{
    Cell[722062, 16787, 462, 11, 60, "Print",
      CellTags->"Info3348235503-9017593"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"Info3348237130-5755146", 881897, 21065},
  {"Info3348237133-6124066", 882013, 21068},
  {"Info3348237156-5926592", 882214, 21073},
  {"Info3282050797-2893695", 882331, 21076},
  {"Info3282050804-6113871", 882448, 21079},
  {"Info3282053600-3438854", 882565, 21082},
  {"Info3282055231-7910126", 882771, 21087},
  {"Info3282055233-8569190", 882976, 21092},
  {"Info3282055294-7199752", 883182, 21097},
  {"Info3282055297-8178872", 883389, 21102},
  {"Info3282055701-8134972", 883596, 21107},
  {"Info3282055653-5932782", 883715, 21110},
  {"Info3282055793-8746166", 883922, 21115},
  {"Info3348236975-8449943", 884129, 21120},
  {"Info3348236985-5425450", 884338, 21125},
  {"Info3348237007-4808778", 884457, 21128},
  {"Info3348235503-9017593", 884575, 21131}
  }
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 81, 2, 81, "Title"],
Cell[1860, 57, 455, 15, 85, "Author"],
Cell[2318, 74, 268, 4, 41, "Text"],

Cell[CellGroupData[{
Cell[2611, 82, 31, 0, 83, "Section"],
Cell[2645, 84, 1364, 24, 197, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[4046, 113, 111, 5, 51, "Section"],
Cell[4160, 120, 470, 16, 67, "Text"],
Cell[4633, 138, 1055, 19, 171, "Text"],
Cell[5691, 159, 1055, 19, 171, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[6783, 183, 37, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[6845, 187, 41, 0, 68, "Subsection"],
Cell[6889, 189, 911, 17, 145, "Text"],

Cell[CellGroupData[{
Cell[7825, 210, 38, 1, 73, "Input"],
Cell[7866, 213, 35, 1, 59, "Output"]
}, Closed]],
Cell[7916, 217, 1179, 22, 171, "Text"],
Cell[9098, 241, 294, 5, 67, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[9429, 251, 41, 0, 68, "Subsection"],
Cell[9473, 253, 459, 8, 67, "Text"],
Cell[9935, 263, 418, 7, 93, "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[10402, 276, 45, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[10472, 280, 27, 0, 68, "Subsection"],
Cell[10502, 282, 654, 12, 119, "Text"],
Cell[11159, 296, 416, 8, 67, "Text"],
Cell[11578, 306, 1074, 21, 145, "Text"],
Cell[12655, 329, 801, 13, 119, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[13493, 347, 32, 0, 68, "Subsection"],
Cell[13528, 349, 57, 0, 58, "Exercise"],
Cell[13588, 351, 1294, 18, 197, "ExerciseText"],
Cell[14885, 371, 154, 4, 48, "Text"],
Cell[15042, 377, 154, 4, 48, "Text"],
Cell[15199, 383, 117, 3, 58, "Exercise"],
Cell[15319, 388, 64, 0, 41, "ExerciseText"],
Cell[15386, 390, 133, 3, 41, "ExerciseText"],
Cell[15522, 395, 670, 9, 119, "ExerciseText"],
Cell[16195, 406, 382, 6, 67, "ExerciseText"],
Cell[16580, 414, 371, 6, 67, "ExerciseText"],
Cell[16954, 422, 163, 3, 41, "ExerciseText"],
Cell[17120, 427, 45, 0, 58, "Exercise"],
Cell[17168, 429, 498, 8, 93, "ExerciseText"],
Cell[17669, 439, 442, 7, 93, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[18148, 451, 40, 0, 68, "Subsection"],
Cell[18191, 453, 469, 9, 93, "Text"],
Cell[18663, 464, 47, 0, 58, "Exercise"],
Cell[18713, 466, 387, 5, 67, "ExerciseText"],
Cell[19103, 473, 172, 3, 41, "ExerciseText"],
Cell[19278, 478, 152, 5, 41, "ExerciseText"],
Cell[19433, 485, 55, 0, 41, "ExerciseText"],
Cell[19491, 487, 154, 3, 41, "ExerciseText"],
Cell[19648, 492, 478, 7, 93, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[20163, 504, 38, 0, 68, "Subsection"],
Cell[20204, 506, 347, 6, 67, "Text"],
Cell[20554, 514, 67, 0, 71, "Advice"],
Cell[20624, 516, 642, 15, 94, "Text"],
Cell[21269, 533, 43, 0, 58, "Exercise"],
Cell[21315, 535, 357, 9, 67, "ExerciseText"],
Cell[21675, 546, 483, 13, 67, "ExerciseText"],
Cell[22161, 561, 200, 4, 41, "ExerciseText"],
Cell[22364, 567, 31, 0, 58, "Exercise"],
Cell[22398, 569, 732, 19, 95, "ExerciseText"],
Cell[23133, 590, 60, 0, 58, "Exercise"],
Cell[23196, 592, 335, 5, 67, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[23568, 602, 30, 0, 68, "Subsection"],
Cell[23601, 604, 745, 17, 94, "Text"],
Cell[24349, 623, 49, 0, 58, "Exercise"],
Cell[24401, 625, 198, 6, 42, "ExerciseText"],
Cell[24602, 633, 670, 18, 67, "ExerciseText"],
Cell[25275, 653, 622, 15, 93, "ExerciseText"],

Cell[CellGroupData[{
Cell[25922, 672, 84, 1, 74, "Input"],
Cell[26009, 675, 40, 1, 59, "Output"]
}, Closed]],
Cell[26064, 679, 297, 9, 41, "ExerciseText"],
Cell[26364, 690, 466, 11, 68, "ExerciseText"],

Cell[CellGroupData[{
Cell[26855, 705, 113, 2, 102, "Input"],
Cell[26971, 709, 71, 1, 94, "Output"]
}, Closed]],
Cell[27057, 713, 37, 0, 58, "Exercise"],
Cell[27097, 715, 427, 9, 68, "ExerciseText"],
Cell[27527, 726, 359, 5, 67, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[27923, 736, 54, 0, 68, "Subsection"],
Cell[27980, 738, 781, 16, 121, "Text"],
Cell[28764, 756, 119, 3, 41, "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[28932, 765, 24, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[28981, 769, 34, 0, 68, "Subsection"],
Cell[29018, 771, 651, 17, 93, "Text"],
Cell[29672, 790, 205, 6, 58, "Exercise"],

Cell[CellGroupData[{
Cell[29902, 800, 49, 1, 73, "Input"],
Cell[29954, 803, 77, 1, 61, "Output"]
}, Closed]],
Cell[30046, 807, 646, 14, 178, "Exercise"],
Cell[30695, 823, 1288, 32, 147, "Text"],
Cell[31986, 857, 273, 5, 67, "Text"],
Cell[32262, 864, 250, 4, 83, "Exercise"],
Cell[32515, 870, 191, 8, 59, "Exercise"],
Cell[32709, 880, 599, 12, 93, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[33345, 897, 36, 0, 68, "Subsection"],
Cell[33384, 899, 1003, 20, 147, "Text"],
Cell[34390, 921, 117, 3, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[34544, 929, 40, 0, 68, "Subsection"],
Cell[34587, 931, 296, 9, 42, "Text"],

Cell[CellGroupData[{
Cell[34908, 944, 47, 1, 73, "Input"],
Cell[34958, 947, 379, 9, 60, "Print",
  CellTags->"Info3348237130-5755146"]
}, Closed]],

Cell[CellGroupData[{
Cell[35374, 961, 45, 1, 73, "Input"],
Cell[35422, 964, 379, 9, 60, "Print",
  CellTags->"Info3348237133-6124066"],
Cell[35804, 975, 350, 9, 35, "Print",
  CellTags->"Info3348237133-6124066"]
}, Closed]],
Cell[36169, 987, 358, 6, 67, "Text"],
Cell[36530, 995, 306, 5, 67, "Text"],

Cell[CellGroupData[{
Cell[36861, 1004, 43, 1, 73, "Input"],
Cell[36907, 1007, 5094, 126, 128, "Print"]
}, Closed]],

Cell[CellGroupData[{
Cell[42038, 1138, 44, 1, 73, "Input"],
Cell[42085, 1141, 9788, 242, 172, "Print"]
}, Closed]],
Cell[51888, 1386, 222, 4, 83, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[52147, 1395, 35, 0, 68, "Subsection"],
Cell[52185, 1397, 822, 18, 94, "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[53056, 1421, 36, 0, 51, "Section"],
Cell[53095, 1423, 221, 6, 41, "Text"],

Cell[CellGroupData[{
Cell[53341, 1433, 29, 0, 68, "Subsection"],

Cell[CellGroupData[{
Cell[53395, 1437, 41, 0, 55, "Subsubsection"],
Cell[53439, 1439, 1149, 27, 146, "Text"],
Cell[54591, 1468, 435, 13, 68, "Text"],

Cell[CellGroupData[{
Cell[55051, 1485, 45, 1, 73, "Input"],
Cell[55099, 1488, 2340, 58, 106, "Print"]
}, Closed]],

Cell[CellGroupData[{
Cell[57476, 1551, 45, 1, 73, "Input"],
Cell[57524, 1554, 322, 9, 35, "Print",
  CellTags->"Info3348237156-5926592"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[57895, 1569, 49, 0, 55, "Subsubsection"],
Cell[57947, 1571, 207, 5, 41, "Text"],
Cell[58157, 1578, 162, 2, 41, "Text"],
Cell[58322, 1582, 143, 2, 41, "Text"],
Cell[58468, 1586, 349, 9, 41, "Text"],

Cell[CellGroupData[{
Cell[58842, 1599, 38, 1, 73, "Input"],
Cell[58883, 1602, 264, 4, 35, "Message"],
Cell[59150, 1608, 35, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[59222, 1614, 39, 1, 73, "Input"],
Cell[59264, 1617, 353, 9, 35, "Print",
  CellTags->"Info3282050797-2893695"]
}, Closed]],
Cell[59632, 1629, 446, 12, 68, "Text"],

Cell[CellGroupData[{
Cell[60103, 1645, 55, 1, 73, "Input"],
Cell[60161, 1648, 367, 9, 35, "Print",
  CellTags->"Info3282050804-6113871"]
}, Closed]],
Cell[60543, 1660, 217, 5, 41, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[60797, 1670, 39, 0, 55, "Subsubsection"],
Cell[60839, 1672, 252, 5, 67, "Text"],
Cell[61094, 1679, 690, 23, 198, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[61821, 1707, 43, 0, 55, "Subsubsection"],
Cell[61867, 1709, 283, 6, 68, "Text"],

Cell[CellGroupData[{
Cell[62175, 1719, 35, 1, 73, "Input"],
Cell[62213, 1722, 39, 1, 59, "Output"]
}, Closed]],
Cell[62267, 1726, 338, 7, 67, "Text"],
Cell[62608, 1735, 138, 2, 58, "Exercise"],
Cell[62749, 1739, 425, 9, 67, "Text"],

Cell[CellGroupData[{
Cell[63199, 1752, 56, 1, 73, "Input"],
Cell[63258, 1755, 39, 1, 59, "Output"]
}, Closed]],
Cell[63312, 1759, 134, 2, 41, "Text"],
Cell[63449, 1763, 52, 0, 58, "Exercise"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[63550, 1769, 35, 0, 68, "Subsection"],
Cell[63588, 1771, 344, 9, 68, "Text"],

Cell[CellGroupData[{
Cell[63957, 1784, 42, 1, 73, "Input"],
Cell[64002, 1787, 35, 1, 59, "Output"]
}, Closed]],
Cell[64052, 1791, 35, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[64112, 1795, 34, 1, 73, "Input"],
Cell[64149, 1798, 35, 1, 59, "Output"]
}, Closed]],
Cell[64199, 1802, 135, 4, 42, "Text"],
Cell[64337, 1808, 76, 1, 74, "Input"],
Cell[64416, 1811, 72, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[64513, 1815, 42, 1, 73, "Input"],
Cell[64558, 1818, 52, 1, 61, "Output"]
}, Closed]],
Cell[64625, 1822, 212, 8, 42, "Text"],
Cell[64840, 1832, 71, 1, 73, "Input"],

Cell[CellGroupData[{
Cell[64936, 1837, 36, 1, 73, "Input"],
Cell[64975, 1840, 53, 1, 59, "Output"]
}, Closed]],
Cell[65043, 1844, 135, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[65203, 1851, 81, 1, 74, "Input"],
Cell[65287, 1854, 54, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[65378, 1860, 37, 1, 73, "Input"],
Cell[65418, 1863, 127, 2, 59, "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[65594, 1871, 36, 0, 68, "Subsection"],
Cell[65633, 1873, 346, 6, 67, "Text"],
Cell[65982, 1881, 50, 1, 73, "Input"],
Cell[66035, 1884, 525, 9, 93, "Text"],
Cell[66563, 1895, 57, 1, 73, "Input"],
Cell[66623, 1898, 345, 9, 68, "Text"],
Cell[66971, 1909, 73, 0, 71, "Advice"],
Cell[67047, 1911, 52, 0, 41, "Text"],
Cell[67102, 1913, 71, 1, 73, "Input"],
Cell[67176, 1916, 411, 8, 67, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[67624, 1929, 41, 0, 68, "Subsection"],
Cell[67668, 1931, 2847, 73, 311, "Text"],
Cell[70518, 2006, 822, 20, 119, "Text"],
Cell[71343, 2028, 439, 9, 67, "Text"],

Cell[CellGroupData[{
Cell[71807, 2041, 36, 1, 73, "Input"],
Cell[71846, 2044, 38, 1, 59, "Output"]
}, Closed]],
Cell[71899, 2048, 131, 5, 41, "Text"],

Cell[CellGroupData[{
Cell[72055, 2057, 36, 1, 73, "Input"],
Cell[72094, 2060, 38, 1, 72, "Output"]
}, Closed]],
Cell[72147, 2064, 1116, 32, 124, "Text"],
Cell[73266, 2098, 82, 1, 60, "Exercise"],
Cell[73351, 2101, 390, 14, 72, "Exercise"],
Cell[73744, 2117, 157, 5, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[73938, 2127, 43, 0, 68, "Subsection"],
Cell[73984, 2129, 292, 6, 67, "Text"],
Cell[74279, 2137, 74, 0, 71, "Definition"],
Cell[74356, 2139, 368, 5, 67, "Text"],
Cell[74727, 2146, 92, 2, 58, "Exercise"],
Cell[74822, 2150, 345, 7, 84, "Exercise"],
Cell[75170, 2159, 117, 3, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[75324, 2167, 32, 0, 68, "Subsection"],
Cell[75359, 2169, 226, 4, 67, "Text"],
Cell[75588, 2175, 2665, 71, 263, "Text"],

Cell[CellGroupData[{
Cell[78278, 2250, 60, 0, 55, "Subsubsection"],
Cell[78341, 2252, 187, 4, 41, "Text"],

Cell[CellGroupData[{
Cell[78553, 2260, 58, 1, 73, "Input"],
Cell[78614, 2263, 39, 1, 75, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[78690, 2269, 62, 1, 73, "Input"],
Cell[78755, 2272, 38, 1, 75, "Output"]
}, Closed]],
Cell[78808, 2276, 521, 8, 93, "Text"],
Cell[79332, 2286, 273, 6, 67, "Text"],

Cell[CellGroupData[{
Cell[79630, 2296, 116, 2, 99, "Input"],
Cell[79749, 2300, 340, 5, 35, "Message"],
Cell[80092, 2307, 175, 5, 37, "Message"]
}, Closed]],
Cell[80282, 2315, 47, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[80354, 2319, 58, 1, 73, "Input"],
Cell[80415, 2322, 50, 1, 72, "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[80514, 2329, 87, 1, 55, "Subsubsection"],
Cell[80604, 2332, 951, 21, 119, "Text"],

Cell[CellGroupData[{
Cell[81580, 2357, 42, 1, 73, "Input"],
Cell[81625, 2360, 52, 1, 59, "Output"]
}, Closed]],
Cell[81692, 2364, 99, 2, 58, "Exercise"],
Cell[81794, 2368, 566, 13, 93, "Text"],
Cell[82363, 2383, 225, 8, 59, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[82625, 2396, 33, 0, 55, "Subsubsection"],
Cell[82661, 2398, 341, 8, 68, "Text"],

Cell[CellGroupData[{
Cell[83027, 2410, 543, 11, 437, "Input"],
Cell[83573, 2423, 167, 3, 73, "Output"]
}, Closed]],
Cell[83755, 2429, 310, 5, 67, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[84102, 2439, 66, 0, 55, "Subsubsection"],
Cell[84171, 2441, 274, 5, 67, "Text"],

Cell[CellGroupData[{
Cell[84470, 2450, 96, 3, 125, "Input"],
Cell[84569, 2455, 35, 1, 59, "Output"]
}, Closed]],
Cell[84619, 2459, 446, 7, 93, "Text"],
Cell[85068, 2468, 48, 1, 73, "Input"],
Cell[85119, 2471, 213, 5, 42, "Text"],

Cell[CellGroupData[{
Cell[85357, 2480, 34, 1, 73, "Input"],
Cell[85394, 2483, 36, 1, 59, "Output"]
}, Closed]],
Cell[85445, 2487, 145, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[85615, 2494, 61, 1, 73, "Input"],
Cell[85679, 2497, 35, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[85751, 2503, 105, 2, 151, "Input"],
Cell[85859, 2507, 41, 1, 59, "Output"]
}, Closed]],
Cell[85915, 2511, 703, 12, 119, "Text"],

Cell[CellGroupData[{
Cell[86643, 2527, 88, 3, 151, "Input"],
Cell[86734, 2532, 35, 1, 59, "Output"],
Cell[86772, 2535, 35, 1, 59, "Output"],
Cell[86810, 2538, 35, 1, 59, "Output"]
}, Closed]],
Cell[86860, 2542, 130, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[87015, 2549, 70, 2, 99, "Input"],
Cell[87088, 2553, 35, 1, 59, "Output"]
}, Closed]],
Cell[87138, 2557, 154, 5, 41, "Text"],
Cell[87295, 2564, 50, 1, 73, "Input"],
Cell[87348, 2567, 713, 10, 119, "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[88110, 2583, 54, 0, 68, "Subsection"],
Cell[88167, 2585, 369, 9, 67, "Text"],

Cell[CellGroupData[{
Cell[88561, 2598, 36, 1, 73, "Input"],
Cell[88600, 2601, 38, 1, 75, "Output"]
}, Closed]],
Cell[88653, 2605, 96, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[88774, 2611, 41, 1, 73, "Input"],
Cell[88818, 2614, 56, 1, 59, "Output"]
}, Closed]],
Cell[88889, 2618, 328, 9, 42, "Text"],

Cell[CellGroupData[{
Cell[89242, 2631, 40, 1, 73, "Input"],
Cell[89285, 2634, 38, 1, 59, "Output"]
}, Closed]],
Cell[89338, 2638, 1066, 29, 121, "Text"],

Cell[CellGroupData[{
Cell[90429, 2671, 49, 1, 100, "Input"],
Cell[90481, 2674, 57, 1, 75, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[90575, 2680, 52, 1, 100, "Input"],
Cell[90630, 2683, 54, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[90721, 2689, 45, 1, 73, "Input"],
Cell[90769, 2692, 74, 1, 59, "Output"]
}, Closed]],
Cell[90858, 2696, 584, 20, 68, "Text"],

Cell[CellGroupData[{
Cell[91467, 2720, 85, 1, 74, "Input"],
Cell[91555, 2723, 183, 5, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[91775, 2733, 81, 1, 74, "Input"],
Cell[91859, 2736, 168, 5, 59, "Output"]
}, Closed]],
Cell[92042, 2744, 366, 9, 67, "Text"],

Cell[CellGroupData[{
Cell[92433, 2757, 60, 1, 74, "Input"],
Cell[92496, 2760, 126, 2, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[92659, 2767, 37, 1, 74, "Input"],
Cell[92699, 2770, 78, 1, 59, "Output"]
}, Closed]],
Cell[92792, 2774, 376, 8, 68, "Text"],

Cell[CellGroupData[{
Cell[93193, 2786, 43, 1, 74, "Input"],
Cell[93239, 2789, 58, 1, 59, "Output"]
}, Closed]],
Cell[93312, 2793, 107, 3, 58, "Exercise"],
Cell[93422, 2798, 195, 8, 58, "Exercise"],
Cell[93620, 2808, 309, 7, 87, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[93966, 2820, 35, 0, 68, "Subsection"],
Cell[94004, 2822, 423, 9, 68, "Text"],

Cell[CellGroupData[{
Cell[94452, 2835, 85, 1, 73, "Input"],
Cell[94540, 2838, 49, 1, 61, "Output"]
}, Closed]],
Cell[94604, 2842, 88, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[94717, 2848, 42, 1, 73, "Input"],
Cell[94762, 2851, 52, 1, 61, "Output"]
}, Closed]],
Cell[94829, 2855, 433, 9, 68, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[95299, 2869, 27, 0, 68, "Subsection"],

Cell[CellGroupData[{
Cell[95351, 2873, 37, 0, 55, "Subsubsection"],
Cell[95391, 2875, 731, 24, 69, "Text"],

Cell[CellGroupData[{
Cell[96147, 2903, 66, 1, 73, "Input"],
Cell[96216, 2906, 65, 1, 59, "Output"]
}, Closed]],
Cell[96296, 2910, 107, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[96428, 2917, 76, 1, 73, "Input"],
Cell[96507, 2920, 67, 1, 59, "Output"]
}, Closed]],
Cell[96589, 2924, 98, 2, 58, "Exercise"],
Cell[96690, 2928, 133, 3, 58, "Exercise"],
Cell[96826, 2933, 116, 3, 58, "Exercise"],
Cell[96945, 2938, 330, 11, 103, "Exercise"],
Cell[97278, 2951, 249, 8, 42, "Text"],

Cell[CellGroupData[{
Cell[97552, 2963, 47, 1, 73, "Input"],
Cell[97602, 2966, 65, 1, 59, "Output"]
}, Closed]],
Cell[97682, 2970, 134, 4, 42, "Text"],

Cell[CellGroupData[{
Cell[97841, 2978, 65, 1, 73, "Input"],
Cell[97909, 2981, 67, 1, 59, "Output"]
}, Closed]],
Cell[97991, 2985, 38, 0, 41, "Text"],
Cell[98032, 2987, 175, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[98232, 2997, 67, 1, 73, "Input"],
Cell[98302, 3000, 266, 8, 98, "Output"]
}, Closed]],
Cell[98583, 3011, 387, 11, 68, "Text"],

Cell[CellGroupData[{
Cell[98995, 3026, 59, 1, 73, "Input"],
Cell[99057, 3029, 266, 8, 98, "Output"]
}, Closed]],
Cell[99338, 3040, 106, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[99469, 3047, 48, 1, 73, "Input"],
Cell[99520, 3050, 320, 9, 98, "Output"]
}, Closed]],
Cell[99855, 3062, 156, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[100036, 3069, 46, 1, 73, "Input"],
Cell[100085, 3072, 39, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[100161, 3078, 49, 1, 73, "Input"],
Cell[100213, 3081, 38, 1, 59, "Output"]
}, Closed]],
Cell[100266, 3085, 263, 7, 42, "Text"],
Cell[100532, 3094, 95, 2, 58, "Exercise"],
Cell[100630, 3098, 68, 0, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[100735, 3103, 43, 0, 55, "Subsubsection"],
Cell[100781, 3105, 300, 10, 42, "Text"],

Cell[CellGroupData[{
Cell[101106, 3119, 47, 1, 73, "Input"],
Cell[101156, 3122, 35, 1, 59, "Output"]
}, Closed]],
Cell[101206, 3126, 251, 9, 41, "Text"],

Cell[CellGroupData[{
Cell[101482, 3139, 52, 1, 73, "Input"],
Cell[101537, 3142, 35, 1, 59, "Output"]
}, Closed]],
Cell[101587, 3146, 241, 6, 41, "Text"],

Cell[CellGroupData[{
Cell[101853, 3156, 85, 1, 73, "Input"],
Cell[101941, 3159, 35, 1, 59, "Output"]
}, Closed]],
Cell[101991, 3163, 108, 3, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[102136, 3171, 34, 0, 55, "Subsubsection"],
Cell[102173, 3173, 658, 17, 95, "Text"],

Cell[CellGroupData[{
Cell[102856, 3194, 58, 1, 73, "Input"],
Cell[102917, 3197, 53, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[103007, 3203, 66, 1, 73, "Input"],
Cell[103076, 3206, 116, 2, 59, "Output"]
}, Closed]],
Cell[103207, 3211, 117, 3, 41, "Text"],
Cell[103327, 3216, 6166, 171, 141, "Text"],
Cell[109496, 3389, 164, 3, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[109697, 3397, 52, 0, 55, "Subsubsection"],
Cell[109752, 3399, 849, 25, 69, "Text"],

Cell[CellGroupData[{
Cell[110626, 3428, 62, 1, 73, "Input"],
Cell[110691, 3431, 38, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[110766, 3437, 65, 1, 73, "Input"],
Cell[110834, 3440, 38, 1, 59, "Output"]
}, Closed]],
Cell[110887, 3444, 497, 16, 67, "Exercise"],
Cell[111387, 3462, 228, 6, 58, "Exercise"],
Cell[111618, 3470, 408, 13, 42, "Text"],

Cell[CellGroupData[{
Cell[112051, 3487, 82, 2, 99, "Input"],
Cell[112136, 3491, 65, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[112238, 3497, 49, 1, 73, "Input"],
Cell[112290, 3500, 82, 1, 64, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[112409, 3506, 43, 1, 73, "Input"],
Cell[112455, 3509, 102, 2, 59, "Output"]
}, Closed]],
Cell[112572, 3514, 350, 9, 68, "Text"],

Cell[CellGroupData[{
Cell[112947, 3527, 59, 1, 73, "Input"],
Cell[113009, 3530, 79, 1, 59, "Output"]
}, Closed]],
Cell[113103, 3534, 203, 3, 83, "Exercise"],
Cell[113309, 3539, 180, 6, 42, "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[113538, 3551, 42, 0, 68, "Subsection"],
Cell[113583, 3553, 1246, 29, 148, "Text"],

Cell[CellGroupData[{
Cell[114854, 3586, 63, 0, 55, "Subsubsection"],
Cell[114920, 3588, 3068, 78, 215, "Text"],
Cell[117991, 3668, 115, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[118131, 3675, 70, 1, 78, "Input"],
Cell[118204, 3678, 38, 1, 59, "Output"]
}, Closed]],
Cell[118257, 3682, 198, 4, 41, "Text"],

Cell[CellGroupData[{
Cell[118480, 3690, 74, 2, 99, "Input"],
Cell[118557, 3694, 46, 1, 59, "Output"]
}, Closed]],
Cell[118618, 3698, 231, 6, 42, "Text"],
Cell[118852, 3706, 415, 10, 68, "Text"],

Cell[CellGroupData[{
Cell[119292, 3720, 68, 1, 96, "Input"],
Cell[119363, 3723, 73, 1, 75, "Output"]
}, Closed]],
Cell[119451, 3727, 43, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[119519, 3731, 78, 1, 96, "Input"],
Cell[119600, 3734, 38, 1, 59, "Output"]
}, Closed]],
Cell[119653, 3738, 211, 4, 41, "Text"],
Cell[119867, 3744, 131, 5, 67, "Exercise"],
Cell[120001, 3751, 327, 8, 118, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[120365, 3764, 46, 0, 55, "Subsubsection"],
Cell[120414, 3766, 3071, 82, 189, "Text"],

Cell[CellGroupData[{
Cell[123510, 3852, 60, 1, 73, "Input"],
Cell[123573, 3855, 47, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[123657, 3861, 78, 1, 73, "Input"],
Cell[123738, 3864, 54, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[123829, 3870, 78, 1, 73, "Input"],
Cell[123910, 3873, 53, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[124000, 3879, 87, 1, 73, "Input"],
Cell[124090, 3882, 54, 1, 59, "Output"]
}, Closed]],
Cell[124159, 3886, 418, 14, 42, "Text"],
Cell[124580, 3902, 233, 3, 83, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[124850, 3910, 48, 0, 55, "Subsubsection"],
Cell[124901, 3912, 212, 5, 41, "Text"],

Cell[CellGroupData[{
Cell[125138, 3921, 69, 1, 74, "Input"],
Cell[125210, 3924, 65, 1, 61, "Output"]
}, Closed]],
Cell[125290, 3928, 306, 7, 68, "Text"],

Cell[CellGroupData[{
Cell[125621, 3939, 46, 1, 73, "Input"],
Cell[125670, 3942, 69, 1, 59, "Output"]
}, Closed]],
Cell[125754, 3946, 174, 3, 41, "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[125977, 3955, 29, 0, 68, "Subsection"],
Cell[126009, 3957, 114, 3, 41, "Text"],
Cell[126126, 3962, 92, 1, 73, "Input"],

Cell[CellGroupData[{
Cell[126243, 3967, 44, 1, 73, "Input"],
Cell[126290, 3970, 66, 1, 59, "Output"]
}, Closed]],
Cell[126371, 3974, 254, 4, 67, "Text"],
Cell[126628, 3980, 155, 2, 73, "Input"],
Cell[126786, 3984, 90, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[126901, 3990, 81, 1, 73, "Input"],
Cell[126985, 3993, 42, 1, 59, "Output"]
}, Closed]],
Cell[127042, 3997, 153, 3, 41, "Text"],
Cell[127198, 4002, 270, 4, 151, "Input"],

Cell[CellGroupData[{
Cell[127493, 4010, 43, 1, 73, "Input"],
Cell[127539, 4013, 67, 1, 34, "Print",
  CellTags->"Info3282053600-3438854"],
Cell[127609, 4016, 708, 19, 166, "Print",
  CellTags->"Info3282053600-3438854"]
}, Closed]],
Cell[128332, 4038, 106, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[128463, 4045, 41, 1, 73, "Input"],
Cell[128507, 4048, 57, 1, 59, "Output"]
}, Closed]],
Cell[128579, 4052, 537, 18, 68, "Text"],

Cell[CellGroupData[{
Cell[129141, 4074, 105, 2, 73, "Input"],
Cell[129249, 4078, 37, 1, 59, "Output"]
}, Closed]],
Cell[129301, 4082, 168, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[129494, 4089, 46, 1, 73, "Input"],
Cell[129543, 4092, 17702, 444, 260, "Print"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[147294, 4542, 45, 0, 68, "Subsection"],
Cell[147342, 4544, 1463, 35, 147, "Text"],

Cell[CellGroupData[{
Cell[148830, 4583, 100, 2, 99, "Input"],
Cell[148933, 4587, 186, 6, 59, "Output"]
}, Closed]],
Cell[149134, 4596, 479, 11, 68, "Text"],
Cell[149616, 4609, 83, 2, 58, "Exercise"],
Cell[149702, 4613, 217, 5, 83, "Exercise"],
Cell[149922, 4620, 282, 8, 59, "Exercise"],
Cell[150207, 4630, 520, 18, 97, "Exercise"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[150776, 4654, 37, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[150838, 4658, 53, 0, 68, "Subsection"],
Cell[150894, 4660, 664, 14, 94, "Text"],
Cell[151561, 4676, 1553, 39, 257, "Text"],
Cell[153117, 4717, 132, 5, 58, "Exercise"],
Cell[153252, 4724, 223, 8, 59, "Exercise"],
Cell[153478, 4734, 347, 8, 68, "Text"],

Cell[CellGroupData[{
Cell[153850, 4746, 48, 1, 73, "Input"],
Cell[153901, 4749, 38, 1, 75, "Output"]
}, Closed]],
Cell[153954, 4753, 82, 1, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[154073, 4759, 39, 0, 68, "Subsection"],
Cell[154115, 4761, 664, 17, 94, "Text"],

Cell[CellGroupData[{
Cell[154804, 4782, 71, 1, 73, "Input"],
Cell[154878, 4785, 45606, 868, 279, 5435, 368, "GraphicsData", "PostScript", \
"Graphics"]
}, Closed]],
Cell[200499, 5656, 577, 9, 119, "Text"],
Cell[201079, 5667, 1925, 50, 305, "Text"],
Cell[203007, 5719, 113, 3, 58, "Exercise"],
Cell[203123, 5724, 50, 0, 58, "Exercise"],
Cell[203176, 5726, 67, 0, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[203280, 5731, 30, 0, 68, "Subsection"],
Cell[203313, 5733, 281, 6, 67, "Text"],
Cell[203597, 5741, 264, 9, 42, "Text"],
Cell[203864, 5752, 318, 11, 42, "Text"],

Cell[CellGroupData[{
Cell[204207, 5767, 69, 1, 73, "Input"],
Cell[204279, 5770, 24696, 539, 279, 3752, 276, "GraphicsData", "PostScript", \
"Graphics"]
}, Closed]],
Cell[228990, 6312, 1188, 38, 96, "Text"],

Cell[CellGroupData[{
Cell[230203, 6354, 150, 3, 125, "Input"],
Cell[230356, 6359, 30960, 640, 279, 4356, 307, "GraphicsData", "PostScript", \
"Graphics"]
}, Closed]],
Cell[261331, 7002, 189, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[261545, 7012, 122, 3, 73, "Input"],
Cell[261670, 7017, 133794, 2325, 279, 12610, 824, "GraphicsData", \
"PostScript", "Graphics"]
}, Closed]],
Cell[395479, 9345, 170, 5, 42, "Text"],
Cell[395652, 9352, 79, 0, 58, "Exercise"],
Cell[395734, 9354, 120, 3, 58, "Exercise"],
Cell[395857, 9359, 106, 3, 58, "Exercise"],
Cell[395966, 9364, 103, 2, 58, "Exercise"],
Cell[396072, 9368, 230, 7, 42, "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[396351, 9381, 34, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[396410, 9385, 44, 0, 68, "Subsection"],
Cell[396457, 9387, 823, 16, 120, "Text"],
Cell[397283, 9405, 146, 5, 42, "Text"],

Cell[CellGroupData[{
Cell[397454, 9414, 170, 3, 99, "Input"],
Cell[397627, 9419, 228, 3, 61, "Output"]
}, Closed]],
Cell[397870, 9425, 268, 5, 67, "Text"],

Cell[CellGroupData[{
Cell[398163, 9434, 143, 3, 74, "Input"],
Cell[398309, 9439, 84, 1, 59, "Output"]
}, Closed]],
Cell[398408, 9443, 811, 25, 95, "Text"],

Cell[CellGroupData[{
Cell[399244, 9472, 132, 2, 74, "Input"],
Cell[399379, 9476, 84, 1, 59, "Output"]
}, Closed]],
Cell[399478, 9480, 443, 7, 93, "Text"],
Cell[399924, 9489, 441, 14, 68, "Text"],

Cell[CellGroupData[{
Cell[400390, 9507, 148, 2, 74, "Input"],
Cell[400541, 9511, 87, 1, 61, "Output"]
}, Closed]],
Cell[400643, 9515, 297, 5, 67, "Text"],
Cell[400943, 9522, 41, 1, 73, "Input"],

Cell[CellGroupData[{
Cell[401009, 9527, 43, 1, 73, "Input"],
Cell[401055, 9530, 42, 1, 59, "Output"]
}, Closed]],
Cell[401112, 9534, 294, 5, 67, "Text"],

Cell[CellGroupData[{
Cell[401431, 9543, 44, 1, 73, "Input"],
Cell[401478, 9546, 42, 1, 59, "Output"]
}, Closed]],
Cell[401535, 9550, 587, 12, 93, "Text"],
Cell[402125, 9564, 72, 0, 71, "Advice"],

Cell[CellGroupData[{
Cell[402222, 9568, 46, 1, 73, "Input"],
Cell[402271, 9571, 42, 1, 59, "Output"]
}, Closed]],
Cell[402328, 9575, 324, 12, 42, "Text"],

Cell[CellGroupData[{
Cell[402677, 9591, 38, 1, 73, "Input"],
Cell[402718, 9594, 41, 1, 59, "Output"]
}, Closed]],
Cell[402774, 9598, 98, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[402897, 9604, 46, 1, 73, "Input"],
Cell[402946, 9607, 49, 1, 59, "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[403044, 9614, 40, 0, 68, "Subsection"],
Cell[403087, 9616, 341, 8, 68, "Text"],
Cell[403431, 9626, 339, 11, 42, "Text"],

Cell[CellGroupData[{
Cell[403795, 9641, 70, 1, 73, "Input"],
Cell[403868, 9644, 547, 7, 134, "Output"]
}, Closed]],
Cell[404430, 9654, 99, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[404554, 9660, 48, 1, 73, "Input"],
Cell[404605, 9663, 82, 1, 64, "Output"]
}, Closed]],
Cell[404702, 9667, 546, 10, 94, "Text"],

Cell[CellGroupData[{
Cell[405273, 9681, 52, 1, 73, "Input"],
Cell[405328, 9684, 117, 2, 64, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[405482, 9691, 59, 1, 73, "Input"],
Cell[405544, 9694, 110, 2, 64, "Output"]
}, Closed]],
Cell[405669, 9699, 53, 0, 58, "Exercise"],
Cell[405725, 9701, 218, 5, 108, "Exercise"],
Cell[405946, 9708, 305, 7, 84, "Exercise"],
Cell[406254, 9717, 148, 3, 58, "Exercise"],
Cell[406405, 9722, 164, 4, 108, "Exercise"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[406618, 9732, 37, 0, 51, "Section"],
Cell[406658, 9734, 695, 15, 94, "Text"],

Cell[CellGroupData[{
Cell[407378, 9753, 57, 0, 68, "Subsection"],
Cell[407438, 9755, 131, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[407594, 9762, 96, 2, 99, "Input"],
Cell[407693, 9766, 49, 1, 61, "Output"]
}, Closed]],
Cell[407757, 9770, 148, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[407930, 9777, 40, 1, 74, "Input"],
Cell[407973, 9780, 58, 1, 62, "Output"]
}, Closed]],
Cell[408046, 9784, 127, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[408198, 9791, 37, 1, 73, "Input"],
Cell[408238, 9794, 38, 1, 59, "Output"]
}, Closed]],
Cell[408291, 9798, 237, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[408553, 9808, 39, 1, 73, "Input"],
Cell[408595, 9811, 63, 1, 34, "Print",
  CellTags->"Info3282055231-7910126"],
Cell[408661, 9814, 440, 13, 36, "Print",
  CellTags->"Info3282055231-7910126"]
}, Closed]],
Cell[409116, 9830, 618, 19, 69, "Text"],

Cell[CellGroupData[{
Cell[409759, 9853, 51, 1, 73, "Input"],
Cell[409813, 9856, 39, 1, 59, "Output"]
}, Closed]],
Cell[409867, 9860, 349, 11, 42, "Text"],

Cell[CellGroupData[{
Cell[410241, 9875, 73, 1, 73, "Input"],
Cell[410317, 9878, 63, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[410417, 9884, 46, 1, 73, "Input"],
Cell[410466, 9887, 52, 1, 59, "Output"]
}, Closed]],
Cell[410533, 9891, 190, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[410748, 9901, 39, 1, 73, "Input"],
Cell[410790, 9904, 63, 1, 34, "Print",
  CellTags->"Info3282055233-8569190"],
Cell[410856, 9907, 595, 17, 126, "Print",
  CellTags->"Info3282055233-8569190"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[411500, 9930, 49, 0, 68, "Subsection"],
Cell[411552, 9932, 468, 17, 42, "Text"],

Cell[CellGroupData[{
Cell[412045, 9953, 94, 2, 99, "Input"],
Cell[412142, 9957, 49, 1, 61, "Output"]
}, Closed]],
Cell[412206, 9961, 976, 28, 96, "Text"],

Cell[CellGroupData[{
Cell[413207, 9993, 64, 1, 74, "Input"],
Cell[413274, 9996, 112, 2, 61, "Output"]
}, Closed]],
Cell[413401, 10001, 425, 15, 42, "Text"],

Cell[CellGroupData[{
Cell[413851, 10020, 46, 1, 73, "Input"],
Cell[413900, 10023, 38, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[413975, 10029, 66, 1, 73, "Input"],
Cell[414044, 10032, 38, 1, 59, "Output"]
}, Closed]],
Cell[414097, 10036, 155, 5, 58, "Exercise"],
Cell[414255, 10043, 176, 3, 58, "Exercise"],
Cell[414434, 10048, 357, 6, 67, "Text"],
Cell[414794, 10056, 627, 9, 133, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[415458, 10070, 48, 0, 68, "Subsection"],
Cell[415509, 10072, 706, 21, 69, "Text"],
Cell[416218, 10095, 147, 3, 125, "Input"],
Cell[416368, 10100, 320, 9, 42, "Text"],

Cell[CellGroupData[{
Cell[416713, 10113, 45, 1, 73, "Input"],
Cell[416761, 10116, 64, 1, 61, "Output"]
}, Closed]],
Cell[416840, 10120, 90, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[416955, 10126, 53, 1, 73, "Input"],
Cell[417011, 10129, 91, 1, 61, "Output"]
}, Closed]],
Cell[417117, 10133, 629, 19, 69, "Text"],

Cell[CellGroupData[{
Cell[417771, 10156, 39, 1, 73, "Input"],
Cell[417813, 10159, 63, 1, 34, "Print",
  CellTags->"Info3282055294-7199752"],
Cell[417879, 10162, 439, 13, 37, "Print",
  CellTags->"Info3282055294-7199752"]
}, Closed]],
Cell[418333, 10178, 389, 11, 68, "Text"],

Cell[CellGroupData[{
Cell[418747, 10193, 39, 1, 73, "Input"],
Cell[418789, 10196, 63, 1, 34, "Print",
  CellTags->"Info3282055297-8178872"],
Cell[418855, 10199, 443, 13, 37, "Print",
  CellTags->"Info3282055297-8178872"]
}, Closed]],
Cell[419313, 10215, 530, 16, 68, "Text"],
Cell[419846, 10233, 480, 15, 92, "Exercise"],
Cell[420329, 10250, 272, 5, 83, "Exercise"],
Cell[420604, 10257, 483, 11, 108, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[421124, 10273, 38, 0, 68, "Subsection"],
Cell[421165, 10275, 534, 20, 42, "Text"],

Cell[CellGroupData[{
Cell[421724, 10299, 81, 2, 99, "Input"],
Cell[421808, 10303, 44, 1, 59, "Output"]
}, Closed]],
Cell[421867, 10307, 111, 3, 41, "Text"],
Cell[421981, 10312, 184, 6, 98, "InlineInput",
  Evaluatable->False],
Cell[422168, 10320, 82, 2, 125, "Input"],

Cell[CellGroupData[{
Cell[422275, 10326, 46, 1, 73, "Input"],
Cell[422324, 10329, 75, 1, 111, "Output"]
}, Closed]],
Cell[422414, 10333, 156, 5, 42, "Text"],

Cell[CellGroupData[{
Cell[422595, 10342, 51, 1, 73, "Input"],
Cell[422649, 10345, 113, 2, 75, "Output"]
}, Closed]],
Cell[422777, 10350, 137, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[422939, 10357, 70, 1, 73, "Input"],
Cell[423012, 10360, 283, 4, 59, "Output"]
}, Closed]],
Cell[423310, 10367, 164, 5, 42, "Text"],

Cell[CellGroupData[{
Cell[423499, 10376, 51, 1, 73, "Input"],
Cell[423553, 10379, 52, 1, 59, "Output"]
}, Closed]],
Cell[423620, 10383, 132, 3, 41, "Text"],
Cell[423755, 10388, 541, 17, 83, "Exercise"],
Cell[424299, 10407, 241, 8, 42, "Text"],

Cell[CellGroupData[{
Cell[424565, 10419, 108, 2, 99, "Input"],
Cell[424676, 10423, 116, 2, 59, "Output"]
}, Closed]],
Cell[424807, 10428, 508, 17, 68, "Text"],
Cell[425318, 10447, 111, 3, 58, "Exercise"],
Cell[425432, 10452, 314, 6, 95, "Exercise"],
Cell[425749, 10460, 977, 28, 95, "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[426775, 10494, 36, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[426836, 10498, 34, 0, 68, "Subsection"],
Cell[426873, 10500, 1125, 27, 211, "Text"],
Cell[428001, 10529, 223, 7, 42, "Text"],

Cell[CellGroupData[{
Cell[428249, 10540, 59, 1, 74, "Input"],
Cell[428311, 10543, 48, 1, 61, "Output"]
}, Closed]],
Cell[428374, 10547, 61, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[428460, 10551, 50, 1, 73, "Input"],
Cell[428513, 10554, 41, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[428591, 10560, 50, 1, 73, "Input"],
Cell[428644, 10563, 59, 1, 65, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[428740, 10569, 58, 1, 73, "Input"],
Cell[428801, 10572, 59, 1, 65, "Output"]
}, Closed]],
Cell[428875, 10576, 167, 5, 41, "Text"],

Cell[CellGroupData[{
Cell[429067, 10585, 63, 1, 73, "Input"],
Cell[429133, 10588, 50, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[429220, 10594, 66, 1, 74, "Input"],
Cell[429289, 10597, 42, 1, 59, "Output"]
}, Closed]],
Cell[429346, 10601, 186, 7, 42, "Text"],
Cell[429535, 10610, 252, 8, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[429824, 10623, 42, 0, 68, "Subsection"],
Cell[429869, 10625, 93, 4, 42, "Text"],

Cell[CellGroupData[{
Cell[429987, 10633, 38, 1, 73, "Input"],
Cell[430028, 10636, 48, 1, 61, "Output"]
}, Closed]],
Cell[430091, 10640, 555, 18, 68, "Text"],

Cell[CellGroupData[{
Cell[430671, 10662, 62, 1, 74, "Input"],
Cell[430736, 10665, 49, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[430822, 10671, 45, 1, 73, "Input"],
Cell[430870, 10674, 38, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[430945, 10680, 50, 1, 73, "Input"],
Cell[430998, 10683, 43, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[431078, 10689, 68, 1, 74, "Input"],
Cell[431149, 10692, 61, 1, 62, "Output"]
}, Closed]],
Cell[431225, 10696, 280, 7, 83, "Exercise"],
Cell[431508, 10705, 359, 6, 108, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[431904, 10716, 36, 0, 68, "Subsection"],
Cell[431943, 10718, 564, 8, 93, "Text"],
Cell[432510, 10728, 130, 2, 73, "Input"],

Cell[CellGroupData[{
Cell[432665, 10734, 55, 1, 73, "Input"],
Cell[432723, 10737, 49, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[432809, 10743, 55, 1, 74, "Input"],
Cell[432867, 10746, 43, 1, 59, "Output"]
}, Closed]],
Cell[432925, 10750, 330, 7, 91, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[433292, 10762, 42, 0, 68, "Subsection"],
Cell[433337, 10764, 156, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[433518, 10771, 58, 1, 73, "Input"],
Cell[433579, 10774, 52, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[433668, 10780, 61, 1, 74, "Input"],
Cell[433732, 10783, 55, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[433824, 10789, 64, 1, 74, "Input"],
Cell[433891, 10792, 58, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[433986, 10798, 52, 1, 73, "Input"],
Cell[434041, 10801, 52, 1, 78, "Output"]
}, Closed]],
Cell[434108, 10805, 778, 17, 122, "Text"],

Cell[CellGroupData[{
Cell[434911, 10826, 59, 1, 73, "Input"],
Cell[434973, 10829, 58, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[435068, 10835, 68, 1, 74, "Input"],
Cell[435139, 10838, 64, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[435240, 10844, 53, 1, 73, "Input"],
Cell[435296, 10847, 49, 1, 59, "Output"]
}, Closed]],
Cell[435360, 10851, 279, 6, 68, "Text"],
Cell[435642, 10859, 262, 6, 94, "Caution"],

Cell[CellGroupData[{
Cell[435929, 10869, 78, 2, 74, "Input",
  Evaluatable->False],
Cell[436010, 10873, 42, 1, 59, "Output"]
}, Closed]],
Cell[436067, 10877, 401, 10, 68, "Text"],
Cell[436471, 10889, 272, 6, 71, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[436780, 10900, 35, 0, 68, "Subsection"],
Cell[436818, 10902, 164, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[437007, 10909, 66, 1, 95, "Input"],
Cell[437076, 10912, 108, 2, 76, "Output"]
}, Closed]],
Cell[437199, 10917, 133, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[437357, 10924, 110, 2, 95, "Input"],
Cell[437470, 10928, 108, 2, 76, "Output"]
}, Closed]],
Cell[437593, 10933, 542, 14, 69, "Text"],

Cell[CellGroupData[{
Cell[438160, 10951, 128, 3, 95, "Input"],
Cell[438291, 10956, 107, 2, 81, "Output"]
}, Closed]],
Cell[438413, 10961, 591, 15, 109, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[439041, 10981, 48, 0, 68, "Subsection"],
Cell[439092, 10983, 144, 3, 41, "Text"],
Cell[439239, 10988, 91, 1, 95, "Input"],
Cell[439333, 10991, 25, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[439383, 10995, 40, 1, 73, "Input"],
Cell[439426, 10998, 71, 1, 79, "Output"]
}, Closed]],
Cell[439512, 11002, 276, 11, 41, "Text"],
Cell[439791, 11015, 156, 2, 73, "Input"],

Cell[CellGroupData[{
Cell[439972, 11021, 61, 1, 73, "Input"],
Cell[440036, 11024, 72, 1, 59, "Output"]
}, Closed]],
Cell[440123, 11028, 256, 8, 42, "Text"],

Cell[CellGroupData[{
Cell[440404, 11040, 49, 1, 73, "Input"],
Cell[440456, 11043, 71, 1, 79, "Output"]
}, Closed]],
Cell[440542, 11047, 39, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[440606, 11051, 163, 3, 73, "Input"],
Cell[440772, 11056, 47, 1, 59, "Output"]
}, Closed]],
Cell[440834, 11060, 164, 3, 41, "Text"],
Cell[441001, 11065, 468, 9, 94, "Text"],

Cell[CellGroupData[{
Cell[441494, 11078, 306, 6, 99, "Input"],
Cell[441803, 11086, 336, 8, 59, "Output"]
}, Closed]],
Cell[442154, 11097, 106, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[442285, 11104, 64, 1, 73, "Input"],
Cell[442352, 11107, 71, 1, 79, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[442460, 11113, 88, 1, 73, "Input"],
Cell[442551, 11116, 72, 1, 59, "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[442672, 11123, 44, 0, 68, "Subsection"],
Cell[442719, 11125, 285, 7, 68, "Text"],

Cell[CellGroupData[{
Cell[443029, 11136, 82, 1, 74, "Input"],
Cell[443114, 11139, 150, 2, 84, "Output"]
}, Closed]],
Cell[443279, 11144, 76, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[443380, 11148, 110, 2, 73, "Input"],
Cell[443493, 11152, 92, 1, 75, "Output"]
}, Closed]],
Cell[443600, 11156, 177, 5, 58, "Exercise"],
Cell[443780, 11163, 194, 6, 58, "Exercise"],
Cell[443977, 11171, 505, 17, 95, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[444519, 11193, 29, 0, 68, "Subsection"],
Cell[444551, 11195, 762, 16, 122, "Text"],

Cell[CellGroupData[{
Cell[445338, 11215, 46, 1, 73, "Input"],
Cell[445387, 11218, 1003, 17, 205, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[446427, 11240, 59, 1, 73, "Input"],
Cell[446489, 11243, 70, 1, 75, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[446596, 11249, 49, 1, 73, "Input"],
Cell[446648, 11252, 361, 9, 35, "Print",
  CellTags->"Info3282055701-8134972"]
}, Closed]],

Cell[CellGroupData[{
Cell[447046, 11266, 71, 1, 73, "Input"],
Cell[447120, 11269, 117, 2, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[447274, 11276, 272, 5, 125, "Input"],
Cell[447549, 11283, 113616, 2229, 279, 16490, 1025, "GraphicsData", \
"PostScript", "Graphics"]
}, Closed]],
Cell[561180, 13515, 176, 3, 58, "Exercise"],
Cell[561359, 13520, 465, 13, 83, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[561861, 13538, 67, 0, 68, "Subsection"],
Cell[561931, 13540, 76, 0, 41, "Text"],
Cell[562010, 13542, 92, 2, 99, "Input"],
Cell[562105, 13546, 197, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[562327, 13556, 39, 1, 73, "Input"],
Cell[562369, 13559, 41, 1, 59, "Output"]
}, Closed]],
Cell[562425, 13563, 135, 5, 42, "Text"],

Cell[CellGroupData[{
Cell[562585, 13572, 39, 1, 73, "Input"],
Cell[562627, 13575, 63, 1, 34, "Print",
  CellTags->"Info3282055653-5932782"],
Cell[562693, 13578, 431, 13, 35, "Print",
  CellTags->"Info3282055653-5932782"]
}, Closed]],
Cell[563139, 13594, 105, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[563269, 13601, 56, 1, 73, "Input"],
Cell[563328, 13604, 52, 1, 59, "Output"]
}, Closed]],
Cell[563395, 13608, 75, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[563495, 13612, 56, 1, 73, "Input"],
Cell[563554, 13615, 43, 1, 78, "Output"]
}, Closed]],
Cell[563612, 13619, 713, 19, 96, "Text"],

Cell[CellGroupData[{
Cell[564350, 13642, 94, 2, 99, "Input"],
Cell[564447, 13646, 40, 1, 59, "Output"]
}, Closed]],
Cell[564502, 13650, 186, 7, 42, "Text"],

Cell[CellGroupData[{
Cell[564713, 13661, 38, 1, 73, "Input"],
Cell[564754, 13664, 35, 1, 59, "Output"]
}, Closed]],
Cell[564804, 13668, 288, 9, 42, "Text"],

Cell[CellGroupData[{
Cell[565117, 13681, 37, 1, 73, "Input"],
Cell[565157, 13684, 38, 1, 59, "Output"]
}, Closed]],
Cell[565210, 13688, 47, 1, 73, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[565294, 13694, 47, 0, 68, "Subsection"],
Cell[565344, 13696, 608, 18, 69, "Text"],

Cell[CellGroupData[{
Cell[565977, 13718, 70, 1, 73, "Input"],
Cell[566050, 13721, 74, 1, 61, "Output"]
}, Closed]],
Cell[566139, 13725, 116, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[566280, 13732, 67, 1, 73, "Input"],
Cell[566350, 13735, 52, 1, 59, "Output"]
}, Closed]],
Cell[566417, 13739, 338, 8, 68, "Text"],

Cell[CellGroupData[{
Cell[566780, 13751, 77, 1, 73, "Input"],
Cell[566860, 13754, 74, 1, 61, "Output"]
}, Closed]],
Cell[566949, 13758, 111, 3, 41, "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[567109, 13767, 24, 0, 51, "Section"],
Cell[567136, 13769, 1609, 24, 249, "Text"],
Cell[568748, 13795, 136, 3, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[568921, 13803, 33, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[568979, 13807, 40, 0, 68, "Subsection"],
Cell[569022, 13809, 756, 19, 93, "Text"],
Cell[569781, 13830, 569, 15, 93, "Text"],
Cell[570353, 13847, 345, 9, 67, "Text"],
Cell[570701, 13858, 278, 8, 41, "Text"],
Cell[570982, 13868, 369, 9, 67, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[571388, 13882, 39, 0, 68, "Subsection"],
Cell[571430, 13884, 852, 13, 146, "Text"],
Cell[572285, 13899, 2918, 79, 333, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[575240, 13983, 30, 0, 68, "Subsection"],
Cell[575273, 13985, 623, 16, 94, "Text"],
Cell[575899, 14003, 119, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[576043, 14010, 45, 1, 73, "Input"],
Cell[576091, 14013, 56, 1, 59, "Output"]
}, Closed]],
Cell[576162, 14017, 600, 18, 69, "Text"],

Cell[CellGroupData[{
Cell[576787, 14039, 38, 1, 73, "Input"],
Cell[576828, 14042, 35, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[576900, 14048, 39, 1, 73, "Input"],
Cell[576942, 14051, 63, 1, 34, "Print",
  CellTags->"Info3282055793-8746166"],
Cell[577008, 14054, 423, 13, 35, "Print",
  CellTags->"Info3282055793-8746166"]
}, Closed]],
Cell[577446, 14070, 171, 5, 42, "Text"],

Cell[CellGroupData[{
Cell[577642, 14079, 43, 1, 73, "Input"],
Cell[577688, 14082, 43, 1, 59, "Output"]
}, Closed]],
Cell[577746, 14086, 304, 8, 42, "Text"],

Cell[CellGroupData[{
Cell[578075, 14098, 54, 1, 73, "Input"],
Cell[578132, 14101, 43, 1, 59, "Output"]
}, Closed]],
Cell[578190, 14105, 148, 3, 41, "Text"],
Cell[578341, 14110, 410, 10, 68, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[578788, 14125, 39, 0, 68, "Subsection"],
Cell[578830, 14127, 595, 12, 95, "Text"],
Cell[579428, 14141, 140, 2, 99, "Input"],
Cell[579571, 14145, 278, 7, 67, "Text"],

Cell[CellGroupData[{
Cell[579874, 14156, 45, 1, 73, "Input"],
Cell[579922, 14159, 149, 2, 59, "Output"]
}, Closed]],
Cell[580086, 14164, 472, 15, 69, "Text"],
Cell[580561, 14181, 218, 4, 67, "Text"],

Cell[CellGroupData[{
Cell[580804, 14189, 71, 1, 73, "Input"],
Cell[580878, 14192, 28371, 658, 458, "Print"]
}, Closed]],
Cell[609264, 14853, 95, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[609384, 14859, 50, 1, 73, "Input"],
Cell[609437, 14862, 433, 10, 60, "Print",
  CellTags->"Info3348236975-8449943"],
Cell[609873, 14874, 479, 13, 36, "Print",
  CellTags->"Info3348236975-8449943"]
}, Closed]],
Cell[610367, 14890, 374, 10, 68, "Text"],

Cell[CellGroupData[{
Cell[610766, 14904, 64, 1, 73, "Input"],
Cell[610833, 14907, 222, 6, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[611092, 14918, 43, 1, 73, "Input"],
Cell[611138, 14921, 112, 2, 35, "Print",
  CellTags->"Info3348236985-5425450"]
}, Closed]],

Cell[CellGroupData[{
Cell[611287, 14928, 61, 1, 73, "Input"],
Cell[611351, 14931, 70, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[611458, 14937, 87, 1, 73, "Input"],
Cell[611548, 14940, 79, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[611664, 14946, 110, 2, 73, "Input"],
Cell[611777, 14950, 77, 1, 59, "Output"]
}, Closed]],
Cell[611869, 14954, 686, 26, 83, "Exercise"],
Cell[612558, 14982, 43, 0, 58, "Exercise"],
Cell[612604, 14984, 229, 4, 83, "Exercise"],
Cell[612836, 14990, 77, 0, 58, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[612950, 14995, 38, 0, 68, "Subsection"],
Cell[612991, 14997, 536, 13, 68, "Text"],
Cell[613530, 15012, 81, 1, 73, "Input"],

Cell[CellGroupData[{
Cell[613636, 15017, 46, 1, 73, "Input"],
Cell[613685, 15020, 70, 1, 34, "Print",
  CellTags->"Info3348237007-4808778"]
}, Closed]],
Cell[613770, 15024, 149, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[613944, 15031, 64, 1, 73, "Input"],
Cell[614011, 15034, 466, 7, 60, "Message"]
}, Closed]],
Cell[614492, 15044, 440, 13, 67, "Text"],

Cell[CellGroupData[{
Cell[614957, 15061, 110, 2, 73, "Input"],
Cell[615070, 15065, 42172, 624, 444, 1636, 119, "GraphicsData", "PostScript", \
"Graphics"]
}, Closed]],
Cell[657257, 15692, 237, 6, 42, "Text"],
Cell[657497, 15700, 49, 1, 73, "Input"],
Cell[657549, 15703, 378, 8, 67, "Text"],

Cell[CellGroupData[{
Cell[657952, 15715, 221, 4, 99, "Input"],
Cell[658176, 15721, 63235, 1039, 444, 8325, 356, "GraphicsData", \
"PostScript", "Graphics"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[721460, 16766, 37, 0, 68, "Subsection"],
Cell[721500, 16768, 489, 12, 69, "Text"],

Cell[CellGroupData[{
Cell[722014, 16784, 45, 1, 73, "Input"],
Cell[722062, 16787, 462, 11, 60, "Print",
  CellTags->"Info3348235503-9017593"]
}, Closed]],
Cell[722539, 16801, 244, 4, 67, "Text"],
Cell[722786, 16807, 81, 1, 73, "Input"],
Cell[722870, 16810, 244, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[723139, 16820, 45, 1, 73, "Input"],
Cell[723187, 16823, 13289, 315, 360, "Print"]
}, Closed]],
Cell[736491, 17141, 780, 16, 121, "Text"],
Cell[737274, 17159, 57, 1, 73, "Input"],
Cell[737334, 17162, 304, 7, 67, "Text"],

Cell[CellGroupData[{
Cell[737663, 17173, 45, 1, 73, "Input"],
Cell[737711, 17176, 23112, 550, 642, "Print"]
}, Closed]],
Cell[760838, 17729, 251, 8, 42, "Text"],
Cell[761092, 17739, 114, 3, 58, "Exercise"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[761255, 17748, 33, 0, 54, "ExerciseMain"],

Cell[CellGroupData[{
Cell[761313, 17752, 37, 0, 58, "ExerciseTitle"],
Cell[761353, 17754, 440, 7, 93, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[761830, 17766, 40, 0, 58, "ExerciseTitle"],
Cell[761873, 17768, 436, 7, 93, "ExerciseText"],
Cell[762312, 17777, 72, 0, 41, "ExerciseText"],
Cell[762387, 17779, 66, 0, 41, "ExerciseText"],
Cell[762456, 17781, 197, 5, 41, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[762690, 17791, 40, 0, 58, "ExerciseTitle"],
Cell[762733, 17793, 709, 14, 119, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[763479, 17812, 51, 0, 58, "ExerciseTitle"],
Cell[763533, 17814, 283, 7, 67, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[763853, 17826, 44, 0, 58, "ExerciseTitle"],
Cell[763900, 17828, 618, 21, 69, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[764555, 17854, 52, 0, 58, "ExerciseTitle"],
Cell[764610, 17856, 257, 8, 41, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[764904, 17869, 37, 0, 58, "ExerciseTitle"],
Cell[764944, 17871, 1055, 40, 67, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[766036, 17916, 40, 0, 58, "ExerciseTitle"],
Cell[766079, 17918, 313, 7, 67, "ExerciseText"],
Cell[766395, 17927, 316, 9, 46, "ExerciseText"],
Cell[766714, 17938, 32068, 679, 317, 9768, 399, "GraphicsData", "PostScript", \
"NumberedFigure"],
Cell[798785, 18619, 170, 3, 41, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[798992, 18627, 30, 0, 58, "ExerciseTitle"],
Cell[799025, 18629, 514, 13, 67, "ExerciseText"],
Cell[799542, 18644, 347, 9, 68, "ExerciseText"],
Cell[799892, 18655, 259, 6, 42, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[800188, 18666, 122, 4, 62, "ExerciseTitle"],
Cell[800313, 18672, 249, 6, 41, "ExerciseText"],
Cell[800565, 18680, 216, 8, 42, "ExerciseText"],
Cell[800784, 18690, 957, 27, 99, "ExerciseText"],
Cell[801744, 18719, 194, 5, 41, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[801975, 18729, 50, 0, 58, "ExerciseTitle"],
Cell[802028, 18731, 666, 20, 133, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[802731, 18756, 45, 0, 58, "ExerciseTitle"],
Cell[802779, 18758, 298, 7, 68, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[803114, 18770, 38, 0, 58, "ExerciseTitle"],
Cell[803155, 18772, 943, 16, 146, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[804135, 18793, 42, 0, 58, "ExerciseTitle"],
Cell[804180, 18795, 271, 5, 67, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[804488, 18805, 42, 0, 58, "ExerciseTitle"],
Cell[804533, 18807, 819, 27, 67, "ExerciseText"],
Cell[805355, 18836, 280, 9, 42, "ExerciseText"],
Cell[805638, 18847, 173, 3, 41, "ExerciseText"],
Cell[805814, 18852, 158, 3, 41, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[806009, 18860, 64, 0, 58, "ExerciseTitle"],
Cell[806076, 18862, 726, 21, 71, "ExerciseText"],
Cell[806805, 18885, 576, 16, 69, "ExerciseText"],
Cell[807384, 18903, 213, 6, 41, "ExerciseText"],
Cell[807600, 18911, 621, 20, 68, "ExerciseText"],
Cell[808224, 18933, 356, 9, 68, "ExerciseText"],
Cell[808583, 18944, 364, 8, 68, "ExerciseText"],
Cell[808950, 18954, 105, 2, 41, "ExerciseText"],
Cell[809058, 18958, 36821, 806, 279, 5442, 414, "GraphicsData", "PostScript", \
"Graphics"]
}, Closed]],

Cell[CellGroupData[{
Cell[845916, 19769, 99, 2, 58, "ExerciseTitle"],
Cell[846018, 19773, 119, 3, 41, "ExerciseText"],
Cell[846140, 19778, 281, 11, 45, "ExerciseText"],
Cell[846424, 19791, 228, 8, 41, "ExerciseText"],
Cell[846655, 19801, 600, 20, 72, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[847292, 19826, 131, 5, 59, "ExerciseTitle"],
Cell[847426, 19833, 488, 9, 93, "ExerciseText"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

