(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    150342,       4294]*)
(*NotebookOutlinePosition[    184896,       5535]*)
(*  CellTagsIndexPosition[    184723,       5527]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["Expressions", "Title",
  TextAlignment->Center,
  TextJustification->0],

Cell[TextData[{
  "from ",
  StyleBox[ButtonBox["Essential Mathematica for Students of Science",
    Active->False,
    ButtonData:>{
      URL[ 
      "http://www.physics.umd.edu/courses/CourseWare/EssentialMathematica/"], 
      None},
    Active->False,
    ButtonStyle->"Hyperlink"],
    Active->False],
  "\n\[Copyright] James J. Kelly, 1998\nLast revised: January, 2006"
}], "Author",
  Active->True,
  TextAlignment->Center,
  TextJustification->0],

Cell[CellGroupData[{

Cell["Initialization", "Section"],

Cell[BoxData[{
    \(\(ClearAll["\<Global`*\>"];\)\), "\n", 
    \(Off[General::spell, \ General::spell1]\)}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["The machine behind the curtain", "Section"],

Cell[CellGroupData[{

Cell["Introduction", "Subsection"],

Cell["\<\
Although there is often little reason to look too closely, sometimes we need \
to see the machine behind the curtain to understand the results of apparently \
simple operations which seem to go awry.  For example, if we try to simplify \
expressions involving only positive numbers using the elementary \
transformation\
\>", "Text"],

Cell[BoxData[
    \(\(myrule = Sqrt[x_\^2] \[Rule] x;\)\)], "Input"],

Cell["\<\
we might be puzzled by the failure of this rule to give the obvious answer \
for this expression: \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(f = 1/Sqrt[a\^2];\)\), "\n", 
    \(f /. myrule\)}], "Input"],

Cell[BoxData[
    \(1\/\@a\^2\)], "Output"]
}, Closed]],

Cell[TextData[{
  "We will return to this problem shortly and learn how to design rules which \
operate properly, but first we need to understand how ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " represents and manipulates expressions at a more basic level."
}], "Text"],

Cell[TextData[{
  "Every ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " statement, command, result, object, or symbol is an expression.  An \
expression can either be atomic (indivisible) or composite in nature.  Often \
the key to understanding what ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " does with an expression is to understand its internal representation for \
various types of expressions.  The front end hides the internal \
representation, offering instead representations that are generally more \
palatable to the human mind \[LongDash] the front end tries to tell you what \
it thinks you want to hear, but the underlying expression is all the kernel \
really knows about.  Several tools are available for displaying expressions \
either in their internal forms or some intermediate form."
}], "Text"],

Cell[TextData[{
  "The true nature of expressions is revealed using ",
  ButtonBox["FullForm",
    ButtonStyle->"RefGuideLink"],
  ".  Using this function, we find that even a simple expression like ",
  Cell[BoxData[
      \(TraditionalForm\`a + b\)]],
  " is really an expression of the form ",
  StyleBox["Plus[a,b]", "InlineInput"],
  ".  "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[a + b]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Plus[a, b]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "Below we examine the structure of expressions as implemented by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  "."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Heads", "Subsection"],

Cell[TextData[{
  "The basic syntax for an expression takes the form ",
  StyleBox["f[stuff]", "InlineInput"],
  " where ",
  StyleBox["f", "InlineInput"],
  " is the ",
  StyleBox["head",
    FontSlant->"Italic"],
  " of the expression, identifying its type, and ",
  StyleBox["stuff", "InlineInput"],
  " is its contents.  Thus, to ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " all expressions look like functions or, equivalently, all functions look \
like expressions.  The consistency of the internal representation is largely \
responsible for the power of the language, with its flexibility arising from \
the variety of heads that are available.  "
}], "Text"],

Cell[TextData[{
  "Here ",
  StyleBox["Plus", "InlineInput"],
  " is the head of ",
  Cell[BoxData[
      \(TraditionalForm\`a + b\)]],
  " and is a symbol that represents the built-in addition function.  We can \
obtain the head of an expression using ",
  ButtonBox["Head",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[expr]", "InlineInput"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Head[a + b]\)], "Input"],

Cell[BoxData[
    \(Plus\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Head[Plus]\)], "Input"],

Cell[BoxData[
    \(Symbol\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Although ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " contains built-in functions ",
  StyleBox["Subtract", "InlineInput"],
  ", ",
  StyleBox["Divide", "InlineInput"],
  ", and ",
  StyleBox["Sqrt", "InlineInput"],
  " which are convenient for input, those functions are considered redundant \
and are translated into more general forms based upon ",
  StyleBox["Plus", "InlineInput"],
  ", ",
  StyleBox["Times", "InlineInput"],
  ", and ",
  StyleBox["Power", "InlineInput"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[Subtract[a, b]]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Plus[a, Times[\(-1\), b]]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[Divide[a, b]]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Times[a, Power[b, \(-1\)]]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[Sqrt[a]]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Power[a, Rational[1, 2]]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "Replacement rules are vital components of ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " and are represented internally as"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[a \[Rule] b]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Rule[a, b]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell["\<\
To examine the internal representation of some expressions you need to \
intercept them before normal evaluation alters them.  For example, the \
expression \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[f];\)\), "\n", 
    \(FullForm[\ f[a]\  /. a \[Rule] b\ ]\)}], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(f[b]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "is evaluated before we can look at it closely.  At better view is obtained \
by using  ",
  ButtonBox["Hold",
    ButtonStyle->"RefGuideLink"],
  StyleBox["[expr]", "InlineInput"],
  " to display an expression without evaluation."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(expr\  = FullForm[Hold[\ f[a]\  /. a \[Rule] b\ ]\ ]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Hold[ReplaceAll[f[a], Rule[a, b]]]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "Evidently, the operator ",
  StyleBox["/.", "InlineInput"],
  " is translated as ",
  StyleBox["ReplaceAll", "InlineInput"],
  " with the expression to its left becoming the first argument and the \
expression to its right the second.  Having named the result above, we can \
release the hold using ",
  ButtonBox["ReleaseHold",
    ButtonStyle->"RefGuideLink"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ReleaseHold[expr]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(f[b]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[TextData[{
  ButtonBox["HoldForm",
    ButtonStyle->"RefGuideLink"],
  " performs a similar function, but its head does not print in standard \
output form"
}], "Text",
  FontWeight->"Plain"],

Cell[CellGroupData[{

Cell[BoxData[
    \(1 + 1\)], "Input"],

Cell[BoxData[
    \(2\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Hold[1 + 1]\)], "Input"],

Cell[BoxData[
    \(Hold[1 + 1]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(HoldForm[1 + 1]\)], "Input"],

Cell[BoxData[
    TagBox[\(1 + 1\),
      HoldForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "This can be useful when we wish to present expressions in \"natural \
order\" rather than in the order used by ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  ".  For example, ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " rearranges  "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(a\ x\^2 + b\ x\  + \ c\)], "Input"],

Cell[BoxData[
    \(c + b\ x + a\ x\^2\)], "Output"]
}, Closed]],

Cell["but we might prefer to present the original order", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(HoldForm[a\ x\^2 + b\ x\  + \ c]\)], "Input"],

Cell[BoxData[
    TagBox[\(a\ x\^2 + b\ x + c\),
      HoldForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "For the following exercises, predict the result by hand that you will \
obtain from ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " before executing ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " commands.  If your predictions are not accurate, be sure to understand \
the differences before proceeding to the next section."
}], "Text",
  Background->RGBColor[1, 1, 0]],

Cell[TextData[{
  "Determine the internal representations of: \na) a - 2b\tb) a/b\t\tc) ",
  Cell[BoxData[
      \(TraditionalForm\`\@a\)]],
  "\t\td) ",
  Cell[BoxData[
      \(TraditionalForm\`\@a\^2\)]],
  "\te) a\[Equal]b\[Equal]c"
}], "Exercise"],

Cell[TextData[{
  "Determine the full form of the equation ",
  Cell[BoxData[
      \(TraditionalForm\`\@\(x\^2 - 4\) \[Equal] \ \@\(x + 1\)\)]],
  "."
}], "Exercise"],

Cell["\<\
Determine the internal representations of: 
a) a_\t\tb) a__\t\tc) a___\td) a..\t\te) {{_,_}..}\tf) a:b\
\>", "Exercise"],

Cell["\<\
Determine the heads of the following expressions:
a) a_\t\tb) a\[Equal]b\tc) _?x\t\td) a:b\
\>", "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Atoms", "Subsection"],

Cell[TextData[{
  "In Greek an atom is an indivisible object containing no parts, while in ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " an atom is an object containing raw data that carries a symbolic name \
identifying the data type.  Thus, a ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " integer is an atom with head ",
  StyleBox["Integer", "InlineInput"],
  " containing the machine representation of an integer. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Head[Symbol]\)], "Input"],

Cell[BoxData[
    \(Symbol\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Head[1]\)], "Input"],

Cell[BoxData[
    \(Integer\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Head[Integer]\)], "Input"],

Cell[BoxData[
    \(Symbol\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The atomic objects are ",
  StyleBox["Symbol", "InlineInput"],
  ", ",
  StyleBox["String", "InlineInput"],
  ", ",
  StyleBox["Integer", "InlineInput"],
  ", ",
  StyleBox["Real", "InlineInput"],
  ", ",
  StyleBox["Rational", "InlineInput"],
  ", and ",
  StyleBox["Complex", "InlineInput"],
  " and each contains raw data of the specified type.  The function ",
  ButtonBox["AtomQ",
    ButtonStyle->"RefGuideLink"],
  " tests the atomicity of an expression."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(AtomQ /@ {\[CapitalPsi], "\<blessed be the meek\>", \(-2\), \[Pi], 
        1\/3, 1 + I\ \[Pi]}\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \({True, True, True, True, True, False}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Why did the complex number at the end of this list fail the test of \
atomicity?  Use ",
  StyleBox["FullForm", "InlineInput"],
  " to look more closely at this expression."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[1 + I\ \[Pi]]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Plus[1, Times[Complex[0, 1], Pi]]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "This expression is not atomic because its head is ",
  StyleBox["Plus", "InlineInput"],
  ", not ",
  StyleBox["Complex", "InlineInput"],
  ".  In fact, ",
  StyleBox["Complex", "InlineInput"],
  " appears only where ",
  StyleBox["I", "InlineInput"],
  " is finally multiplied by ",
  StyleBox["Pi", "InlineInput"],
  ". "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \({FullForm[I], \ FullForm[Pi]}\)], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        TagBox[
          StyleBox[\(Complex[0, 1]\),
            ShowSpecialCharacters->False,
            ShowStringCharacters->True,
            NumberMarks->True],
          FullForm], ",", 
        TagBox[
          StyleBox["Pi",
            ShowSpecialCharacters->False,
            ShowStringCharacters->True,
            NumberMarks->True],
          FullForm]}], "}"}]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \({Head[I], Head[Pi]}\)], "Input"],

Cell[BoxData[
    \({Complex, Symbol}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The internal representation of the unit complex number, ",
  StyleBox["I", "InlineInput"],
  ", leads to some subtleties for performing complex arithmetic using ",
  StyleBox["Mathematica.  ",
    FontSlant->"Italic"],
  "For details, please consult the notebook ",
  ButtonBox["complex.nb",
    ButtonData:>{"Additional topics/complex.nb", None},
    ButtonStyle->"Hyperlink"],
  ".  "
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Parts of expressions", "Subsection"],

Cell[TextData[{
  "The contents of nonatomic expressions can be extracted and manipulated \
using self-explanatory functions like ",
  ButtonBox["Part",
    ButtonStyle->"RefGuideLink"],
  ",  ",
  ButtonBox["First",
    ButtonStyle->"RefGuideLink"],
  ", ",
  ButtonBox["Head",
    ButtonStyle->"RefGuideLink"],
  ", ",
  ButtonBox["Last",
    ButtonStyle->"RefGuideLink"],
  ", ",
  ButtonBox["Extract",
    ButtonStyle->"RefGuideLink"],
  ", ",
  ButtonBox["Position",
    ButtonStyle->"RefGuideLink"],
  ", ",
  ButtonBox["ReplacePart",
    ButtonStyle->"RefGuideLink"],
  ", ",
  ButtonBox["MapAt",
    ButtonStyle->"RefGuideLink"],
  ", and ",
  ButtonBox["Take",
    ButtonStyle->"RefGuideLink"],
  ".  Many of these functions act on both expressions and lists in similar \
ways.  Rather than repeat detailed explanations of syntax available in the \
reference guide, a few simple examples should suffice."
}], "Text"],

Cell[BoxData[{
    \(\(Clear[a, b, c, x, f];\)\), "\n", 
    \(\(f\  = \ a\ x\^2 + \ b\ x\  + \ c;\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[f]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Plus[c, Times[b, x], Times[a, Power[x, 2]]]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Head[f]\)], "Input"],

Cell[BoxData[
    \(Plus\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Table[Part[f, n], {n, 0, 3}]\)], "Input"],

Cell[BoxData[
    \({Plus, c, b\ x, a\ x\^2}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \({First[f], Last[f]}\)], "Input"],

Cell[BoxData[
    \({c, a\ x\^2}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ counting\ from\ end\ *) \)\(\n\)\({Part[f, \(-1\)], 
      Part[f, \(-2\)]}\)\)\)], "Input"],

Cell[BoxData[
    \({a\ x\^2, b\ x}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[Part[f, 3]]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Times[a, Power[x, 2]]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ first\ and\ third\ parts*) \)\(\n\)\(Part[
      f, {1, 3}]\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(c + a\ x\^2\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Notice here that the head ",
  StyleBox["Plus", "InlineInput"],
  " is retained, so that the parts we selected are summed."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ second\ part\ of\ third\ part\ *) \)\(\n\)\(Part[f, 3, 
      2]\)\)\)], "Input"],

Cell[BoxData[
    \(x\^2\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ 
      complete\ addresses\ for\ occurrences\ of\ x\ *) \)\(\n\)\(Position[f, 
      x]\)\)\)], "Input"],

Cell[BoxData[
    \({{2, 2}, {3, 2, 1}}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The list above contains part specifications for each occurrence in a \
recursive form.  Thus, ",
  StyleBox["{3,2,1}", "InlineInput"],
  " indicates the first part of the second part of part 3."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(ReplacePart[f, "\<(x used to be here)\>", \ {3, 2, 1}]\)], "Input"],

Cell[BoxData[
    \("(x used to be here)"\^2\ a + c + b\ x\)], "Output"]
}, Closed]],

Cell["\<\
Parts of an expression can also be replaced by reassigning the value of a \
particular part.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f\)], "Input"],

Cell[BoxData[
    \(c + b\ x + a\ x\^2\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(f\[LeftDoubleBracket]2, 1\[RightDoubleBracket] = bnew; f\)], "Input"],

Cell[BoxData[
    \(c + bnew\ x + a\ x\^2\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Sometimes it is helpful to use ",
  ButtonBox["TreeForm",
    ButtonStyle->"RefGuideLink"],
  " to examine the structure of an expression.  For example, the following \
equation contains two main parts, the left-hand side and the right-hand side, \
each of which in turn contains a subpart with subsubparts."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(TreeForm[\@\(x\^2 - 4\) \[Equal] \@\(x + 1\)]\)], "Input"],

Cell[BoxData[
    InterpretationBox[
      RowBox[{"\<\"Equal\"\>", "[", 
        RowBox[{
          InterpretationBox[GridBox[{
                {"\<\"|\"\>"},
                {
                  RowBox[{"\<\"Power\"\>", "[", 
                    RowBox[{GridBox[{
                          {"\<\"|\"\>"},
                          {
                            RowBox[{"\<\"Plus\"\>", "[", 
                              RowBox[{\(-4\), ",", GridBox[{
                                    {"\<\"|\"\>"},
                                    {\("Power"[x, 2]\)}
                                    },
                                  GridBaseline->{Baseline, {1, 1}},
                                  ColumnAlignments->{Left}]}], "]"}]}
                          },
                        GridBaseline->{Baseline, {1, 1}},
                        ColumnAlignments->{Left}], ",", GridBox[{
                          {"\<\"|\"\>"},
                          {\("Rational"[1, 2]\)}
                          },
                        GridBaseline->{Baseline, {1, 1}},
                        ColumnAlignments->{Left}]}], "]"}]}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnAlignments->{Left}],
            ColumnForm[ {"|", 
              "Power"[ 
                ColumnForm[ {"|", 
                  "Plus"[ -4, 
                    ColumnForm[ {"|", 
                      "Power"[ x, 2]}]]}], 
                ColumnForm[ {"|", 
                  "Rational"[ 1, 2]}]]}],
            Editable->False], ",", 
          InterpretationBox[GridBox[{
                {"\<\"|\"\>"},
                {
                  RowBox[{"\<\"Power\"\>", "[", 
                    RowBox[{GridBox[{
                          {"\<\"|\"\>"},
                          {\("Plus"[1, x]\)}
                          },
                        GridBaseline->{Baseline, {1, 1}},
                        ColumnAlignments->{Left}], ",", GridBox[{
                          {"\<\"|\"\>"},
                          {\("Rational"[1, 2]\)}
                          },
                        GridBaseline->{Baseline, {1, 1}},
                        ColumnAlignments->{Left}]}], "]"}]}
                },
              GridBaseline->{Baseline, {1, 1}},
              ColumnAlignments->{Left}],
            ColumnForm[ {"|", 
              "Power"[ 
                ColumnForm[ {"|", 
                  "Plus"[ 1, x]}], 
                ColumnForm[ {"|", 
                  "Rational"[ 1, 2]}]]}],
            Editable->False]}], "]"}],
      TreeForm[ 
        Equal[ 
          Power[ 
            Plus[ -4, 
              Power[ x, 2]], 
            Rational[ 1, 2]], 
          Power[ 
            Plus[ 1, x], 
            Rational[ 1, 2]]]],
      Editable->False]], "Output"]
}, Closed]],

Cell[TextData[{
  "In using these functions, it is important to realize that ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " has its own scheme for ordering the parts of expressions and that scheme \
does not necessarily agree with your notions of natural ordering.  You must \
be careful when using part specifications because what you see is not \
necessarily what you'll get.  "
}], "Text"],

Cell[TextData[{
  "For the following exercises, predict the result by hand that you will \
obtain from ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " before executing ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " commands.  If your predictions are not accurate, be sure to understand \
the differences before proceeding to the next section."
}], "Text",
  Background->RGBColor[1, 1, 0]],

Cell[TextData[{
  "List all subexpressions in ",
  Cell[BoxData[
      \(TraditionalForm\`\[Integral]\_a\%b f[x] \[DifferentialD]x\)]],
  " with their position specifications.   What is the address of ",
  StyleBox["b",
    FontSlant->"Italic"],
  "?  In what positions does ",
  StyleBox["x",
    FontSlant->"Italic"],
  " occur? "
}], "Exercise"],

Cell[TextData[{
  "Use ReplacePart to replace the expressions under the square roots signs in \
the equation  ",
  Cell[BoxData[
      \(TraditionalForm\`\@\(x\^2 - 4\) == \ \@\(x + 1\)\)]],
  " by lhs and rhs."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Attributes", "Subsection"],

Cell[TextData[{
  "Symbols have ",
  ButtonBox["Attributes",
    ButtonStyle->"RefGuideLink"],
  " which govern their behavior.  Atomic data types are all ",
  StyleBox["Protected", "InlineInput"],
  ", which prevents their values from being changed (you can't change \[Pi] \
to 3.14 anywhere outside Tennessee!).  In addition, symbols can be ",
  StyleBox["Locked", "InlineInput"],
  " to prevent their attributes from being changed."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Attributes /@ {Symbol, String, Integer, Rational, Real, 
        Complex}\)], "Input"],

Cell[BoxData[
    \({{Locked, 
        Protected}, {Protected}, {Protected}, {Protected}, {Protected}, \
{Protected}}\)], "Output"]
}, Closed]],

Cell["Common arithmetic functions have additional attributes.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Attributes /@ {Plus, Times, Power}\)], "Input"],

Cell[BoxData[
    \({{Flat, Listable, NumericFunction, OneIdentity, Orderless, 
        Protected}, {Flat, Listable, NumericFunction, OneIdentity, Orderless, 
        Protected}, {Listable, NumericFunction, OneIdentity, 
        Protected}}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "For a complete list of attributes please refer to the reference guide or \
to ",
  ButtonBox["Section 2.6.3",
    ButtonData:>{"2.6.3", "3.11"},
    ButtonStyle->"MainBookLink"],
  ".  For our purposes, some of the most important attributes are:"
}], "Text"],

Cell[TextData[{
  StyleBox["Orderless", "InlineInput"],
  " confers the commutative property by ensuring that the order of arguments \
is immaterial, such that ",
  StyleBox["f[a,b]=f[b,a]", "InlineInput",
    FontWeight->"Bold"],
  ".  For example, ",
  StyleBox["Plus[a,b]=Plus[b,a]", "InlineInput"],
  "."
}], "Text"],

Cell[TextData[{
  StyleBox["Flat", "InlineInput"],
  " confers the associative property by flattening arguments such that ",
  StyleBox["f[a,f[b]]=f[a,b]", "InlineInput"],
  ".  Thus, ",
  StyleBox["Plus[a,Plus[b,c]]=Plus[a,b,c]", "InlineInput"],
  " and ",
  StyleBox["Times[a,Times[b,c]]=Times[a,b,c]", "InlineInput"],
  "."
}], "Text"],

Cell[TextData[{
  StyleBox["OneIdentity", "InlineInput"],
  StyleBox[" ensures that ",
    FontWeight->"Plain"],
  Cell[BoxData[
      \(TraditionalForm\`f[f[a]]\)]],
  " matches ",
  Cell[BoxData[
      \(TraditionalForm\`f[a]\)]],
  ".  This attribute is needed for functions like ",
  StyleBox["Plus", "InlineInput"],
  " or ",
  StyleBox["Times", "InlineInput"],
  " so that ",
  StyleBox["Plus[a]=a", "InlineInput"],
  " and ",
  StyleBox["Times[a]=a", "InlineInput"],
  "."
}], "Text"],

Cell[TextData[{
  StyleBox["Listable", "InlineInput"],
  " indicates that a function is automatically \"threaded\" over lists; in \
other words, that a listable function given a list of its argument returns a \
list of evaluations for each input element.  Many ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " functions are listable.  Functions that you write using listable \
functions will often behave listably even without explicitly conferring that \
attribute."
}], "Text"],

Cell[BoxData[{
    \(\(Clear[f];\)\), "\[IndentingNewLine]", 
    \(f[x_] := Sin[x]\/x\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[{1, 2, 3, 4, 5}]\)], "Input"],

Cell[BoxData[
    \({Sin[1], Sin[2]\/2, Sin[3]\/3, Sin[4]\/4, Sin[5]\/5}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Another important attribute is ",
  StyleBox["Constant", "InlineInput"],
  ", meaning that all derivatives vanish.  Thus, when evaluating a total \
differential"
}], "Text"],

Cell[BoxData[{
    \(\(Clear[a, m, x, y, z];\)\), "\n", 
    \(\(a = \(\(\(\ \)\(\[HBar]\^2\)\)\/\(2\ m\)\) \[Psi][x, y, 
            z];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Dt[a]\)], "Input"],

Cell[BoxData[
    RowBox[{\(-\(\(\[HBar]\^2\ Dt[m]\ \[Psi][x, y, z]\)\/\(2\ m\^2\)\)\), 
      "+", \(\(\[HBar]\ Dt[\[HBar]]\ \[Psi][x, y, z]\)\/m\), "+", 
      FractionBox[
        RowBox[{\(\[HBar]\^2\), " ", 
          RowBox[{"(", 
            RowBox[{
              RowBox[{\(Dt[z]\), " ", 
                RowBox[{
                  SuperscriptBox["\[Psi]", 
                    TagBox[\((0, 0, 1)\),
                      Derivative],
                    MultilineFunction->None], "[", \(x, y, z\), "]"}]}], "+", 
              
              RowBox[{\(Dt[y]\), " ", 
                RowBox[{
                  SuperscriptBox["\[Psi]", 
                    TagBox[\((0, 1, 0)\),
                      Derivative],
                    MultilineFunction->None], "[", \(x, y, z\), "]"}]}], "+", 
              
              RowBox[{\(Dt[x]\), " ", 
                RowBox[{
                  SuperscriptBox["\[Psi]", 
                    TagBox[\((1, 0, 0)\),
                      Derivative],
                    MultilineFunction->None], "[", \(x, y, z\), "]"}]}]}], 
            ")"}]}], \(2\ m\)]}]], "Output"]
}, Closed]],

Cell[TextData[{
  "we might like to declare Planck's constant and the mass to be constant \
using ",
  ButtonBox["SetAttributes",
    ButtonStyle->"RefGuideLink"],
  "."
}], "Text"],

Cell[BoxData[
    \(\(SetAttributes[{\[HBar], m}, Constant];\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Dt[a]\)], "Input"],

Cell[BoxData[
    FractionBox[
      RowBox[{\(\[HBar]\^2\), " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{\(Dt[z]\), " ", 
              RowBox[{
                SuperscriptBox["\[Psi]", 
                  TagBox[\((0, 0, 1)\),
                    Derivative],
                  MultilineFunction->None], "[", \(x, y, z\), "]"}]}], "+", 
            RowBox[{\(Dt[y]\), " ", 
              RowBox[{
                SuperscriptBox["\[Psi]", 
                  TagBox[\((0, 1, 0)\),
                    Derivative],
                  MultilineFunction->None], "[", \(x, y, z\), "]"}]}], "+", 
            RowBox[{\(Dt[x]\), " ", 
              RowBox[{
                SuperscriptBox["\[Psi]", 
                  TagBox[\((1, 0, 0)\),
                    Derivative],
                  MultilineFunction->None], "[", \(x, y, z\), "]"}]}]}], 
          ")"}]}], \(2\ m\)]], "Output"]
}, Closed]],

Cell[TextData[{
  "Later, when we clear values and definitions associated with ",
  StyleBox["m", "InlineInput"]
}], "Text"],

Cell[BoxData[
    \(Clear[m]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?m\)\)], "Input"],

Cell["Global`m", "Print",
  CellTags->"Info3312794248-6681477"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {\(Attributes[m] = {Constant}\)}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      Definition[ "m"],
      Editable->False]], "Print",
  CellTags->"Info3312794248-6681477"]
}, Closed]],

Cell[TextData[{
  "we should be aware that ",
  ButtonBox["Clear",
    ButtonStyle->"RefGuideLink"],
  " does not alter the attributes of a symbol.  To make a clean sweep of \
values and attributes, we must use ",
  ButtonBox["ClearAll",
    ButtonStyle->"RefGuideLink"],
  "."
}], "Text"],

Cell[BoxData[
    \(ClearAll[m]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?m\)\)], "Input"],

Cell["Global`m", "Print",
  CellTags->"Info3312794258-1534319"]
}, Closed]],

Cell[TextData[{
  "When we define our own functions, we may need to consider the appropriate \
attributes to bestow upon them.  Note that attributes should be chosen before \
definitions are given.  In the following example we create a noncommutative \
multiplication function using the ",
  StyleBox["\[CircleTimes]", "InlineInput"],
  " operator."
}], "Text"],

Cell[BoxData[{
    \(\(ClearAll[f, a, b];\)\), "\[IndentingNewLine]", 
    \(\(SetAttributes[
        f, {Listable, OneIdentity, Flat}];\)\), "\[IndentingNewLine]", 
    \(\(f[a_, b_] := a\[CircleTimes]b;\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[a, b]\)], "Input"],

Cell[BoxData[
    \(a\[CircleTimes]b\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[a, b, c]\)], "Input"],

Cell[BoxData[
    \(a\[CircleTimes]\((b\[CircleTimes]c)\)\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[c, f[a, b]]\)], "Input"],

Cell[BoxData[
    \(c\[CircleTimes]\((a\[CircleTimes]b)\)\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[a, {b, c, d}]\)], "Input"],

Cell[BoxData[
    \({a\[CircleTimes]b, a\[CircleTimes]c, a\[CircleTimes]d}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[{a, b}, {c, d}]\)], "Input"],

Cell[BoxData[
    \({a\[CircleTimes]c, b\[CircleTimes]d}\)], "Output"]
}, Closed]],

Cell["\<\
Generalize the example above to ensure that f[a, 2b]\[Rule]2a\[CircleTimes]b \
and f[a+b,c]\[Rule]a\[CircleTimes]c+b\[CircleTimes]c.  Supply definitions and \
test other reasonable variations of this noncommutative function.  [Hint: you \
might find Trace helpful in interpreting the evaluation procedure.]\
\>", "Exercise"],

Cell["\<\
Explain the output for the following expressions.   [Be sure to clear a,b,c \
first.]
a) Dot[a,b]==Dot[b,a]
b) Dot[Dot[a,b],c]
c) Dot[Dot[a,b],c]==Dot[a,Dot[b,c]]\
\>", "Exercise"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Swapping heads", "Section"],

Cell[TextData[{
  "Just like the colloquialism \"I swapped my head\", meaning \"I changed my \
mind\", ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " heads can be changed.  Suppose that I have a list of numbers"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(a\  = \ {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\)\), "\n", 
    \(Head[a]\)}], "Input"],

Cell[BoxData[
    \(List\)], "Output"]
}, Closed]],

Cell[TextData[{
  "and later want the sum of those numbers.  That is easily accomplished by \
replacing the head ",
  StyleBox["List", "InlineInput"],
  " with the head ",
  StyleBox["Plus", "InlineInput"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(a /. List \[Rule] Plus\)], "Input"],

Cell[BoxData[
    \(55\)], "Output"]
}, Closed]],

Cell[TextData[{
  "However, if an expression contains several occurrences of the head to be \
changed, the ",
  StyleBox["ReplaceAll", "InlineInput"],
  " operator ",
  StyleBox["/.", "InlineInput"],
  " may be too powerful because it acts at all levels while we may want to \
change only the top level.  The next example includes a function which takes \
a list as its argument \[LongDash] we probably would not want to replace its \
argument when forming the sum of these elements."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \({3, \[Eta][{b, c, d}], \ \(-7\), \ f + g}\  /. 
      List \[Rule] Plus\)], "Input"],

Cell[BoxData[
    \(\(-4\) + f + g + \[Eta][b + c + d]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "A better way to transform a ",
  StyleBox["List", "InlineInput"],
  " into a function of its elements is provided by the function ",
  StyleBox[ButtonBox["Apply",
    ButtonStyle->"RefGuideLink"],
    FontWeight->"Bold"],
  StyleBox["[f,list]", "InlineInput"],
  ", also represented by the operator notation ",
  StyleBox["f@@list", "InlineInput"],
  ", which has the effect of replacing ",
  StyleBox["List", "InlineInput"],
  " by ",
  StyleBox["f", "InlineInput"],
  " at the top level only."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Apply[Plus, a]\)], "Input"],

Cell[BoxData[
    \(55\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Plus @@ a\)], "Input"],

Cell[BoxData[
    \(55\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(Plus @@ {3, \[Eta][{b, c, d}], \ \(-7\), \ 
        f + g}\)\(\ \)\)\)], "Input"],

Cell[BoxData[
    \(\(-4\) + f + g + \[Eta][{b, c, d}]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(somefunction @@ a\)], "Input"],

Cell[BoxData[
    \(somefunction[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\)], "Output"]
}, Closed]],

Cell["Another head replacement transforms a rule into an equation.", "Text"],

Cell[BoxData[{
    \(\(Clear[x, y, f];\)\), "\n", 
    \(\(rule1\  = \ y \[Rule] f[x];\)\)}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(rule1 /. Rule \[Rule] Equal\)], "Input"],

Cell[BoxData[
    \(y \[Equal] f[x]\)], "Output"]
}, Closed]],

Cell["\<\
Generate a list of 10 random numbers using Random.  Find the sum and product \
those numbers by swapping heads.\
\>", "Exercise"],

Cell[TextData[{
  "Evaluate ",
  Cell[BoxData[
      \(TraditionalForm\`\[Sum]\+\(n = 1\)\%50 1\/\((2  n + 1)\)\^2\)]],
  " using Apply, Range, and listability of arithmetic functions; use Sum only \
to check afterward."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Manipulating equations", "Section"],

Cell[CellGroupData[{

Cell["Using Thread and Map", "Subsection"],

Cell["Consider the generic equation", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(eq1\  = \ lhs\  \[Equal] \ rhs\)], "Input"],

Cell[BoxData[
    \(lhs \[Equal] rhs\)], "Output"]
}, Closed]],

Cell["\<\
Suppose that we wish to square both sides.  Unfortunately, the obvious method\
\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(eq1\^2\)], "Input"],

Cell[BoxData[
    \(\((lhs \[Equal] rhs)\)\^2\)], "Output"]
}, Closed]],

Cell["\<\
does not work because it simply squares an expression without regard to its \
meaning.  There are several methods for performing such operations that \
depend upon understanding the internal representation of expressions of this \
type.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[eq1]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Equal[lhs, rhs]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[eq1\^2]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Power[Equal[lhs, rhs], 2]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "The problem arises because ",
  StyleBox["Power", "InlineInput"],
  " is wrapped around the entire expression for ",
  StyleBox["eq1", "InlineInput"],
  " rather than the two subexpressions that are found as arguments of ",
  StyleBox["Equal", "InlineInput"],
  ".  We can instruct ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " to \"thread\" a function through a head and apply it to the \
subexpressions at the next level using the function ",
  ButtonBox["Thread",
    ButtonStyle->"RefGuideLink"],
  ".  The syntax ",
  StyleBox["Thread[f[args],head]", "InlineInput"],
  " is used to thread the function ",
  StyleBox["f", "InlineInput"],
  " through any ",
  StyleBox["head", "InlineInput"],
  " that appears in the arguments ",
  StyleBox["args", "InlineInput"],
  " of ",
  StyleBox["f", "InlineInput"],
  StyleBox[".  ",
    FontSlant->"Italic"],
  "Since the default value of the second argument is ",
  StyleBox["List", "InlineInput"],
  ", we can omit the second argument when using ",
  StyleBox["Thread", "InlineInput"],
  " to access the elements of a list.  We can express the desired function \
either as a pure function in skeletal notation (see ",
  ButtonBox["functions.nb",
    ButtonData:>{"Primary topics/functions.nb", None},
    ButtonStyle->"Hyperlink"],
  " for explanation of this technique)"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Thread[\(#\^2 &\)\ @eq1, Equal]\)], "Input"],

Cell[BoxData[
    \(lhs\^2 \[Equal] rhs\^2\)], "Output"]
}, Closed]],

Cell["or as an explicit function", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Thread[Power[eq1, 2], Equal]\)], "Input"],

Cell[BoxData[
    \(lhs\^2 \[Equal] rhs\^2\)], "Output"]
}, Closed]],

Cell["or in a short-hand notation", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Thread[eq1\^2, Equal]\)], "Input"],

Cell[BoxData[
    \(lhs\^2 \[Equal] rhs\^2\)], "Output"]
}, Closed]],

Cell["Similarly, suppose that we have two lists of the same length", "Text"],

Cell[BoxData[{
    \(\(list1\  = \ {lhs1, lhs2, lhs3};\)\), "\n", 
    \(\(list2\  = \ {rhs1, rhs2, rhs3};\)\)}], "Input"],

Cell["\<\
and wish to create a system of equations from the elements of each list.  \
Although\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(list1 \[Equal] list2\)], "Input"],

Cell[BoxData[
    \({lhs1, lhs2, lhs3} \[Equal] {rhs1, rhs2, rhs3}\)], "Output"]
}, Closed]],

Cell["does not work, ", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Thread[list1 \[Equal] list2]\)], "Input"],

Cell[BoxData[
    \({lhs1 \[Equal] rhs1, lhs2 \[Equal] rhs2, 
      lhs3 \[Equal] rhs3}\)], "Output"]
}, Closed]],

Cell["does.", "Text"],

Cell[TextData[{
  "Closely related is ",
  ButtonBox["Map",
    ButtonStyle->"RefGuideLink"],
  ", with convenient operator notation ",
  StyleBox["/@", "InlineInput"],
  ", which maps a function onto subexpressions.  In the form ",
  StyleBox["f/@expr", "InlineInput"],
  " or ",
  StyleBox["Map[f,expr]", "InlineInput"],
  " the function ",
  StyleBox["f", "InlineInput"],
  " is applied to each subexpression at the first level of ",
  StyleBox["expr", "InlineInput"],
  ".  Thus, we can square both sides of an equation using the compact, but \
punctuation infested, statement"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(#\^2 &\) /@ \ eq1\)], "Input"],

Cell[BoxData[
    \(lhs\^2 \[Equal] rhs\^2\)], "Output"]
}, Closed]],

Cell["\<\
Write compact statements for: 
a) adding the same quantity to both sides of an equation, 
b) exponentiating both sides, 
c) applying an arbitrary function f to both sides.\
\>", "Exercise"],

Cell[TextData[{
  "Use Map and head swapping to transform an equation of the form ",
  Cell[BoxData[
      \(TraditionalForm\`\@lhs == \@rhs\)]],
  " into an equation of the form ",
  Cell[BoxData[
      \(TraditionalForm\`lhs - rhs == 0\)]],
  ".  (Note that Simplify will not do what we seek by itself!)"
}], "Exercise"],

Cell[TextData[{
  "Use Map and an appropriate skeletal function to transform the equation ",
  Cell[BoxData[
      \(TraditionalForm\`y == 1\/\(a\  + \ b\ Exp[\(-t\^2\)]\)\)]],
  " into an equation of the form ",
  Cell[BoxData[
      \(TraditionalForm\`Exp[t\^2] == rhs\)]],
  " where ",
  Cell[BoxData[
      \(TraditionalForm\`rhs\)]],
  " is the appropriate right-hand side of the new equation.  Then use Map on \
the new equation to solve for ",
  Cell[BoxData[
      \(TraditionalForm\`t\)]],
  "."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Example: Compton scattering", "Subsection"],

Cell[TextData[{
  "Suppose that a photon with initial momentum ",
  Cell[BoxData[
      \(TraditionalForm\`p\_i\)]],
  " scatters from a stationary electron with mass ",
  Cell[BoxData[
      \(TraditionalForm\`m\_e\)]],
  ", such that the scattered photon emerges at angle ",
  Cell[BoxData[
      \(TraditionalForm\`\[Theta]\)]],
  " with final momentum ",
  Cell[BoxData[
      \(TraditionalForm\`p\_f\)]],
  " while the electron emerges at angle \[Phi] with momentum ",
  Cell[BoxData[
      \(TraditionalForm\`p\_e\)]],
  ".  Application of the principles of conservation of energy and momentum \
gives the following system of equations."
}], "Text"],

Cell[BoxData[
    \(\(eqs\  = \ {\n\t\tp\_i \[Equal] 
            p\_f + K, \n\t\t\(p\_e\) Cos[\[Phi]] \[Equal] 
            p\_i - \(p\_f\) Cos[\[Theta]], \n\t\t\(p\_e\) 
              Sin[\[Phi]] \[Equal] \(p\_f\) 
              Sin[\[Theta]], \n\t\tp\_e\^2 \[Equal] \((m\_e + K)\)\^2 - 
              m\_e\^2\n\t};\)\)], "Input"],

Cell[TextData[{
  "Here ",
  Cell[BoxData[
      \(TraditionalForm\`K\)]],
  " is the kinetic energy of the electron and we are using units for which ",
  Cell[BoxData[
      \(TraditionalForm\`\[HBar] = \(c = 1\)\)]],
  ".  Although this system of equations can be solved fairly easily by hand, \
if you attempt to do it using the most obvious ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " function"
}], "Text"],

Cell[BoxData[
    \(Solve[eqs, {p\_f, p\_e, K, \[Phi]}]\)], "Input",
  Evaluatable->False],

Cell[TextData[{
  "your computer will grind practically forever without producing a solution \
and you will need to abort the evaluation.  [Hence, the cell above was made \
nonevaluatable to avoid accidental execution.]  Without the benefit of human \
insight, the program fails to recognize that ",
  Cell[BoxData[
      \(TraditionalForm\`\[Phi]\)]],
  " can be eliminated by squaring and adding the second and third equations.  \
Nor does the ",
  StyleBox["Eliminate", "InlineInput"],
  " function help (try it!).  Therefore, you need to provide the computer \
some guidance."
}], "Text"],

Cell[TextData[{
  "The following transformation squares the second and third equations first, \
then brings the right-hand sides to the left (",
  StyleBox["Equal\[Rule]Subtract", "InlineInput"],
  "), adds the two resulting expressions, and finally forms a new equation \
for which ",
  Cell[BoxData[
      \(TraditionalForm\`\[Phi]\)]],
  " has been eliminated.  Note that the parentheses are needed to ensure that \
the operations are performed in the proper order.  Also note that we avoid \
cross terms in ",
  Cell[BoxData[
      \(TraditionalForm\`\[Phi]\)]],
  " by squaring before the two sides of each equation are combined.  ",
  StyleBox["Take this apart and make sure that you understand how it works!",
    FontSlant->"Italic"]
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(eq1 = \((\((\(#\^2 &\) /@ \ 
                    eqs\[LeftDoubleBracket]2\[RightDoubleBracket])\) /. 
                Equal \[Rule] 
                  Subtract)\) + \((\((\(#\^2 &\) /@ \ 
                    eqs\[LeftDoubleBracket]3\[RightDoubleBracket])\) /. 
                Equal \[Rule] Subtract)\) \[Equal] 0 // Simplify\)], "Input"],

Cell[BoxData[
    \(p\_e\%2 + 2\ Cos[\[Theta]]\ p\_f\ p\_i \[Equal] 
      p\_f\%2 + p\_i\%2\)], "Output"]
}, Closed]],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " can now solve the following reduced system of equations without \
difficulty."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(newEqs = {eq1, eqs\[LeftDoubleBracket]1\[RightDoubleBracket], 
        eqs\[LeftDoubleBracket]4\[RightDoubleBracket]}\)], "Input"],

Cell[BoxData[
    \({p\_e\%2 + 2\ Cos[\[Theta]]\ p\_f\ p\_i \[Equal] p\_f\%2 + p\_i\%2, 
      p\_i \[Equal] K + p\_f, 
      p\_e\%2 \[Equal] \(-m\_e\%2\) + \((K + m\_e)\)\^2}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(sol = \(Solve[
            newEqs, {p\_f, p\_e, 
              K}]\)\[LeftDoubleBracket]1\[RightDoubleBracket] // 
        Simplify\)], "Input"],

Cell[BoxData[
    \({K \[Rule] \(\((\(-1\) + Cos[\[Theta]])\)\ p\_i\%2\)\/\(\(-m\_e\) + \((\
\(-1\) + Cos[\[Theta]])\)\ p\_i\), 
      p\_e \[Rule] \(-\@\(p\_i\%2\ \((1 + m\_e\%2\/\((m\_e - \((\(-1\) + Cos[\
\[Theta]])\)\ p\_i)\)\^2 - \(2\ Cos[\[Theta]]\ m\_e\)\/\(m\_e + p\_i - Cos[\
\[Theta]]\ p\_i\))\)\)\), 
      p\_f \[Rule] \(m\_e\ p\_i\)\/\(m\_e + p\_i - Cos[\[Theta]]\ p\_i\)}\)], \
"Output"]
}, Closed]],

Cell[TextData[{
  "Finally, recognizing that the wavelength of a photon is the reciprocal of \
its momentum (in units where  ",
  Cell[BoxData[
      \(TraditionalForm\`\[HBar] = \(c = 1\)\)]],
  "), we obtain the familiar Compton shift formula"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(1\/p\_f - 1\/p\_i /. sol // Simplify\)], "Input"],

Cell[BoxData[
    \(\(1 - Cos[\[Theta]]\)\/m\_e\)], "Output"]
}, Closed]],

Cell[TextData[{
  "As powerful as it is, ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " cannot replace thought!  Although the syntax of these manipulations takes \
some familiarization, it is really not much different from the manipulations \
that you would perform by hand.  Using ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " you must specify the rules and let the machine execute the operations, \
whereas in hand calculations you must use the same rules to execute the \
operations yourself even if you do not formulate those rules explicitly.  By \
formulating rules carefully instead of performing explicit manipulations, you \
can assemble very large symbolic calculations and can test variations without \
having to repeat many tedious and error-prone manipulations."
}], "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Pattern matching", "Section"],

Cell[CellGroupData[{

Cell["Pattern templates", "Subsection",
  CellTags->"pattern templates"],

Cell[TextData[{
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " recognizes the practically unlimited variety of patterns that can be \
constructed from the templates described in the following table.  "
}], "Text"],

Cell[BoxData[
    StyleBox[GridBox[{
          {
            StyleBox[\(Pattern\ Templates\),
              FontFamily->"Times New Roman",
              FontWeight->"Bold"]},
          {
            StyleBox[GridBox[{
                  {
                    StyleBox["pattern",
                      "Text"], 
                    StyleBox["description",
                      "Text"]},
                  {
                    StyleBox["_",
                      "Text"], 
                    StyleBox[\(matches\ any\ expression\),
                      "Text"]},
                  {"x_", 
                    StyleBox[\(any\ expression, \ referred\ to\ as\ x\),
                      "Text"]},
                  {"x_h", 
                    StyleBox[\(any\ expression\ with\ head\ h\),
                      "Text"]},
                  {\(x_ /; cond\), 
                    StyleBox[\(any\ expression\ satisfying\ a\ condition\),
                      "Text"]},
                  {\(pattern?test\), 
                    
                    StyleBox[\(pattern\ which\ yields\ true\ when\ test\ is\ \
applied\),
                      "Text"]},
                  {"x__", 
                    
                    StyleBox[\(a\ sequence\ of\ one\ or\ more\ expressions\ \
collectively\ named\ x\),
                      "Text"]},
                  {"x___", 
                    
                    StyleBox[\(a\ sequence\ of\ zero\ or\ more\ expressions\ \
collectively\ named\ x\),
                      "Text"]},
                  {"x___h", 
                    
                    StyleBox[\(a\ sequence\ of\ zero\ or\ more\ expressions\ \
, all\ with\ head\ h, collectively\ named\ x\),
                      "Text"]},
                  {\(x_:  def\), 
                    StyleBox[\(optional\ pattern\ with\ default\ value\),
                      "Text"]},
                  {"x_.", 
                    StyleBox[\(pattern\ with\ built - in\ default\),
                      "Text"]},
                  {\(x_h:  def\), 
                    
                    StyleBox[\(expression\ with\ head\ h\ and\ default\ value\
\ def\),
                      "Text"]},
                  {\(x : patt\), 
                    
                    StyleBox[\(expression\ named\ x\ matching\ \ pattern\ \
patt\),
                      "Text"]},
                  {\(x^n_\), 
                    StyleBox[\(any\ power\ of\ x\),
                      "Text"]},
                  {\(x_^n_\), 
                    StyleBox[\(any\ power\ of\ any\ expression\),
                      "Text"]},
                  {\({x_, y_}\), 
                    StyleBox[\(a\ list\ of\ length\ 2\),
                      "Text"]},
                  {\({x_, x_}\), 
                    StyleBox[\(a\ pair\ of\ identical\ elements\),
                      "Text"]},
                  {\(pattern .. \), 
                    
                    StyleBox[\(one\ or\ more\ repeated\ elements\ of\ a\ \
specified\ pattern\),
                      "Text"]},
                  {\(pattern ... \), 
                    
                    StyleBox[\(zero\ or\ more\ repeated\ elements\ of\ a\ \
specified\ pattern\),
                      "Text"]},
                  {\({{_, _} .. }\), 
                    
                    StyleBox[\(a\ list\ of\ one\ more\ lists\ of\ length\ 2\),
                      
                      "Text"]},
                  {\(f[x_]\), 
                    StyleBox[\(function\ f\ with\ any\ argument\ named\ x\),
                      "Text"]},
                  {\(f_[x_]\), 
                    StyleBox[\(any\ function\ of\ any\ argument\),
                      "Text"]},
                  {\(patt1 | patt2\), 
                    
                    StyleBox[\(pattern\ with\ two\ or\ more\ alternative\ \
forms\),
                      "Text"]}
                  },
                ColumnAlignments->{Left},
                GridFrame->True,
                RowLines->{True, False}],
              "Input",
              Background->None]}
          }],
      Background->RGBColor[0.500008, 0.996109, 0.996109]]], "Text",
  TextAlignment->Center,
  TextJustification->0],

Cell[TextData[{
  "Since it is impossible to list all possible permutations, we give only the \
basic templates \[LongDash] many additional patterns can be constructed by \
combining these elements appropriately.  For example, the table defines ",
  StyleBox["_h", "InlineInput"],
  " to be any expression with head ",
  StyleBox["h", "InlineInput"],
  " and defines ",
  StyleBox["{{_,_}..}", "InlineInput"],
  " to be a list containing one or more pairs of elements.  Thus, we can \
construct a pattern which matches a list of one or more integer triplets as \
",
  StyleBox["{{_Integer,_Integer,_Integer}..}", "InlineInput"],
  " even though that pattern does not appear within the table."
}], "Text"],

Cell[BoxData[
    \(\(mypatt\  = \ {{_Integer, _Integer, _Integer} .. };\)\)], "Input"],

Cell["\<\
The following list contains several elements which match the pattern and \
several which do not.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(mylist = \ {\ {1, 2, 3}, {{1, 2, 3}}, \ {{1, 2, 3}, {\(-5\), 0, 8}}, 
          x, {{1, 2, 3}, {1. , 2. , 3. }}\ };\)\), "\n", 
    \(mylist // ColumnForm\)}], "Input"],

Cell[BoxData[
    InterpretationBox[GridBox[{
          {\({1, 2, 3}\)},
          {\({{1, 2, 3}}\)},
          {\({{1, 2, 3}, {\(-5\), 0, 8}}\)},
          {"x"},
          {\({{1, 2, 3}, {1.`, 2.`, 3.`}}\)}
          },
        GridBaseline->{Baseline, {1, 1}},
        ColumnAlignments->{Left}],
      ColumnForm[ {{1, 2, 3}, {{1, 2, 3}}, {{1, 2, 3}, {-5, 0, 8}}, x, {{1, 2,
         3}, {1.0, 2.0, 3.0}}}],
      Editable->False]], "Output"]
}, Closed]],

Cell[TextData[{
  "We can test each element of the list against the specified pattern by \
mapping ",
  StyleBox["MatchQ[", "InlineInput"],
  StyleBox["#,pattern", "InlineInput"],
  StyleBox["]&", "InlineInput"],
  " onto the list; this operation then returns a list of true or false \
results."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(MatchQ[#, mypatt] &\)\  /@ \ mylist\)], "Input"],

Cell[BoxData[
    \({False, True, True, False, False}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Alternatively, we can use ",
  StyleBox["Cases[list,pattern]", "InlineInput"],
  " ",
  "to select the elements matching the pattern, obtaining therefrom a shorter \
list."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Cases[mylist, mypatt]\)], "Input"],

Cell[BoxData[
    \({{{1, 2, 3}}, {{1, 2, 3}, {\(-5\), 0, 8}}}\)], "Output"]
}, Closed]],

Cell["\<\
Evaluate the following expressions and explain the results.
a) MatchQ[a - b c, x_ - y_]\tb) MatchQ[a - b c, x_+y_]
c) MatchQ[a - 2 c, x_ - y_]\td) MatchQ[a - 2 c, x_+y_]\
\>", "Exercise"],

Cell["\<\
Determine the full form of the following expressions.
a) a|b\t\tb) a_|b_\tc) a_Rational | a_Integer\
\>", "Exercise"],

Cell[TextData[{
  "The following function will be helpful in testing patterns against a list \
of test cases.  ",
  StyleBox["Be sure to predict which members of each list of test cases \
should match the specified pattern and which should not",
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 1]],
  StyleBox[".",
    FontColor->RGBColor[0, 0, 1]],
  "  If your results differ, you will need to sharpen your pattern \
definition."
}], "Text"],

Cell[BoxData[
    \(CheckPattern[data_, pattern_] := 
      Transpose[{data, \(MatchQ[#, pattern] &\)\  /@ data}] // 
        MatrixForm\)], "Input"],

Cell["\<\
Write a pattern for a list of one or more strings.  Which elements of the \
following list match the pattern?  Why do the others fail?
\t{x, \"good morning\", {\"red\", \"green\", \"blue\"}, \
{\"Help!\"},{\"one\",2,\"three\"}}\
\>", "Exercise"],

Cell[TextData[{
  "Write a pattern for simple expressions with rational exponents.  Which \
elements of the following list match the pattern?  Why do the others fail?  \
Generalize the pattern to include integer exponents as well  [hint: use the \
alternative pattern operator | ].\n\t",
  "{",
  Cell[BoxData[
      \(TraditionalForm\`x\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`a\^b\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`x\^\(1/2\)\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`x\^2\)]],
  ",3, ",
  Cell[BoxData[
      \(TraditionalForm\`a + b\^\(3/4\)\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`y\^\[Pi]\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`z\ z\^\(1/8\)\)]],
  "}"
}], "Exercise"],

Cell[TextData[{
  "Write a pattern for real or complex numbers with nonnegative real parts.  \
In addition to obvious test cases, make sure it handles cases like ",
  Cell[BoxData[
      \(TraditionalForm\`3 - \[ImaginaryI]\ \[Pi]\)]],
  " correctly."
}], "Exercise"],

Cell[TextData[{
  "Write a pattern for complex numbers whose real and imaginary parts are \
integers.   Which elements of the following list match the pattern?  Why do \
the others fail?  Generalize to include real integers, which are indeed \
special cases of complex numbers composed of integers.\n\t{",
  Cell[BoxData[
      \(TraditionalForm\`a + I\ b\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`I\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`\(-3\) + 2  I\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`14\)]],
  ", ",
  Cell[BoxData[
      \(TraditionalForm\`3 + I/2\)]],
  "}"
}], "Exercise"],

Cell[TextData[{
  "Write a ",
  StyleBox["GaussianIntegerQ",
    FontWeight->"Bold"],
  " function which returns True for a Gaussian integer or False otherwise.  \
Recall that a Gaussian integer is a complex number whose real and imaginary \
parts are both integers, with real integers comprising a subset of the \
Gaussian integers.  [Hint: use ",
  StyleBox["FullForm",
    FontWeight->"Bold"],
  " to identify the appropriate patterns and ",
  StyleBox["MatchQ",
    FontWeight->"Bold"],
  " to compare the argument with those patterns.]"
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Patterns with built-in defaults", "Subsection"],

Cell[TextData[{
  "Patterns based upon arithmetic operations often have built-in defaults.  \
For example, the pattern ",
  StyleBox["a+b_.", "InlineInput"],
  " indicates a sum of two elements for which the second element may vanish \
and hence be absent.  Thus, a single term matches this pattern"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatchQ[a, \ a_ + b_. ]\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]],

Cell[TextData[{
  "but would not match the very similar pattern ",
  StyleBox["a_+b_", "InlineInput"],
  " that does not include the built-in default."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatchQ[a, \ a_ + b_]\)], "Input"],

Cell[BoxData[
    \(False\)], "Output"]
}, Closed]],

Cell["\<\
Obvious defaults are 0 for addition or 1 for multiplication or powers.\
\>", "Text"],

Cell[TextData[{
  "Write a pattern for a difference between two symbols, ",
  Cell[BoxData[
      \(TraditionalForm\`a - b\)]],
  ", that also recognizes cases like ",
  Cell[BoxData[
      \(TraditionalForm\`{a - 2, a - 2  b, f[x] - g[x]}\)]],
  " as special cases while rejecting cases like ",
  Cell[BoxData[
      \(TraditionalForm\`{a, a + b, a + 2  b, f[x] + g[x]}\)]],
  "."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Role of attributes in pattern matching", "Subsection"],

Cell["\<\
The attributes of a symbol often play a crucial role in its pattern-matching \
behavior.  If we define a function without specifying its attributes\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(ClearAll[f];\)\), "\n", 
    \(Attributes[f]\)}], "Input"],

Cell[BoxData[
    \({}\)], "Output"]
}, Closed]],

Cell["\<\
the order of its arguments is considered when comparing against a pattern.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatchQ[\ f[1, x], f[x_, 1]\ ]\)], "Input"],

Cell[BoxData[
    \(False\)], "Output"]
}, Closed]],

Cell[TextData[{
  "By contrast, the built-in function ",
  StyleBox["Plus", "InlineInput"],
  " matches for any order of its arguments because it has the attribute ",
  StyleBox["Orderless", "InlineInput"],
  "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Attributes[Plus]\)], "Input"],

Cell[BoxData[
    \({Flat, Listable, NumericFunction, OneIdentity, Orderless, 
      Protected}\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatchQ[Plus[1, x], \ Plus[x_, 1]\ ]\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]],

Cell["\<\
We can bestow similar behavior on our function by setting its attributes\
\>", "Text"],

Cell[BoxData[
    \(\(SetAttributes[f, Orderless];\)\)], "Input"],

Cell["\<\
and we then obtain a match for either order of the arguments.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \({MatchQ[\ f[1, x], f[x_, 1]\ ], \ 
      MatchQ[\ f[x, 1], f[x_, 1]\ ]\ }\)], "Input"],

Cell[BoxData[
    \({True, True}\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Orderless functions may match a pattern in several possible ways and ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " uses the first match it encounters.  For example, the following \
replacement rule eliminates a repeated argument from an orderless function, \
but if there are several repeated arguments it is not always obvious which \
one will be eliminated.  "
}], "Text"],

Cell[BoxData[
    \(Clear[f, a, b, c, d]\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[a, b, c, b, a] /. f[a_, a_, b___] \[Rule] f[a, b]\)], "Input"],

Cell[BoxData[
    \(f[a, b, b, c]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[b, a, c, a, b] /. f[a_, a_, b___] \[Rule] f[a, b]\)], "Input"],

Cell[BoxData[
    \(f[a, b, b, c]\)], "Output"]
}, Closed]],

Cell[TextData[{
  "Of course, ",
  StyleBox["ReplaceRepeated", "InlineInput"],
  " can be used to eliminate all repetitions."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[a, b, c, b, a] //. f[a_, a_, b___] \[Rule] f[a, b]\)], "Input"],

Cell[BoxData[
    \(f[a, b, c]\)], "Output"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
    \(f[a, a, a] //. f[a_, a_, b___] \[Rule] f[a, b]\)], "Input"],

Cell[BoxData[
    \(f[a]\)], "Output"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Think like a computer", "Section"],

Cell["\<\
At the beginning of this notebook we discovered that the obvious \
transformation rule\
\>", "Text"],

Cell[BoxData[
    \(\(myrule = Sqrt[x_\^2] \[Rule] x;\)\)], "Input"],

Cell["\<\
fails to produce the expected result for the following expression: \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(f = 1/Sqrt[a\^2];\)\), "\n", 
    \(f /. myrule\)}], "Input"],

Cell[BoxData[
    \(1\/\@a\^2\)], "Output"]
}, Closed]],

Cell["\<\
Why didn't this work?  First, look a little more closely at the rule we \
defined.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[myrule]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Rule[Power[Power[Pattern[x, Blank[]], 2], Rational[1, 2]], 
          x]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "Nowhere in this rule does ",
  StyleBox["Sqrt", "InlineInput"],
  " actually appear.  ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " allows us to enter input using the familiar square root function, but \
internally it uses ",
  StyleBox["Power[#,Rational[1,2]]", "InlineInput"],
  ".  This works for"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\@a\^2 /. myrule\)], "Input"],

Cell[BoxData[
    \(a\)], "Output"]
}, Closed]],

Cell["\<\
because the same conversion is made here before the rule is applied\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[\@a\^2]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Power[Power[a, 2], Rational[1, 2]]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell["but for ", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[1\/\@a\^2]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Power[Power[a, 2], Rational[\(-1\), 2]]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "we find that the internal representation involves ",
  StyleBox["Power[#,Rational[-1,2]]", "InlineInput"],
  " which is not covered by the rule."
}], "Text"],

Cell[TextData[{
  "Central concept: ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " transforms expressions according to rules associated with symbols and \
patterns."
}], "Definition"],

Cell[TextData[{
  "Given an expression, ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " scans each subexpression for symbols and patterns that it recognizes, \
searches its tables for rules that apply to each symbol and pattern it finds, \
performs the specified transformations, and repeats as necessary.  If it \
doesn't find a matching pattern, no transformation is performed.  \
Unfortunately, people are much better at recognizing patterns than in \
formulating rigorous rules for those patterns.  ",
  StyleBox[
  "I can't tell you what makes music good, but I know good music when I hear \
it!",
    FontSlant->"Italic"],
  "  Computers, on the other hand, are idiot savants \[LongDash] they can't \
formulate rules for themselves, but can do what they're told at lightning \
speed.  The problem is that they do what they are told, neither more nor less \
nor perhaps what you actually intended.  ",
  StyleBox["Do what I mean, damn you, not what I say!",
    FontSlant->"Italic"],
  "."
}], "Text"],

Cell["\<\
Researchers in artificial intelligence attempt to produce mechanical models \
which simulate the behavior of living organisms and ultimately hope to create \
machines which think like humans, but faster.  Their crowning achievement, \
after several decades of intensive work, is a mechanical cockroach!  It will \
obviously take many more decades, perhaps even centuries, before computers \
achieve the type of insight and creativity that is distinctively human.\
\>", "Text"],

Cell["\<\
Since you can't make the computer think like you, you will have to learn to \
think like the computer.  This entails understanding the pattern-matching \
algorithms well enough to predict when the program will recognize that an \
expression matches a particular pattern and to formulate patterns and rules \
rigorously enough for successful mechanical processing without benefit of \
human insight.  For the example suggested above, the more general rule\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(myrule2\  = \((x_\^n_)\)\^m_ \[Rule] x\^\(n\ m\)\)], "Input"],

Cell[BoxData[
    \(\((x_\^n_)\)\^m_ \[Rule] x\^\(m\ n\)\)], "Output"]
}, Closed]],

Cell["\<\
covers that case and many others (provided , of course, that the variables \
are known to be positive)\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \({1\/\@a\^2, \@\(8\/a\^6\)\%3, \@\(\(\(b\^2\) c\^9\)\/\(a\^6\ \
d\^\(-4\)\)\)\%3} /. myrule2\)], "Input"],

Cell[BoxData[
    \({1\/a, 2\/a\^2, \((\(b\^2\ c\^9\ d\^4\)\/a\^6)\)\^\(1/3\)}\)], "Output"]
}, Closed]],

Cell["\<\
but is still not sufficiently general to do anything with the third \
expression above.\
\>", "Text"],

Cell[TextData[{
  "Some of the important tools for developing and debugging transformation \
rules are: ",
  ButtonBox["FullForm",
    ButtonStyle->"RefGuideLink"],
  ", ",
  ButtonBox["MatchQ",
    ButtonStyle->"RefGuideLink"],
  ", and ",
  ButtonBox["Trace",
    ButtonStyle->"RefGuideLink"],
  ".  ",
  StyleBox["MatchQ[expr,pattern]", "InlineInput"],
  " compares an expression with a pattern, returning ",
  StyleBox["True", "InlineInput"],
  " for a match or ",
  StyleBox["False", "InlineInput"],
  " otherwise.  ",
  StyleBox["Trace[expr]", "InlineInput"],
  " displays the evaluation sequence in a relatively terse format; more \
elaborate traces can be obtain with related functions."
}], "Text"],

Cell[TextData[{
  "It should not be surprising that this expression does not match the \
pattern specified by ",
  StyleBox["myrule2", "InlineInput"],
  ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatchQ[\@\(\(\(b\^2\) c\^9\)\/\(a\^6\ d\^\(-4\)\)\)\%3, \
\((x_\^n_)\)\^m_]\)], "Input"],

Cell[BoxData[
    \(False\)], "Output"]
}, Closed]],

Cell["\<\
When we trace the evaluation of this expression, we find that the first few \
steps transform the input form into standard form before attempting to apply \
the rule.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(Trace[\@\(\(\(b\^2\) c\^9\)\/\(a\^6\ d\^\(-4\)\)\)\%3 /. 
        myrule2]\)], "Input"],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    TagBox[\(1\/\(a\^6\/d\^4\)\),
                      HoldForm], ",", 
                    TagBox[\(d\^4\/a\^6\),
                      HoldForm]}], "}"}], ",", 
                TagBox[\(\(b\^2\ c\^9\ d\^4\)\/a\^6\),
                  HoldForm], ",", 
                TagBox[\(\(b\^2\ c\^9\ d\^4\)\/a\^6\),
                  HoldForm], ",", 
                TagBox[\(\(b\^2\ c\^9\ d\^4\)\/a\^6\),
                  HoldForm]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                    TagBox[\(1\/3\),
                      HoldForm], ",", 
                    TagBox[\(1\/3\),
                      HoldForm]}], "}"}], ",", 
                TagBox[\(1\/3\),
                  HoldForm], ",", 
                TagBox[\(1\/3\),
                  HoldForm]}], "}"}], ",", 
            TagBox[\(\((\(b\^2\ c\^9\ d\^4\)\/a\^6)\)\^\(1/3\)\),
              HoldForm]}], "}"}], ",", 
        RowBox[{"{", 
          RowBox[{
            TagBox["myrule2",
              HoldForm], ",", 
            TagBox[\(\((x_\^n_)\)\^m_ \[Rule] x\^\(m\ n\)\),
              HoldForm]}], "}"}], ",", 
        TagBox[\(\((\(b\^2\ c\^9\ d\^4\)\/a\^6)\)\^\(1/3\) \
/. \[InvisibleSpace]\((x_\^n_)\)\^m_ \[Rule] x\^\(m\ n\)\),
          HoldForm], ",", 
        TagBox[\(\((\(b\^2\ c\^9\ d\^4\)\/a\^6)\)\^\(1/3\)\),
          HoldForm]}], "}"}]], "Output"]
}, Closed]],

Cell["\<\
The expression we seek to simplify is actually represented as (product of \
terms) raised to a rational power.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(FullForm[\@\(\(\(b\^2\) c\^9\)\/\(a\^6\ d\^\(-4\)\)\)\%3]\)], "Input"],

Cell[BoxData[
    TagBox[
      StyleBox[\(Power[
          Times[Power[a, \(-6\)], Power[b, 2], Power[c, 9], Power[d, 4]], 
          Rational[1, 3]]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output"]
}, Closed]],

Cell[TextData[{
  "The product serves as an ",
  StyleBox["x_ pattern", "InlineInput"],
  ", so that"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(MatchQ[\@\(\(\(b\^2\) c\^9\)\/\(a\^6\ d\^\(-4\)\)\)\%3, 
      x_\^n_]\)], "Input"],

Cell[BoxData[
    \(True\)], "Output"]
}, Closed]],

Cell[TextData[{
  "is already as simple as our rule requires.  If we had wanted the \
expression to be expanded, we should have said so in the first place!  This \
is easily done by generalizing the rule to include products.  Note that the \
pattern ",
  StyleBox["a_.", "InlineInput"],
  " used in a product indicates a factor with built-in default value of \
unity, which ensures that ",
  StyleBox["b", "InlineInput"],
  " will match the pattern ",
  StyleBox["a_. b_", "InlineInput"],
  " in which the unit factor does not appear.  Repeated replacement using our \
more general pattern then achieves the desired expansion."
}], "Text"],

Cell[BoxData[
    \(\(myrule3\  = \((a_. \ x_\^n_)\)\^m_ \[Rule] \(a\^m\) 
            x\^\(n\ m\);\)\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\@\(\(\(b\^2\) c\^9\)\/\(a\^6\ d\^\(-4\)\)\)\%3 //. myrule3\)], "Input"],

Cell[BoxData[
    \(\(b\^\(2/3\)\ c\^3\ d\^\(4/3\)\)\/a\^2\)], "Output"]
}, Closed]],

Cell[TextData[{
  "The expressions ",
  Cell[BoxData[
      \(TraditionalForm\`\((1 + 2  x + x\^2)\)\)]],
  " and ",
  Cell[BoxData[
      \(TraditionalForm\`\((1 + x)\)\^2\)]],
  " are obviously equal, but does ",
  Cell[BoxData[
      \(TraditionalForm\`\((1 + 2  x + x\^2)\)\)]],
  " match the pattern ",
  Cell[BoxData[
      \(TraditionalForm\`\((1 + x_)\)\^2\)]],
  "?.  If not, why not?"
}], "Exercise"],

Cell["\<\
Formulate a rule or set of rules which will combine all of the following \
expressions into single expressions of the form Log[expr].
a) n Log[x] \tb) Log[x]+Log[y]+Log[z]\tc) Log[x] - Log[y]+Log[z]\td) m Log[x] \
- n Log[y]\
\>", "Exercise"],

Cell[TextData[{
  "Suppose that we are given a polynomial of the form ",
  Cell[BoxData[
      \(TraditionalForm\`poly = 
        a\  + b\ x + c\ x\^m + d\ x\^n + \ \[CenterEllipsis]\)]],
  ".  Use Switch to write a function PolyTerms[poly,x] which will return a \
list of exponents and coefficients with the form {{0,a},{1,b},{m,c},{n,d},\
\[CenterEllipsis]}.  Be sure to test a variety of expressions."
}], "Exercise"]
}, Closed]],

Cell[CellGroupData[{

Cell["Expressions representing cells", "Section"],

Cell[TextData[{
  "The cells comprising a notebook are also represented as expressions.  Even \
notebooks themselves are expressions with head ",
  StyleBox["Notebook", "InlineInput"],
  ".  Notebooks live in the computer as ascii files containing only a \
sequence of alphanumeric and other simple symbols, each of which at a lower \
level is represented as a binary code.  Yet on the monitor we see formatted \
text, cell markers, background colors, a variety of plots, tool bars and \
icons, perhaps some figures, etc.  It worth examining how some of these \
structures appear in the notebook file.  "
}], "Text"],

Cell["\<\
Select a cell by clicking on its cell bracket.  Then, either using the menu \
sequence Format \[RightTeeArrow] Show Expression or the key sequence Shift \
Ctrl E, display the expression representing the cell.  Simply repeat to undo.\
\
\>", "Exercise"],

Cell[TextData[{
  "By examining the expressions that represent cells you will find text of \
the general form ",
  StyleBox["Cell[\"contents\",\"type\"]", "InlineInput"],
  StyleBox[".  ",
    FontSlant->"Italic"],
  "Not surprisingly, a ",
  StyleBox["\"Text\"", "InlineInput"],
  " cell contains a text string.  The ",
  StyleBox["\"Exercise\"", "InlineInput"],
  " cell above contains ",
  StyleBox["TextData", "InlineInput"],
  " that includes some special characters in verbose form, such as ",
  StyleBox["TextData[\"\\RightTeeArrow]\"]", "InlineInput"],
  ".  Note that we wrapped the ascii form in a ",
  StyleBox["TextData", "InlineInput"],
  " function to prevent the front end from automatically converting to the \
graphical form usually displayed.   Now look at the expressions shown below \
as a simple statement that generates a plot and the plot itself.  The input \
cell is represented by a ",
  StyleBox["Cell", "InlineInput"],
  " function whose arguments are a ",
  StyleBox["BoxData", "InlineInput"],
  " function, a cell type string, and a rule for replacing the label.  The \
argument of the ",
  StyleBox["BoxData", "InlineInput"],
  "  consists of many nested ",
  StyleBox["RowBox", "InlineInput"],
  " functions each carrying elements of the expression in excruciating \
detail.  Nevertheless, sometime it is easier to edit the underlying ascii \
text (after using Show Expression) than to use the ",
  "Options Inspector",
  " provided by the front end.  This can also be handy for modifying \
hyperlinks.\nGraphics are also represented by ascii text, usually in the form \
of postscript.  Thus, despite the relative simplicity of the accompanying \
figure, its postscript representation requires an impressive mass of ascii \
characters.  No wonder that notebooks containing nontrivial graphics consume \
so much disk space!"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(Plot[Evaluate[Gamma[x]], {x, \(-5\), 5}, 
        PlotRange \[Rule] {Automatic, {\(-10\), 10}}];\)\)], "Input"],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.0952381 0.309017 0.0309017 [
[.11905 .29652 -6 -9 ]
[.11905 .29652 6 0 ]
[.30952 .29652 -6 -9 ]
[.30952 .29652 6 0 ]
[.69048 .29652 -3 -9 ]
[.69048 .29652 3 0 ]
[.88095 .29652 -3 -9 ]
[.88095 .29652 3 0 ]
[.4875 0 -18 -4.5 ]
[.4875 0 0 4.5 ]
[.4875 .07725 -24 -4.5 ]
[.4875 .07725 0 4.5 ]
[.4875 .15451 -12 -4.5 ]
[.4875 .15451 0 4.5 ]
[.4875 .23176 -24 -4.5 ]
[.4875 .23176 0 4.5 ]
[.4875 .38627 -18 -4.5 ]
[.4875 .38627 0 4.5 ]
[.4875 .46353 -6 -4.5 ]
[.4875 .46353 0 4.5 ]
[.4875 .54078 -18 -4.5 ]
[.4875 .54078 0 4.5 ]
[.4875 .61803 -12 -4.5 ]
[.4875 .61803 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.11905 .30902 m
.11905 .31527 L
s
[(-4)] .11905 .29652 0 1 Mshowa
.30952 .30902 m
.30952 .31527 L
s
[(-2)] .30952 .29652 0 1 Mshowa
.69048 .30902 m
.69048 .31527 L
s
[(2)] .69048 .29652 0 1 Mshowa
.88095 .30902 m
.88095 .31527 L
s
[(4)] .88095 .29652 0 1 Mshowa
.125 Mabswid
.16667 .30902 m
.16667 .31277 L
s
.21429 .30902 m
.21429 .31277 L
s
.2619 .30902 m
.2619 .31277 L
s
.35714 .30902 m
.35714 .31277 L
s
.40476 .30902 m
.40476 .31277 L
s
.45238 .30902 m
.45238 .31277 L
s
.54762 .30902 m
.54762 .31277 L
s
.59524 .30902 m
.59524 .31277 L
s
.64286 .30902 m
.64286 .31277 L
s
.7381 .30902 m
.7381 .31277 L
s
.78571 .30902 m
.78571 .31277 L
s
.83333 .30902 m
.83333 .31277 L
s
.07143 .30902 m
.07143 .31277 L
s
.02381 .30902 m
.02381 .31277 L
s
.92857 .30902 m
.92857 .31277 L
s
.97619 .30902 m
.97619 .31277 L
s
.25 Mabswid
0 .30902 m
1 .30902 L
s
.5 0 m
.50625 0 L
s
[(-10)] .4875 0 1 0 Mshowa
.5 .07725 m
.50625 .07725 L
s
[(-7.5)] .4875 .07725 1 0 Mshowa
.5 .15451 m
.50625 .15451 L
s
[(-5)] .4875 .15451 1 0 Mshowa
.5 .23176 m
.50625 .23176 L
s
[(-2.5)] .4875 .23176 1 0 Mshowa
.5 .38627 m
.50625 .38627 L
s
[(2.5)] .4875 .38627 1 0 Mshowa
.5 .46353 m
.50625 .46353 L
s
[(5)] .4875 .46353 1 0 Mshowa
.5 .54078 m
.50625 .54078 L
s
[(7.5)] .4875 .54078 1 0 Mshowa
.5 .61803 m
.50625 .61803 L
s
[(10)] .4875 .61803 1 0 Mshowa
.125 Mabswid
.5 .01545 m
.50375 .01545 L
s
.5 .0309 m
.50375 .0309 L
s
.5 .04635 m
.50375 .04635 L
s
.5 .0618 m
.50375 .0618 L
s
.5 .09271 m
.50375 .09271 L
s
.5 .10816 m
.50375 .10816 L
s
.5 .12361 m
.50375 .12361 L
s
.5 .13906 m
.50375 .13906 L
s
.5 .16996 m
.50375 .16996 L
s
.5 .18541 m
.50375 .18541 L
s
.5 .20086 m
.50375 .20086 L
s
.5 .21631 m
.50375 .21631 L
s
.5 .24721 m
.50375 .24721 L
s
.5 .26266 m
.50375 .26266 L
s
.5 .27812 m
.50375 .27812 L
s
.5 .29357 m
.50375 .29357 L
s
.5 .32447 m
.50375 .32447 L
s
.5 .33992 m
.50375 .33992 L
s
.5 .35537 m
.50375 .35537 L
s
.5 .37082 m
.50375 .37082 L
s
.5 .40172 m
.50375 .40172 L
s
.5 .41717 m
.50375 .41717 L
s
.5 .43262 m
.50375 .43262 L
s
.5 .44807 m
.50375 .44807 L
s
.5 .47898 m
.50375 .47898 L
s
.5 .49443 m
.50375 .49443 L
s
.5 .50988 m
.50375 .50988 L
s
.5 .52533 m
.50375 .52533 L
s
.5 .55623 m
.50375 .55623 L
s
.5 .57168 m
.50375 .57168 L
s
.5 .58713 m
.50375 .58713 L
s
.5 .60258 m
.50375 .60258 L
s
.25 Mabswid
.5 0 m
.5 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02498 0 m
.02499 .28771 L
.02605 .29764 L
.02729 .3015 L
.02846 .30326 L
.02954 .30424 L
.03053 .30487 L
.03163 .30537 L
.03279 .30576 L
.03395 .30606 L
.0352 .30632 L
.03746 .30665 L
.03884 .3068 L
.04016 .30691 L
.04262 .30707 L
.045 .30719 L
.0463 .30723 L
.04753 .30727 L
.04868 .3073 L
.04993 .30733 L
.05105 .30735 L
.0521 .30736 L
.05335 .30737 L
.05401 .30738 L
.05472 .30738 L
.05546 .30738 L
.05617 .30739 L
.05749 .30739 L
.05872 .30738 L
.05986 .30738 L
.06111 .30737 L
.06244 .30735 L
.06504 .30732 L
.06742 .30727 L
.07003 .3072 L
.07277 .30712 L
.07741 .30693 L
.08247 .30663 L
.08537 .3064 L
.08801 .30615 L
.09085 .30582 L
.09392 .30536 L
.09678 .3048 L
.09941 .30413 L
.10192 .30328 L
.10319 .30273 L
.10458 .30203 L
.10589 .30122 L
.10711 .3003 L
.10837 .29913 L
Mistroke
.10951 .29779 L
.11064 .2961 L
.11169 .29404 L
.11281 .29109 L
.11402 .28641 L
.11524 .2786 L
.11594 .27141 L
.11659 .26103 L
.1179 .20433 L
.11863 .01651 L
Mfstroke
.11863 .01651 m
.11915 .61803 L
s
.11983 .61803 m
.1205 .39572 L
.12179 .35571 L
.12302 .34197 L
.12415 .33517 L
.1252 .33111 L
.12634 .32807 L
.1274 .32597 L
.12838 .32447 L
.13065 .32201 L
.13179 .32112 L
.13304 .32032 L
.1354 .31918 L
.13793 .31832 L
.14031 .31774 L
.14247 .31735 L
.14479 .31705 L
.1461 .31691 L
.14733 .31681 L
.14863 .31673 L
.14981 .31667 L
.15047 .31665 L
.15118 .31663 L
.15247 .3166 L
.15358 .31659 L
.15479 .3166 L
.15607 .31662 L
.15726 .31665 L
.15837 .31669 L
.15939 .31674 L
.16169 .31688 L
.1642 .31709 L
.16653 .31735 L
.1693 .31772 L
.17182 .31814 L
.17698 .31929 L
.17982 .32013 L
.1825 .32111 L
.18712 .32334 L
.18975 .32504 L
.19221 .32705 L
.1948 .32977 L
.19716 .33302 L
.19847 .33527 L
.19989 .3382 L
.20123 .34156 L
.20249 .34545 L
.20366 .34989 L
.20492 .35598 L
.20607 .36317 L
Mistroke
.20712 .37185 L
.20827 .38475 L
.20952 .40609 L
.21083 .44506 L
.21206 .52295 L
Mfstroke
.21206 .52295 m
.21252 .61803 L
s
.21321 .61803 m
.21323 0 L
s
.21608 0 m
.21634 .06389 L
.2175 .14955 L
.21873 .19158 L
.21978 .21252 L
.22094 .2279 L
.22215 .23914 L
.22329 .24682 L
.22453 .25325 L
.22586 .25853 L
.22725 .26287 L
.22857 .26613 L
.23104 .27074 L
.23335 .27385 L
.23548 .27601 L
.23782 .2778 L
.2403 .2792 L
.24277 .28022 L
.24416 .28064 L
.24543 .28095 L
.24661 .28118 L
.2479 .28137 L
.24911 .28149 L
.25023 .28155 L
.25092 .28157 L
.25167 .28157 L
.25237 .28156 L
.25301 .28153 L
.25424 .28144 L
.25553 .28129 L
.25692 .28108 L
.25821 .28083 L
.26116 .28005 L
.26377 .27911 L
.26619 .27802 L
.26879 .27658 L
.27165 .27461 L
.27646 .27018 L
.2791 .26698 L
.28157 .26332 L
.28396 .25897 L
.28624 .2539 L
.28831 .24825 L
.29051 .24074 L
.2929 .23023 L
.29511 .21718 L
.29647 .20691 L
.29775 .195 L
.299 .18049 L
.30014 .16381 L
Mistroke
.3013 .142 L
.30254 .11044 L
.3037 .06904 L
.30479 .01105 L
Mfstroke
.30479 .01105 m
.30491 0 L
s
.30952 0 m
.30958 .61803 L
s
.31455 .61803 m
.31521 .5837 L
.31648 .53711 L
.31763 .5075 L
.31895 .48243 L
.32021 .46459 L
.32245 .44158 L
.32358 .43288 L
.32482 .42488 L
.32701 .41373 L
.32907 .4058 L
.33149 .39865 L
.3337 .39363 L
.33625 .38919 L
.33868 .38602 L
.33993 .38471 L
.34127 .38352 L
.34246 .38264 L
.34372 .38187 L
.34485 .3813 L
.3461 .38082 L
.34723 .3805 L
.34828 .3803 L
.34892 .38022 L
.34961 .38018 L
.35087 .38019 L
.35209 .38031 L
.35322 .38053 L
.35444 .38088 L
.35579 .38139 L
.35851 .38286 L
.3609 .38465 L
.36308 .38674 L
.36544 .3895 L
.36801 .39324 L
.37235 .4016 L
.37471 .40753 L
.37691 .41418 L
.37937 .42323 L
.38197 .43525 L
.38483 .45243 L
.38745 .47367 L
.3899 .50061 L
.39219 .53567 L
.3935 .5624 L
.3947 .59302 L
s
.3947 .59302 m
.39545 .61803 L
s
.40445 .61803 m
.4045 0 L
s
.41488 0 m
.416 .02852 L
.41716 .05251 L
.41843 .07389 L
.42066 .10283 L
.42325 .12738 L
.42567 .1443 L
.42797 .15681 L
.43005 .16589 L
.43233 .17391 L
.43473 .18071 L
.43738 .18663 L
.43983 .19086 L
.44246 .19434 L
.44397 .19589 L
.44535 .19704 L
.44655 .19785 L
.44785 .19854 L
.44856 .19884 L
.44922 .19906 L
.45052 .19936 L
.45164 .19947 L
.45287 .19944 L
.45415 .19923 L
.45535 .19887 L
.45653 .19836 L
.45779 .19765 L
.46005 .19589 L
.46274 .19295 L
.46519 .18938 L
.46774 .18459 L
.47052 .17791 L
.47313 .16984 L
.47554 .16046 L
.47761 .1505 L
.47982 .13722 L
.48226 .11841 L
.48453 .09505 L
.48575 .07929 L
.48708 .05858 L
.48826 .0363 L
.48951 .00699 L
s
.48951 .00699 m
.48974 0 L
s
.50068 0 m
.50068 .61803 L
s
.50911 .61803 m
.51008 .58601 L
.51153 .54972 L
.51289 .52316 L
.51417 .50285 L
.5166 .47304 L
.51881 .45278 L
.52119 .43578 L
.52376 .42132 L
.52839 .40208 L
.53266 .38939 L
.53735 .37896 L
.54238 .37052 L
.54713 .36434 L
.55147 .35981 L
.55654 .35549 L
.56207 .35171 L
.56725 .34883 L
.57212 .34659 L
.58151 .34322 L
.58692 .34173 L
.59188 .34059 L
.60198 .3388 L
.60729 .3381 L
.61288 .33752 L
.61787 .33711 L
.62241 .33682 L
.62493 .3367 L
.62765 .33659 L
.63023 .33651 L
.63137 .33648 L
.6326 .33645 L
.63375 .33643 L
.63479 .33641 L
.63585 .3364 L
.63685 .33639 L
.63801 .33639 L
.63908 .33638 L
.64026 .33639 L
.64152 .33639 L
.64274 .3364 L
.64344 .33641 L
.64407 .33642 L
.64647 .33646 L
.64866 .33651 L
.65096 .33658 L
.65593 .33677 L
.66045 .33701 L
.67062 .33773 L
.68004 .33864 L
Mistroke
.68896 .33971 L
.70889 .34294 L
.72732 .34708 L
.746 .35264 L
.76661 .3608 L
.78598 .37098 L
.80684 .38558 L
.82691 .40442 L
.84801 .43122 L
.86777 .46528 L
.88615 .50766 L
.90663 .57178 L
Mfstroke
.90663 .57178 m
.91743 .61803 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{288, 177.875},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40006`00012R000`400?l00000o`00003oo`3ooona
0?ooo`00o`3ooona0?ooo`00o`3ooona0?ooo`00`@3oool00`3o_g@000000000000300000005001d
_`3oool0oooo0?ooo`3o_g@00`0000000`1d_ol0oooo0?ooo`3N0?ooo`00a03oool00`2LB4P0W=oo
0?ooo`040?ooo`0609a8M02oool0oooo0?oo_`1d07@0_ooog`3oool00<@0oooo00<0W4Q809cOo`3o
ool00`3oool00`3o_g@007Bo0?ooo`020?ooo`030=nLB018W=l0oooo0=h0oooo000E0?ooo`030000
003oool0oooo04X0oooo0P00000S0?ooo`030000003oool0000002H0oooo00D000000?ooo`3oool0
oooo0000000?0?ooo`0309a8B02Lgol0oooo00<0oooo00<0gia804RLg`3oool00P3oool01@3o_g@0
07Bo0?ooo`3oool0000000<0oooo1000003E0?ooo`005@3oool00`000000oooo0?ooo`1:0?ooo`80
00008`3oool00`000000oooo0000000V0?ooo`050000003oool0oooo0?ooo`0000000`3oool00`2L
B000000000000003000000030018W03oool0oooo00<0oooo00<0W4Q809cOo`3oool00`3oool00`3O
W4P0B9cO0?ooo`020?ooo`050?noM000M;l0oooo0?ooo`0000000`3oool00`000000oooo0?ooo`3F
0?ooo`005@3oool00`000000oooo0?ooo`1:0?ooo`8000008`3oool00`000000oooo0000000V0?oo
o`050000003oool0oooo0?ooo`0000003`3oool00`2LB4P0W=oo0?ooo`030?ooo`030=nLB018W=l0
oooo0080oooo00D0okmd001d_`3oool0oooo000000030?ooo`030000003oool0oooo0=H0oooo000E
0?ooo`030000003oool0oooo04X0oooo0P00000S0?ooo`030000003oool0000002H0oooo00D00000
0?ooo`3oool0oooo0000000?0?ooo`0309a8B02Lgol0oooo00<0oooo00<0okmd04RLg`3oool00P3o
ool01@3OW4P0B9cO0?ooo`3oool0000000<0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<0
00000?ooo`3oool0BP3oool2000002<0oooo00<000000?ooo`0000009P3oool01@000000oooo0?oo
o`3oool0000000`0oooo00D0gia800000000B9`0W4Q809cOo`050?ooo`0609a8001d_ol0oooo0?oO
W01807@0_ooo0P3oool01@000000oooo0?ooo`3oool000000=P0oooo000E0?ooo`030000003oool0
oooo04X0oooo0P00000S0?ooo`030000003oool0000002H0oooo00D000000?ooo`3oool0oooo0000
000>0?ooo`030=nLB00004P0W=oo00D0oooo00D0oono07@000000000001809cOo`030?ooo`050000
003oool0oooo0?ooo`000000f03oool001D0oooo00<000000?ooo`3oool0BP3oool2000002<0oooo
00<000000?ooo`0000009P3oool01@000000oooo0?ooo`3oool0000001h0oooo00D000000?ooo`3o
ool0oooo0000003H0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0
oooo0P00000S0?ooo`030000003oool0000002H0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`0K0?ooo`040000003oool0oooo0?ooo`<00000eP3oool001D0oooo00<000000?ooo`3o
ool08`3oool00`000000oooo0?ooo`0T0?ooo`8000008`3oool00`000000oooo0000000V0?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool06`3oool01@000000oooo0?ooo`3oool00000
0=P0oooo000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool2000002<0
oooo00<000000?ooo`0000009P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01X0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo
0?ooo`0S0?ooo`030000003oool0oooo02@0oooo0P00000S0?ooo`030000003oool0000002H0oooo
00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?oo
o`0T0?ooo`8000008`3oool00`000000oooo0000000V0?ooo`030000003oool0oooo0080oooo00<0
00000?ooo`3oool06P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo0=H0oooo000E
0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool2000002<0oooo00<00000
0?ooo`0000009P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01X0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?oo
o`030000003oool0oooo02@0oooo0P00000S0?ooo`030000003oool0000002H0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0oooo0080oooo0`00003F0?oo
o`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo0P00000S0?ooo`03
0000003oool0000002H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0J0?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool0
8`3oool00`000000oooo0?ooo`0T0?ooo`8000008`3oool00`000000oooo0000000V0?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903o
ool2000002<0oooo00<000000?ooo`0000009P3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo01X0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`3F0?ooo`005@3oool0
0`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo0P00000S0?ooo`030000003oool0
000002H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0J0?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool08`3oool00`00
0000oooo0?ooo`0T0?ooo`8000008`3oool00`000000oooo0000000V0?ooo`030000003oool0oooo
0080oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo
0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool2000002<0
oooo00<000000?ooo`0000009P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01X0
oooo00<000000?ooo`3oool00P3oool300000=H0oooo000E0?ooo`030000003oool0oooo02<0oooo
00<000000?ooo`3oool0903oool2000002<0oooo00<000000?ooo`0000009P3oool00`000000oooo
0?ooo`020?ooo`030000003oool0oooo01X0oooo00<000000?ooo`3oool00P3oool00`000000oooo
0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo0P00
000S0?ooo`030000003oool0000002H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`0J0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0eP3oool001D0oooo00<00000
0?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`8000008`3oool00`000000oooo0000000V
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<000000?oo
o`3oool0903oool2000002<0oooo00<000000?ooo`0000009P3oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo01X0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`3F0?oo
o`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo0P00000S0?ooo`03
0000003oool0000002H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0J0?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool0
8`3oool00`000000oooo0?ooo`0T0?ooo`8000008`3oool00`000000oooo0000000V0?ooo`030000
003oool0oooo0080oooo00<000000?ooo`3oool06P3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903o
ool2000002<0oooo00<000000?ooo`0000009P3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo01X0oooo00<000000?ooo`3oool00P3oool300000=H0oooo000E0?ooo`030000003oool0
oooo02<0oooo00<000000?ooo`3oool0903oool2000002<0oooo00<000000?ooo`0000009P3oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo01T0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo
02@0oooo0P00000S0?ooo`030000003oool0000002H0oooo00<000000?ooo`3oool00`3oool01P00
0000oooo0?ooo`3oool0omnL04Q8W0L0oooo00<0_g@000000000M;l01@3oool01@2oM00000000000
00000000M;oo0080oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`3F0?ooo`005@3o
ool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo0P00000S0?ooo`030000003o
ool0000002H0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`020?ooo`0309a8B02L
gol0oooo00D0oooo00<0_g@000000000M;l0103oool0202oM00007Bo0?ooo`3oool0omnL04P0001d
_ol000001@3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`03
0000003oool0oooo02@0oooo0P00000S0?ooo`030000003oool0000002H0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`020?ooo`030=nLB018W=l0oooo0140oooo00<0okmd001d_`00
00001@3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000
003oool0oooo02@0oooo0P00000S0?ooo`030000003oool0000002H0oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`020?ooo`030?oOW018B9`0oooo0140oooo00<0okmd001d_`000000
1@3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003o
ool0oooo02@0oooo0P00000S0?ooo`030000003oool0000002D0oooo00<0W4P00000000000000`00
00000`00B9`000000?ooo`040?ooo`0309a8B02Lgol0oooo0100oooo00<0W4P007Boo`0000001@3o
ool400000=D0oooo000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool2
000002<0oooo00<000000?ooo`0000009P3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo00<0oooo00<0gia804RLg`3oool02`3oool00`3ookl0M000000000020000000304RLg`3oool0
000000D0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool08`3oool00`00
0000oooo0?ooo`0T0?ooo`8000008`3oool00`000000oooo0000000V0?ooo`030000003oool0oooo
00<0oooo00<000000?ooo`3oool00`3oool00`3ogi`0B4RL0?ooo`0;0?ooo`030?oo_`1d07@0_ooo
00@0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000
oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo0P00000S0?ooo`030000003oool0000002H0
oooo00<000000?ooo`3oool00`3oool010000000oooo0;mdB02Lgol30?ooo`030;mdB02Lgol0oooo
00X0oooo00<0oono07@0M02oool0103oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool2000002<0
oooo00<000000?ooo`0000009P3oool00`000000oooo0?ooo`030?ooo`030000003oool0_g@000D0
000000<0M;oo0?ooo`3oool02@3oool00`3ookl0M00000000002000000030000M02oool0000000D0
oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool08`3oool00`000000oooo
0?ooo`0T0?ooo`8000008`3oool00`000000oooo0000000V0?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0=H0oooo
000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool200000280oooo00@0
00000?ooo`3oool000009P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01L0oooo
00<000000?ooo`3oool00`3oool300000=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<0
00000?ooo`3oool0903oool200000280oooo00@000000?ooo`3oool000009P3oool00`000000oooo
0?ooo`040?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo0P00
000R0?ooo`040000003oool0oooo000002H0oooo00<000000?ooo`3oool0103oool00`000000oooo
0?ooo`0G0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<0
00000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`8000008P3oool010000000oooo0?oo
o`00000V0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool05`3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<0
00000?ooo`3oool0903oool200000280oooo00@000000?ooo`3oool000009P3oool00`000000oooo
0?ooo`040?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool00`3oool00`000000oooo
0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo0P00
000R0?ooo`040000003oool0oooo000002H0oooo00<000000?ooo`3oool0103oool00`000000oooo
0?ooo`0G0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<0
00000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`8000008P3oool010000000oooo0?oo
o`00000V0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool05P3oool00`000000oooo
0?ooo`040?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<0
00000?ooo`3oool0903oool00`000000oooo0000000Q0?ooo`040000003oool0oooo000002H0oooo
00<000000?ooo`3oool0103oool00`000000oooo0?ooo`0F0?ooo`030000003oool0oooo00@0oooo
0`00003F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo00<0
00000?ooo`0000008@3oool010000000oooo0?ooo`00000V0?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0=H0oooo
000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool00`000000oooo0000
000Q0?ooo`040000003oool0oooo000002H0oooo00<000000?ooo`3oool0103oool00`000000oooo
0?ooo`0F0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<0
00000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool000000240oooo00@0
00000?ooo`3oool000009P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo01D0oooo
00<000000?ooo`3oool0103oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?oo
o`0S0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`0000008@3oool010000000oooo0?oo
o`00000V0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool05@3oool00`000000oooo
0?ooo`040?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<0
00000?ooo`3oool0903oool00`000000oooo0000000Q0?ooo`040000003oool0oooo000002H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?oo
o`0T0?ooo`030000003oool000000240oooo00@000000?ooo`3oool000009P3oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo01D0oooo00<000000?ooo`3oool0103oool300000=H0oooo
000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool00`000000oooo0000
000Q0?ooo`040000003oool0oooo000002H0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`0E0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<0
00000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool000000240oooo00@0
00000?ooo`3oool000009P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo01@0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?oo
o`0S0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`0000008@3oool010000000oooo0?oo
o`00000V0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0503oool00`000000oooo
0?ooo`050?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<0
00000?ooo`3oool0903oool00`000000oooo0000000Q0?ooo`040000003oool0oooo000002H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?oo
o`0T0?ooo`030000003oool000000240oooo00@000000?ooo`3oool000009P3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo01<0oooo00<000000?ooo`3oool01@3oool00`000000oooo
0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo00<0
00000?ooo`0000008@3oool010000000oooo0?ooo`00000V0?ooo`030000003oool0oooo00H0oooo
00<000000?ooo`3oool04`3oool00`000000oooo0?ooo`050?ooo`<00000eP3oool001D0oooo00<0
00000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool000000240oooo00@0
00000?ooo`3oool000009P3oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo01<0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?oo
o`0S0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`0000008@3oool010000000oooo0?oo
o`00000V0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool04P3oool00`000000oooo
0?ooo`060?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<0
00000?ooo`3oool0903oool00`000000oooo0000000Q0?ooo`040000003oool0oooo000002H0oooo
00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0?0?ooo`050;md0000000000000000001d
_ol01`3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000
003oool0oooo02@0oooo00<000000?ooo`0000008@3oool010000000oooo0?ooo`00000V0?ooo`03
0000003oool0oooo00H0oooo00<000000?ooo`3oool03P3oool01`2oM00007Bo0?ooo`3oool00000
04P0001d_ol01P3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?oo
o`030000003oool0oooo02@0oooo00<000000?ooo`0000008@3oool010000000oooo0?ooo`00000V
0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool04@3oool00`000000okmd001d_`06
0?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<000000?oo
o`3oool0903oool00`000000oooo0000000P0?ooo`050000003oool0oooo0?ooo`0000009P3oool0
0`000000oooo0?ooo`070?ooo`030000003oool0oooo0140oooo00<000000?noM000M;l01P3oool0
0`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo
02@0oooo00<000000?ooo`000000803oool01@000000oooo0?ooo`3oool0000002H0oooo00<00000
0?ooo`3oool01`3oool00`000000oooo0?ooo`040?ooo`0309a800000000000000<0000000<004RL
0?ooo`3oool00`3oool010000000oooo09a8001d_ol60?ooo`@00000e@3oool001D0oooo00<00000
0?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool000000200oooo00D00000
0?ooo`3oool0oooo0000000V0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool03@3o
ool00`3ookl0M000000000020000000304RLg`3oool0oooo00D0oooo00<000000?ooo`3oool0eP3o
ool001D0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0
00000200oooo00D000000?ooo`3oool0oooo0000000V0?ooo`030000003oool0oooo00L0oooo00<0
00000?ooo`3oool03@3oool0103ookl0M01d0;ooo`0000090?ooo`030000003oool0oooo0=H0oooo
000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool00`000000oooo0000
000P0?ooo`050000003oool0oooo0?ooo`0000009P3oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo00d0oooo00@0oono07@0M02oool000002@3oool00`000000oooo0?ooo`3F0?ooo`00
5@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`000000
803oool01@000000oooo0?ooo`3oool0000002H0oooo00<000000?ooo`3oool01`3oool00`000000
oooo0?ooo`0=0?ooo`030?oo_`1d000000000080000000<0001d0;ooo`3oool01@3oool00`000000
oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo
00<000000?ooo`000000803oool01@000000oooo0?ooo`3oool0000002H0oooo00<000000?ooo`3o
ool01`3oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3o
ool0eP3oool001D0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`030000
003oool000000200oooo00D000000?ooo`3oool0oooo0000000V0?ooo`030000003oool0oooo00P0
oooo00<000000?ooo`3oool03P3oool00`000000oooo0?ooo`080?ooo`<00000eP3oool001D0oooo
00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool000000200oooo
00D000000?ooo`3oool0oooo0000000V0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3o
ool03P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000
003oool0oooo02<0oooo00<000000?ooo`3oool0903oool00`000000oooo0000000P0?ooo`050000
003oool0oooo0?ooo`0000009P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo00d0
oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo
0?ooo`0S0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`000000803oool01@000000oooo
0?ooo`3oool0000002H0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`0<0?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool0
8`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool000000200oooo00D000000?ooo`3oool0
oooo0000000V0?ooo`030000003oool0oooo00T0oooo00<000000?ooo`3oool0303oool00`000000
oooo0?ooo`090?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo
00<000000?ooo`3oool0903oool00`000000oooo0000000P0?ooo`050000003oool0oooo0?ooo`00
00009P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000
003oool0oooo02@0oooo00<000000?ooo`000000803oool01@000000oooo0?ooo`3oool0000002H0
oooo00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo00X0
oooo0`00003F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo
00<000000?ooo`0000007`3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo02@0oooo
00<000000?ooo`3oool02P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00/0oooo
00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?oo
o`0T0?ooo`030000003oool0000001l0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?oo
o`0T0?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0203oool00`000000oooo0?oo
o`0;0?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<00000
0?ooo`3oool0903oool00`000000oooo0000000O0?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool0903oool00`000000oooo0?ooo`0<0?ooo`030000003oool0oooo00H0oooo00<00000
0?ooo`3oool0303oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?oo
o`030000003oool0oooo02@0oooo00<000000?ooo`0000007`3oool00`000000oooo0?ooo`020?oo
o`030000003oool0oooo02@0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`040?oo
o`030000003oool0oooo00d0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3o
ool08`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0000001l0oooo00<000000?ooo`3o
ool00P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo00h0oooo0P0000020?ooo`80
0000403oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000
003oool0oooo02@0oooo00<000000?ooo`0000007`3oool00`000000oooo0?ooo`020?ooo`030000
003oool0oooo02@0oooo00<000000?ooo`3oool03`3oool400000140oooo0`00003F0?ooo`005@3o
ool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`0000007`3o
ool00`000000oooo0?ooo`020?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903o
ool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0
oooo02@0oooo00@000000?ooo`3oool000007P3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`3F0?ooo`005@3oool0
0`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo00@000000?ooo`3oool000007P3o
ool00`000000oooo0?ooo`020?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903o
ool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0
oooo02@0oooo00@000000?ooo`3oool000007P3oool00`000000oooo0?ooo`020?ooo`030000003o
ool0oooo02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`3F0?ooo`005@3oool0
0`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo00@000000?ooo`3oool000007@3o
ool00`000000oooo0?ooo`030?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903o
ool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0
oooo02@0oooo00@000000?ooo`3oool000007@3oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`3F0?ooo`005@3oool0
0`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo00@000000?ooo`3oool000007@3o
ool00`000000oooo0?ooo`030?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903o
ool300000=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool0
10000000oooo0?ooo`00000M0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0903o
ool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo0=H0oooo000E0?ooo`030000003oool0
oooo02<0oooo00<000000?ooo`3oool0903oool010000000oooo0?ooo`00000M0?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003o
ool0oooo0=H0oooo000E0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool0
10000000oooo0?ooo`00000L0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0903o
ool00`000000oooo0?ooo`040?ooo`030?oo_`1d0000000000@0000000<0M;oo0?ooo`3oool00P3o
ool00`2oM0000000001d_`050?ooo`050;md0000000000000000001d_ol01`3oool00`000000oooo
0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo00@0
00000?ooo`3oool00000703oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo02@0oooo
00<000000?ooo`3oool01@3oool00`2oM000001d0;ooo`020?ooo`030=nLM02Lgol0oooo00<0oooo
00<0_g@000000000M;l0103oool01`2oM00007Bo0?ooo`3oool0omnL04P0001d_ol01P3oool00`00
0000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0
oooo00@000000?ooo`3oool00000703oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo
02@0oooo00<000000?ooo`3oool01P3oool00`3o_g@0001809cOo`0C0?ooo`030?noM000M;l0oooo
00D0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool08`3oool00`000000
oooo0?ooo`0T0?ooo`040000003oool0oooo000001`0oooo00<000000?ooo`3oool0103oool00`00
0000oooo0?ooo`0T0?ooo`030000003oool0oooo00L0oooo00<0omnL04P00018W=l04P3oool00`3o
_g@007Bo0?ooo`050?ooo`@00000e@3oool001D0oooo00<000000?ooo`3oool08P3oool2000002H0
oooo00D000000?ooo`3oool0oooo0000000K0?ooo`030000003oool0oooo00@0oooo00<000000?oo
o`3oool08`3oool00`2LB000000000000003000000030018W03oool0oooo00@0oooo00<0W4P004RL
g`3oool0403oool00`2LB000M;oo0?ooo`050?ooo`030000003oool0oooo0=H0oooo000E0?ooo`03
0000003oool0oooo0280oooo0P00000V0?ooo`050000003oool0oooo0?ooo`0000006P3oool00`00
0000oooo0?ooo`050?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool02P3oool00`2L
B7@0_ooo0?ooo`0:0?ooo`030?oo_`1d000000000080000000<0B9cO0?ooo`3oool01@3oool00`00
0000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo0?ooo`0R0?ooo`8000009P3oool01@000000
oooo0?ooo`3oool0000001X0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0T0?oo
o`030000003oool0oooo00D0oooo00<0gia807Boo`3oool00P3oool00`2oM000M;oo0?ooo`0:0?oo
o`030?oo_`1d07@0_ooo00X0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3o
ool08P3oool2000002H0oooo00D000000?ooo`3oool0oooo0000000J0?ooo`030000003oool0oooo
00D0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`050?ooo`070?noM00007@0_ooo
0?ooo`3o_g@0001809cOo`0;0?ooo`030?oo_`1d07@0_ooo00X0oooo00<000000?ooo`3oool0eP3o
ool001D0oooo00<000000?ooo`3oool08P3oool2000002H0oooo00D000000?ooo`3oool0oooo0000
000J0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0903oool00`000000oooo0?oo
o`060?ooo`050?noM000000000000000B02Lgol0303oool00`3ookl0M00000000002000000030000
M02oool0oooo00D0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool08P3o
ool2000002H0oooo00D000000?ooo`3oool0oooo0000000J0?ooo`030000003oool0oooo00D0oooo
00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`<00000eP3oool001D0oooo00<0
00000?ooo`3oool08P3oool2000002H0oooo00D000000?ooo`3oool0oooo0000000J0?ooo`030000
003oool0oooo00D0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000
003oool0oooo0=H0oooo000E0?ooo`030000003oool0oooo0280oooo0P00000V0?ooo`030000003o
ool0oooo0080oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`060?ooo`030000003o
ool0oooo02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`3F0?ooo`005@3oool0
0`000000oooo0?ooo`0R0?ooo`8000009P3oool00`000000oooo0?ooo`020?ooo`030000003oool0
oooo01H0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0
oooo02@0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool08P3oool20000
02H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo
00L0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo
0=H0oooo000E0?ooo`030000003oool0oooo0280oooo0P00000V0?ooo`030000003oool0oooo0080
oooo00<000000?ooo`3oool05@3oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo02@0
oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`3F0?ooo`005@3oool00`000000oooo
0?ooo`0R0?ooo`8000009P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01@0oooo
00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo02@0oooo
00<000000?ooo`3oool0eP3oool001D0oooo00<000000?ooo`3oool08P3oool2000002H0oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`0C0?ooo`030000003oool0oooo00P0oooo00<0
00000?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`<00000eP3oool001D0oooo00<00000
0?ooo`3oool08P3oool200000080oooo00D0omnL04P000000000000007Boo`0O0?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`090?ooo`030000001d
0000000000@0000000<0M;oo0?ooo`3oool07@3oool00`000000oooo0?ooo`0T0?ooo`030000003o
ool0oooo04H0oooo00<0oono07@000000000100000000`1d_ol0oooo0?ooo`170?ooo`050?oOW018
000000000000001d_ol0>P3oool001D0oooo00<000000?ooo`3oool08P3oool2000000@0oooo00<0
_g@007Boo`3oool07`3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo0140oooo00<0
00000?ooo`3oool02P3oool010000000_g@00000M02oool20?ooo`030=nLM02Lgol0oooo01h0oooo
00<000000?ooo`3oool0903oool00`000000oooo0?ooo`170?ooo`030;md000007@0_ooo0080oooo
00<0giad09cOo`3oool0BP3oool00`2oM000M;oo0?ooo`0j0?ooo`005@3oool00`000000oooo0?oo
o`0R0?ooo`800000103oool00`2oM000M;oo0?ooo`0O0?ooo`030000003oool0oooo00@0oooo00<0
00000?ooo`3oool0403oool00`000000oooo0?ooo`0:0?ooo`050000003oool0okmd0000B02Lgol0
8P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo04P0oooo00<0okmd0000B02Lgol0
CP3oool00`2oM000M;oo0?ooo`0j0?ooo`005@3oool00`000000oooo0?ooo`0R0?ooo`80000000<0
gia80000000000000`0000000`1d_ol0oooo0?ooo`0M0?ooo`030000003oool0oooo00D0oooo00<0
00000?ooo`3oool03P3oool00`000000oooo0?ooo`0;0?ooo`060000003oool0oooo0?oOW0180000
B9cO8@3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo04T0oooo00<0omnL04P00018
W=l0B@3oool00`3OW4P00000000000030000000307Boo`3oool0oooo03P0oooo000E0?ooo`030000
003oool0oooo01/0oooo00<0W4P00000000000000`0000002@00B9`000000000003o_g@0001d0;oo
o`3oool0_g@007Boo`0P0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool02`3oool2
000000H0oooo00<0W4P00000000000000`0000000`00B9`0oooo000000040?ooo`0309a80018W=l0
oooo01l0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`1;0?ooo`0309a80018W=l0
oooo04L0oooo00H0okmd0000M02oool0oooo0;md001d_olk0?ooo`005@3oool00`000000oooo0?oo
o`0R0?ooo`80000000H0oooo0=nLB000M;l0oooo0;md001d_olP0?ooo`030000003oool0oooo00L0
oooo0P0000090?ooo`800000403oool00`000000oooo0?ooo`030?ooo`0309a8M02oool0oooo01h0
oooo00<000000?ooo`3oool0903oool3000004`0oooo00<0W4Qd0;ooo`3oool0A`3oool01@3OW4P0
07Bo0?ooo`2oM000M;oo03/0oooo000E0?ooo`030000003oool0oooo0280oooo0P0000020?ooo`04
09a80018W=l0_g@007Boob00oooo00<000000?ooo`3oool02@3oool900000180oooo00<000000=nL
B01d_ol00`3oool00`2oM000M;oo0?ooo`0N0?ooo`030000003oool0oooo02@0oooo00<000000?oo
o`3oool0A`3oool00`3OW4P0M;oo0?ooo`020?ooo`030;md001d_ol0oooo04P0oooo00@0W4P004RL
g`2oM000M;oo>`3oool001D0oooo00<000000?ooo`3oool08@3oool00`000000oooo000000020?oo
o`040?oOW01804P0B4P007Boob00oooo00<000000?ooo`3oool0903oool020000000okmd0000M02o
ool0oooo0?noM00004P0W=oo7`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo04L0
oooo00L0okmd0000M02oool0oooo0?noM00004P0W=oo04T0oooo00@0omnL04P0B018B000M;oo>`3o
ool001D0oooo00<000000?ooo`3oool08@3oool00`000000oooo000000030?ooo`030?noM0000000
M;oo0200oooo00<000000?ooo`3oool0903oool00`000000oooo0?noM002000000030000B02Lgol0
oooo01l0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`180?ooo`050?noM0000000
00000000B02Lgol0B`3oool00`3o_g@0000007Boo`0k0?ooo`005@3oool00`000000oooo0?ooo`0Q
0?ooo`030000003oool0000002H0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0T
0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0eP3oool001D0oooo00<000000?oo
o`3oool08@3oool00`000000oooo0000000V0?ooo`030000003oool0oooo02@0oooo00<000000?oo
o`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo0=H0oooo000E0?ooo`03
0000003oool0oooo0200oooo00@000000?ooo`3oool000009P3oool00`000000oooo0?ooo`0T0?oo
o`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903oool300000=H0oooo000F0?ooo`03
0000003oool0oooo01l0oooo00@000000?ooo`3oool000009P3oool00`000000oooo0?ooo`0T0?oo
o`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`3F0?oo
o`005P3oool00`000000oooo0?ooo`0O0?ooo`040000003oool0oooo000002H0oooo00<000000?oo
o`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo02@0oooo00<000000?oo
o`3oool0eP3oool001H0oooo00<000000?ooo`3oool07@3oool2000000<0oooo00<000000?ooo`3o
ool0903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3o
ool0903oool00`000000oooo0?ooo`3F0?ooo`005P3oool00`000000oooo0?ooo`0K0?ooo`<00000
103oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0
903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo0=H0oooo000G0?ooo`<000005@3o
ool5000000L0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003o
ool0oooo02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`3F0?ooo`006P3ooolE
000000`0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0
oooo02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`3F0?ooo`002`3ooooo0000
09X00000303oool001D0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0@0?ooo`03
0000003oool0oooo0140oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0A0?ooo`03
0000003oool0oooo0100oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0@0?ooo`03
0000003oool0oooo0140oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0@0?ooo`03
0000003oool0oooo0140oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0A0?ooo`03
0000003oool0oooo0100oooo00<000000?ooo`3oool04@3oool00`000000oooo0?ooo`0@0?ooo`03
0000003oool0oooo0140oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`0@0?ooo`03
0000003oool0oooo01@0oooo000k0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0
903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0
B`3oool00`000000oooo0?ooo`1;0?ooo`030000003oool0oooo03X0oooo000k0?ooo`030000003o
ool0oooo00D0oooo3`00000@0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903o
ool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo0=H0oooo000l0?ooo`030000003oool0
oooo0080oooo0P00000?0?ooo`<000003@3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0
oooo02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`3F0?ooo`00?03oool01000
0000oooo0?ooo`3oool2000001<0oooo0`00000:0?ooo`030000003oool0oooo02@0oooo00<00000
0?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo0=H0oooo000l0?oo
o`040000003oool0oooo000001P0oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`0T
0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903oool300000=H0oooo000l0?oo
o`040000003oool00000000001T0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0T
0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`3F
0?ooo`00?03oool00`000000oooo0000000K0?ooo`030000003oool0oooo00D0oooo00<000000?oo
o`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo02@0oooo00<000000?oo
o`3oool0eP3oool003`0oooo00<000000?ooo`000000703oool00`000000oooo0?ooo`040?ooo`03
0000003oool0oooo02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`03
0000003oool0oooo0=H0oooo000l0?ooo`030000003oool0000001d0oooo00<000000?ooo`3oool0
0`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0
903oool00`000000oooo0?ooo`3F0?ooo`00?03oool00`000000oooo0000000M0?ooo`030000003o
ool0oooo00<0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003o
ool0oooo02@0oooo00<000000?ooo`3oool0:@3ooolL00000940oooo000l0?ooo`8000007P3oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903oool0
0`000000oooo0?ooo`0T0?ooo`<000008P3oool7000001`0oooo2@0000280?ooo`00?03oool20000
01l0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo
02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0P0?ooo`800000;03oool60000
0880oooo000l0?ooo`800000803oool01@000000oooo0?ooo`3oool0000002H0oooo00<000000?oo
o`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo01d0oooo0`00000d0?oo
o`@00000OP3oool003`0oooo0P00000P0?ooo`050000003oool0oooo0?ooo`0000009P3oool00`00
0000oooo0?ooo`0T0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool06P3oool30000
03/0oooo1000001j0?ooo`00?03oool200000200oooo00D000000?ooo`3oool0oooo0000000V0?oo
o`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0H0?oo
o`800000@P3oool4000007H0oooo000l0?ooo`800000803oool01@000000oooo0?ooo`3oool00000
02H0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo
01H0oooo0P0000180?ooo`<00000L`3oool003`0oooo0P00000Q0?ooo`040000003oool0oooo0000
02H0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo
01D0oooo00<000000?ooo`3oool0B`3oool200000740oooo000l0?ooo`8000008@3oool010000000
oooo0?ooo`00000V0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903oool30000
01@0oooo00<000000?ooo`3oool0CP3oool2000006l0oooo000l0?ooo`8000008@3oool010000000
oooo0?ooo`00000V0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903oool00`00
0000oooo0?ooo`0B0?ooo`800000D`3oool2000006d0oooo000l0?ooo`8000008@3oool010000000
oooo0?ooo`00000V0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0903oool00`00
0000oooo0?ooo`0A0?ooo`030000003oool0oooo05D0oooo0P00001[0?ooo`00?03oool200000240
oooo00@000000?ooo`3oool000009P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo
02@0oooo00<000000?ooo`3oool0403oool00`000000oooo0?ooo`1H0?ooo`800000J@3oool003`0
oooo0P00000Q0?ooo`040000003oool0oooo000002H0oooo00<000000?ooo`3oool0903oool00`00
0000oooo0?ooo`0T0?ooo`030000003oool0oooo00l0oooo00<000000?ooo`3oool0F`3oool20000
06L0oooo000l0?ooo`8000008@3oool010000000oooo0?ooo`00000V0?ooo`030000003oool0oooo
02@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`0?0?ooo`030000003oool0oooo
05d0oooo0P00001U0?ooo`00?03oool200000240oooo00@000000?ooo`3oool000009P3oool00`00
0000oooo0?ooo`0T0?ooo`030000003oool0oooo02@0oooo0`00000>0?ooo`030000003oool0oooo
0600oooo0P00001S0?ooo`00?03oool200000240oooo00@000000?ooo`3oool000009P3oool00`00
0000oooo0?ooo`0T0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool03@3oool00`00
0000oooo0?ooo`1S0?ooo`030000003oool0oooo0600oooo000l0?ooo`030000003oool0oooo0200
oooo00@000000?ooo`3oool000009P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo
02@0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`1T0?ooo`800000H03oool003`0
oooo00<000000?ooo`3oool0803oool010000000oooo0?ooo`00000V0?ooo`030000003oool0oooo
02@0oooo00<000000?ooo`3oool0103oool00`3ookl0M000000000040000000307Boo`3oool0oooo
0080oooo00<0_g@000000000M;l01@3oool01@2oM0000000000000000000M;oo00L0oooo00<00000
0?ooo`3oool0303oool00`000000oooo0?ooo`1W0?ooo`030000003oool0oooo05d0oooo000l0?oo
o`030000003oool0oooo0240oooo00<000000?ooo`0000009P3oool00`000000oooo0?ooo`0;0?oo
o`H000004`3oool00`000000oooo0?ooo`050?ooo`030;md000007@0_ooo0080oooo00<0giad09cO
o`3oool00`3oool00`2oM0000000001d_`040?ooo`070;md0000M;l0oooo0?ooo`3ogi`0B00007Bo
o`060?ooo`030000003oool0oooo00/0oooo00<000000?ooo`3oool0J@3oool00`000000oooo0?oo
o`1L0?ooo`00?03oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0000002H0oooo00<00000
0?ooo`3oool02P3oool2000000D0oooo0P00000A0?ooo`030000003oool0oooo00H0oooo00<0okmd
0000B02Lgol04`3oool00`3o_g@007Bo0?ooo`050?ooo`030000003oool0oooo00/0oooo00<00000
0?ooo`3oool0JP3oool2000005`0oooo000l0?ooo`030000003oool0oooo0240oooo00<000000?oo
o`0000009P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00L0oooo00<000000?oo
o`3oool03P3oool00`000000oooo0?ooo`070?ooo`030?oOW0180000B9cO0180oooo00<0okmd001d
_`3oool01@3oool4000000T0oooo00<000000?ooo`3oool0K@3oool00`000000oooo0?ooo`1I0?oo
o`00?03oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0000002H0oooo00<000000?ooo`3o
ool0203oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo00d0oooo00<000000?ooo`3o
ool02@3oool00`2LB000B9cO0?ooo`0@0?ooo`0309a8001d_ol0oooo00D0oooo00<000000?ooo`3o
ool02P3oool00`000000oooo0?ooo`1^0?ooo`030000003oool0oooo05P0oooo000l0?ooo`030000
003oool0oooo0240oooo00<000000?ooo`0000009P3oool00`000000oooo0?ooo`070?ooo`030000
003oool0oooo00X0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0:0?ooo`0309a8
M02oool0oooo00X0oooo00<0oono07@0000000000P0000000`18W=l0oooo0?ooo`050?ooo`030000
003oool0oooo00X0oooo00<000000?ooo`3oool0K`3oool00`000000oooo0?ooo`1G0?ooo`00?03o
ool00`000000oooo0?ooo`0Q0?ooo`030000003oool0000002H0oooo00<000000?ooo`3oool01`3o
ool00`000000oooo0?ooo`0;0?ooo`030000003oool0oooo00`0oooo00<000000?ooo`3oool01@3o
ool00`3OW4P0M;oo0?ooo`020?ooo`030;md001d_ol0oooo00X0oooo00<0oono07@0M02oool02P3o
ool00`000000oooo0?ooo`0:0?ooo`030000003oool0oooo0700oooo00<000000?ooo`3oool0EP3o
ool003`0oooo00<000000?ooo`3oool08@3oool00`000000oooo0000000V0?ooo`030000003oool0
oooo00H0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0;0?ooo`030000003oool0
oooo00D0oooo00L0okmd0000M02oool0oooo0?noM00004P0W=oo00/0oooo00<0oono07@0M02oool0
2P3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo0780oooo00<000000?ooo`3oool0
E@3oool003`0oooo00<000000?ooo`3oool08@3oool00`000000oooo0000000V0?ooo`030000003o
ool0oooo00H0oooo00<000000?ooo`3oool03@3oool00`000000oooo0?ooo`0;0?ooo`030000003o
ool0oooo00H0oooo00D0okmd000000000000001809cOo`0<0?ooo`030?oo_`1d0000000000800000
00<0001d0;ooo`3oool01@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo07<0oooo
00<000000?ooo`3oool0E03oool003`0oooo00<000000?ooo`3oool08@3oool00`000000oooo0000
000V0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3oool03P3oool00`000000oooo0?oo
o`0:0?ooo`030000003oool0oooo02@0oooo0`0000090?ooo`030000003oool0oooo07@0oooo00<0
00000?ooo`3oool0D`3oool003`0oooo00<000000?ooo`3oool08@3oool00`000000oooo0000000V
0?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool03`3oool00`000000oooo0?ooo`0:
0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool02@3oool00`000000oooo0?ooo`1e
0?ooo`030000003oool0oooo0580oooo000l0?ooo`030000003oool0oooo0240oooo00<000000?oo
o`0000009P3oool00`000000oooo0?ooo`050?ooo`030000003oool0oooo0100oooo00<000000?oo
o`3oool02@3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo00T0oooo00<000000?oo
o`3oool0MP3oool00`000000oooo0?ooo`1A0?ooo`00?03oool00`000000oooo0?ooo`0Q0?ooo`03
0000003oool0000002H0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0@0?ooo`03
0000003oool0oooo00T0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`080?ooo`03
0000003oool0oooo07P0oooo00<000000?ooo`3oool0D03oool003`0oooo00<000000?ooo`3oool0
8@3oool00`000000oooo0000000V0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0
4@3oool00`000000oooo0?ooo`090?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0
203oool00`000000oooo0?ooo`1i0?ooo`030000003oool0oooo04l0oooo000l0?ooo`030000003o
ool0oooo0240oooo00<000000?ooo`0000009P3oool00`000000oooo0?ooo`040?ooo`030000003o
ool0oooo0180oooo00<000000?ooo`3oool0203oool00`000000oooo0?ooo`0T0?ooo`030000003o
ool0oooo00P0oooo00<000000?ooo`3oool0NP3oool00`000000oooo0?ooo`1>0?ooo`00?03oool0
0`000000oooo0?ooo`0Q0?ooo`030000003oool0000002H0oooo00<000000?ooo`3oool0103oool0
0`000000oooo0?ooo`0B0?ooo`030000003oool0oooo00P0oooo00<000000?ooo`3oool0903oool0
0`000000oooo0?ooo`080?ooo`030000003oool0oooo07/0oooo00<000000?ooo`3oool0C@3oool0
03`0oooo00<000000?ooo`3oool08@3oool00`000000oooo0000000V0?ooo`030000003oool0oooo
00@0oooo00<000000?ooo`3oool04P3oool00`000000oooo0?ooo`080?ooo`030000003oool0oooo
02@0oooo0`0000070?ooo`030000003oool0oooo07`0oooo00<000000?ooo`3oool0C@3oool003`0
oooo00<000000?ooo`3oool08@3oool00`000000oooo0000000V0?ooo`030000003oool0oooo00<0
oooo00<000000?ooo`3oool0503oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo02@0
oooo00<000000?ooo`3oool01`3oool00`000000oooo0?ooo`1m0?ooo`030000003oool0oooo04`0
oooo000l0?ooo`030000003oool0oooo0240oooo00<000000?ooo`0000009P3oool00`000000oooo
0?ooo`030?ooo`030000003oool0oooo01@0oooo00<000000?ooo`3oool01`3oool00`000000oooo
0?ooo`0T0?ooo`030000003oool0oooo00L0oooo00<000000?ooo`3oool0OP3oool00`000000oooo
0?ooo`1;0?ooo`00?03oool00`000000oooo0?ooo`0Q0?ooo`030000003oool0000002H0oooo00<0
00000?ooo`3oool00`3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo00L0oooo00<0
00000?ooo`3oool0903oool00`000000oooo0?ooo`070?ooo`030000003oool0oooo07l0oooo00<0
00000?ooo`3oool0BP3oool003`0oooo00<000000?ooo`3oool08P3oool2000002H0oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`0D0?ooo`030000003oool0oooo00L0oooo00<00000
0?ooo`3oool0903oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo0840oooo00<00000
0?ooo`3oool0B@3oool003`0oooo00<000000?ooo`3oool08P3oool2000002H0oooo00<000000?oo
o`3oool00`3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00H0oooo00<000000?oo
o`3oool0903oool00`000000oooo0?ooo`060?ooo`030000003oool0oooo0880oooo00<000000?oo
o`3oool0B03oool003`0oooo00<000000?ooo`3oool08P3oool2000002H0oooo00<000000?ooo`3o
ool00`3oool00`000000oooo0?ooo`0E0?ooo`030000003oool0oooo00H0oooo00<000000?ooo`3o
ool0903oool3000000H0oooo00<000000?ooo`3oool0P`3oool00`000000oooo0?ooo`170?ooo`00
?03oool00`000000oooo0?ooo`0R0?ooo`8000009P3oool00`000000oooo0?ooo`030?ooo`030000
003oool0oooo01D0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0T0?ooo`030000
003oool0oooo00H0oooo00<000000?ooo`3oool0P`3oool00`000000oooo0?ooo`170?ooo`00?03o
ool00`000000oooo0?ooo`0R0?ooo`8000009P3oool00`000000oooo0?ooo`030?ooo`030000003o
ool0oooo01D0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0T0?ooo`030000003o
ool0oooo00H0oooo00<000000?ooo`3oool0Q03oool00`000000oooo0?ooo`160?ooo`00?03oool0
0`000000oooo0?ooo`0R0?ooo`8000009P3oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo01D0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0
oooo00H0oooo00<000000?ooo`3oool0Q03oool00`000000oooo0?ooo`160?ooo`00?03oool00`00
0000oooo0?ooo`0R0?ooo`8000009P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo
01D0oooo00<000000?ooo`3oool01P3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo
00H0oooo00<000000?ooo`3oool0Q@3oool00`000000oooo0?ooo`150?ooo`00?03oool00`000000
oooo0?ooo`0R0?ooo`8000009P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo01H0
oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo00D0
oooo00<000000?ooo`3oool0QP3oool00`000000oooo0?ooo`150?ooo`00?03oool00`000000oooo
0?ooo`0R0?ooo`8000009P3oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo01H0oooo
00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0T0?ooo`<000001@3oool00`000000oooo
0?ooo`270?ooo`030000003oool0oooo04@0oooo000l0?ooo`030000003oool0oooo0280oooo0P00
000V0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?oo
o`050?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?oo
o`280?ooo`030000003oool0oooo04<0oooo000l0?ooo`030000003oool0oooo0280oooo0P00000V
0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool05P3oool00`000000oooo0?ooo`05
0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`28
0?ooo`030000003oool0oooo04<0oooo000l0?ooo`030000003oool0oooo0280oooo0P00000V0?oo
o`030000003oool0oooo0080oooo00<000000?ooo`3oool05`3oool00`000000oooo0?ooo`050?oo
o`030000003oool0oooo01P0oooo00D0_g@0000000000000000007Boo`070?ooo`030000003oool0
oooo00D0oooo00<000000?ooo`3oool0R@3oool00`000000oooo0?ooo`120?ooo`00?03oool00`00
0000oooo0?ooo`0R0?ooo`8000009P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo
01L0oooo00<000000?ooo`3oool01@3oool00`000000oooo0?ooo`0G0?ooo`070;md0000M;l0oooo
0?ooo`3ogi`0B00007Boo`060?ooo`030000003oool0oooo00D0oooo00<000000?ooo`3oool0R@3o
ool00`000000oooo0?ooo`120?ooo`00?03oool00`000000oooo0?ooo`0R0?ooo`8000009P3oool0
0`000000oooo0?ooo`020?ooo`030000003oool0oooo01L0oooo00<000000?ooo`3oool01@3oool0
0`000000oooo0?ooo`0L0?ooo`030?noM000M;l0oooo00D0oooo00<000000?ooo`3oool01@3oool0
0`000000oooo0?ooo`2:0?ooo`030000003oool0oooo0440oooo000l0?ooo`030000003oool0oooo
0280oooo0P00000V0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool05`3oool00`00
0000oooo0?ooo`050?ooo`030000003oool0oooo01`0oooo00<0okmd001d_`3oool01@3oool00`00
0000oooo0?ooo`050?ooo`030000003oool0oooo08X0oooo00<000000?ooo`3oool0@@3oool003`0
oooo00<000000?ooo`3oool08P3oool2000002H0oooo00<000000?ooo`3oool00P3oool00`000000
oooo0?ooo`0H0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0703oool00`2LB000
M;oo0?ooo`050?ooo`@000000`3oool00`000000oooo0?ooo`2<0?ooo`030000003oool0oooo0400
oooo000l0?ooo`030000003oool0oooo0280oooo0P00000V0?ooo`030000003oool0oooo0080oooo
00<000000?ooo`3oool0603oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01L0oooo
00<0oono07@0000000000P0000000`18W=l0oooo0?ooo`050?ooo`030000003oool0oooo00@0oooo
00<000000?ooo`3oool0S03oool00`000000oooo0?ooo`100?ooo`00?03oool00`000000oooo0?oo
o`0R0?ooo`8000009P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo01P0oooo00<0
00000?ooo`3oool0103oool00`000000oooo0?ooo`0G0?ooo`030?oo_`1d07@0_ooo00X0oooo00<0
00000?ooo`3oool0103oool00`000000oooo0?ooo`2=0?ooo`030000003oool0oooo03l0oooo000l
0?ooo`030000003oool0oooo0280oooo0P00000V0?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool0603oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo01L0oooo00<0oono
07@0M02oool02P3oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo08d0oooo00<00000
0?ooo`3oool0?`3oool003`0oooo00<000000?ooo`3oool08P3oool2000002H0oooo00D000000?oo
o`3oool0oooo0000000K0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool05`3oool0
0`3ookl0M00000000002000000030000M02oool0oooo00D0oooo00<000000?ooo`3oool0103oool0
0`000000oooo0?ooo`2>0?ooo`030000003oool0oooo03h0oooo000l0?ooo`030000003oool0oooo
0280oooo0P00000V0?ooo`050000003oool0oooo0?ooo`0000006`3oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool0103oool00`000000oooo0?ooo`2>
0?ooo`030000003oool0oooo03h0oooo000l0?ooo`030000003oool0oooo0280oooo0P00000V0?oo
o`050000003oool0oooo0?ooo`0000006`3oool00`000000oooo0?ooo`040?ooo`030000003oool0
oooo02@0oooo0`0000040?ooo`030000003oool0oooo08l0oooo00<000000?ooo`3oool0?@3oool0
03`0oooo00<000000?ooo`3oool08P3oool2000002H0oooo00D000000?ooo`3oool0oooo0000000K
0?ooo`030000003oool0oooo00@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`04
0?ooo`030000003oool0oooo08l0oooo00<000000?ooo`3oool0?@3oool003`0oooo00<000000?oo
o`3oool08P3oool2000002H0oooo00D000000?ooo`3oool0oooo0000000K0?ooo`030000003oool0
oooo00@0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`040?ooo`030000003oool0
oooo0900oooo00<000000?ooo`3oool0?03oool003`0oooo00<000000?ooo`3oool08P3oool20000
02H0oooo00D000000?ooo`3oool0oooo0000000K0?ooo`030000003oool0oooo00@0oooo00<00000
0?ooo`3oool0903oool00`000000oooo0?ooo`040?ooo`030000003oool0oooo0900oooo00<00000
0?ooo`3oool0?03oool003`0oooo00<000000?ooo`3oool08P3oool2000002H0oooo00D000000?oo
o`3oool0oooo0000000L0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0903oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo0940oooo00<000000?ooo`3oool0?03oool0
03`0oooo00<000000?ooo`3oool08P3oool2000002H0oooo00D000000?ooo`3oool0oooo0000000L
0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0903oool00`000000oooo0?ooo`03
0?ooo`030000003oool0oooo0980oooo00<000000?ooo`3oool0>`3oool003`0oooo00<000000?oo
o`3oool08P3oool2000002H0oooo00D000000?ooo`3oool0oooo0000000L0?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool0903oool3000000<0oooo00<000000?ooo`3oool0TP3oool0
0`000000oooo0?ooo`0k0?ooo`00?03oool00`000000oooo0?ooo`0R0?ooo`8000009P3oool01@00
0000oooo0?ooo`3oool0000001`0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0T
0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0T`3oool00`000000oooo0?ooo`0j
0?ooo`00?03oool00`000000oooo0?ooo`0R0?ooo`8000009P3oool01@000000oooo0?ooo`3oool0
000001`0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool0T`3oool00`000000oooo0?ooo`0j0?ooo`00?03oool00`00
0000oooo0?ooo`0R0?ooo`8000009P3oool01@000000oooo0?ooo`3oool0000001`0oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0oooo00<0oooo00<00000
0?ooo`3oool0U03oool00`000000oooo0?ooo`0i0?ooo`00?03oool00`000000oooo0?ooo`0R0?oo
o`8000009P3oool01@000000oooo0?ooo`3oool0000001`0oooo00<000000?ooo`3oool00`3oool0
0`000000oooo0?ooo`0T0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0U03oool0
0`000000oooo0?ooo`0i0?ooo`00?03oool00`000000oooo0?ooo`0R0?ooo`8000009P3oool01@00
0000oooo0?ooo`3oool0000001`0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0T
0?ooo`030000003oool0oooo00<0oooo00<000000?ooo`3oool0U@3oool00`000000oooo0?ooo`0h
0?ooo`00?03oool00`000000oooo0?ooo`0R0?ooo`8000009P3oool01@000000oooo0?ooo`3oool0
000001`0oooo00<000000?ooo`3oool00`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool0
oooo00<0oooo00<000000?ooo`3oool0U@3oool00`000000oooo0?ooo`0h0?ooo`00?03oool00`00
0000oooo0?ooo`0R0?ooo`8000009P3oool01@000000oooo0?ooo`3oool0000001`0oooo00<00000
0?ooo`3oool00`3oool00`000000oooo0?ooo`0T0?ooo`<000000`3oool00`000000oooo0?ooo`2E
0?ooo`030000003oool0oooo03P0oooo000l0?ooo`030000003oool0oooo0280oooo0P00000V0?oo
o`050000003oool0oooo0?ooo`000000703oool00`000000oooo0?ooo`030?ooo`030000003oool0
oooo02@0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`2G0?ooo`030000003oool0
oooo03L0oooo000l0?ooo`030000003oool0oooo0280oooo0P00000V0?ooo`050000003oool0oooo
0?ooo`000000703oool00`000000oooo0?ooo`030?ooo`030000003oool0oooo02@0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`2G0?ooo`030000003oool0oooo03L0oooo000l0?oo
o`030000003oool0oooo0280oooo0P00000V0?ooo`050000003oool0oooo0?ooo`000000703oool0
0`000000oooo0?ooo`030?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`2G0?ooo`030000003oool0oooo03L0oooo000l0?ooo`030000003oool0oooo
0280oooo0P00000V0?ooo`050000003oool0oooo0?ooo`0000007@3oool00`000000oooo0?ooo`02
0?ooo`030000003oool0oooo02@0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`2H
0?ooo`030000003oool0oooo03H0oooo000l0?ooo`030000003oool0oooo0280oooo0P00000V0?oo
o`040000003oool0oooo000001h0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`0T
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0V03oool00`000000oooo0?ooo`0f
0?ooo`00?03oool00`000000oooo0?ooo`0R0?ooo`8000009P3oool010000000oooo0?ooo`00000N
0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0903oool300000080oooo00<00000
0?ooo`3oool0V03oool00`000000oooo0?ooo`0f0?ooo`00?03oool00`000000oooo0?ooo`0R0?oo
o`8000009P3oool010000000oooo0?ooo`00000N0?ooo`030000003oool0oooo0080oooo00<00000
0?ooo`3oool0903oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo09P0oooo00<00000
0?ooo`3oool0=P3oool003`0oooo00<000000?ooo`3oool08P3oool2000002H0oooo00@000000?oo
o`3oool000007P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo02@0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`2I0?ooo`030000003oool0oooo03D0oooo000l0?oo
o`030000003oool0oooo0280oooo0P00000V0?ooo`040000003oool0oooo000001h0oooo00<00000
0?ooo`3oool00P3oool00`000000oooo0?ooo`070?ooo`030?oOW018B9`0oooo00H0oooo00<0_g@0
00000000M;l01@3oool01@2oM0000000000000000000M;oo00L0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`2I0?ooo`030000003oool0oooo03D0oooo000l0?ooo`030000003oool0
oooo0280oooo0P00000V0?ooo`040000003oool0oooo000001h0oooo00<000000?ooo`3oool00P3o
ool00`000000oooo0?ooo`080?ooo`0309a8B02Lgol0oooo00D0oooo00<0_g@000000000M;l0103o
ool01`2oM00007Bo0?ooo`3oool0omnL04P0001d_ol01P3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo09T0oooo00<000000?ooo`3oool0=@3oool003`0oooo00<000000?ooo`3oool0
8P3oool2000002H0oooo00@000000?ooo`3oool000007P3oool00`000000oooo0?ooo`020?ooo`03
0000003oool0oooo00P0oooo00<0gia804RLg`3oool04@3oool00`3o_g@007Bo0?ooo`050?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool0VP3oool00`000000oooo0?ooo`0d0?ooo`00
?03oool00`000000oooo0?ooo`0R0?ooo`8000009P3oool010000000oooo0?ooo`00000N0?ooo`03
0000003oool0oooo0080oooo00<000000?ooo`3oool0203oool00`3ogi`0B4RL0?ooo`0A0?ooo`03
0?noM000M;l0oooo00D0oooo100000000`3oool000000?ooo`2K0?ooo`030000003oool0oooo03@0
oooo000l0?ooo`030000003oool0oooo0280oooo0P00000V0?ooo`040000003oool0oooo000001h0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`090?ooo`0309a8B02Lgol0oooo0100
oooo00<0W4P007Boo`3oool01@3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo09X0
oooo00<000000?ooo`3oool0=03oool003`0oooo00<000000?ooo`3oool08P3oool2000002H0oooo
00@000000?ooo`3oool000007P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo00T0
oooo00<0gia804RLg`3oool02`3oool00`3ookl0M000000000020000000304RLg`3oool0oooo00D0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`2K0?ooo`030000003oool0oooo03<0
oooo000l0?ooo`030000003oool0oooo0280oooo0P00000V0?ooo`040000003oool0oooo000001h0
oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`090?ooo`030?oOW018B9`0oooo00/0
oooo00<0oono07@0M02oool02P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo09/0
oooo00<000000?ooo`3oool0<`3oool003`0oooo00<000000?ooo`3oool08P3oool2000002H0oooo
00@000000?ooo`3oool000007`3oool01@000000oooo0?ooo`3oool0000000L0oooo00<0_gA809cO
o`3oool00P3oool00`2oM4P0W=oo0?ooo`0:0?ooo`030?oo_`1d07@0_ooo00X0oooo00<000000?oo
o`3oool00P3oool00`000000oooo0?ooo`2K0?ooo`030000003oool0oooo03<0oooo000l0?ooo`03
0000003oool0oooo0280oooo0P00000V0?ooo`040000003oool0oooo000001l0oooo00D000000?oo
o`3oool0oooo000000070?ooo`030;md00000000000000<0000000<0M;oo0?ooo`3oool02@3oool0
0`3ookl0M00000000002000000030000M02oool0oooo00D0oooo00<000000?ooo`3oool00P3oool0
0`000000oooo0?ooo`2L0?ooo`030000003oool0oooo0380oooo000l0?ooo`030000003oool0oooo
0280oooo0P00000V0?ooo`040000003oool0oooo000001l0oooo00D000000?ooo`3oool0oooo0000
000V0?ooo`030000003oool0oooo0080oooo00<000000?ooo`3oool0W03oool00`000000oooo0?oo
o`0b0?ooo`00?03oool00`000000oooo0?ooo`0R0?ooo`8000009P3oool010000000oooo0?ooo`00
000O0?ooo`050000003oool0oooo0?ooo`0000009P3oool300000080oooo00<000000?ooo`3oool0
W03oool00`000000oooo0?ooo`0b0?ooo`00?03oool00`000000oooo0?ooo`0R0?ooo`8000009P3o
ool010000000oooo0?ooo`00000O0?ooo`050000003oool0oooo0?ooo`0000009P3oool00`000000
oooo0?ooo`020?ooo`030000003oool0oooo09`0oooo00<000000?ooo`3oool0<P3oool003`0oooo
00<000000?ooo`3oool08P3oool2000002H0oooo00@000000?ooo`3oool000007`3oool01@000000
oooo0?ooo`3oool0000002H0oooo00<000000?ooo`3oool00P3oool00`000000oooo0?ooo`2M0?oo
o`030000003oool0oooo0340oooo000l0?ooo`030000003oool0oooo0280oooo0P00000V0?ooo`04
0000003oool0oooo000001l0oooo00D000000?ooo`3oool0oooo0000000V0?ooo`030000003oool0
oooo0080oooo00<000000?ooo`3oool0W@3oool00`000000oooo0?ooo`0a0?ooo`00?03oool00`00
0000oooo0?ooo`0R0?ooo`8000009P3oool010000000oooo0?ooo`00000O0?ooo`050000003oool0
oooo0?ooo`0000009P3oool00`000000oooo0?ooo`020?ooo`030000003oool0oooo09d0oooo00<0
00000?ooo`3oool0<@3oool003`0oooo00<000000?ooo`3oool08P3oool2000002H0oooo00@00000
0?ooo`3oool000007`3oool01@000000oooo0?ooo`3oool0000002H0oooo00D000000?ooo`3oool0
oooo0000002Q0?ooo`030000003oool0oooo0300oooo000l0?ooo`030000003oool0oooo02<0oooo
00<000000?ooo`3oool0903oool010000000oooo0?ooo`00000O0?ooo`050000003oool0oooo0?oo
o`0000009P3oool3000000030?ooo`000000oooo0:00oooo00<000000?ooo`3oool0<03oool003`0
oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`040000003oool0oooo0000
01l0oooo00D000000?ooo`3oool0oooo0000000V0?ooo`050000003oool0oooo0?ooo`000000X@3o
ool00`000000oooo0?ooo`0`0?ooo`00?03oool00`000000oooo0?ooo`0S0?ooo`030000003oool0
oooo02@0oooo00@000000?ooo`3oool000007`3oool01@000000oooo0?ooo`3oool0000002H0oooo
00D000000?ooo`3oool0oooo0000002Q0?ooo`030000003oool0oooo0300oooo000l0?ooo`030000
003oool0oooo02<0oooo00<000000?ooo`3oool0903oool010000000oooo0?ooo`00000O0?ooo`05
0000003oool0oooo0?ooo`0000009P3oool01@000000oooo0?ooo`3oool000000:80oooo00<00000
0?ooo`3oool0;`3oool003`0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?oo
o`040000003oool0oooo000001l0oooo00D000000?ooo`3oool0oooo0000000V0?ooo`050000003o
ool0oooo0?ooo`000000XP3oool00`000000oooo0?ooo`0_0?ooo`00?03oool00`000000oooo0?oo
o`0S0?ooo`030000003oool0oooo02@0oooo00@000000?ooo`3oool000007`3oool01@000000oooo
0?ooo`3oool0000002H0oooo00D000000?ooo`3oool0oooo0000002R0?ooo`030000003oool0oooo
02l0oooo000l0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3oool0903oool010000000
oooo0?ooo`00000O0?ooo`050000003oool0oooo0?ooo`0000009P3oool3000000030?ooo`000000
oooo0:40oooo00<000000?ooo`3oool0;`3oool003`0oooo00<000000?ooo`3oool08`3oool00`00
0000oooo0?ooo`0T0?ooo`040000003oool0oooo000001l0oooo00D000000?ooo`3oool0oooo0000
000V0?ooo`050000003oool0oooo0?ooo`000000XP3oool00`000000oooo0?ooo`0_0?ooo`00?03o
ool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo00@000000?ooo`3oool00000
7`3oool01@000000oooo0?ooo`3oool0000002H0oooo00D000000?ooo`3oool0oooo0000002S0?oo
o`030000003oool0oooo02h0oooo000l0?ooo`030000003oool0oooo02<0oooo00<000000?ooo`3o
ool0903oool010000000oooo0?ooo`00000O0?ooo`050000003oool0oooo0?ooo`0000009P3oool0
1@000000oooo0?ooo`3oool000000:<0oooo00<000000?ooo`3oool0;P3oool003`0oooo00<00000
0?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`040000003oool0oooo000001l0oooo00D0
00000?ooo`3oool0oooo0000000V0?ooo`050000003oool0oooo0?ooo`000000X`3oool00`000000
oooo0?ooo`0^0?ooo`00?03oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0oooo
00@000000?ooo`3oool000007`3oool01@000000oooo0?ooo`3oool0000002H0oooo00D000000?oo
o`3oool0oooo0000002S0?ooo`030000003oool0oooo02h0oooo000l0?ooo`030000003oool0oooo
02<0oooo00<000000?ooo`3oool0903oool00`000000oooo0000000P0?ooo`050000003oool0oooo
0?ooo`0000009P3oool3000000030?ooo`000000oooo0:<0oooo00<000000?ooo`3oool0;@3oool0
03`0oooo00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool00000
0200oooo00D000000?ooo`3oool0oooo0000000V0?ooo`050000003oool0oooo0?ooo`000000Y03o
ool00`000000oooo0?ooo`0]0?ooo`00?03oool00`000000oooo0?ooo`0S0?ooo`030000003oool0
oooo02@0oooo00<000000?ooo`000000803oool01@000000oooo0?ooo`3oool0000002H0oooo00D0
00000?ooo`3oool0oooo0000002T0?ooo`030000003oool0oooo02d0oooo000l0?ooo`030000003o
ool0oooo02<0oooo00<000000?ooo`3oool0903oool00`000000oooo0000000P0?ooo`050000003o
ool0oooo0?ooo`000000403oool00`3o_g@000000000000300000005001d_`3oool0oooo0?ooo`3o
_g@00`0000000`1d_ol0oooo0?ooo`050?ooo`050000003oool0oooo0?ooo`000000Y03oool00`00
0000oooo0?ooo`0]0?ooo`00?03oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0
oooo00<000000?ooo`000000803oool01@000000oooo0?ooo`3oool0000001<0oooo00<0W4Q809cO
o`3oool0103oool01P2LB7@0_ooo0?ooo`3ookl0M01d0;ooo`H0oooo00D000000?ooo`3oool0oooo
0000002T0?ooo`030000003oool0oooo02d0oooo000l0?ooo`030000003oool0oooo02<0oooo00<0
00000?ooo`3oool0903oool00`000000oooo0000000P0?ooo`050000003oool0oooo0?ooo`000000
4`3oool00`2LB4P0W=oo0?ooo`030?ooo`030?noM000M;l0oooo0080oooo00<0gia804RLg`3oool0
1@3oool01@000000oooo0?ooo`3oool000000:D0oooo00<000000?ooo`3oool0;03oool003`0oooo
00<000000?ooo`3oool08`3oool00`000000oooo0?ooo`0T0?ooo`030000003oool000000200oooo
00D000000?ooo`3oool0oooo0000000C0?ooo`0309a8B02Lgol0oooo00<0oooo00<0gia804RLg`3o
ool00P3oool00`3o_g@007Bo0?ooo`050?ooo`050000003oool0oooo0?ooo`000000Y@3oool00`00
0000oooo0?ooo`0/0?ooo`00?03oool00`000000oooo0?ooo`0S0?ooo`030000003oool0oooo02@0
oooo00<000000?ooo`000000803oool01@000000oooo0?ooo`3oool0000001<0oooo00<0W4Q809cO
o`3oool00`3oool00`3OW4P0B9cO0?ooo`020?ooo`030?noM000M;l0oooo00D0oooo1@00002U0?oo
o`030000003oool0oooo02`0oooo00340?ooo`0309a8B02Lgol0oooo00<0oooo00<0gia804RLg`3o
ool00P3oool00`3o_g@007Bo0?ooo`3N0?ooo`00a03oool00`2LB4P0W=oo0?ooo`030?ooo`030?no
M018W=l0oooo0080oooo00<0gia804RLg`3oool0gP3oool00<40oooo00D0gia800000000B9`0W4Q8
09cOo`050?ooo`0609a8001d_ol0oooo0?oOW01807@0_ooog`3oool00<<0oooo00<0gia80000B02L
gol01@3oool01@3ookl0M0000000000004P0W=oo0>00oooo003o0?oook40oooo003o0?oook40oooo
0000\
\>"],
  ImageRangeCache->{{{0, 431}, {265.813, 0}} -> {-5.54258, -10.5352, \
0.0385794, 0.118901}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exercises", "ExerciseMain"],

Cell[CellGroupData[{

Cell["A peculiar function using types and defaults", "ExerciseTitle"],

Cell[TextData[{
  "Define and test a function which accepts a list, a real number, and an \
integer, given as arguments in ",
  StyleBox["any",
    FontSlant->"Italic"],
  " order, and returns ",
  Cell[BoxData[
      FormBox[
        SuperscriptBox[
          RowBox[{"(", 
            StyleBox[\(real\ list\),
              FontSlant->"Italic"], 
            StyleBox[")",
              FontSlant->"Italic"]}], 
          StyleBox["integer",
            FontSlant->"Italic"]], TraditionalForm]]],
  ".  Give default values of 1 for the real and 2 for the integer argument.  \
You will need to choose appropriate attributes and patterns."
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Frequency of adjacent repetitions", "ExerciseTitle"],

Cell[TextData[{
  "Write (and test) a function which accepts a one-dimensional list and \
returns a list that contains one or more sublists of the form {",
  StyleBox["element",
    FontSlant->"Italic"],
  ",",
  StyleBox["nAdjacent",
    FontSlant->"Italic"],
  "} in which ",
  StyleBox["element",
    FontSlant->"Italic"],
  " is an element of the original list and ",
  StyleBox["nAdjacent",
    FontSlant->"Italic"],
  " is the number of adjacent repetitions of that element.  For example, if \
the input is {a,a,b,a,a,a,c,c,b,b,b,b,a,d} the output should be \
{{a,2},{b,1},{a,3},{c,2},{b,4},{a,1},{d,1}}.  Note that this function is not \
equivalent to ",
  StyleBox["Frequencies", "InlineInput"],
  ".  [Hint: use ",
  StyleBox["Map", "InlineInput"],
  " to form a list of the form {{element1,1},{element2,1}...} and then \
repeated replacement using a pattern that looks for adjacent repetitions \
surrounded by arbitrary elements.] "
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["A list filter", "ExerciseTitle"],

Cell[TextData[{
  "Write (and test) a function which accepts a list of numbers and produces a \
list containing the first number and all numbers which are larger than all \
preceding numbers in the original list.  For example, if the input is ",
  StyleBox["{2,-3,1,\[Pi],8,-10,12,5}", "InlineInput"],
  " the output should be ",
  StyleBox["{2,\[Pi],8,12}", "InlineInput"],
  ".  Your function should respond only to a one-dimensional list of numeric \
quantities."
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Dressed to the nines", "ExerciseTitle"],

Cell[TextData[{
  "a) Within the first 1000 digits of the decimal representation of \[Pi] can \
be found a sequence of 6 consecutive nines.  Use ",
  StyleBox["Mathematica",
    FontSlant->"Italic"],
  " functions to locate this sequence.\nb) Write a function which locates an \
arbitrary sequence of digits within a decimal number of specified length."
}], "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cartesian to polar coordinates", "ExerciseTitle"],

Cell[TextData[{
  "Write a function that transforms a pair of Cartesian coordinate ",
  Cell[BoxData[
      \(TraditionalForm\`{x, y}\)]],
  " to polar form ",
  Cell[BoxData[
      \(TraditionalForm\`{r, \[Theta]}\)]],
  " using the quadrant-sensitive form of ",
  StyleBox["ArcTan", "InlineInput"],
  " that accepts two arguments.  Define another function which performs the \
inverse transformation.  Then provide versions that work with lists of \
coordinate pairs of the form ",
  Cell[BoxData[
      \(TraditionalForm\`{{x\_1, y\_1}, \ {x\_2, 
          y\_2}, \ \[CenterEllipsis]}\)]],
  " using the appropriate patterns.  Be sure to test your function on \
representative input."
}], "ExerciseText"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
FrontEndVersion->"5.2 for Microsoft Windows",
ScreenRectangle->{{0, 1400}, {0, 952}},
ScreenStyleEnvironment->"Working",
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{1392, 912},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
ShowCellLabel->False,
Magnification->1.5,
StyleDefinitions -> Notebook[{
  
  Cell[CellGroupData[{
  Cell["Style Definitions", "Subtitle"],
  
  Cell["\<\
Modify the definitions below to change the default appearance of all cells in \
a given style.  Make modifications to any definition using commands in the \
Format menu.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell["Style Environment Names", "Section"],
  
  Cell[StyleData[All, "Working"],
    PageWidth->WindowWidth,
    ScriptMinSize->9],
  
  Cell[StyleData[All, "Presentation"],
    PageWidth->WindowWidth,
    ScriptMinSize->12,
    FontSize->16],
  
  Cell[StyleData[All, "Condensed"],
    PageWidth->PaperWidth,
    CellBracketOptions->{"Margins"->{1, 1},
    "Widths"->{0, 5}},
    ScriptMinSize->7,
    FontSize->10],
  
  Cell[StyleData[All, "Printout"],
    PageWidth->PaperWidth,
    ScriptMinSize->7,
    FontSize->10,
    PrivateFontOptions->{"FontType"->"Outline"}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Notebook Options", "Section"],
  
  Cell["\<\
The options defined for the style below will be used at the Notebook level.\
\>", "Text"],
  
  Cell[StyleData["Notebook"],
    PageHeaders->{{Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"], None, Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"]}, {Cell[ 
            TextData[ {
              ValueBox[ "FileName"]}], "Header"], None, Cell[ 
            TextData[ {
              CounterBox[ "Page"]}], "PageNumber"]}},
    PageFooters->{{Cell[ 
            TextData[ {"Essential Mathematica for Students of Science"}], 
            "Footer"], None, Cell[ 
            TextData[ {"\[Copyright] James J. Kelly, 1998"}], "Footer"]}, {
        Cell[ 
            TextData[ {"Essential Mathematica for Students of Science"}], 
            "Footer"], None, Cell[ 
            TextData[ {"\[Copyright] James J. Kelly, 1998"}], "Footer"]}},
    PageHeaderLines->{True, True},
    PageFooterLines->{True, True},
    PrintingOptions->{"FirstPageHeader"->False,
    "FacingPages"->True},
    CellFrameLabelMargins->6,
    StyleMenuListing->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headings", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Title"],
    ShowCellBracket->True,
    CellMargins->{{0, 0}, {0, 0}},
    CellGroupingRules->"TitleGrouping",
    PageBreakBelow->False,
    LineSpacing->{1, 0},
    CounterIncrements->"Title",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subtitle", 0}, {"Subsubtitle", 0}},
    FontSize->34,
    FontColor->GrayLevel[1],
    Background->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["Title", "Presentation"],
    CellMargins->{{0, 0}, {0, 0}},
    LineSpacing->{1, 0},
    FontSize->44],
  
  Cell[StyleData["Title", "Condensed"],
    CellMargins->{{0, 0}, {0, 0}},
    FontSize->24],
  
  Cell[StyleData["Title", "Printout"],
    CellMargins->{{0, 0}, {0, 0}},
    FontSize->24,
    FontTracking->"Plain",
    FontColor->GrayLevel[0],
    Background->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subtitle"],
    CellMargins->{{0, 0}, {0, 0}},
    PageBreakBelow->False,
    LineSpacing->{1, 3},
    ParagraphIndent->-96,
    CounterIncrements->"Subtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
        "Subsubtitle", 0}},
    FontFamily->"Helvetica",
    FontSize->18,
    FontColor->GrayLevel[1],
    Background->RGBColor[0.2, 0.700008, 0.700008]],
  
  Cell[StyleData["Subtitle", "Presentation"],
    CellMargins->{{0, 0}, {0, 0}},
    LineSpacing->{1, 6},
    ParagraphIndent->-157,
    FontSize->30],
  
  Cell[StyleData["Subtitle", "Condensed"],
    CellMargins->{{0, 0}, {0, 0}},
    ParagraphIndent->-78,
    FontSize->14],
  
  Cell[StyleData["Subtitle", "Printout"],
    CellMargins->{{0, 0}, {0, 0}},
    ParagraphIndent->-85,
    FontSize->16,
    FontColor->GrayLevel[0],
    Background->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubtitle"],
    ShowCellBracket->True,
    CellMargins->{{10, 4}, {30, 10}},
    PageBreakBelow->False,
    CounterIncrements->"Subsubtitle",
    CounterAssignments->{{"Section", 0}, {"Equation", 0}, {"Figure", 0}},
    FontFamily->"Helvetica",
    FontSize->14,
    FontSlant->"Italic"],
  
  Cell[StyleData["Subsubtitle", "Presentation"],
    ShowCellBracket->True,
    CellMargins->{{8, 10}, {40, 20}},
    LineSpacing->{1, 0},
    FontSize->24],
  
  Cell[StyleData["Subsubtitle", "Condensed"],
    ShowCellBracket->True,
    CellMargins->{{8, 10}, {12, 8}},
    FontSize->12],
  
  Cell[StyleData["Subsubtitle", "Printout"],
    ShowCellBracket->True,
    CellMargins->{{9, 10}, {50, 10}},
    FontSize->14]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Section"],
    CellFrame->{{0, 0}, {0, 1}},
    CellDingbat->None,
    CellMargins->{{12, Inherited}, {4, 24}},
    CellGroupingRules->{"SectionGrouping", 30},
    PageBreakBelow->False,
    CellFrameMargins->6,
    CounterIncrements->"Section",
    CounterAssignments->{{"Subsection", 0}, {"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->16,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["Section", "Presentation"],
    CellMargins->{{10, 10}, {8, 32}},
    LineSpacing->{1, 2},
    FontSize->24,
    FontTracking->"Condensed"],
  
  Cell[StyleData["Section", "Condensed"],
    CellMargins->{{9, 0}, {2, 50}},
    FontSize->14],
  
  Cell[StyleData["Section", "Printout"],
    CellMargins->{{9, 0}, {2, 50}},
    FontSize->14,
    FontTracking->"Plain",
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsection"],
    CellMargins->{{12, Inherited}, {8, 20}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->13,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsection", "Presentation"],
    CellMargins->{{11, 10}, {8, 32}},
    LineSpacing->{1, 0},
    FontSize->22],
  
  Cell[StyleData["Subsection", "Condensed"],
    CellMargins->{{8, Inherited}, {2, 12}},
    FontSize->12],
  
  Cell[StyleData["Subsection", "Printout"],
    CellMargins->{{9, 0}, {4, 40}},
    FontSize->12]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Subsubsection"],
    CellDingbat->"\[FilledSquare]",
    CellMargins->{{25, Inherited}, {8, 12}},
    CellGroupingRules->{"SectionGrouping", 50},
    PageBreakBelow->False,
    CounterIncrements->"Subsubsection",
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Bold"],
  
  Cell[StyleData["Subsubsection", "Presentation"],
    CellMargins->{{29, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Subsubsection", "Condensed"],
    CellMargins->{{21, 0}, {4, 20}},
    FontSize->11],
  
  Cell[StyleData["Subsubsection", "Printout"],
    CellMargins->{{21, 0}, {4, 20}},
    FontSize->11]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Body Text", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Text"],
    CellMargins->{{12, 10}, {5, 5}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 12},
    CounterIncrements->"Text",
    FontFamily->"Times"],
  
  Cell[StyleData["Text", "Presentation"],
    CellMargins->{{13, 10}, {8, 8}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12},
    FontSize->16],
  
  Cell[StyleData["Text", "Condensed"],
    CellMargins->{{9, 0}, {4, 4}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 6}],
  
  Cell[StyleData["Text", "Printout"],
    CellMargins->{{9, 0}, {4, 4}},
    ParagraphSpacing->{0, 6}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["SmallText"],
    CellMargins->{{12, 10}, {5, 5}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 6},
    CounterIncrements->"SmallText",
    FontFamily->"Helvetica",
    FontSize->9],
  
  Cell[StyleData["SmallText", "Presentation"],
    CellMargins->{{13, 10}, {8, 8}},
    LineSpacing->{1, 5},
    FontSize->12],
  
  Cell[StyleData["SmallText", "Condensed"],
    CellMargins->{{8, 10}, {2, 2}},
    LineSpacing->{1, 2},
    FontSize->9],
  
  Cell[StyleData["SmallText", "Printout"],
    CellMargins->{{9, 0}, {4, 4}}]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Input/Output", "Section"],
  
  Cell["\<\
The cells in this section define styles used for input and output to the \
kernel.  Be careful when modifying, renaming, or removing these styles, \
because the front end associates special meanings with these style names.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Input"],
    CellFrame->0.5,
    CellMargins->{{25, 10}, {8, 8}},
    Evaluatable->True,
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{5, Inherited}, {Inherited, Inherited}},
    DefaultFormatType->DefaultInputFormatType,
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    CounterIncrements->"Input",
    FontWeight->"Bold",
    Background->RGBColor[1, 0.700008, 0.4]],
  
  Cell[StyleData["Input", "Presentation"],
    CellMargins->{{25, Inherited}, {10, 10}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Input", "Condensed"],
    CellMargins->{{25, 0}, {6, 6}}],
  
  Cell[StyleData["Input", "Printout"],
    CellFrame->0.5,
    CellMargins->{{25, 0}, {6, 6}},
    Background->None]
  }, Closed]],
  
  Cell[StyleData["InlineInput"],
    CellGroupingRules->"InputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    DefaultFormatType->DefaultInputFormatType,
    AutoItalicWords->{},
    FormatType->InputForm,
    ShowStringCharacters->True,
    NumberMarks->True,
    CounterIncrements->"Input",
    FontWeight->"Bold"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Output"],
    CellFrame->True,
    CellMargins->{{25, 10}, {8, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4},
    CellEditDuplicate->True,
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    CellLabelMargins->{{3, Inherited}, {Inherited, Inherited}},
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Output",
    Background->RGBColor[1, 0.900008, 0.900008]],
  
  Cell[StyleData["Output", "Presentation"],
    CellMargins->{{25, Inherited}, {12, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Output", "Condensed"],
    CellMargins->{{25, 0}, {6, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4}],
  
  Cell[StyleData["Output", "Printout"],
    CellMargins->{{25, 0}, {6, 0}},
    CellElementSpacings->{"ClosedGroupTopMargin"->4},
    Background->None]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Message"],
    CellMargins->{{62, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Message",
    StyleMenuListing->None,
    FontColor->RGBColor[1, 0, 0]],
  
  Cell[StyleData["Message", "Presentation"],
    CellMargins->{{74, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Message", "Condensed"],
    CellMargins->{{50, Inherited}, {Inherited, Inherited}}],
  
  Cell[StyleData["Message", "Printout"],
    CellMargins->{{54, Inherited}, {Inherited, Inherited}},
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Print"],
    CellMargins->{{62, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"OutputGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Print",
    StyleMenuListing->None],
  
  Cell[StyleData["Print", "Presentation"],
    CellMargins->{{74, Inherited}, {Inherited, Inherited}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Print", "Condensed"],
    CellMargins->{{50, Inherited}, {Inherited, Inherited}}],
  
  Cell[StyleData["Print", "Printout"],
    CellMargins->{{54, Inherited}, {Inherited, Inherited}}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Graphics"],
    CellMargins->{{62, Inherited}, {Inherited, Inherited}},
    CellGroupingRules->"GraphicsGrouping",
    CellHorizontalScrolling->True,
    PageBreakWithin->False,
    GeneratedCell->True,
    CellAutoOverwrite->True,
    ShowCellLabel->False,
    DefaultFormatType->DefaultOutputFormatType,
    FormatType->InputForm,
    CounterIncrements->"Graphics",
    StyleMenuListing->None],
  
  Cell[StyleData["Graphics", "Presentation"],
    CellMargins->{{74, Inherited}, {Inherited, Inherited}}],
  
  Cell[StyleData["Graphics", "Condensed"],
    CellMargins->{{52, Inherited}, {Inherited, Inherited}},
    ImageSize->{175, 175}],
  
  Cell[StyleData["Graphics", "Printout"],
    CellMargins->{{54, Inherited}, {Inherited, Inherited}},
    ImageSize->{250, 250}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["CellLabel"],
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->11,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["CellLabel", "Presentation"],
    FontSize->12],
  
  Cell[StyleData["CellLabel", "Condensed"],
    FontSize->8],
  
  Cell[StyleData["CellLabel", "Printout"],
    FontSize->8,
    FontColor->GrayLevel[0]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Unique Styles", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Author"],
    CellMargins->{{10, 4}, {2, 10}},
    FontSize->12,
    FontSlant->"Italic"],
  
  Cell[StyleData["Author", "Presentation"],
    CellMargins->{{12, 10}, {2, 12}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12},
    FontSize->16],
  
  Cell[StyleData["Author", "Condensed"],
    CellMargins->{{8, 10}, {1, 4}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 4},
    FontSize->9],
  
  Cell[StyleData["Author", "Printout"],
    CellMargins->{{9, 0}, {4, 12}},
    ParagraphSpacing->{0, 6}]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Copyright"],
    CellMargins->{{10, 10}, {40, 2}},
    FontFamily->"Helvetica",
    FontSize->9],
  
  Cell[StyleData["Copyright", "Presentation"],
    CellMargins->{{12, 10}, {50, 2}},
    LineSpacing->{1, 5},
    FontSize->12],
  
  Cell[StyleData["Copyright", "Condensed"],
    CellMargins->{{8, 10}, {12, 1}},
    LineSpacing->{1, 2},
    FontSize->9],
  
  Cell[StyleData["Copyright", "Printout"],
    CellMargins->{{9, 0}, {72, 4}},
    FontSize->7]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Abstract"],
    CellMargins->{{45, 75}, {Inherited, 30}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Abstract", "Printout"],
    CellMargins->{{36, 67}, {Inherited, 50}},
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Example"],
    CellMargins->{{12, 10}, {5, 12}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 12},
    CounterIncrements->"Example",
    FontFamily->"Times",
    FontWeight->"Bold"],
  
  Cell[StyleData["Example", "Presentation"],
    CellMargins->{{18, 10}, {8, 20}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12}],
  
  Cell[StyleData["Example", "Condensed"],
    CellMargins->{{8, 10}, {4, 8}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 4}],
  
  Cell[StyleData["Example", "Printout"],
    CellMargins->{{9, 0}, {4, 10}},
    ParagraphSpacing->{0, 6}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Definition"],
    CellFrame->{{3, 0}, {0, 0}},
    CellMargins->{{52, 10}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Definition",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontColor->GrayLevel[1],
    Background->RGBColor[0.2, 0.700008, 0.700008]],
  
  Cell[StyleData["Definition", "Presentation"],
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Definition", "Condensed"],
    CellMargins->{{40, 10}, {1, 4}}],
  
  Cell[StyleData["Definition", "Printout"],
    CellMargins->{{44, 0}, {2, 6}},
    Background->GrayLevel[0.6]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Theorem"],
    CellFrame->{{3, 0}, {0, 0}},
    CellMargins->{{52, 10}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Theorem",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontColor->GrayLevel[1],
    Background->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["Theorem", "Presentation"],
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Theorem", "Condensed"],
    CellMargins->{{40, 10}, {1, 4}}],
  
  Cell[StyleData["Theorem", "Printout"],
    CellMargins->{{44, 0}, {2, 6}},
    Background->GrayLevel[0.4]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Caution"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{52, 25}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Caution",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->GrayLevel[0],
    Background->RGBColor[0.996109, 0, 0],
    FontVariations->{"Underline"->False}],
  
  Cell[StyleData["Caution", "Presentation"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Caution", "Condensed"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{40, 25}, {1, 4}}],
  
  Cell[StyleData["Caution", "Printout"],
    CellFrame->False,
    CellDingbat->"\[WarningSign]",
    CellMargins->{{44, 25}, {2, 6}},
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Advice"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{52, 25}, {8, 8}},
    PageBreakWithin->False,
    GroupPageBreakWithin->False,
    CellLabelMargins->{{23, Inherited}, {Inherited, Inherited}},
    ShowStringCharacters->True,
    CounterIncrements->"Advice",
    FontFamily->"Helvetica",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->GrayLevel[0],
    Background->RGBColor[0, 1, 0],
    FontVariations->{"Underline"->False}],
  
  Cell[StyleData["Advice", "Presentation"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{62, Inherited}, {5, 12}},
    LineSpacing->{1, 0}],
  
  Cell[StyleData["Advice", "Condensed"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{40, 25}, {1, 4}}],
  
  Cell[StyleData["Advice", "Printout"],
    CellFrame->False,
    CellDingbat->"\[LightBulb]",
    CellMargins->{{44, 25}, {2, 6}},
    Background->GrayLevel[0.900008]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Exercise"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{23, Inherited}, {4, 18}},
    CellGroupingRules->"NormalGrouping",
    PageBreakBelow->False,
    CounterIncrements->"Subsubsection",
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Bold",
    FontColor->RGBColor[0, 0, 0.996109]],
  
  Cell[StyleData["Exercise", "Presentation"],
    CellMargins->{{33, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Exercise", "Condensed"],
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11],
  
  Cell[StyleData["Exercise", "Printout"],
    CellFrame->False,
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11,
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ExerciseMain"],
    CellFrame->{{6, 0}, {0, 1}},
    CellMargins->{{12, Inherited}, {4, 20}},
    CellGroupingRules->{"SectionGrouping", 30},
    PageBreakBelow->False,
    CellFrameColor->RGBColor[0.571389, 0.19675, 0.570504],
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Helvetica",
    FontSize->16,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["ExerciseMain", "Presentation"],
    CellMargins->{{18, 10}, {8, 32}},
    LineSpacing->{1, 2},
    FontSize->24,
    FontTracking->"Condensed"],
  
  Cell[StyleData["ExerciseMain", "Condensed"],
    CellMargins->{{9, 0}, {2, 50}},
    FontSize->14],
  
  Cell[StyleData["ExerciseMain", "Printout"],
    CellMargins->{{9, 0}, {2, 50}},
    CellFrameColor->GrayLevel[0.500008],
    FontSize->14,
    FontTracking->"Plain",
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ExerciseTitle"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{23, Inherited}, {4, 18}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Bold",
    FontColor->RGBColor[0.571389, 0.19675, 0.570504]],
  
  Cell[StyleData["ExerciseTitle", "Presentation"],
    CellMargins->{{33, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["ExerciseTitle", "Condensed"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11],
  
  Cell[StyleData["ExerciseTitle", "Printout"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11,
    FontColor->GrayLevel[0]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ExerciseText"],
    CellMargins->{{32, 10}, {5, 5}},
    LineSpacing->{1, 3},
    ParagraphSpacing->{0, 8},
    CounterIncrements->"ExcersiceText",
    FontFamily->"Times"],
  
  Cell[StyleData["ExerciseText", "Presentation"],
    CellMargins->{{32, 10}, {8, 8}},
    LineSpacing->{1, 5},
    ParagraphSpacing->{0, 12}],
  
  Cell[StyleData["ExerciseText", "Condensed"],
    CellMargins->{{32, 0}, {4, 4}},
    LineSpacing->{1, 1},
    ParagraphSpacing->{0, 6}],
  
  Cell[StyleData["ExerciseText", "Printout"],
    CellMargins->{{32, 0}, {4, 4}},
    ParagraphSpacing->{0, 6}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Problem"],
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{23, Inherited}, {4, 18}},
    CellGroupingRules->{"SectionGrouping", 40},
    PageBreakBelow->False,
    CounterIncrements->"Subsection",
    CounterAssignments->{{"Subsubsection", 0}},
    FontFamily->"Times",
    FontSize->13,
    FontWeight->"Plain",
    FontColor->GrayLevel[0]],
  
  Cell[StyleData["Problem", "Presentation"],
    CellMargins->{{33, 10}, {8, 26}},
    LineSpacing->{1, 0},
    FontSize->18],
  
  Cell[StyleData["Problem", "Condensed"],
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11],
  
  Cell[StyleData["Problem", "Printout"],
    CellFrame->False,
    CellDingbat->"\[FilledDownTriangle]",
    CellMargins->{{9, 0}, {6, 20}},
    FontSize->11,
    FontColor->GrayLevel[0]]
  }, Closed]]
  }, Open  ]],
  
  Cell[CellGroupData[{
  
  Cell["Formulas and Programming", "Section"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["DisplayFormula"],
    CellMargins->{{62, 10}, {2, 10}},
    CellHorizontalScrolling->True,
    DefaultFormatType->DefaultInputFormatType,
    ScriptLevel->0,
    SingleLetterItalics->True,
    UnderoverscriptBoxOptions->{LimitsPositioning->True}],
  
  Cell[StyleData["DisplayFormula", "Presentation"],
    CellMargins->{{74, 10}, {2, 10}}],
  
  Cell[StyleData["DisplayFormula", "Condensed"],
    CellMargins->{{52, 10}, {2, 10}}],
  
  Cell[StyleData["DisplayFormula", "Printout"],
    CellMargins->{{54, 10}, {2, 10}}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["ChemicalFormula"],
    CellMargins->{{62, 10}, {2, 10}},
    DefaultFormatType->DefaultInputFormatType,
    AutoSpacing->False,
    ScriptLevel->1,
    ScriptBaselineShifts->{0.6, Automatic},
    SingleLetterItalics->False,
    ZeroWidthTimes->True],
  
  Cell[StyleData["ChemicalFormula", "Presentation"],
    CellMargins->{{74, 10}, {2, 10}},
    FontSize->10],
  
  Cell[StyleData["ChemicalFormula", "Condensed"],
    CellMargins->{{52, 10}, {2, 10}},
    FontSize->10],
  
  Cell[StyleData["ChemicalFormula", "Printout"],
    CellMargins->{{54, 10}, {2, 10}},
    FontSize->10]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Program"],
    CellMargins->{{12, 10}, {Inherited, 6}},
    FontFamily->"Courier"],
  
  Cell[StyleData["Program", "Presentation"],
    CellMargins->{{13, 30}, {Inherited, 4}},
    FontSize->9.5],
  
  Cell[StyleData["Program", "Condensed"],
    CellMargins->{{8, 10}, {Inherited, 4}},
    FontSize->9.5],
  
  Cell[StyleData["Program", "Printout"],
    CellMargins->{{9, 0}, {Inherited, 4}},
    FontSize->9.5]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Automatic Numbering", "Section"],
  
  Cell["\<\
The following styles are useful for numbered equations, figures, etc.  They \
automatically give the cell a FrameLabel containing a reference to a \
particular counter, and also increment that counter.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["NumberedEquation"],
    CellMargins->{{62, 10}, {Inherited, Inherited}},
    CellFrameLabels->{{None, Cell[ 
            TextData[ {"(", 
              CounterBox[ "NumberedEquation"], ")"}]]}, {None, None}},
    DefaultFormatType->DefaultInputFormatType,
    CounterIncrements->"NumberedEquation",
    FormatTypeAutoConvert->False],
  
  Cell[StyleData["NumberedEquation", "Presentation"],
    CellMargins->{{74, 10}, {Inherited, Inherited}}],
  
  Cell[StyleData["NumberedEquation", "Condensed"],
    CellMargins->{{52, 10}, {Inherited, Inherited}}],
  
  Cell[StyleData["NumberedEquation", "Printout"],
    CellMargins->{{54, 0}, {Inherited, Inherited}}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["NumberedFigure"],
    CellMargins->{{62, 145}, {Inherited, Inherited}},
    CellFrameLabels->{{None, None}, {Cell[ 
            TextData[ {"Figure ", 
              CounterBox[ "NumberedFigure"]}]], None}},
    CounterIncrements->"NumberedFigure",
    ImageMargins->{{43, Inherited}, {Inherited, 0}},
    FormatTypeAutoConvert->False],
  
  Cell[StyleData["NumberedFigure", "Presentation"]],
  
  Cell[StyleData["NumberedFigure", "Condensed"]],
  
  Cell[StyleData["NumberedFigure", "Printout"]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["NumberedTable"],
    CellMargins->{{62, 145}, {Inherited, Inherited}},
    CellFrameLabels->{{None, None}, {Cell[ 
            TextData[ {"Table ", 
              CounterBox[ "NumberedTable"]}]], None}},
    TextAlignment->Center,
    CounterIncrements->"NumberedTable",
    FormatTypeAutoConvert->False],
  
  Cell[StyleData["NumberedTable", "Presentation"]],
  
  Cell[StyleData["NumberedTable", "Condensed"]],
  
  Cell[StyleData["NumberedTable", "Printout"]]
  }, Closed]]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Styles for Headers and Footers", "Section"],
  
  Cell[StyleData["Header"],
    CellMargins->{{0, 0}, {4, 1}},
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontSlant->"Italic"],
  
  Cell[StyleData["Footer"],
    CellMargins->{{0, 0}, {0, 4}},
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontSlant->"Italic"],
  
  Cell[StyleData["PageNumber"],
    CellMargins->{{0, 0}, {4, 1}},
    StyleMenuListing->None,
    FontFamily->"Helvetica",
    FontSize->9,
    FontWeight->"Bold"]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell["Hyperlink Styles", "Section"],
  
  Cell["\<\
The cells below define styles useful for making hypertext ButtonBoxes.  The \
\"Hyperlink\" style is for links within the same Notebook, or between \
Notebooks.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["Hyperlink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`NotebookLocate[ #2]}]&),
    Active->True,
    ButtonFrame->"None",
    ButtonNote->ButtonData}],
  
  Cell[StyleData["Hyperlink", "Presentation"]],
  
  Cell[StyleData["Hyperlink", "Condensed"]],
  
  Cell[StyleData["Hyperlink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell["\<\
The following styles are for linking automatically to the on-line help \
system.\
\>", "Text"],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["MainBookLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "MainBook", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["MainBookLink", "Presentation"]],
  
  Cell[StyleData["MainBookLink", "Condensed"]],
  
  Cell[StyleData["MainBookLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["AddOnsLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "AddOns", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["AddOnsLink", "Presentation"]],
  
  Cell[StyleData["AddOnsLink", "Condensed"]],
  
  Cell[StyleData["AddOnLink", "Printout"],
    FontWeight->"Bold",
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["RefGuideLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontFamily->"Courier",
    FontWeight->"Bold",
    FontSlant->"Plain",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "RefGuideLink", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["RefGuideLink", "Presentation"]],
  
  Cell[StyleData["RefGuideLink", "Condensed"]],
  
  Cell[StyleData["RefGuideLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["GettingStartedLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "GettingStarted", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["GettingStartedLink", "Presentation"]],
  
  Cell[StyleData["GettingStartedLink", "Condensed"]],
  
  Cell[StyleData["GettingStartedLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]],
  
  Cell[CellGroupData[{
  
  Cell[StyleData["OtherInformationLink"],
    StyleMenuListing->None,
    ButtonStyleMenuListing->Automatic,
    FontWeight->"Bold",
    FontSlant->"Italic",
    FontColor->RGBColor[0, 0, 1],
    Background->None,
    FontVariations->{"Underline"->True},
    ButtonBoxOptions->{ButtonFunction:>(FrontEndExecute[ {
        FrontEnd`HelpBrowserLookup[ "OtherInformation", #]}]&),
    Active->True,
    ButtonFrame->"None"}],
  
  Cell[StyleData["OtherInformationLink", "Presentation"]],
  
  Cell[StyleData["OtherInformationLink", "Condensed"]],
  
  Cell[StyleData["OtherInformationLink", "Printout"],
    FontColor->GrayLevel[0],
    Background->GrayLevel[1],
    FontVariations->{"Underline"->True}]
  }, Closed]]
  }, Closed]]
  }, Open  ]]
  }]
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "Info3312794248-6681477"->{
    Cell[31342, 1184, 63, 1, 34, "Print",
      CellTags->"Info3312794248-6681477"],
    Cell[31408, 1187, 274, 8, 35, "Print",
      CellTags->"Info3312794248-6681477"]},
  "Info3312794258-1534319"->{
    Cell[32100, 1217, 63, 1, 34, "Print",
      CellTags->"Info3312794258-1534319"]},
  "pattern templates"->{
    Cell[49340, 1851, 72, 1, 68, "Subsection",
      CellTags->"pattern templates"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"Info3312794248-6681477", 184299, 5512},
  {"Info3312794258-1534319", 184501, 5517},
  {"pattern templates", 184612, 5520}
  }
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 77, 2, 81, "Title"],
Cell[1856, 57, 455, 15, 85, "Author"],

Cell[CellGroupData[{
Cell[2336, 76, 33, 0, 83, "Section"],
Cell[2372, 78, 119, 2, 99, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[2528, 85, 49, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[2602, 89, 34, 0, 68, "Subsection"],
Cell[2639, 91, 343, 6, 67, "Text"],
Cell[2985, 99, 68, 1, 74, "Input"],
Cell[3056, 102, 122, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[3203, 109, 84, 2, 100, "Input"],
Cell[3290, 113, 43, 1, 82, "Output"]
}, Closed]],
Cell[3348, 117, 283, 6, 67, "Text"],
Cell[3634, 125, 843, 16, 119, "Text"],
Cell[4480, 143, 356, 10, 42, "Text"],

Cell[CellGroupData[{
Cell[4861, 157, 48, 1, 73, "Input"],
Cell[4912, 160, 186, 6, 59, "Output"]
}, Closed]],
Cell[5113, 169, 155, 5, 41, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[5305, 179, 27, 0, 68, "Subsection"],
Cell[5335, 181, 681, 17, 94, "Text"],
Cell[6019, 200, 364, 12, 42, "Text"],

Cell[CellGroupData[{
Cell[6408, 216, 44, 1, 73, "Input"],
Cell[6455, 219, 38, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[6530, 225, 43, 1, 73, "Input"],
Cell[6576, 228, 40, 1, 59, "Output"]
}, Closed]],
Cell[6631, 232, 529, 18, 69, "Text"],

Cell[CellGroupData[{
Cell[7185, 254, 57, 1, 73, "Input"],
Cell[7245, 257, 201, 6, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[7483, 268, 55, 1, 73, "Input"],
Cell[7541, 271, 202, 6, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[7780, 282, 50, 1, 73, "Input"],
Cell[7833, 285, 200, 6, 59, "Output"]
}, Closed]],
Cell[8048, 294, 166, 5, 41, "Text"],

Cell[CellGroupData[{
Cell[8239, 303, 54, 1, 73, "Input"],
Cell[8296, 306, 186, 6, 59, "Output"]
}, Closed]],
Cell[8497, 315, 181, 4, 41, "Text"],

Cell[CellGroupData[{
Cell[8703, 323, 100, 2, 99, "Input"],
Cell[8806, 327, 180, 6, 59, "Output"]
}, Closed]],
Cell[9001, 336, 261, 7, 42, "Text"],

Cell[CellGroupData[{
Cell[9287, 347, 85, 1, 73, "Input"],
Cell[9375, 350, 210, 6, 59, "Output"]
}, Closed]],
Cell[9600, 359, 392, 10, 69, "Text"],

Cell[CellGroupData[{
Cell[10017, 373, 50, 1, 73, "Input"],
Cell[10070, 376, 180, 6, 59, "Output"]
}, Closed]],
Cell[10265, 385, 196, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[10486, 395, 38, 1, 73, "Input"],
Cell[10527, 398, 35, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[10599, 404, 44, 1, 73, "Input"],
Cell[10646, 407, 45, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[10728, 413, 48, 1, 73, "Input"],
Cell[10779, 416, 63, 2, 59, "Output"]
}, Closed]],
Cell[10857, 421, 288, 9, 41, "Text"],

Cell[CellGroupData[{
Cell[11170, 434, 55, 1, 74, "Input"],
Cell[11228, 437, 52, 1, 61, "Output"]
}, Closed]],
Cell[11295, 441, 65, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[11385, 445, 65, 1, 74, "Input"],
Cell[11453, 448, 76, 2, 61, "Output"]
}, Closed]],
Cell[11544, 453, 411, 11, 91, "Text"],
Cell[11958, 466, 251, 8, 87, "Exercise"],
Cell[12212, 476, 167, 5, 62, "Exercise"],
Cell[12382, 483, 130, 3, 83, "Exercise"],
Cell[12515, 488, 118, 3, 83, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[12670, 496, 27, 0, 68, "Subsection"],
Cell[12700, 498, 457, 11, 68, "Text"],

Cell[CellGroupData[{
Cell[13182, 513, 45, 1, 73, "Input"],
Cell[13230, 516, 40, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[13307, 522, 40, 1, 73, "Input"],
Cell[13350, 525, 41, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[13428, 531, 46, 1, 73, "Input"],
Cell[13477, 534, 40, 1, 59, "Output"]
}, Closed]],
Cell[13532, 538, 493, 17, 68, "Text"],

Cell[CellGroupData[{
Cell[14050, 559, 142, 2, 96, "Input"],
Cell[14195, 563, 71, 1, 59, "Output"]
}, Closed]],
Cell[14281, 567, 204, 5, 42, "Text"],

Cell[CellGroupData[{
Cell[14510, 576, 55, 1, 73, "Input"],
Cell[14568, 579, 209, 6, 59, "Output"]
}, Closed]],
Cell[14792, 588, 354, 12, 42, "Text"],

Cell[CellGroupData[{
Cell[15171, 604, 62, 1, 73, "Input"],
Cell[15236, 607, 437, 14, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[15710, 626, 52, 1, 73, "Input"],
Cell[15765, 629, 51, 1, 59, "Output"]
}, Closed]],
Cell[15831, 633, 417, 11, 69, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[16285, 649, 42, 0, 68, "Subsection"],
Cell[16330, 651, 925, 32, 95, "Text"],
Cell[17258, 685, 114, 2, 99, "Input"],

Cell[CellGroupData[{
Cell[17397, 691, 44, 1, 73, "Input"],
Cell[17444, 694, 219, 6, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[17700, 705, 40, 1, 73, "Input"],
Cell[17743, 708, 38, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[17818, 714, 61, 1, 73, "Input"],
Cell[17882, 717, 58, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[17977, 723, 52, 1, 73, "Input"],
Cell[18032, 726, 46, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[18115, 732, 121, 2, 99, "Input"],
Cell[18239, 736, 49, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[18325, 742, 53, 1, 73, "Input"],
Cell[18381, 745, 197, 6, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[18615, 756, 111, 2, 99, "Input"],
Cell[18729, 760, 45, 1, 61, "Output"]
}, Closed]],
Cell[18789, 764, 154, 4, 42, "Text"],

Cell[CellGroupData[{
Cell[18968, 772, 110, 2, 99, "Input"],
Cell[19081, 776, 38, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[19156, 782, 133, 3, 99, "Input"],
Cell[19292, 787, 53, 1, 59, "Output"]
}, Closed]],
Cell[19360, 791, 225, 5, 42, "Text"],

Cell[CellGroupData[{
Cell[19610, 800, 87, 1, 73, "Input"],
Cell[19700, 803, 72, 1, 61, "Output"]
}, Closed]],
Cell[19787, 807, 116, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[19928, 814, 34, 1, 73, "Input"],
Cell[19965, 817, 52, 1, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[20054, 823, 89, 1, 73, "Input"],
Cell[20146, 826, 55, 1, 61, "Output"]
}, Closed]],
Cell[20216, 830, 339, 7, 68, "Text"],

Cell[CellGroupData[{
Cell[20580, 841, 78, 1, 86, "Input"],
Cell[20661, 844, 2797, 72, 134, "Output"]
}, Closed]],
Cell[23473, 919, 404, 8, 67, "Text"],
Cell[23880, 929, 411, 11, 91, "Text"],
Cell[24294, 942, 348, 11, 62, "Exercise"],
Cell[24645, 955, 227, 6, 62, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[24909, 966, 32, 0, 68, "Subsection"],
Cell[24944, 968, 447, 10, 69, "Text"],

Cell[CellGroupData[{
Cell[25416, 982, 106, 2, 73, "Input"],
Cell[25525, 986, 131, 3, 59, "Output"]
}, Closed]],
Cell[25671, 992, 71, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[25767, 996, 67, 1, 73, "Input"],
Cell[25837, 999, 254, 4, 109, "Output"]
}, Closed]],
Cell[26106, 1006, 277, 7, 41, "Text"],
Cell[26386, 1015, 320, 9, 42, "Text"],
Cell[26709, 1026, 338, 9, 69, "Text"],
Cell[27050, 1037, 491, 18, 42, "Text"],
Cell[27544, 1057, 489, 10, 68, "Text"],
Cell[28036, 1069, 100, 2, 124, "Input"],

Cell[CellGroupData[{
Cell[28161, 1075, 51, 1, 73, "Input"],
Cell[28215, 1078, 86, 1, 76, "Output"]
}, Closed]],
Cell[28316, 1082, 192, 5, 42, "Text"],
Cell[28511, 1089, 153, 3, 130, "Input"],

Cell[CellGroupData[{
Cell[28689, 1096, 38, 1, 73, "Input"],
Cell[28730, 1099, 1121, 27, 81, "Output"]
}, Closed]],
Cell[29866, 1129, 181, 6, 42, "Text"],
Cell[30050, 1137, 75, 1, 73, "Input"],

Cell[CellGroupData[{
Cell[30150, 1142, 38, 1, 73, "Input"],
Cell[30191, 1145, 901, 23, 81, "Output"]
}, Closed]],
Cell[31107, 1171, 124, 3, 42, "Text"],
Cell[31234, 1176, 41, 1, 73, "Input"],

Cell[CellGroupData[{
Cell[31300, 1181, 39, 1, 73, "Input"],
Cell[31342, 1184, 63, 1, 34, "Print",
  CellTags->"Info3312794248-6681477"],
Cell[31408, 1187, 274, 8, 35, "Print",
  CellTags->"Info3312794248-6681477"]
}, Closed]],
Cell[31697, 1198, 289, 9, 42, "Text"],
Cell[31989, 1209, 44, 1, 73, "Input"],

Cell[CellGroupData[{
Cell[32058, 1214, 39, 1, 73, "Input"],
Cell[32100, 1217, 63, 1, 34, "Print",
  CellTags->"Info3312794258-1534319"]
}, Closed]],
Cell[32178, 1221, 361, 7, 68, "Text"],
Cell[32542, 1230, 220, 4, 125, "Input"],

Cell[CellGroupData[{
Cell[32787, 1238, 40, 1, 73, "Input"],
Cell[32830, 1241, 50, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[32917, 1247, 43, 1, 73, "Input"],
Cell[32963, 1250, 71, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[33071, 1256, 46, 1, 73, "Input"],
Cell[33120, 1259, 71, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[33228, 1265, 48, 1, 73, "Input"],
Cell[33279, 1268, 88, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[33404, 1274, 50, 1, 73, "Input"],
Cell[33457, 1277, 70, 1, 59, "Output"]
}, Closed]],
Cell[33542, 1281, 334, 5, 83, "Exercise"],
Cell[33879, 1288, 190, 6, 133, "Exercise"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[34118, 1300, 33, 0, 51, "Section"],
Cell[34154, 1302, 235, 6, 41, "Text"],

Cell[CellGroupData[{
Cell[34414, 1312, 103, 2, 99, "Input"],
Cell[34520, 1316, 38, 1, 59, "Output"]
}, Closed]],
Cell[34573, 1320, 217, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[34815, 1330, 55, 1, 73, "Input"],
Cell[34873, 1333, 36, 1, 59, "Output"]
}, Closed]],
Cell[34924, 1337, 496, 10, 94, "Text"],

Cell[CellGroupData[{
Cell[35445, 1351, 104, 2, 73, "Input"],
Cell[35552, 1355, 68, 1, 59, "Output"]
}, Closed]],
Cell[35635, 1359, 526, 15, 69, "Text"],

Cell[CellGroupData[{
Cell[36186, 1378, 47, 1, 73, "Input"],
Cell[36236, 1381, 36, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[36309, 1387, 42, 1, 73, "Input"],
Cell[36354, 1390, 36, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[36427, 1396, 105, 2, 73, "Input"],
Cell[36535, 1400, 68, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[36640, 1406, 50, 1, 73, "Input"],
Cell[36693, 1409, 77, 1, 59, "Output"]
}, Closed]],
Cell[36785, 1413, 76, 0, 41, "Text"],
Cell[36864, 1415, 102, 2, 99, "Input"],

Cell[CellGroupData[{
Cell[36991, 1421, 60, 1, 73, "Input"],
Cell[37054, 1424, 49, 1, 59, "Output"]
}, Closed]],
Cell[37118, 1428, 139, 3, 58, "Exercise"],
Cell[37260, 1433, 236, 6, 72, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[37533, 1444, 41, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[37599, 1448, 42, 0, 68, "Subsection"],
Cell[37644, 1450, 45, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[37714, 1454, 63, 1, 73, "Input"],
Cell[37780, 1457, 50, 1, 59, "Output"]
}, Closed]],
Cell[37845, 1461, 103, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[37973, 1468, 39, 1, 74, "Input"],
Cell[38015, 1471, 59, 1, 61, "Output"]
}, Closed]],
Cell[38089, 1475, 260, 5, 67, "Text"],

Cell[CellGroupData[{
Cell[38374, 1484, 46, 1, 73, "Input"],
Cell[38423, 1487, 191, 6, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[38651, 1498, 49, 1, 74, "Input"],
Cell[38703, 1501, 201, 6, 59, "Output"]
}, Closed]],
Cell[38919, 1510, 1362, 36, 149, "Text"],

Cell[CellGroupData[{
Cell[40306, 1550, 64, 1, 74, "Input"],
Cell[40373, 1553, 56, 1, 61, "Output"]
}, Closed]],
Cell[40444, 1557, 42, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[40511, 1561, 61, 1, 73, "Input"],
Cell[40575, 1564, 56, 1, 61, "Output"]
}, Closed]],
Cell[40646, 1568, 43, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[40714, 1572, 54, 1, 74, "Input"],
Cell[40771, 1575, 56, 1, 61, "Output"]
}, Closed]],
Cell[40842, 1579, 76, 0, 41, "Text"],
Cell[40921, 1581, 122, 2, 99, "Input"],
Cell[41046, 1585, 108, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[41179, 1592, 53, 1, 73, "Input"],
Cell[41235, 1595, 80, 1, 59, "Output"]
}, Closed]],
Cell[41330, 1599, 31, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[41386, 1603, 61, 1, 73, "Input"],
Cell[41450, 1606, 101, 2, 59, "Output"]
}, Closed]],
Cell[41566, 1611, 21, 0, 41, "Text"],
Cell[41590, 1613, 593, 16, 69, "Text"],

Cell[CellGroupData[{
Cell[42208, 1633, 52, 1, 74, "Input"],
Cell[42263, 1636, 56, 1, 61, "Output"]
}, Closed]],
Cell[42334, 1640, 199, 5, 133, "Exercise"],
Cell[42536, 1647, 322, 8, 87, "Exercise"],
Cell[42861, 1657, 520, 15, 96, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[43418, 1677, 49, 0, 68, "Subsection"],
Cell[43470, 1679, 655, 18, 67, "Text"],
Cell[44128, 1699, 332, 6, 203, "Input"],
Cell[44463, 1707, 425, 12, 67, "Text"],
Cell[44891, 1721, 90, 2, 73, "Input",
  Evaluatable->False],
Cell[44984, 1725, 592, 12, 94, "Text"],
Cell[45579, 1739, 753, 16, 94, "Text"],

Cell[CellGroupData[{
Cell[46357, 1759, 358, 6, 74, "Input"],
Cell[46718, 1767, 106, 2, 61, "Output"]
}, Closed]],
Cell[46839, 1772, 162, 5, 41, "Text"],

Cell[CellGroupData[{
Cell[47026, 1781, 150, 2, 73, "Input"],
Cell[47179, 1785, 190, 3, 61, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[47406, 1793, 164, 4, 73, "Input"],
Cell[47573, 1799, 401, 7, 92, "Output"]
}, Closed]],
Cell[47989, 1809, 257, 6, 41, "Text"],

Cell[CellGroupData[{
Cell[48271, 1819, 69, 1, 99, "Input"],
Cell[48343, 1822, 61, 1, 78, "Output"]
}, Closed]],
Cell[48419, 1826, 812, 15, 119, "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[49280, 1847, 35, 0, 51, "Section"],

Cell[CellGroupData[{
Cell[49340, 1851, 72, 1, 68, "Subsection",
  CellTags->"pattern templates"],
Cell[49415, 1854, 222, 5, 41, "Text"],
Cell[49640, 1861, 4176, 110, 617, "Text"],
Cell[53819, 1973, 704, 14, 95, "Text"],
Cell[54526, 1989, 87, 1, 73, "Input"],
Cell[54616, 1992, 120, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[54761, 1999, 191, 3, 99, "Input"],
Cell[54955, 2004, 445, 12, 145, "Output"]
}, Closed]],
Cell[55415, 2019, 307, 8, 42, "Text"],

Cell[CellGroupData[{
Cell[55747, 2031, 70, 1, 73, "Input"],
Cell[55820, 2034, 67, 1, 59, "Output"]
}, Closed]],
Cell[55902, 2038, 203, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[56130, 2048, 54, 1, 73, "Input"],
Cell[56187, 2051, 76, 1, 59, "Output"]
}, Closed]],
Cell[56278, 2055, 197, 4, 108, "Exercise"],
Cell[56478, 2061, 127, 3, 83, "Exercise"],
Cell[56608, 2066, 449, 11, 67, "Text"],
Cell[57060, 2079, 149, 3, 73, "Input"],
Cell[57212, 2084, 255, 5, 83, "Exercise"],
Cell[57470, 2091, 749, 27, 108, "Exercise"],
Cell[58222, 2120, 267, 6, 58, "Exercise"],
Cell[58492, 2128, 625, 20, 108, "Exercise"],
Cell[59120, 2150, 557, 14, 108, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[59714, 2169, 53, 0, 68, "Subsection"],
Cell[59770, 2171, 311, 6, 68, "Text"],

Cell[CellGroupData[{
Cell[60106, 2181, 55, 1, 73, "Input"],
Cell[60164, 2184, 38, 1, 59, "Output"]
}, Closed]],
Cell[60217, 2188, 163, 4, 42, "Text"],

Cell[CellGroupData[{
Cell[60405, 2196, 53, 1, 73, "Input"],
Cell[60461, 2199, 39, 1, 59, "Output"]
}, Closed]],
Cell[60515, 2203, 94, 2, 41, "Text"],
Cell[60612, 2207, 397, 11, 83, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[61046, 2223, 60, 0, 68, "Subsection"],
Cell[61109, 2225, 171, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[61305, 2232, 81, 2, 99, "Input"],
Cell[61389, 2236, 36, 1, 59, "Output"]
}, Closed]],
Cell[61440, 2240, 98, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[61563, 2246, 62, 1, 73, "Input"],
Cell[61628, 2249, 39, 1, 59, "Output"]
}, Closed]],
Cell[61682, 2253, 224, 6, 42, "Text"],

Cell[CellGroupData[{
Cell[61931, 2263, 49, 1, 73, "Input"],
Cell[61983, 2266, 109, 2, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[62129, 2273, 68, 1, 73, "Input"],
Cell[62200, 2276, 38, 1, 59, "Output"]
}, Closed]],
Cell[62253, 2280, 96, 2, 41, "Text"],
Cell[62352, 2284, 65, 1, 73, "Input"],
Cell[62420, 2287, 85, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[62530, 2293, 106, 2, 73, "Input"],
Cell[62639, 2297, 46, 1, 59, "Output"]
}, Closed]],
Cell[62700, 2301, 406, 8, 67, "Text"],
Cell[63109, 2311, 53, 1, 73, "Input"],

Cell[CellGroupData[{
Cell[63187, 2316, 84, 1, 73, "Input"],
Cell[63274, 2319, 47, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[63358, 2325, 84, 1, 73, "Input"],
Cell[63445, 2328, 47, 1, 59, "Output"]
}, Closed]],
Cell[63507, 2332, 137, 4, 42, "Text"],

Cell[CellGroupData[{
Cell[63669, 2340, 85, 1, 73, "Input"],
Cell[63757, 2343, 44, 1, 59, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[63838, 2349, 79, 1, 73, "Input"],
Cell[63920, 2352, 38, 1, 59, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[64019, 2360, 40, 0, 51, "Section"],
Cell[64062, 2362, 110, 3, 41, "Text"],
Cell[64175, 2367, 68, 1, 74, "Input"],
Cell[64246, 2370, 91, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[64362, 2376, 84, 2, 100, "Input"],
Cell[64449, 2380, 43, 1, 82, "Output"]
}, Closed]],
Cell[64507, 2384, 106, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[64638, 2391, 49, 1, 73, "Input"],
Cell[64690, 2394, 248, 7, 59, "Output"]
}, Closed]],
Cell[64953, 2404, 344, 10, 69, "Text"],

Cell[CellGroupData[{
Cell[65322, 2418, 49, 1, 85, "Input"],
Cell[65374, 2421, 35, 1, 59, "Output"]
}, Closed]],
Cell[65424, 2425, 91, 2, 41, "Text"],

Cell[CellGroupData[{
Cell[65540, 2431, 49, 1, 86, "Input"],
Cell[65592, 2434, 210, 6, 59, "Output"]
}, Closed]],
Cell[65817, 2443, 24, 0, 41, "Text"],

Cell[CellGroupData[{
Cell[65866, 2447, 52, 1, 105, "Input"],
Cell[65921, 2450, 215, 6, 59, "Output"]
}, Closed]],
Cell[66151, 2459, 176, 4, 42, "Text"],
Cell[66330, 2465, 195, 6, 71, "Definition"],
Cell[66528, 2473, 1017, 21, 145, "Text"],
Cell[67548, 2496, 486, 7, 93, "Text"],
Cell[68037, 2505, 478, 7, 93, "Text"],

Cell[CellGroupData[{
Cell[68540, 2516, 81, 1, 73, "Input"],
Cell[68624, 2519, 70, 1, 59, "Output"]
}, Closed]],
Cell[68709, 2523, 126, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[68860, 2530, 124, 2, 125, "Input"],
Cell[68987, 2534, 92, 1, 83, "Output"]
}, Closed]],
Cell[69094, 2538, 111, 3, 41, "Text"],
Cell[69208, 2543, 707, 21, 95, "Text"],
Cell[69918, 2566, 168, 5, 42, "Text"],

Cell[CellGroupData[{
Cell[70111, 2575, 108, 2, 125, "Input"],
Cell[70222, 2579, 39, 1, 59, "Output"]
}, Closed]],
Cell[70276, 2583, 190, 4, 41, "Text"],

Cell[CellGroupData[{
Cell[70491, 2591, 107, 2, 125, "Input"],
Cell[70601, 2595, 1624, 43, 153, "Output"]
}, Closed]],
Cell[72240, 2641, 134, 3, 41, "Text"],

Cell[CellGroupData[{
Cell[72399, 2648, 90, 1, 125, "Input"],
Cell[72492, 2651, 283, 8, 59, "Output"]
}, Closed]],
Cell[72790, 2662, 113, 4, 42, "Text"],

Cell[CellGroupData[{
Cell[72928, 2670, 103, 2, 125, "Input"],
Cell[73034, 2674, 38, 1, 59, "Output"]
}, Closed]],
Cell[73087, 2678, 639, 13, 94, "Text"],
Cell[73729, 2693, 114, 2, 73, "Input"],

Cell[CellGroupData[{
Cell[73868, 2699, 92, 1, 125, "Input"],
Cell[73963, 2702, 72, 1, 80, "Output"]
}, Closed]],
Cell[74050, 2706, 410, 14, 58, "Exercise"],
Cell[74463, 2722, 252, 5, 83, "Exercise"],
Cell[74718, 2729, 420, 8, 83, "Exercise"]
}, Closed]],

Cell[CellGroupData[{
Cell[75175, 2742, 49, 0, 51, "Section"],
Cell[75227, 2744, 616, 10, 94, "Text"],
Cell[75846, 2756, 262, 5, 83, "Exercise"],
Cell[76111, 2763, 1866, 38, 266, "Text"],

Cell[CellGroupData[{
Cell[78002, 2805, 133, 2, 73, "Input"],
Cell[78138, 2809, 68442, 1365, 279, 8906, 625, "GraphicsData", "PostScript", \
"Graphics"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[146629, 4180, 33, 0, 54, "ExerciseMain"],

Cell[CellGroupData[{
Cell[146687, 4184, 69, 0, 58, "ExerciseTitle"],
Cell[146759, 4186, 659, 18, 67, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[147455, 4209, 58, 0, 58, "ExerciseTitle"],
Cell[147516, 4211, 962, 24, 120, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[148515, 4240, 38, 0, 58, "ExerciseTitle"],
Cell[148556, 4242, 486, 9, 94, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[149079, 4256, 45, 0, 58, "ExerciseTitle"],
Cell[149127, 4258, 373, 7, 75, "ExerciseText"]
}, Closed]],

Cell[CellGroupData[{
Cell[149537, 4270, 55, 0, 58, "ExerciseTitle"],
Cell[149595, 4272, 707, 17, 94, "ExerciseText"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

